
DMX_controllerv2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000978c  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0000978c  0000978c  0001978c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     0000009c  20000000  00009794  00020000  2**2
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          0000269c  200000a0  00009838  000200a0  2**3
                  ALLOC
  4 .stack        00002004  2000273c  0000bed4  000200a0  2**0
                  ALLOC
  5 .ARM.attributes 00000028  00000000  00000000  0002009c  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000200c4  2**0
                  CONTENTS, READONLY
  7 .debug_info   0006f78e  00000000  00000000  0002011d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00008cd6  00000000  00000000  0008f8ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000e3b5  00000000  00000000  00098581  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000f18  00000000  00000000  000a6936  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00001298  00000000  00000000  000a784e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00029804  00000000  00000000  000a8ae6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00020cf0  00000000  00000000  000d22ea  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000a6e7f  00000000  00000000  000f2fda  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002be8  00000000  00000000  00199e5c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	40 47 00 20 95 50 00 00 c5 52 00 00 c9 52 00 00     @G. .P...R...R..
	...
      2c:	cd 52 00 00 00 00 00 00 00 00 00 00 d1 52 00 00     .R...........R..
      3c:	d5 52 00 00 91 50 00 00 91 50 00 00 91 50 00 00     .R...P...P...P..
      4c:	e9 13 00 00 91 50 00 00 91 50 00 00 91 50 00 00     .....P...P...P..
      5c:	91 50 00 00 91 50 00 00 65 35 00 00 75 35 00 00     .P...P..e5..u5..
      6c:	85 35 00 00 95 35 00 00 a5 35 00 00 b5 35 00 00     .5...5...5...5..
      7c:	91 50 00 00 91 50 00 00 8d 2e 00 00 9d 2e 00 00     .P...P..........
      8c:	ad 2e 00 00 b5 07 00 00 c5 07 00 00 d5 07 00 00     ................
      9c:	e5 07 00 00 f5 07 00 00 69 13 00 00 79 13 00 00     ........i...y...
      ac:	65 36 00 00 65 24 00 00 91 50 00 00 91 50 00 00     e6..e$...P...P..

000000bc <__do_global_dtors_aux>:
      bc:	b510      	push	{r4, lr}
      be:	4c06      	ldr	r4, [pc, #24]	; (d8 <__do_global_dtors_aux+0x1c>)
      c0:	7823      	ldrb	r3, [r4, #0]
      c2:	2b00      	cmp	r3, #0
      c4:	d107      	bne.n	d6 <__do_global_dtors_aux+0x1a>
      c6:	4b05      	ldr	r3, [pc, #20]	; (dc <__do_global_dtors_aux+0x20>)
      c8:	2b00      	cmp	r3, #0
      ca:	d002      	beq.n	d2 <__do_global_dtors_aux+0x16>
      cc:	4804      	ldr	r0, [pc, #16]	; (e0 <__do_global_dtors_aux+0x24>)
      ce:	e000      	b.n	d2 <__do_global_dtors_aux+0x16>
      d0:	bf00      	nop
      d2:	2301      	movs	r3, #1
      d4:	7023      	strb	r3, [r4, #0]
      d6:	bd10      	pop	{r4, pc}
      d8:	200000a0 	.word	0x200000a0
      dc:	00000000 	.word	0x00000000
      e0:	00009794 	.word	0x00009794

000000e4 <frame_dummy>:
      e4:	4b08      	ldr	r3, [pc, #32]	; (108 <frame_dummy+0x24>)
      e6:	b510      	push	{r4, lr}
      e8:	2b00      	cmp	r3, #0
      ea:	d003      	beq.n	f4 <frame_dummy+0x10>
      ec:	4907      	ldr	r1, [pc, #28]	; (10c <frame_dummy+0x28>)
      ee:	4808      	ldr	r0, [pc, #32]	; (110 <frame_dummy+0x2c>)
      f0:	e000      	b.n	f4 <frame_dummy+0x10>
      f2:	bf00      	nop
      f4:	4807      	ldr	r0, [pc, #28]	; (114 <frame_dummy+0x30>)
      f6:	6803      	ldr	r3, [r0, #0]
      f8:	2b00      	cmp	r3, #0
      fa:	d100      	bne.n	fe <frame_dummy+0x1a>
      fc:	bd10      	pop	{r4, pc}
      fe:	4b06      	ldr	r3, [pc, #24]	; (118 <frame_dummy+0x34>)
     100:	2b00      	cmp	r3, #0
     102:	d0fb      	beq.n	fc <frame_dummy+0x18>
     104:	4798      	blx	r3
     106:	e7f9      	b.n	fc <frame_dummy+0x18>
     108:	00000000 	.word	0x00000000
     10c:	200000a4 	.word	0x200000a4
     110:	00009794 	.word	0x00009794
     114:	00009794 	.word	0x00009794
     118:	00000000 	.word	0x00000000

0000011c <lcd_pulseEnable>:
    port_pin_set_output_level(PIN_LCD_D6, (value >> 6) & 0x01);
    port_pin_set_output_level(PIN_LCD_D7, (value >> 7) & 0x01);
    lcd_pulseEnable();
}

void lcd_pulseEnable(void) {
     11c:	b5f0      	push	{r4, r5, r6, r7, lr}
     11e:	46d6      	mov	lr, sl
     120:	464f      	mov	r7, r9
     122:	4646      	mov	r6, r8
     124:	b5c0      	push	{r6, r7, lr}
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));

	/* Set the pin to high or low atomically based on the requested level */
	if (level) {
		port_base->OUTSET.reg = pin_mask;
     126:	2680      	movs	r6, #128	; 0x80
     128:	2382      	movs	r3, #130	; 0x82
     12a:	05db      	lsls	r3, r3, #23
     12c:	4698      	mov	r8, r3
     12e:	44b0      	add	r8, r6
     130:	4643      	mov	r3, r8
     132:	619e      	str	r6, [r3, #24]
    port_pin_set_output_level(PIN_LCD_EN, 1);
    delay_us(1);
     134:	2000      	movs	r0, #0
     136:	4f13      	ldr	r7, [pc, #76]	; (184 <lcd_pulseEnable+0x68>)
     138:	47b8      	blx	r7
     13a:	0002      	movs	r2, r0
     13c:	2300      	movs	r3, #0
     13e:	4c12      	ldr	r4, [pc, #72]	; (188 <lcd_pulseEnable+0x6c>)
     140:	2500      	movs	r5, #0
     142:	1912      	adds	r2, r2, r4
     144:	416b      	adcs	r3, r5
     146:	0010      	movs	r0, r2
     148:	0019      	movs	r1, r3
     14a:	4b10      	ldr	r3, [pc, #64]	; (18c <lcd_pulseEnable+0x70>)
     14c:	4699      	mov	r9, r3
     14e:	4a10      	ldr	r2, [pc, #64]	; (190 <lcd_pulseEnable+0x74>)
     150:	2300      	movs	r3, #0
     152:	47c8      	blx	r9
     154:	4b0f      	ldr	r3, [pc, #60]	; (194 <lcd_pulseEnable+0x78>)
     156:	469a      	mov	sl, r3
     158:	4798      	blx	r3
	} else {
		port_base->OUTCLR.reg = pin_mask;
     15a:	4643      	mov	r3, r8
     15c:	615e      	str	r6, [r3, #20]
    port_pin_set_output_level(PIN_LCD_EN, 0);
    delay_us(50);
     15e:	2000      	movs	r0, #0
     160:	47b8      	blx	r7
     162:	2232      	movs	r2, #50	; 0x32
     164:	2300      	movs	r3, #0
     166:	2100      	movs	r1, #0
     168:	4e0b      	ldr	r6, [pc, #44]	; (198 <lcd_pulseEnable+0x7c>)
     16a:	47b0      	blx	r6
     16c:	1900      	adds	r0, r0, r4
     16e:	4169      	adcs	r1, r5
     170:	4a07      	ldr	r2, [pc, #28]	; (190 <lcd_pulseEnable+0x74>)
     172:	2300      	movs	r3, #0
     174:	47c8      	blx	r9
     176:	47d0      	blx	sl
}
     178:	bc1c      	pop	{r2, r3, r4}
     17a:	4690      	mov	r8, r2
     17c:	4699      	mov	r9, r3
     17e:	46a2      	mov	sl, r4
     180:	bdf0      	pop	{r4, r5, r6, r7, pc}
     182:	46c0      	nop			; (mov r8, r8)
     184:	00004e5d 	.word	0x00004e5d
     188:	006acfbf 	.word	0x006acfbf
     18c:	000063f5 	.word	0x000063f5
     190:	006acfc0 	.word	0x006acfc0
     194:	20000001 	.word	0x20000001
     198:	00006435 	.word	0x00006435

0000019c <lcd_write8bits>:
void lcd_write8bits(uint8_t value) {
     19c:	b510      	push	{r4, lr}
	if (level) {
     19e:	07c3      	lsls	r3, r0, #31
     1a0:	d529      	bpl.n	1f6 <lcd_write8bits+0x5a>
		port_base->OUTSET.reg = pin_mask;
     1a2:	2240      	movs	r2, #64	; 0x40
     1a4:	4b24      	ldr	r3, [pc, #144]	; (238 <lcd_write8bits+0x9c>)
     1a6:	619a      	str	r2, [r3, #24]
	if (level) {
     1a8:	0783      	lsls	r3, r0, #30
     1aa:	d528      	bpl.n	1fe <lcd_write8bits+0x62>
		port_base->OUTSET.reg = pin_mask;
     1ac:	2220      	movs	r2, #32
     1ae:	4b22      	ldr	r3, [pc, #136]	; (238 <lcd_write8bits+0x9c>)
     1b0:	619a      	str	r2, [r3, #24]
	if (level) {
     1b2:	0743      	lsls	r3, r0, #29
     1b4:	d527      	bpl.n	206 <lcd_write8bits+0x6a>
		port_base->OUTSET.reg = pin_mask;
     1b6:	2210      	movs	r2, #16
     1b8:	4b1f      	ldr	r3, [pc, #124]	; (238 <lcd_write8bits+0x9c>)
     1ba:	619a      	str	r2, [r3, #24]
	if (level) {
     1bc:	0703      	lsls	r3, r0, #28
     1be:	d526      	bpl.n	20e <lcd_write8bits+0x72>
		port_base->OUTSET.reg = pin_mask;
     1c0:	2208      	movs	r2, #8
     1c2:	4b1d      	ldr	r3, [pc, #116]	; (238 <lcd_write8bits+0x9c>)
     1c4:	619a      	str	r2, [r3, #24]
	if (level) {
     1c6:	06c3      	lsls	r3, r0, #27
     1c8:	d525      	bpl.n	216 <lcd_write8bits+0x7a>
		port_base->OUTSET.reg = pin_mask;
     1ca:	2204      	movs	r2, #4
     1cc:	4b1a      	ldr	r3, [pc, #104]	; (238 <lcd_write8bits+0x9c>)
     1ce:	619a      	str	r2, [r3, #24]
	if (level) {
     1d0:	0683      	lsls	r3, r0, #26
     1d2:	d524      	bpl.n	21e <lcd_write8bits+0x82>
		port_base->OUTSET.reg = pin_mask;
     1d4:	2202      	movs	r2, #2
     1d6:	4b18      	ldr	r3, [pc, #96]	; (238 <lcd_write8bits+0x9c>)
     1d8:	619a      	str	r2, [r3, #24]
	if (level) {
     1da:	0643      	lsls	r3, r0, #25
     1dc:	d523      	bpl.n	226 <lcd_write8bits+0x8a>
		port_base->OUTSET.reg = pin_mask;
     1de:	2201      	movs	r2, #1
     1e0:	4b15      	ldr	r3, [pc, #84]	; (238 <lcd_write8bits+0x9c>)
     1e2:	619a      	str	r2, [r3, #24]
	if (level) {
     1e4:	09c0      	lsrs	r0, r0, #7
     1e6:	d122      	bne.n	22e <lcd_write8bits+0x92>
		port_base->OUTCLR.reg = pin_mask;
     1e8:	2280      	movs	r2, #128	; 0x80
     1ea:	0612      	lsls	r2, r2, #24
     1ec:	4b12      	ldr	r3, [pc, #72]	; (238 <lcd_write8bits+0x9c>)
     1ee:	615a      	str	r2, [r3, #20]
    lcd_pulseEnable();
     1f0:	4b12      	ldr	r3, [pc, #72]	; (23c <lcd_write8bits+0xa0>)
     1f2:	4798      	blx	r3
}
     1f4:	bd10      	pop	{r4, pc}
     1f6:	2240      	movs	r2, #64	; 0x40
     1f8:	4b0f      	ldr	r3, [pc, #60]	; (238 <lcd_write8bits+0x9c>)
     1fa:	615a      	str	r2, [r3, #20]
     1fc:	e7d4      	b.n	1a8 <lcd_write8bits+0xc>
     1fe:	2220      	movs	r2, #32
     200:	4b0d      	ldr	r3, [pc, #52]	; (238 <lcd_write8bits+0x9c>)
     202:	615a      	str	r2, [r3, #20]
     204:	e7d5      	b.n	1b2 <lcd_write8bits+0x16>
     206:	2210      	movs	r2, #16
     208:	4b0b      	ldr	r3, [pc, #44]	; (238 <lcd_write8bits+0x9c>)
     20a:	615a      	str	r2, [r3, #20]
     20c:	e7d6      	b.n	1bc <lcd_write8bits+0x20>
     20e:	2208      	movs	r2, #8
     210:	4b09      	ldr	r3, [pc, #36]	; (238 <lcd_write8bits+0x9c>)
     212:	615a      	str	r2, [r3, #20]
     214:	e7d7      	b.n	1c6 <lcd_write8bits+0x2a>
     216:	2204      	movs	r2, #4
     218:	4b07      	ldr	r3, [pc, #28]	; (238 <lcd_write8bits+0x9c>)
     21a:	615a      	str	r2, [r3, #20]
     21c:	e7d8      	b.n	1d0 <lcd_write8bits+0x34>
     21e:	2202      	movs	r2, #2
     220:	4b05      	ldr	r3, [pc, #20]	; (238 <lcd_write8bits+0x9c>)
     222:	615a      	str	r2, [r3, #20]
     224:	e7d9      	b.n	1da <lcd_write8bits+0x3e>
     226:	2201      	movs	r2, #1
     228:	4b03      	ldr	r3, [pc, #12]	; (238 <lcd_write8bits+0x9c>)
     22a:	615a      	str	r2, [r3, #20]
     22c:	e7da      	b.n	1e4 <lcd_write8bits+0x48>
		port_base->OUTSET.reg = pin_mask;
     22e:	2280      	movs	r2, #128	; 0x80
     230:	0612      	lsls	r2, r2, #24
     232:	4b01      	ldr	r3, [pc, #4]	; (238 <lcd_write8bits+0x9c>)
     234:	619a      	str	r2, [r3, #24]
     236:	e7db      	b.n	1f0 <lcd_write8bits+0x54>
     238:	41000080 	.word	0x41000080
     23c:	0000011d 	.word	0x0000011d

00000240 <lcd_send>:
void lcd_send(uint8_t value, uint8_t mode) {
     240:	b510      	push	{r4, lr}
	if (level) {
     242:	2900      	cmp	r1, #0
     244:	d118      	bne.n	278 <lcd_send+0x38>
		port_base->OUTCLR.reg = pin_mask;
     246:	2280      	movs	r2, #128	; 0x80
     248:	0092      	lsls	r2, r2, #2
     24a:	4b0e      	ldr	r3, [pc, #56]	; (284 <lcd_send+0x44>)
     24c:	615a      	str	r2, [r3, #20]
    lcd_write8bits(value);
     24e:	4b0e      	ldr	r3, [pc, #56]	; (288 <lcd_send+0x48>)
     250:	4798      	blx	r3
    delay_us(50);
     252:	2000      	movs	r0, #0
     254:	4b0d      	ldr	r3, [pc, #52]	; (28c <lcd_send+0x4c>)
     256:	4798      	blx	r3
     258:	2232      	movs	r2, #50	; 0x32
     25a:	2300      	movs	r3, #0
     25c:	2100      	movs	r1, #0
     25e:	4c0c      	ldr	r4, [pc, #48]	; (290 <lcd_send+0x50>)
     260:	47a0      	blx	r4
     262:	4a0c      	ldr	r2, [pc, #48]	; (294 <lcd_send+0x54>)
     264:	2300      	movs	r3, #0
     266:	1880      	adds	r0, r0, r2
     268:	4159      	adcs	r1, r3
     26a:	4a0b      	ldr	r2, [pc, #44]	; (298 <lcd_send+0x58>)
     26c:	2300      	movs	r3, #0
     26e:	4c0b      	ldr	r4, [pc, #44]	; (29c <lcd_send+0x5c>)
     270:	47a0      	blx	r4
     272:	4b0b      	ldr	r3, [pc, #44]	; (2a0 <lcd_send+0x60>)
     274:	4798      	blx	r3
}
     276:	bd10      	pop	{r4, pc}
		port_base->OUTSET.reg = pin_mask;
     278:	2280      	movs	r2, #128	; 0x80
     27a:	0092      	lsls	r2, r2, #2
     27c:	4b01      	ldr	r3, [pc, #4]	; (284 <lcd_send+0x44>)
     27e:	619a      	str	r2, [r3, #24]
     280:	e7e5      	b.n	24e <lcd_send+0xe>
     282:	46c0      	nop			; (mov r8, r8)
     284:	41000080 	.word	0x41000080
     288:	0000019d 	.word	0x0000019d
     28c:	00004e5d 	.word	0x00004e5d
     290:	00006435 	.word	0x00006435
     294:	006acfbf 	.word	0x006acfbf
     298:	006acfc0 	.word	0x006acfc0
     29c:	000063f5 	.word	0x000063f5
     2a0:	20000001 	.word	0x20000001

000002a4 <lcd_command>:
void lcd_command(uint8_t value) {
     2a4:	b510      	push	{r4, lr}
    lcd_send(value, 0);
     2a6:	2100      	movs	r1, #0
     2a8:	4b01      	ldr	r3, [pc, #4]	; (2b0 <lcd_command+0xc>)
     2aa:	4798      	blx	r3
}
     2ac:	bd10      	pop	{r4, pc}
     2ae:	46c0      	nop			; (mov r8, r8)
     2b0:	00000241 	.word	0x00000241

000002b4 <lcd_clear>:
void lcd_clear() {
     2b4:	b510      	push	{r4, lr}
    lcd_command(LCD_CLEARDISPLAY);
     2b6:	2001      	movs	r0, #1
     2b8:	4b0b      	ldr	r3, [pc, #44]	; (2e8 <lcd_clear+0x34>)
     2ba:	4798      	blx	r3
    delay_us(3);
     2bc:	2000      	movs	r0, #0
     2be:	4b0b      	ldr	r3, [pc, #44]	; (2ec <lcd_clear+0x38>)
     2c0:	4798      	blx	r3
     2c2:	0002      	movs	r2, r0
     2c4:	2300      	movs	r3, #0
     2c6:	0019      	movs	r1, r3
     2c8:	1880      	adds	r0, r0, r2
     2ca:	4159      	adcs	r1, r3
     2cc:	1880      	adds	r0, r0, r2
     2ce:	4159      	adcs	r1, r3
     2d0:	4a07      	ldr	r2, [pc, #28]	; (2f0 <lcd_clear+0x3c>)
     2d2:	2300      	movs	r3, #0
     2d4:	1880      	adds	r0, r0, r2
     2d6:	4159      	adcs	r1, r3
     2d8:	4a06      	ldr	r2, [pc, #24]	; (2f4 <lcd_clear+0x40>)
     2da:	2300      	movs	r3, #0
     2dc:	4c06      	ldr	r4, [pc, #24]	; (2f8 <lcd_clear+0x44>)
     2de:	47a0      	blx	r4
     2e0:	4b06      	ldr	r3, [pc, #24]	; (2fc <lcd_clear+0x48>)
     2e2:	4798      	blx	r3
}
     2e4:	bd10      	pop	{r4, pc}
     2e6:	46c0      	nop			; (mov r8, r8)
     2e8:	000002a5 	.word	0x000002a5
     2ec:	00004e5d 	.word	0x00004e5d
     2f0:	006acfbf 	.word	0x006acfbf
     2f4:	006acfc0 	.word	0x006acfc0
     2f8:	000063f5 	.word	0x000063f5
     2fc:	20000001 	.word	0x20000001

00000300 <lcd_home>:
void lcd_home() {
     300:	b510      	push	{r4, lr}
    lcd_command(LCD_RETURNHOME);
     302:	2002      	movs	r0, #2
     304:	4b0b      	ldr	r3, [pc, #44]	; (334 <lcd_home+0x34>)
     306:	4798      	blx	r3
    delay_us(3);
     308:	2000      	movs	r0, #0
     30a:	4b0b      	ldr	r3, [pc, #44]	; (338 <lcd_home+0x38>)
     30c:	4798      	blx	r3
     30e:	0002      	movs	r2, r0
     310:	2300      	movs	r3, #0
     312:	0019      	movs	r1, r3
     314:	1880      	adds	r0, r0, r2
     316:	4159      	adcs	r1, r3
     318:	1880      	adds	r0, r0, r2
     31a:	4159      	adcs	r1, r3
     31c:	4a07      	ldr	r2, [pc, #28]	; (33c <lcd_home+0x3c>)
     31e:	2300      	movs	r3, #0
     320:	1880      	adds	r0, r0, r2
     322:	4159      	adcs	r1, r3
     324:	4a06      	ldr	r2, [pc, #24]	; (340 <lcd_home+0x40>)
     326:	2300      	movs	r3, #0
     328:	4c06      	ldr	r4, [pc, #24]	; (344 <lcd_home+0x44>)
     32a:	47a0      	blx	r4
     32c:	4b06      	ldr	r3, [pc, #24]	; (348 <lcd_home+0x48>)
     32e:	4798      	blx	r3
}
     330:	bd10      	pop	{r4, pc}
     332:	46c0      	nop			; (mov r8, r8)
     334:	000002a5 	.word	0x000002a5
     338:	00004e5d 	.word	0x00004e5d
     33c:	006acfbf 	.word	0x006acfbf
     340:	006acfc0 	.word	0x006acfc0
     344:	000063f5 	.word	0x000063f5
     348:	20000001 	.word	0x20000001

0000034c <lcd_begin>:
void lcd_begin(void) {
     34c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     34e:	46de      	mov	lr, fp
     350:	4657      	mov	r7, sl
     352:	464e      	mov	r6, r9
     354:	4645      	mov	r5, r8
     356:	b5e0      	push	{r5, r6, r7, lr}
    _displayfunction = LCD_2LINE | LCD_8BITMODE | LCD_5x8DOTS;
     358:	4d38      	ldr	r5, [pc, #224]	; (43c <lcd_begin+0xf0>)
     35a:	2318      	movs	r3, #24
     35c:	702b      	strb	r3, [r5, #0]
    delay_ms(50);
     35e:	2000      	movs	r0, #0
     360:	4b37      	ldr	r3, [pc, #220]	; (440 <lcd_begin+0xf4>)
     362:	469b      	mov	fp, r3
     364:	4798      	blx	r3
     366:	4b37      	ldr	r3, [pc, #220]	; (444 <lcd_begin+0xf8>)
     368:	469a      	mov	sl, r3
     36a:	2232      	movs	r2, #50	; 0x32
     36c:	2300      	movs	r3, #0
     36e:	2100      	movs	r1, #0
     370:	47d0      	blx	sl
     372:	4e35      	ldr	r6, [pc, #212]	; (448 <lcd_begin+0xfc>)
     374:	2700      	movs	r7, #0
     376:	1980      	adds	r0, r0, r6
     378:	4179      	adcs	r1, r7
     37a:	4b34      	ldr	r3, [pc, #208]	; (44c <lcd_begin+0x100>)
     37c:	4699      	mov	r9, r3
     37e:	4a34      	ldr	r2, [pc, #208]	; (450 <lcd_begin+0x104>)
     380:	2300      	movs	r3, #0
     382:	47c8      	blx	r9
     384:	4b33      	ldr	r3, [pc, #204]	; (454 <lcd_begin+0x108>)
     386:	4698      	mov	r8, r3
     388:	4798      	blx	r3
		port_base->OUTCLR.reg = pin_mask;
     38a:	2280      	movs	r2, #128	; 0x80
     38c:	2382      	movs	r3, #130	; 0x82
     38e:	05db      	lsls	r3, r3, #23
     390:	18d3      	adds	r3, r2, r3
     392:	2180      	movs	r1, #128	; 0x80
     394:	0089      	lsls	r1, r1, #2
     396:	6159      	str	r1, [r3, #20]
     398:	3901      	subs	r1, #1
     39a:	39ff      	subs	r1, #255	; 0xff
     39c:	6159      	str	r1, [r3, #20]
     39e:	615a      	str	r2, [r3, #20]
    delay_ms(50);
     3a0:	2000      	movs	r0, #0
     3a2:	47d8      	blx	fp
     3a4:	2232      	movs	r2, #50	; 0x32
     3a6:	2300      	movs	r3, #0
     3a8:	2100      	movs	r1, #0
     3aa:	47d0      	blx	sl
     3ac:	1980      	adds	r0, r0, r6
     3ae:	4179      	adcs	r1, r7
     3b0:	4a27      	ldr	r2, [pc, #156]	; (450 <lcd_begin+0x104>)
     3b2:	2300      	movs	r3, #0
     3b4:	47c8      	blx	r9
     3b6:	47c0      	blx	r8
    lcd_command(LCD_FUNCTIONSET | _displayfunction);
     3b8:	2620      	movs	r6, #32
     3ba:	7828      	ldrb	r0, [r5, #0]
     3bc:	4330      	orrs	r0, r6
     3be:	b2c0      	uxtb	r0, r0
     3c0:	4c25      	ldr	r4, [pc, #148]	; (458 <lcd_begin+0x10c>)
     3c2:	47a0      	blx	r4
    delay_us(4500);
     3c4:	2000      	movs	r0, #0
     3c6:	47d8      	blx	fp
     3c8:	4a24      	ldr	r2, [pc, #144]	; (45c <lcd_begin+0x110>)
     3ca:	2300      	movs	r3, #0
     3cc:	2100      	movs	r1, #0
     3ce:	47d0      	blx	sl
     3d0:	4a23      	ldr	r2, [pc, #140]	; (460 <lcd_begin+0x114>)
     3d2:	2300      	movs	r3, #0
     3d4:	1880      	adds	r0, r0, r2
     3d6:	4159      	adcs	r1, r3
     3d8:	4a22      	ldr	r2, [pc, #136]	; (464 <lcd_begin+0x118>)
     3da:	2300      	movs	r3, #0
     3dc:	47c8      	blx	r9
     3de:	47c0      	blx	r8
    lcd_command(LCD_FUNCTIONSET | _displayfunction);
     3e0:	7828      	ldrb	r0, [r5, #0]
     3e2:	4330      	orrs	r0, r6
     3e4:	b2c0      	uxtb	r0, r0
     3e6:	47a0      	blx	r4
    delay_us(150);
     3e8:	2000      	movs	r0, #0
     3ea:	47d8      	blx	fp
     3ec:	2296      	movs	r2, #150	; 0x96
     3ee:	2300      	movs	r3, #0
     3f0:	2100      	movs	r1, #0
     3f2:	47d0      	blx	sl
     3f4:	4a1a      	ldr	r2, [pc, #104]	; (460 <lcd_begin+0x114>)
     3f6:	2300      	movs	r3, #0
     3f8:	1880      	adds	r0, r0, r2
     3fa:	4159      	adcs	r1, r3
     3fc:	4a19      	ldr	r2, [pc, #100]	; (464 <lcd_begin+0x118>)
     3fe:	2300      	movs	r3, #0
     400:	47c8      	blx	r9
     402:	47c0      	blx	r8
    lcd_command(LCD_FUNCTIONSET | _displayfunction);
     404:	7828      	ldrb	r0, [r5, #0]
     406:	4330      	orrs	r0, r6
     408:	b2c0      	uxtb	r0, r0
     40a:	47a0      	blx	r4
    lcd_command(LCD_FUNCTIONSET | _displayfunction);
     40c:	7828      	ldrb	r0, [r5, #0]
     40e:	4330      	orrs	r0, r6
     410:	b2c0      	uxtb	r0, r0
     412:	47a0      	blx	r4
    _displaycontrol = LCD_DISPLAYON | LCD_CURSORON | LCD_BLINKOFF;
     414:	2206      	movs	r2, #6
     416:	4b14      	ldr	r3, [pc, #80]	; (468 <lcd_begin+0x11c>)
     418:	701a      	strb	r2, [r3, #0]
    lcd_command(LCD_DISPLAYCONTROL | _displaycontrol);
     41a:	200e      	movs	r0, #14
     41c:	47a0      	blx	r4
    lcd_clear();
     41e:	4b13      	ldr	r3, [pc, #76]	; (46c <lcd_begin+0x120>)
     420:	4798      	blx	r3
    _displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
     422:	2202      	movs	r2, #2
     424:	4b12      	ldr	r3, [pc, #72]	; (470 <lcd_begin+0x124>)
     426:	701a      	strb	r2, [r3, #0]
    lcd_command(LCD_ENTRYMODESET | _displaymode);
     428:	2006      	movs	r0, #6
     42a:	47a0      	blx	r4
    lcd_home();
     42c:	4b11      	ldr	r3, [pc, #68]	; (474 <lcd_begin+0x128>)
     42e:	4798      	blx	r3
}
     430:	bc3c      	pop	{r2, r3, r4, r5}
     432:	4690      	mov	r8, r2
     434:	4699      	mov	r9, r3
     436:	46a2      	mov	sl, r4
     438:	46ab      	mov	fp, r5
     43a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     43c:	200000bd 	.word	0x200000bd
     440:	00004e5d 	.word	0x00004e5d
     444:	00006435 	.word	0x00006435
     448:	00001b57 	.word	0x00001b57
     44c:	000063f5 	.word	0x000063f5
     450:	00001b58 	.word	0x00001b58
     454:	20000001 	.word	0x20000001
     458:	000002a5 	.word	0x000002a5
     45c:	00001194 	.word	0x00001194
     460:	006acfbf 	.word	0x006acfbf
     464:	006acfc0 	.word	0x006acfc0
     468:	200000bc 	.word	0x200000bc
     46c:	000002b5 	.word	0x000002b5
     470:	200000be 	.word	0x200000be
     474:	00000301 	.word	0x00000301

00000478 <lcd_setCursor>:
void lcd_setCursor(uint8_t col, uint8_t row) {
     478:	b570      	push	{r4, r5, r6, lr}
     47a:	b084      	sub	sp, #16
    int row_offsets[] = {0x00, 0x40, 0x14, 0x54};
     47c:	466a      	mov	r2, sp
     47e:	4b0b      	ldr	r3, [pc, #44]	; (4ac <lcd_setCursor+0x34>)
     480:	cb70      	ldmia	r3!, {r4, r5, r6}
     482:	c270      	stmia	r2!, {r4, r5, r6}
     484:	681b      	ldr	r3, [r3, #0]
     486:	6013      	str	r3, [r2, #0]
    if (row > 3 || col > 19)
     488:	2903      	cmp	r1, #3
     48a:	d801      	bhi.n	490 <lcd_setCursor+0x18>
     48c:	2813      	cmp	r0, #19
     48e:	d901      	bls.n	494 <lcd_setCursor+0x1c>
}
     490:	b004      	add	sp, #16
     492:	bd70      	pop	{r4, r5, r6, pc}
    lcd_command(LCD_SETDDRAMADDR | (col + row_offsets[row]));
     494:	0089      	lsls	r1, r1, #2
     496:	466b      	mov	r3, sp
     498:	58cb      	ldr	r3, [r1, r3]
     49a:	18c0      	adds	r0, r0, r3
     49c:	2380      	movs	r3, #128	; 0x80
     49e:	425b      	negs	r3, r3
     4a0:	4318      	orrs	r0, r3
     4a2:	b2c0      	uxtb	r0, r0
     4a4:	4b02      	ldr	r3, [pc, #8]	; (4b0 <lcd_setCursor+0x38>)
     4a6:	4798      	blx	r3
     4a8:	e7f2      	b.n	490 <lcd_setCursor+0x18>
     4aa:	46c0      	nop			; (mov r8, r8)
     4ac:	000091d4 	.word	0x000091d4
     4b0:	000002a5 	.word	0x000002a5

000004b4 <lcd_noCursor>:
void lcd_noCursor(void) {
     4b4:	b510      	push	{r4, lr}
    _displaycontrol &= ~LCD_CURSORON;
     4b6:	4b05      	ldr	r3, [pc, #20]	; (4cc <lcd_noCursor+0x18>)
     4b8:	7818      	ldrb	r0, [r3, #0]
     4ba:	2202      	movs	r2, #2
     4bc:	4390      	bics	r0, r2
     4be:	7018      	strb	r0, [r3, #0]
    lcd_command(LCD_DISPLAYCONTROL | _displaycontrol);
     4c0:	2308      	movs	r3, #8
     4c2:	4318      	orrs	r0, r3
     4c4:	4b02      	ldr	r3, [pc, #8]	; (4d0 <lcd_noCursor+0x1c>)
     4c6:	4798      	blx	r3
}
     4c8:	bd10      	pop	{r4, pc}
     4ca:	46c0      	nop			; (mov r8, r8)
     4cc:	200000bc 	.word	0x200000bc
     4d0:	000002a5 	.word	0x000002a5

000004d4 <lcd_write>:
void lcd_write(uint8_t value) {
     4d4:	b510      	push	{r4, lr}
    lcd_send(value, 1);
     4d6:	2101      	movs	r1, #1
     4d8:	4b01      	ldr	r3, [pc, #4]	; (4e0 <lcd_write+0xc>)
     4da:	4798      	blx	r3
}
     4dc:	bd10      	pop	{r4, pc}
     4de:	46c0      	nop			; (mov r8, r8)
     4e0:	00000241 	.word	0x00000241

000004e4 <lcd_createChar>:
void lcd_createChar(uint8_t location, uint8_t charmap[]) {
     4e4:	b570      	push	{r4, r5, r6, lr}
     4e6:	0003      	movs	r3, r0
     4e8:	000d      	movs	r5, r1
    lcd_command(LCD_SETCGRAMADDR | (location << 3));
     4ea:	2007      	movs	r0, #7
     4ec:	4018      	ands	r0, r3
     4ee:	00c0      	lsls	r0, r0, #3
     4f0:	2340      	movs	r3, #64	; 0x40
     4f2:	4318      	orrs	r0, r3
     4f4:	4b05      	ldr	r3, [pc, #20]	; (50c <lcd_createChar+0x28>)
     4f6:	4798      	blx	r3
     4f8:	002c      	movs	r4, r5
     4fa:	3508      	adds	r5, #8
        lcd_write(charmap[i]);
     4fc:	4e04      	ldr	r6, [pc, #16]	; (510 <lcd_createChar+0x2c>)
     4fe:	7820      	ldrb	r0, [r4, #0]
     500:	47b0      	blx	r6
     502:	3401      	adds	r4, #1
    for (int i = 0; i < 8; i++) {
     504:	42ac      	cmp	r4, r5
     506:	d1fa      	bne.n	4fe <lcd_createChar+0x1a>
}
     508:	bd70      	pop	{r4, r5, r6, pc}
     50a:	46c0      	nop			; (mov r8, r8)
     50c:	000002a5 	.word	0x000002a5
     510:	000004d5 	.word	0x000004d5

00000514 <lcd_printstr>:

void lcd_setBacklight(uint8_t new_val) {
    /*manka*/
}

void lcd_printstr(char *str) {
     514:	b570      	push	{r4, r5, r6, lr}
     516:	0004      	movs	r4, r0
    while (*str) {
     518:	7800      	ldrb	r0, [r0, #0]
     51a:	2800      	cmp	r0, #0
     51c:	d005      	beq.n	52a <lcd_printstr+0x16>
        lcd_write(*str++);
     51e:	4d03      	ldr	r5, [pc, #12]	; (52c <lcd_printstr+0x18>)
     520:	3401      	adds	r4, #1
     522:	47a8      	blx	r5
    while (*str) {
     524:	7820      	ldrb	r0, [r4, #0]
     526:	2800      	cmp	r0, #0
     528:	d1fa      	bne.n	520 <lcd_printstr+0xc>
    }
}
     52a:	bd70      	pop	{r4, r5, r6, pc}
     52c:	000004d5 	.word	0x000004d5

00000530 <lcd_create_bar_charts>:
void lcd_create_bar_charts(void) {
     530:	b5f0      	push	{r4, r5, r6, r7, lr}
     532:	46c6      	mov	lr, r8
     534:	b500      	push	{lr}
     536:	b082      	sub	sp, #8
     538:	2300      	movs	r3, #0
    uint8_t char_arr[8];
    for(uint8_t i = 0; i < 8; i++) {
        char_arr[i] = 0;
     53a:	2200      	movs	r2, #0
     53c:	4669      	mov	r1, sp
     53e:	545a      	strb	r2, [r3, r1]
     540:	3301      	adds	r3, #1
    for(uint8_t i = 0; i < 8; i++) {
     542:	2b08      	cmp	r3, #8
     544:	d1fa      	bne.n	53c <lcd_create_bar_charts+0xc>
     546:	2604      	movs	r6, #4
     548:	2500      	movs	r5, #0
    }
    for(uint8_t i = 0; i < 5; i++) {
        for(uint8_t j = 0; j < 8; j++) {
            char_arr[j] |= 1 << 4 - i;
     54a:	3b07      	subs	r3, #7
     54c:	4698      	mov	r8, r3
     54e:	ac02      	add	r4, sp, #8
        }
        lcd_createChar(i + 1, char_arr);
     550:	4f0b      	ldr	r7, [pc, #44]	; (580 <lcd_create_bar_charts+0x50>)
            char_arr[j] |= 1 << 4 - i;
     552:	4641      	mov	r1, r8
     554:	40b1      	lsls	r1, r6
     556:	b249      	sxtb	r1, r1
     558:	466b      	mov	r3, sp
     55a:	781a      	ldrb	r2, [r3, #0]
     55c:	430a      	orrs	r2, r1
     55e:	701a      	strb	r2, [r3, #0]
     560:	3301      	adds	r3, #1
        for(uint8_t j = 0; j < 8; j++) {
     562:	429c      	cmp	r4, r3
     564:	d1f9      	bne.n	55a <lcd_create_bar_charts+0x2a>
        lcd_createChar(i + 1, char_arr);
     566:	3501      	adds	r5, #1
     568:	b2ed      	uxtb	r5, r5
     56a:	4669      	mov	r1, sp
     56c:	0028      	movs	r0, r5
     56e:	47b8      	blx	r7
     570:	3e01      	subs	r6, #1
    for(uint8_t i = 0; i < 5; i++) {
     572:	2d05      	cmp	r5, #5
     574:	d1ed      	bne.n	552 <lcd_create_bar_charts+0x22>
    }
}
     576:	b002      	add	sp, #8
     578:	bc04      	pop	{r2}
     57a:	4690      	mov	r8, r2
     57c:	bdf0      	pop	{r4, r5, r6, r7, pc}
     57e:	46c0      	nop			; (mov r8, r8)
     580:	000004e5 	.word	0x000004e5

00000584 <adsr_process>:

#define MAX_32BIT_VALUE 0xFFFFFFFFUL
uint8_t trigger_flags = 0;
extern ADSR adsr_channels[5];

void adsr_process(ADSR *adsr) {
     584:	b5f0      	push	{r4, r5, r6, r7, lr}
     586:	46c6      	mov	lr, r8
     588:	b500      	push	{lr}
     58a:	0004      	movs	r4, r0
    if(adsr->debounce_timer >= adsr->interval)
     58c:	232d      	movs	r3, #45	; 0x2d
     58e:	5cc3      	ldrb	r3, [r0, r3]
     590:	6845      	ldr	r5, [r0, #4]
     592:	42ab      	cmp	r3, r5
     594:	d30a      	bcc.n	5ac <adsr_process+0x28>
        adsr->debounce_timer -= adsr->interval;
     596:	1b5b      	subs	r3, r3, r5
     598:	222d      	movs	r2, #45	; 0x2d
     59a:	5483      	strb	r3, [r0, r2]
    else
        adsr->debounce_timer = 0;
    switch(adsr->state) {
     59c:	232c      	movs	r3, #44	; 0x2c
     59e:	5ce2      	ldrb	r2, [r4, r3]
     5a0:	2a05      	cmp	r2, #5
     5a2:	d810      	bhi.n	5c6 <adsr_process+0x42>
     5a4:	0093      	lsls	r3, r2, #2
     5a6:	4a44      	ldr	r2, [pc, #272]	; (6b8 <adsr_process+0x134>)
     5a8:	58d3      	ldr	r3, [r2, r3]
     5aa:	469f      	mov	pc, r3
        adsr->debounce_timer = 0;
     5ac:	2200      	movs	r2, #0
     5ae:	232d      	movs	r3, #45	; 0x2d
     5b0:	54c2      	strb	r2, [r0, r3]
     5b2:	e7f3      	b.n	59c <adsr_process+0x18>
        case START:
            adsr->attack_counter = 0;
     5b4:	2300      	movs	r3, #0
     5b6:	60e3      	str	r3, [r4, #12]
            adsr->sustain_counter = 0;
     5b8:	6223      	str	r3, [r4, #32]
            adsr->decay_counter = 0;
     5ba:	6163      	str	r3, [r4, #20]
            adsr->release_counter = 0;
     5bc:	62a3      	str	r3, [r4, #40]	; 0x28
            adsr->state = ATTACK;
     5be:	2101      	movs	r1, #1
     5c0:	222c      	movs	r2, #44	; 0x2c
     5c2:	54a1      	strb	r1, [r4, r2]
            adsr->value = 0;
     5c4:	6023      	str	r3, [r4, #0]
            break;
        case END:
            adsr->value = 0;
            break;
    }
}
     5c6:	bc04      	pop	{r2}
     5c8:	4690      	mov	r8, r2
     5ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
            if(adsr->attack == 0) {
     5cc:	68a7      	ldr	r7, [r4, #8]
     5ce:	2f00      	cmp	r7, #0
     5d0:	d014      	beq.n	5fc <adsr_process+0x78>
            adsr->value = MAX_32BIT_VALUE / adsr->attack  * adsr->attack_counter;
     5d2:	68e6      	ldr	r6, [r4, #12]
     5d4:	0039      	movs	r1, r7
     5d6:	2001      	movs	r0, #1
     5d8:	4240      	negs	r0, r0
     5da:	4b38      	ldr	r3, [pc, #224]	; (6bc <adsr_process+0x138>)
     5dc:	4798      	blx	r3
     5de:	4370      	muls	r0, r6
     5e0:	6020      	str	r0, [r4, #0]
            adsr->attack_counter += adsr->interval;
     5e2:	19ad      	adds	r5, r5, r6
     5e4:	60e5      	str	r5, [r4, #12]
            if(adsr->attack_counter > adsr->attack) {
     5e6:	42af      	cmp	r7, r5
     5e8:	d2ed      	bcs.n	5c6 <adsr_process+0x42>
                adsr->value = MAX_32BIT_VALUE; //max value
     5ea:	2301      	movs	r3, #1
     5ec:	425b      	negs	r3, r3
     5ee:	6023      	str	r3, [r4, #0]
                adsr->state = DECAY;
     5f0:	2202      	movs	r2, #2
     5f2:	332d      	adds	r3, #45	; 0x2d
     5f4:	54e2      	strb	r2, [r4, r3]
                adsr->attack_counter = 0;
     5f6:	2300      	movs	r3, #0
     5f8:	60e3      	str	r3, [r4, #12]
     5fa:	e7e4      	b.n	5c6 <adsr_process+0x42>
                adsr->value = MAX_32BIT_VALUE;
     5fc:	2301      	movs	r3, #1
     5fe:	425b      	negs	r3, r3
     600:	6023      	str	r3, [r4, #0]
                adsr->state = DECAY;
     602:	2202      	movs	r2, #2
     604:	332d      	adds	r3, #45	; 0x2d
     606:	54e2      	strb	r2, [r4, r3]
                break;
     608:	e7dd      	b.n	5c6 <adsr_process+0x42>
            if(adsr->decay == 0) {
     60a:	6927      	ldr	r7, [r4, #16]
     60c:	2f00      	cmp	r7, #0
     60e:	d016      	beq.n	63e <adsr_process+0xba>
            adsr->value =  MAX_32BIT_VALUE - (MAX_32BIT_VALUE - (adsr->sustain_level << 24)) / adsr->decay * adsr->decay_counter ;
     610:	69e3      	ldr	r3, [r4, #28]
     612:	061b      	lsls	r3, r3, #24
     614:	4698      	mov	r8, r3
     616:	6966      	ldr	r6, [r4, #20]
     618:	43d8      	mvns	r0, r3
     61a:	0039      	movs	r1, r7
     61c:	4b27      	ldr	r3, [pc, #156]	; (6bc <adsr_process+0x138>)
     61e:	4798      	blx	r3
     620:	4370      	muls	r0, r6
     622:	43c0      	mvns	r0, r0
     624:	6020      	str	r0, [r4, #0]
            adsr->decay_counter += adsr->interval;
     626:	19ad      	adds	r5, r5, r6
     628:	6165      	str	r5, [r4, #20]
            if(adsr->decay_counter > adsr->decay) {
     62a:	42af      	cmp	r7, r5
     62c:	d2cb      	bcs.n	5c6 <adsr_process+0x42>
                adsr->value = adsr->sustain_level << 24;
     62e:	4643      	mov	r3, r8
     630:	6023      	str	r3, [r4, #0]
                adsr->state = SUSTAIN;
     632:	2203      	movs	r2, #3
     634:	232c      	movs	r3, #44	; 0x2c
     636:	54e2      	strb	r2, [r4, r3]
                adsr->decay_counter = 0;
     638:	2300      	movs	r3, #0
     63a:	6163      	str	r3, [r4, #20]
     63c:	e7c3      	b.n	5c6 <adsr_process+0x42>
                adsr->value = adsr->sustain_level;
     63e:	69e3      	ldr	r3, [r4, #28]
     640:	6023      	str	r3, [r4, #0]
                adsr->state = SUSTAIN;
     642:	2203      	movs	r2, #3
     644:	232c      	movs	r3, #44	; 0x2c
     646:	54e2      	strb	r2, [r4, r3]
                break;
     648:	e7bd      	b.n	5c6 <adsr_process+0x42>
            if(adsr->sustain == 0) {
     64a:	69a3      	ldr	r3, [r4, #24]
     64c:	2b00      	cmp	r3, #0
     64e:	d00e      	beq.n	66e <adsr_process+0xea>
            adsr->value = adsr->sustain_level << 24;
     650:	69e2      	ldr	r2, [r4, #28]
     652:	0612      	lsls	r2, r2, #24
     654:	6022      	str	r2, [r4, #0]
            adsr->sustain_counter += adsr->interval;
     656:	6a22      	ldr	r2, [r4, #32]
     658:	4694      	mov	ip, r2
     65a:	4465      	add	r5, ip
     65c:	6225      	str	r5, [r4, #32]
            if(adsr->sustain_counter > adsr->sustain) {
     65e:	42ab      	cmp	r3, r5
     660:	d2b1      	bcs.n	5c6 <adsr_process+0x42>
                adsr->state = RELEASE;
     662:	2204      	movs	r2, #4
     664:	232c      	movs	r3, #44	; 0x2c
     666:	54e2      	strb	r2, [r4, r3]
                adsr->sustain_counter = 0;
     668:	2300      	movs	r3, #0
     66a:	6223      	str	r3, [r4, #32]
     66c:	e7ab      	b.n	5c6 <adsr_process+0x42>
                adsr->state = RELEASE;
     66e:	2204      	movs	r2, #4
     670:	332c      	adds	r3, #44	; 0x2c
     672:	54e2      	strb	r2, [r4, r3]
                break;
     674:	e7a7      	b.n	5c6 <adsr_process+0x42>
            if(adsr->release == 0) {
     676:	6a67      	ldr	r7, [r4, #36]	; 0x24
     678:	2f00      	cmp	r7, #0
     67a:	d016      	beq.n	6aa <adsr_process+0x126>
            adsr->value = ((adsr->sustain_level << 24) - (adsr->sustain_level << 24) / adsr->release * adsr->release_counter);
     67c:	69e3      	ldr	r3, [r4, #28]
     67e:	061e      	lsls	r6, r3, #24
     680:	6aa3      	ldr	r3, [r4, #40]	; 0x28
     682:	4698      	mov	r8, r3
     684:	0039      	movs	r1, r7
     686:	0030      	movs	r0, r6
     688:	4b0c      	ldr	r3, [pc, #48]	; (6bc <adsr_process+0x138>)
     68a:	4798      	blx	r3
     68c:	4643      	mov	r3, r8
     68e:	4358      	muls	r0, r3
     690:	1a36      	subs	r6, r6, r0
     692:	6026      	str	r6, [r4, #0]
            adsr->release_counter += adsr->interval;
     694:	4445      	add	r5, r8
     696:	62a5      	str	r5, [r4, #40]	; 0x28
            if(adsr->release_counter > adsr->release) {
     698:	42af      	cmp	r7, r5
     69a:	d294      	bcs.n	5c6 <adsr_process+0x42>
                adsr->value = 0;
     69c:	2300      	movs	r3, #0
     69e:	6023      	str	r3, [r4, #0]
                adsr->state = END;
     6a0:	2105      	movs	r1, #5
     6a2:	222c      	movs	r2, #44	; 0x2c
     6a4:	54a1      	strb	r1, [r4, r2]
                adsr->release_counter = 0;
     6a6:	62a3      	str	r3, [r4, #40]	; 0x28
     6a8:	e78d      	b.n	5c6 <adsr_process+0x42>
                adsr->state = END;
     6aa:	2205      	movs	r2, #5
     6ac:	232c      	movs	r3, #44	; 0x2c
     6ae:	54e2      	strb	r2, [r4, r3]
                break;
     6b0:	e789      	b.n	5c6 <adsr_process+0x42>
            adsr->value = 0;
     6b2:	2300      	movs	r3, #0
     6b4:	6023      	str	r3, [r4, #0]
}
     6b6:	e786      	b.n	5c6 <adsr_process+0x42>
     6b8:	000091e4 	.word	0x000091e4
     6bc:	00006269 	.word	0x00006269

000006c0 <adsr_get_value>:
uint8_t adsr_get_value(ADSR *adsr) {
    return adsr->value >> 24;
     6c0:	78c0      	ldrb	r0, [r0, #3]
}
     6c2:	4770      	bx	lr

000006c4 <adsr_trigger>:

void adsr_trigger(ADSR *adsr) {
     6c4:	b510      	push	{r4, lr}
     6c6:	0004      	movs	r4, r0
    if(!adsr->debounce_timer) {
     6c8:	232d      	movs	r3, #45	; 0x2d
     6ca:	5cc3      	ldrb	r3, [r0, r3]
     6cc:	2b00      	cmp	r3, #0
     6ce:	d113      	bne.n	6f8 <adsr_trigger+0x34>
        adsr->debounce_timer = 100 / adsr->interval;
     6d0:	6841      	ldr	r1, [r0, #4]
     6d2:	2064      	movs	r0, #100	; 0x64
     6d4:	4b09      	ldr	r3, [pc, #36]	; (6fc <adsr_trigger+0x38>)
     6d6:	4798      	blx	r3
     6d8:	232d      	movs	r3, #45	; 0x2d
     6da:	54e0      	strb	r0, [r4, r3]
        adsr->state = START;
     6dc:	2200      	movs	r2, #0
     6de:	3b01      	subs	r3, #1
     6e0:	54e2      	strb	r2, [r4, r3]
        trigger_flags |= (1 << adsr - adsr_channels);
     6e2:	4a07      	ldr	r2, [pc, #28]	; (700 <adsr_trigger+0x3c>)
     6e4:	4b07      	ldr	r3, [pc, #28]	; (704 <adsr_trigger+0x40>)
     6e6:	1ae4      	subs	r4, r4, r3
     6e8:	1124      	asrs	r4, r4, #4
     6ea:	4b07      	ldr	r3, [pc, #28]	; (708 <adsr_trigger+0x44>)
     6ec:	435c      	muls	r4, r3
     6ee:	2301      	movs	r3, #1
     6f0:	40a3      	lsls	r3, r4
     6f2:	7811      	ldrb	r1, [r2, #0]
     6f4:	430b      	orrs	r3, r1
     6f6:	7013      	strb	r3, [r2, #0]
    }
}
     6f8:	bd10      	pop	{r4, pc}
     6fa:	46c0      	nop			; (mov r8, r8)
     6fc:	00006269 	.word	0x00006269
     700:	200000bf 	.word	0x200000bf
     704:	200024bc 	.word	0x200024bc
     708:	aaaaaaab 	.word	0xaaaaaaab

0000070c <get_trigger_flags>:

uint8_t get_trigger_flags(void) {
    return trigger_flags;
     70c:	4b01      	ldr	r3, [pc, #4]	; (714 <get_trigger_flags+0x8>)
     70e:	7818      	ldrb	r0, [r3, #0]
}
     710:	4770      	bx	lr
     712:	46c0      	nop			; (mov r8, r8)
     714:	200000bf 	.word	0x200000bf

00000718 <clear_trigger_flags>:

void clear_trigger_flags(void) {
    trigger_flags = 0;
     718:	2200      	movs	r2, #0
     71a:	4b01      	ldr	r3, [pc, #4]	; (720 <clear_trigger_flags+0x8>)
     71c:	701a      	strb	r2, [r3, #0]
}
     71e:	4770      	bx	lr
     720:	200000bf 	.word	0x200000bf

00000724 <adsr_init>:
void adsr_init(ADSR *adsr, uint32_t interval) {
     724:	b510      	push	{r4, lr}
    adsr->attack_counter = 0;
     726:	2300      	movs	r3, #0
     728:	60c3      	str	r3, [r0, #12]
    adsr->decay_counter = 0;
     72a:	6143      	str	r3, [r0, #20]
    adsr->sustain_counter = 0;
     72c:	6203      	str	r3, [r0, #32]
    adsr->release_counter = 0;
     72e:	6283      	str	r3, [r0, #40]	; 0x28
    adsr->value = 0;
     730:	6003      	str	r3, [r0, #0]
    adsr->state = END;
     732:	2405      	movs	r4, #5
     734:	222c      	movs	r2, #44	; 0x2c
     736:	5484      	strb	r4, [r0, r2]
    adsr->interval = interval;
     738:	6041      	str	r1, [r0, #4]
    adsr->attack = 100;
     73a:	3238      	adds	r2, #56	; 0x38
     73c:	6082      	str	r2, [r0, #8]
    adsr->decay = 100;
     73e:	6102      	str	r2, [r0, #16]
    adsr->sustain = 100;
     740:	6182      	str	r2, [r0, #24]
    adsr->release = 100;
     742:	6242      	str	r2, [r0, #36]	; 0x24
    adsr->sustain_level = 128;
     744:	321c      	adds	r2, #28
     746:	61c2      	str	r2, [r0, #28]
    adsr->debounce_timer = 0;
     748:	3a53      	subs	r2, #83	; 0x53
     74a:	5483      	strb	r3, [r0, r2]
     74c:	bd10      	pop	{r4, pc}
	...

00000750 <_tc_interrupt_handler>:
     750:	b570      	push	{r4, r5, r6, lr}
     752:	0080      	lsls	r0, r0, #2
     754:	4b16      	ldr	r3, [pc, #88]	; (7b0 <_tc_interrupt_handler+0x60>)
     756:	58c4      	ldr	r4, [r0, r3]
     758:	6823      	ldr	r3, [r4, #0]
     75a:	7a9d      	ldrb	r5, [r3, #10]
     75c:	7e22      	ldrb	r2, [r4, #24]
     75e:	7e63      	ldrb	r3, [r4, #25]
     760:	4013      	ands	r3, r2
     762:	401d      	ands	r5, r3
     764:	07eb      	lsls	r3, r5, #31
     766:	d406      	bmi.n	776 <_tc_interrupt_handler+0x26>
     768:	07ab      	lsls	r3, r5, #30
     76a:	d40b      	bmi.n	784 <_tc_interrupt_handler+0x34>
     76c:	06eb      	lsls	r3, r5, #27
     76e:	d410      	bmi.n	792 <_tc_interrupt_handler+0x42>
     770:	06ab      	lsls	r3, r5, #26
     772:	d415      	bmi.n	7a0 <_tc_interrupt_handler+0x50>
     774:	bd70      	pop	{r4, r5, r6, pc}
     776:	0020      	movs	r0, r4
     778:	68a3      	ldr	r3, [r4, #8]
     77a:	4798      	blx	r3
     77c:	2301      	movs	r3, #1
     77e:	6822      	ldr	r2, [r4, #0]
     780:	7293      	strb	r3, [r2, #10]
     782:	e7f1      	b.n	768 <_tc_interrupt_handler+0x18>
     784:	0020      	movs	r0, r4
     786:	68e3      	ldr	r3, [r4, #12]
     788:	4798      	blx	r3
     78a:	2302      	movs	r3, #2
     78c:	6822      	ldr	r2, [r4, #0]
     78e:	7293      	strb	r3, [r2, #10]
     790:	e7ec      	b.n	76c <_tc_interrupt_handler+0x1c>
     792:	0020      	movs	r0, r4
     794:	6923      	ldr	r3, [r4, #16]
     796:	4798      	blx	r3
     798:	2310      	movs	r3, #16
     79a:	6822      	ldr	r2, [r4, #0]
     79c:	7293      	strb	r3, [r2, #10]
     79e:	e7e7      	b.n	770 <_tc_interrupt_handler+0x20>
     7a0:	0020      	movs	r0, r4
     7a2:	6963      	ldr	r3, [r4, #20]
     7a4:	4798      	blx	r3
     7a6:	6823      	ldr	r3, [r4, #0]
     7a8:	2220      	movs	r2, #32
     7aa:	729a      	strb	r2, [r3, #10]
     7ac:	e7e2      	b.n	774 <_tc_interrupt_handler+0x24>
     7ae:	46c0      	nop			; (mov r8, r8)
     7b0:	200018b8 	.word	0x200018b8

000007b4 <TC0_Handler>:
     7b4:	b510      	push	{r4, lr}
     7b6:	2000      	movs	r0, #0
     7b8:	4b01      	ldr	r3, [pc, #4]	; (7c0 <TC0_Handler+0xc>)
     7ba:	4798      	blx	r3
     7bc:	bd10      	pop	{r4, pc}
     7be:	46c0      	nop			; (mov r8, r8)
     7c0:	00000751 	.word	0x00000751

000007c4 <TC1_Handler>:
     7c4:	b510      	push	{r4, lr}
     7c6:	2001      	movs	r0, #1
     7c8:	4b01      	ldr	r3, [pc, #4]	; (7d0 <TC1_Handler+0xc>)
     7ca:	4798      	blx	r3
     7cc:	bd10      	pop	{r4, pc}
     7ce:	46c0      	nop			; (mov r8, r8)
     7d0:	00000751 	.word	0x00000751

000007d4 <TC2_Handler>:
     7d4:	b510      	push	{r4, lr}
     7d6:	2002      	movs	r0, #2
     7d8:	4b01      	ldr	r3, [pc, #4]	; (7e0 <TC2_Handler+0xc>)
     7da:	4798      	blx	r3
     7dc:	bd10      	pop	{r4, pc}
     7de:	46c0      	nop			; (mov r8, r8)
     7e0:	00000751 	.word	0x00000751

000007e4 <TC3_Handler>:
     7e4:	b510      	push	{r4, lr}
     7e6:	2003      	movs	r0, #3
     7e8:	4b01      	ldr	r3, [pc, #4]	; (7f0 <TC3_Handler+0xc>)
     7ea:	4798      	blx	r3
     7ec:	bd10      	pop	{r4, pc}
     7ee:	46c0      	nop			; (mov r8, r8)
     7f0:	00000751 	.word	0x00000751

000007f4 <TC4_Handler>:
     7f4:	b510      	push	{r4, lr}
     7f6:	2004      	movs	r0, #4
     7f8:	4b01      	ldr	r3, [pc, #4]	; (800 <TC4_Handler+0xc>)
     7fa:	4798      	blx	r3
     7fc:	bd10      	pop	{r4, pc}
     7fe:	46c0      	nop			; (mov r8, r8)
     800:	00000751 	.word	0x00000751

00000804 <_tc_get_inst_index>:
     804:	b530      	push	{r4, r5, lr}
     806:	b087      	sub	sp, #28
     808:	a901      	add	r1, sp, #4
     80a:	4b0c      	ldr	r3, [pc, #48]	; (83c <_tc_get_inst_index+0x38>)
     80c:	000a      	movs	r2, r1
     80e:	cb32      	ldmia	r3!, {r1, r4, r5}
     810:	c232      	stmia	r2!, {r1, r4, r5}
     812:	cb12      	ldmia	r3!, {r1, r4}
     814:	c212      	stmia	r2!, {r1, r4}
     816:	9b01      	ldr	r3, [sp, #4]
     818:	4298      	cmp	r0, r3
     81a:	d00b      	beq.n	834 <_tc_get_inst_index+0x30>
     81c:	2301      	movs	r3, #1
     81e:	a901      	add	r1, sp, #4
     820:	009a      	lsls	r2, r3, #2
     822:	5852      	ldr	r2, [r2, r1]
     824:	4282      	cmp	r2, r0
     826:	d006      	beq.n	836 <_tc_get_inst_index+0x32>
     828:	3301      	adds	r3, #1
     82a:	2b05      	cmp	r3, #5
     82c:	d1f8      	bne.n	820 <_tc_get_inst_index+0x1c>
     82e:	2000      	movs	r0, #0
     830:	b007      	add	sp, #28
     832:	bd30      	pop	{r4, r5, pc}
     834:	2300      	movs	r3, #0
     836:	b2d8      	uxtb	r0, r3
     838:	e7fa      	b.n	830 <_tc_get_inst_index+0x2c>
     83a:	46c0      	nop			; (mov r8, r8)
     83c:	000091fc 	.word	0x000091fc

00000840 <tc_init>:
     840:	b5f0      	push	{r4, r5, r6, r7, lr}
     842:	46c6      	mov	lr, r8
     844:	b500      	push	{lr}
     846:	b08e      	sub	sp, #56	; 0x38
     848:	0004      	movs	r4, r0
     84a:	000d      	movs	r5, r1
     84c:	0016      	movs	r6, r2
     84e:	0008      	movs	r0, r1
     850:	4ba7      	ldr	r3, [pc, #668]	; (af0 <tc_init+0x2b0>)
     852:	4798      	blx	r3
     854:	4680      	mov	r8, r0
     856:	ab0c      	add	r3, sp, #48	; 0x30
     858:	221e      	movs	r2, #30
     85a:	701a      	strb	r2, [r3, #0]
     85c:	705a      	strb	r2, [r3, #1]
     85e:	3201      	adds	r2, #1
     860:	709a      	strb	r2, [r3, #2]
     862:	70da      	strb	r2, [r3, #3]
     864:	3201      	adds	r2, #1
     866:	711a      	strb	r2, [r3, #4]
     868:	a902      	add	r1, sp, #8
     86a:	4ba2      	ldr	r3, [pc, #648]	; (af4 <tc_init+0x2b4>)
     86c:	3314      	adds	r3, #20
     86e:	000a      	movs	r2, r1
     870:	cb83      	ldmia	r3!, {r0, r1, r7}
     872:	c283      	stmia	r2!, {r0, r1, r7}
     874:	cb83      	ldmia	r3!, {r0, r1, r7}
     876:	c283      	stmia	r2!, {r0, r1, r7}
     878:	cb83      	ldmia	r3!, {r0, r1, r7}
     87a:	c283      	stmia	r2!, {r0, r1, r7}
     87c:	681b      	ldr	r3, [r3, #0]
     87e:	6013      	str	r3, [r2, #0]
     880:	2300      	movs	r3, #0
     882:	60a3      	str	r3, [r4, #8]
     884:	60e3      	str	r3, [r4, #12]
     886:	6123      	str	r3, [r4, #16]
     888:	6163      	str	r3, [r4, #20]
     88a:	7623      	strb	r3, [r4, #24]
     88c:	7663      	strb	r3, [r4, #25]
     88e:	4643      	mov	r3, r8
     890:	009a      	lsls	r2, r3, #2
     892:	4b99      	ldr	r3, [pc, #612]	; (af8 <tc_init+0x2b8>)
     894:	50d4      	str	r4, [r2, r3]
     896:	6025      	str	r5, [r4, #0]
     898:	2334      	movs	r3, #52	; 0x34
     89a:	5cf3      	ldrb	r3, [r6, r3]
     89c:	76a3      	strb	r3, [r4, #26]
     89e:	78f3      	ldrb	r3, [r6, #3]
     8a0:	2b08      	cmp	r3, #8
     8a2:	d008      	beq.n	8b6 <tc_init+0x76>
     8a4:	7123      	strb	r3, [r4, #4]
     8a6:	682b      	ldr	r3, [r5, #0]
     8a8:	2005      	movs	r0, #5
     8aa:	07db      	lsls	r3, r3, #31
     8ac:	d508      	bpl.n	8c0 <tc_init+0x80>
     8ae:	b00e      	add	sp, #56	; 0x38
     8b0:	bc04      	pop	{r2}
     8b2:	4690      	mov	r8, r2
     8b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
     8b6:	2017      	movs	r0, #23
     8b8:	4642      	mov	r2, r8
     8ba:	07d2      	lsls	r2, r2, #31
     8bc:	d4f7      	bmi.n	8ae <tc_init+0x6e>
     8be:	e7f1      	b.n	8a4 <tc_init+0x64>
     8c0:	7aeb      	ldrb	r3, [r5, #11]
     8c2:	3017      	adds	r0, #23
     8c4:	079b      	lsls	r3, r3, #30
     8c6:	d4f2      	bmi.n	8ae <tc_init+0x6e>
     8c8:	682b      	ldr	r3, [r5, #0]
     8ca:	079b      	lsls	r3, r3, #30
     8cc:	d4ef      	bmi.n	8ae <tc_init+0x6e>
     8ce:	7c33      	ldrb	r3, [r6, #16]
     8d0:	2b00      	cmp	r3, #0
     8d2:	d000      	beq.n	8d6 <tc_init+0x96>
     8d4:	e08e      	b.n	9f4 <tc_init+0x1b4>
     8d6:	7f33      	ldrb	r3, [r6, #28]
     8d8:	2b00      	cmp	r3, #0
     8da:	d000      	beq.n	8de <tc_init+0x9e>
     8dc:	e096      	b.n	a0c <tc_init+0x1cc>
     8de:	4643      	mov	r3, r8
     8e0:	005a      	lsls	r2, r3, #1
     8e2:	a902      	add	r1, sp, #8
     8e4:	1c53      	adds	r3, r2, #1
     8e6:	009b      	lsls	r3, r3, #2
     8e8:	5858      	ldr	r0, [r3, r1]
     8ea:	4643      	mov	r3, r8
     8ec:	00db      	lsls	r3, r3, #3
     8ee:	585b      	ldr	r3, [r3, r1]
     8f0:	b2d9      	uxtb	r1, r3
     8f2:	2901      	cmp	r1, #1
     8f4:	d100      	bne.n	8f8 <tc_init+0xb8>
     8f6:	e09e      	b.n	a36 <tc_init+0x1f6>
     8f8:	2900      	cmp	r1, #0
     8fa:	d100      	bne.n	8fe <tc_init+0xbe>
     8fc:	e096      	b.n	a2c <tc_init+0x1ec>
     8fe:	2902      	cmp	r1, #2
     900:	d100      	bne.n	904 <tc_init+0xc4>
     902:	e09d      	b.n	a40 <tc_init+0x200>
     904:	78f3      	ldrb	r3, [r6, #3]
     906:	2b08      	cmp	r3, #8
     908:	d100      	bne.n	90c <tc_init+0xcc>
     90a:	e09e      	b.n	a4a <tc_init+0x20a>
     90c:	7833      	ldrb	r3, [r6, #0]
     90e:	466a      	mov	r2, sp
     910:	7013      	strb	r3, [r2, #0]
     912:	ab0c      	add	r3, sp, #48	; 0x30
     914:	4642      	mov	r2, r8
     916:	5c9f      	ldrb	r7, [r3, r2]
     918:	4669      	mov	r1, sp
     91a:	0038      	movs	r0, r7
     91c:	4b77      	ldr	r3, [pc, #476]	; (afc <tc_init+0x2bc>)
     91e:	4798      	blx	r3
     920:	0038      	movs	r0, r7
     922:	4b77      	ldr	r3, [pc, #476]	; (b00 <tc_init+0x2c0>)
     924:	4798      	blx	r3
     926:	78f3      	ldrb	r3, [r6, #3]
     928:	79f2      	ldrb	r2, [r6, #7]
     92a:	4313      	orrs	r3, r2
     92c:	88b2      	ldrh	r2, [r6, #4]
     92e:	4313      	orrs	r3, r2
     930:	7a72      	ldrb	r2, [r6, #9]
     932:	2a00      	cmp	r2, #0
     934:	d002      	beq.n	93c <tc_init+0xfc>
     936:	2280      	movs	r2, #128	; 0x80
     938:	0252      	lsls	r2, r2, #9
     93a:	4313      	orrs	r3, r2
     93c:	7ab2      	ldrb	r2, [r6, #10]
     93e:	2a00      	cmp	r2, #0
     940:	d002      	beq.n	948 <tc_init+0x108>
     942:	2280      	movs	r2, #128	; 0x80
     944:	0292      	lsls	r2, r2, #10
     946:	4313      	orrs	r3, r2
     948:	7af2      	ldrb	r2, [r6, #11]
     94a:	2a00      	cmp	r2, #0
     94c:	d002      	beq.n	954 <tc_init+0x114>
     94e:	2280      	movs	r2, #128	; 0x80
     950:	0352      	lsls	r2, r2, #13
     952:	4313      	orrs	r3, r2
     954:	7b32      	ldrb	r2, [r6, #12]
     956:	2a00      	cmp	r2, #0
     958:	d002      	beq.n	960 <tc_init+0x120>
     95a:	2280      	movs	r2, #128	; 0x80
     95c:	0392      	lsls	r2, r2, #14
     95e:	4313      	orrs	r3, r2
     960:	7871      	ldrb	r1, [r6, #1]
     962:	0189      	lsls	r1, r1, #6
     964:	78b2      	ldrb	r2, [r6, #2]
     966:	01d2      	lsls	r2, r2, #7
     968:	4311      	orrs	r1, r2
     96a:	4319      	orrs	r1, r3
     96c:	6822      	ldr	r2, [r4, #0]
     96e:	6913      	ldr	r3, [r2, #16]
     970:	2b00      	cmp	r3, #0
     972:	d1fc      	bne.n	96e <tc_init+0x12e>
     974:	6029      	str	r1, [r5, #0]
     976:	6822      	ldr	r2, [r4, #0]
     978:	6913      	ldr	r3, [r2, #16]
     97a:	2b00      	cmp	r3, #0
     97c:	d1fc      	bne.n	978 <tc_init+0x138>
     97e:	79b3      	ldrb	r3, [r6, #6]
     980:	732b      	strb	r3, [r5, #12]
     982:	7b71      	ldrb	r1, [r6, #13]
     984:	1e4b      	subs	r3, r1, #1
     986:	4199      	sbcs	r1, r3
     988:	0089      	lsls	r1, r1, #2
     98a:	7bb3      	ldrb	r3, [r6, #14]
     98c:	2b00      	cmp	r3, #0
     98e:	d001      	beq.n	994 <tc_init+0x154>
     990:	2301      	movs	r3, #1
     992:	4319      	orrs	r1, r3
     994:	6822      	ldr	r2, [r4, #0]
     996:	6913      	ldr	r3, [r2, #16]
     998:	2b00      	cmp	r3, #0
     99a:	d1fc      	bne.n	996 <tc_init+0x156>
     99c:	33ff      	adds	r3, #255	; 0xff
     99e:	712b      	strb	r3, [r5, #4]
     9a0:	2900      	cmp	r1, #0
     9a2:	d004      	beq.n	9ae <tc_init+0x16e>
     9a4:	6822      	ldr	r2, [r4, #0]
     9a6:	6913      	ldr	r3, [r2, #16]
     9a8:	2b00      	cmp	r3, #0
     9aa:	d1fc      	bne.n	9a6 <tc_init+0x166>
     9ac:	7169      	strb	r1, [r5, #5]
     9ae:	7a33      	ldrb	r3, [r6, #8]
     9b0:	736b      	strb	r3, [r5, #13]
     9b2:	6822      	ldr	r2, [r4, #0]
     9b4:	6913      	ldr	r3, [r2, #16]
     9b6:	2b00      	cmp	r3, #0
     9b8:	d1fc      	bne.n	9b4 <tc_init+0x174>
     9ba:	7923      	ldrb	r3, [r4, #4]
     9bc:	2b04      	cmp	r3, #4
     9be:	d067      	beq.n	a90 <tc_init+0x250>
     9c0:	2b08      	cmp	r3, #8
     9c2:	d100      	bne.n	9c6 <tc_init+0x186>
     9c4:	e081      	b.n	aca <tc_init+0x28a>
     9c6:	2017      	movs	r0, #23
     9c8:	2b00      	cmp	r3, #0
     9ca:	d000      	beq.n	9ce <tc_init+0x18e>
     9cc:	e76f      	b.n	8ae <tc_init+0x6e>
     9ce:	6913      	ldr	r3, [r2, #16]
     9d0:	2b00      	cmp	r3, #0
     9d2:	d1fc      	bne.n	9ce <tc_init+0x18e>
     9d4:	8d33      	ldrh	r3, [r6, #40]	; 0x28
     9d6:	82ab      	strh	r3, [r5, #20]
     9d8:	6822      	ldr	r2, [r4, #0]
     9da:	6913      	ldr	r3, [r2, #16]
     9dc:	2b00      	cmp	r3, #0
     9de:	d1fc      	bne.n	9da <tc_init+0x19a>
     9e0:	8d73      	ldrh	r3, [r6, #42]	; 0x2a
     9e2:	83ab      	strh	r3, [r5, #28]
     9e4:	6822      	ldr	r2, [r4, #0]
     9e6:	6913      	ldr	r3, [r2, #16]
     9e8:	2b00      	cmp	r3, #0
     9ea:	d1fc      	bne.n	9e6 <tc_init+0x1a6>
     9ec:	8db3      	ldrh	r3, [r6, #44]	; 0x2c
     9ee:	83eb      	strh	r3, [r5, #30]
     9f0:	2000      	movs	r0, #0
     9f2:	e75c      	b.n	8ae <tc_init+0x6e>
     9f4:	a901      	add	r1, sp, #4
     9f6:	2301      	movs	r3, #1
     9f8:	708b      	strb	r3, [r1, #2]
     9fa:	2200      	movs	r2, #0
     9fc:	70ca      	strb	r2, [r1, #3]
     9fe:	7e32      	ldrb	r2, [r6, #24]
     a00:	700a      	strb	r2, [r1, #0]
     a02:	704b      	strb	r3, [r1, #1]
     a04:	7d30      	ldrb	r0, [r6, #20]
     a06:	4b3f      	ldr	r3, [pc, #252]	; (b04 <tc_init+0x2c4>)
     a08:	4798      	blx	r3
     a0a:	e764      	b.n	8d6 <tc_init+0x96>
     a0c:	a901      	add	r1, sp, #4
     a0e:	2301      	movs	r3, #1
     a10:	708b      	strb	r3, [r1, #2]
     a12:	2200      	movs	r2, #0
     a14:	70ca      	strb	r2, [r1, #3]
     a16:	3224      	adds	r2, #36	; 0x24
     a18:	18b2      	adds	r2, r6, r2
     a1a:	7812      	ldrb	r2, [r2, #0]
     a1c:	700a      	strb	r2, [r1, #0]
     a1e:	704b      	strb	r3, [r1, #1]
     a20:	331f      	adds	r3, #31
     a22:	18f3      	adds	r3, r6, r3
     a24:	7818      	ldrb	r0, [r3, #0]
     a26:	4b37      	ldr	r3, [pc, #220]	; (b04 <tc_init+0x2c4>)
     a28:	4798      	blx	r3
     a2a:	e758      	b.n	8de <tc_init+0x9e>
     a2c:	4936      	ldr	r1, [pc, #216]	; (b08 <tc_init+0x2c8>)
     a2e:	694b      	ldr	r3, [r1, #20]
     a30:	4318      	orrs	r0, r3
     a32:	6148      	str	r0, [r1, #20]
     a34:	e766      	b.n	904 <tc_init+0xc4>
     a36:	4934      	ldr	r1, [pc, #208]	; (b08 <tc_init+0x2c8>)
     a38:	698b      	ldr	r3, [r1, #24]
     a3a:	4318      	orrs	r0, r3
     a3c:	6188      	str	r0, [r1, #24]
     a3e:	e761      	b.n	904 <tc_init+0xc4>
     a40:	4b31      	ldr	r3, [pc, #196]	; (b08 <tc_init+0x2c8>)
     a42:	69d9      	ldr	r1, [r3, #28]
     a44:	4308      	orrs	r0, r1
     a46:	61d8      	str	r0, [r3, #28]
     a48:	e75c      	b.n	904 <tc_init+0xc4>
     a4a:	4643      	mov	r3, r8
     a4c:	3301      	adds	r3, #1
     a4e:	2b04      	cmp	r3, #4
     a50:	dd00      	ble.n	a54 <tc_init+0x214>
     a52:	e75b      	b.n	90c <tc_init+0xcc>
     a54:	ab02      	add	r3, sp, #8
     a56:	1cd1      	adds	r1, r2, #3
     a58:	0089      	lsls	r1, r1, #2
     a5a:	58c9      	ldr	r1, [r1, r3]
     a5c:	3202      	adds	r2, #2
     a5e:	0092      	lsls	r2, r2, #2
     a60:	58d3      	ldr	r3, [r2, r3]
     a62:	b2da      	uxtb	r2, r3
     a64:	2a01      	cmp	r2, #1
     a66:	d00e      	beq.n	a86 <tc_init+0x246>
     a68:	2a00      	cmp	r2, #0
     a6a:	d007      	beq.n	a7c <tc_init+0x23c>
     a6c:	2a02      	cmp	r2, #2
     a6e:	d000      	beq.n	a72 <tc_init+0x232>
     a70:	e74c      	b.n	90c <tc_init+0xcc>
     a72:	4b25      	ldr	r3, [pc, #148]	; (b08 <tc_init+0x2c8>)
     a74:	69da      	ldr	r2, [r3, #28]
     a76:	4311      	orrs	r1, r2
     a78:	61d9      	str	r1, [r3, #28]
     a7a:	e747      	b.n	90c <tc_init+0xcc>
     a7c:	4a22      	ldr	r2, [pc, #136]	; (b08 <tc_init+0x2c8>)
     a7e:	6953      	ldr	r3, [r2, #20]
     a80:	4319      	orrs	r1, r3
     a82:	6151      	str	r1, [r2, #20]
     a84:	e742      	b.n	90c <tc_init+0xcc>
     a86:	4a20      	ldr	r2, [pc, #128]	; (b08 <tc_init+0x2c8>)
     a88:	6993      	ldr	r3, [r2, #24]
     a8a:	4319      	orrs	r1, r3
     a8c:	6191      	str	r1, [r2, #24]
     a8e:	e73d      	b.n	90c <tc_init+0xcc>
     a90:	6913      	ldr	r3, [r2, #16]
     a92:	2b00      	cmp	r3, #0
     a94:	d1fc      	bne.n	a90 <tc_init+0x250>
     a96:	3328      	adds	r3, #40	; 0x28
     a98:	5cf3      	ldrb	r3, [r6, r3]
     a9a:	752b      	strb	r3, [r5, #20]
     a9c:	6822      	ldr	r2, [r4, #0]
     a9e:	6913      	ldr	r3, [r2, #16]
     aa0:	2b00      	cmp	r3, #0
     aa2:	d1fc      	bne.n	a9e <tc_init+0x25e>
     aa4:	3329      	adds	r3, #41	; 0x29
     aa6:	5cf3      	ldrb	r3, [r6, r3]
     aa8:	76eb      	strb	r3, [r5, #27]
     aaa:	6822      	ldr	r2, [r4, #0]
     aac:	6913      	ldr	r3, [r2, #16]
     aae:	2b00      	cmp	r3, #0
     ab0:	d1fc      	bne.n	aac <tc_init+0x26c>
     ab2:	332a      	adds	r3, #42	; 0x2a
     ab4:	5cf3      	ldrb	r3, [r6, r3]
     ab6:	772b      	strb	r3, [r5, #28]
     ab8:	6822      	ldr	r2, [r4, #0]
     aba:	6913      	ldr	r3, [r2, #16]
     abc:	2b00      	cmp	r3, #0
     abe:	d1fc      	bne.n	aba <tc_init+0x27a>
     ac0:	332b      	adds	r3, #43	; 0x2b
     ac2:	5cf3      	ldrb	r3, [r6, r3]
     ac4:	776b      	strb	r3, [r5, #29]
     ac6:	2000      	movs	r0, #0
     ac8:	e6f1      	b.n	8ae <tc_init+0x6e>
     aca:	6913      	ldr	r3, [r2, #16]
     acc:	2b00      	cmp	r3, #0
     ace:	d1fc      	bne.n	aca <tc_init+0x28a>
     ad0:	6ab3      	ldr	r3, [r6, #40]	; 0x28
     ad2:	616b      	str	r3, [r5, #20]
     ad4:	6822      	ldr	r2, [r4, #0]
     ad6:	6913      	ldr	r3, [r2, #16]
     ad8:	2b00      	cmp	r3, #0
     ada:	d1fc      	bne.n	ad6 <tc_init+0x296>
     adc:	6af3      	ldr	r3, [r6, #44]	; 0x2c
     ade:	61eb      	str	r3, [r5, #28]
     ae0:	6822      	ldr	r2, [r4, #0]
     ae2:	6913      	ldr	r3, [r2, #16]
     ae4:	2b00      	cmp	r3, #0
     ae6:	d1fc      	bne.n	ae2 <tc_init+0x2a2>
     ae8:	6b33      	ldr	r3, [r6, #48]	; 0x30
     aea:	622b      	str	r3, [r5, #32]
     aec:	2000      	movs	r0, #0
     aee:	e6de      	b.n	8ae <tc_init+0x6e>
     af0:	00000805 	.word	0x00000805
     af4:	000091fc 	.word	0x000091fc
     af8:	200018b8 	.word	0x200018b8
     afc:	00004f39 	.word	0x00004f39
     b00:	00004ec9 	.word	0x00004ec9
     b04:	00005035 	.word	0x00005035
     b08:	40000800 	.word	0x40000800

00000b0c <tc_set_compare_value>:
     b0c:	b510      	push	{r4, lr}
     b0e:	6804      	ldr	r4, [r0, #0]
     b10:	6923      	ldr	r3, [r4, #16]
     b12:	2b00      	cmp	r3, #0
     b14:	d1fc      	bne.n	b10 <tc_set_compare_value+0x4>
     b16:	7903      	ldrb	r3, [r0, #4]
     b18:	2b04      	cmp	r3, #4
     b1a:	d006      	beq.n	b2a <tc_set_compare_value+0x1e>
     b1c:	2b08      	cmp	r3, #8
     b1e:	d028      	beq.n	b72 <tc_set_compare_value+0x66>
     b20:	2b00      	cmp	r3, #0
     b22:	d013      	beq.n	b4c <tc_set_compare_value+0x40>
     b24:	2317      	movs	r3, #23
     b26:	0018      	movs	r0, r3
     b28:	bd10      	pop	{r4, pc}
     b2a:	2317      	movs	r3, #23
     b2c:	2901      	cmp	r1, #1
     b2e:	d8fa      	bhi.n	b26 <tc_set_compare_value+0x1a>
     b30:	7e83      	ldrb	r3, [r0, #26]
     b32:	2b00      	cmp	r3, #0
     b34:	d005      	beq.n	b42 <tc_set_compare_value+0x36>
     b36:	b2d2      	uxtb	r2, r2
     b38:	1861      	adds	r1, r4, r1
     b3a:	3130      	adds	r1, #48	; 0x30
     b3c:	700a      	strb	r2, [r1, #0]
     b3e:	2300      	movs	r3, #0
     b40:	e7f1      	b.n	b26 <tc_set_compare_value+0x1a>
     b42:	b2d2      	uxtb	r2, r2
     b44:	1864      	adds	r4, r4, r1
     b46:	7722      	strb	r2, [r4, #28]
     b48:	2300      	movs	r3, #0
     b4a:	e7ec      	b.n	b26 <tc_set_compare_value+0x1a>
     b4c:	2317      	movs	r3, #23
     b4e:	2901      	cmp	r1, #1
     b50:	d8e9      	bhi.n	b26 <tc_set_compare_value+0x1a>
     b52:	7e83      	ldrb	r3, [r0, #26]
     b54:	2b00      	cmp	r3, #0
     b56:	d005      	beq.n	b64 <tc_set_compare_value+0x58>
     b58:	b292      	uxth	r2, r2
     b5a:	3118      	adds	r1, #24
     b5c:	0049      	lsls	r1, r1, #1
     b5e:	530a      	strh	r2, [r1, r4]
     b60:	2300      	movs	r3, #0
     b62:	e7e0      	b.n	b26 <tc_set_compare_value+0x1a>
     b64:	b292      	uxth	r2, r2
     b66:	310c      	adds	r1, #12
     b68:	0049      	lsls	r1, r1, #1
     b6a:	1864      	adds	r4, r4, r1
     b6c:	80a2      	strh	r2, [r4, #4]
     b6e:	2300      	movs	r3, #0
     b70:	e7d9      	b.n	b26 <tc_set_compare_value+0x1a>
     b72:	2317      	movs	r3, #23
     b74:	2901      	cmp	r1, #1
     b76:	d8d6      	bhi.n	b26 <tc_set_compare_value+0x1a>
     b78:	7e83      	ldrb	r3, [r0, #26]
     b7a:	2b00      	cmp	r3, #0
     b7c:	d105      	bne.n	b8a <tc_set_compare_value+0x7e>
     b7e:	3106      	adds	r1, #6
     b80:	0089      	lsls	r1, r1, #2
     b82:	1864      	adds	r4, r4, r1
     b84:	6062      	str	r2, [r4, #4]
     b86:	2300      	movs	r3, #0
     b88:	e7cd      	b.n	b26 <tc_set_compare_value+0x1a>
     b8a:	310c      	adds	r1, #12
     b8c:	0089      	lsls	r1, r1, #2
     b8e:	510a      	str	r2, [r1, r4]
     b90:	2300      	movs	r3, #0
     b92:	e7c8      	b.n	b26 <tc_set_compare_value+0x1a>

00000b94 <tc_set_top_value>:
     b94:	6802      	ldr	r2, [r0, #0]
     b96:	6913      	ldr	r3, [r2, #16]
     b98:	2b00      	cmp	r3, #0
     b9a:	d1fc      	bne.n	b96 <tc_set_top_value+0x2>
     b9c:	7903      	ldrb	r3, [r0, #4]
     b9e:	2b04      	cmp	r3, #4
     ba0:	d005      	beq.n	bae <tc_set_top_value+0x1a>
     ba2:	2b08      	cmp	r3, #8
     ba4:	d01a      	beq.n	bdc <tc_set_top_value+0x48>
     ba6:	2b00      	cmp	r3, #0
     ba8:	d00d      	beq.n	bc6 <tc_set_top_value+0x32>
     baa:	2017      	movs	r0, #23
     bac:	4770      	bx	lr
     bae:	7e83      	ldrb	r3, [r0, #26]
     bb0:	2b00      	cmp	r3, #0
     bb2:	d004      	beq.n	bbe <tc_set_top_value+0x2a>
     bb4:	b2c9      	uxtb	r1, r1
     bb6:	232f      	movs	r3, #47	; 0x2f
     bb8:	54d1      	strb	r1, [r2, r3]
     bba:	2000      	movs	r0, #0
     bbc:	e7f6      	b.n	bac <tc_set_top_value+0x18>
     bbe:	b2c9      	uxtb	r1, r1
     bc0:	76d1      	strb	r1, [r2, #27]
     bc2:	2000      	movs	r0, #0
     bc4:	e7f2      	b.n	bac <tc_set_top_value+0x18>
     bc6:	7e83      	ldrb	r3, [r0, #26]
     bc8:	2b00      	cmp	r3, #0
     bca:	d003      	beq.n	bd4 <tc_set_top_value+0x40>
     bcc:	b289      	uxth	r1, r1
     bce:	8611      	strh	r1, [r2, #48]	; 0x30
     bd0:	2000      	movs	r0, #0
     bd2:	e7eb      	b.n	bac <tc_set_top_value+0x18>
     bd4:	b289      	uxth	r1, r1
     bd6:	8391      	strh	r1, [r2, #28]
     bd8:	2000      	movs	r0, #0
     bda:	e7e7      	b.n	bac <tc_set_top_value+0x18>
     bdc:	7e83      	ldrb	r3, [r0, #26]
     bde:	2b00      	cmp	r3, #0
     be0:	d102      	bne.n	be8 <tc_set_top_value+0x54>
     be2:	61d1      	str	r1, [r2, #28]
     be4:	2000      	movs	r0, #0
     be6:	e7e1      	b.n	bac <tc_set_top_value+0x18>
     be8:	6311      	str	r1, [r2, #48]	; 0x30
     bea:	2000      	movs	r0, #0
     bec:	e7de      	b.n	bac <tc_set_top_value+0x18>
	...

00000bf0 <button_read>:
{
    //button_state |= (port_pin_get_input_level(PIN_SW2)<<1)|(!port_pin_get_input_level(PIN_SW1)<<0);
}

TIPKA button_read(void)
{
     bf0:	b510      	push	{r4, lr}
	return (port_base->IN.reg & pin_mask);
     bf2:	2282      	movs	r2, #130	; 0x82
     bf4:	05d2      	lsls	r2, r2, #23
     bf6:	6a13      	ldr	r3, [r2, #32]
     bf8:	6a12      	ldr	r2, [r2, #32]
     bfa:	0b5b      	lsrs	r3, r3, #13
     bfc:	2101      	movs	r1, #1
     bfe:	400b      	ands	r3, r1
    button_state = (port_pin_get_input_level(PIN_SW2)<<1) | (!port_pin_get_input_level(PIN_SW1)<<0);
     c00:	005b      	lsls	r3, r3, #1
     c02:	0b12      	lsrs	r2, r2, #12
     c04:	404a      	eors	r2, r1
     c06:	400a      	ands	r2, r1
     c08:	4313      	orrs	r3, r2
     c0a:	4a06      	ldr	r2, [pc, #24]	; (c24 <button_read+0x34>)
     c0c:	7013      	strb	r3, [r2, #0]

    uint8_t pressed_keys = (button_state ^ previous_button_state) & button_state;
     c0e:	4806      	ldr	r0, [pc, #24]	; (c28 <button_read+0x38>)
     c10:	7802      	ldrb	r2, [r0, #0]
     c12:	001c      	movs	r4, r3
     c14:	4394      	bics	r4, r2
    uint8_t released_keys = (button_state ^ previous_button_state) & previous_button_state;
    previous_button_state=button_state;
     c16:	7003      	strb	r3, [r0, #0]
    if(pressed_keys & (1<<0)) {
        return BUTTON_1;
     c18:	2001      	movs	r0, #1
    if(pressed_keys & (1<<0)) {
     c1a:	4221      	tst	r1, r4
     c1c:	d101      	bne.n	c22 <button_read+0x32>
    if(pressed_keys & (1<<1)) {
        return BUTTON_2;
    }

    pressed_keys &=~(released_keys);
    return BUTTON_NONE;
     c1e:	0862      	lsrs	r2, r4, #1
     c20:	0050      	lsls	r0, r2, #1
    if((button_state>>1)&1) {
        button_state &=~(1<<1);
        return BUTTON_2;
    }
    return BUTTON_NONE;*/
     c22:	bd10      	pop	{r4, pc}
     c24:	200000c0 	.word	0x200000c0
     c28:	200000c1 	.word	0x200000c1

00000c2c <delay_init>:
     c2c:	b570      	push	{r4, r5, r6, lr}
     c2e:	2000      	movs	r0, #0
     c30:	4b08      	ldr	r3, [pc, #32]	; (c54 <delay_init+0x28>)
     c32:	4798      	blx	r3
     c34:	0005      	movs	r5, r0
     c36:	4c08      	ldr	r4, [pc, #32]	; (c58 <delay_init+0x2c>)
     c38:	21fa      	movs	r1, #250	; 0xfa
     c3a:	0089      	lsls	r1, r1, #2
     c3c:	47a0      	blx	r4
     c3e:	4b07      	ldr	r3, [pc, #28]	; (c5c <delay_init+0x30>)
     c40:	6018      	str	r0, [r3, #0]
     c42:	4907      	ldr	r1, [pc, #28]	; (c60 <delay_init+0x34>)
     c44:	0028      	movs	r0, r5
     c46:	47a0      	blx	r4
     c48:	4b06      	ldr	r3, [pc, #24]	; (c64 <delay_init+0x38>)
     c4a:	6018      	str	r0, [r3, #0]
     c4c:	2205      	movs	r2, #5
     c4e:	4b06      	ldr	r3, [pc, #24]	; (c68 <delay_init+0x3c>)
     c50:	601a      	str	r2, [r3, #0]
     c52:	bd70      	pop	{r4, r5, r6, pc}
     c54:	00004e5d 	.word	0x00004e5d
     c58:	00006269 	.word	0x00006269
     c5c:	2000000c 	.word	0x2000000c
     c60:	000f4240 	.word	0x000f4240
     c64:	20000010 	.word	0x20000010
     c68:	e000e010 	.word	0xe000e010

00000c6c <ac_init>:
 *                          application
 */
enum status_code ac_init(
    struct ac_module *const module_inst,
    Ac *const hw,
    struct ac_config *const config) {
     c6c:	b510      	push	{r4, lr}
     c6e:	b082      	sub	sp, #8
    Assert(module_inst);
    Assert(hw);
    Assert(config);

    /* Initialize device instance */
    module_inst->hw = hw;
     c70:	6001      	str	r1, [r0, #0]
		case SYSTEM_CLOCK_APB_APBB:
			MCLK->APBBMASK.reg |= mask;
			break;

		case SYSTEM_CLOCK_APB_APBC:
			MCLK->APBCMASK.reg |= mask;
     c72:	490e      	ldr	r1, [pc, #56]	; (cac <ac_init+0x40>)
     c74:	69cc      	ldr	r4, [r1, #28]
     c76:	2380      	movs	r3, #128	; 0x80
     c78:	035b      	lsls	r3, r3, #13
     c7a:	4323      	orrs	r3, r4
     c7c:	61cb      	str	r3, [r1, #28]
#endif

#if AC_CALLBACK_MODE == true
    /* Initialize parameters */
    for (uint8_t i = 0; i < AC_CALLBACK_N; i++) {
        module_inst->callback[i]        = NULL;
     c7e:	2300      	movs	r3, #0
     c80:	6043      	str	r3, [r0, #4]
     c82:	6083      	str	r3, [r0, #8]
     c84:	60c3      	str	r3, [r0, #12]
     c86:	6103      	str	r3, [r0, #16]
     c88:	6143      	str	r3, [r0, #20]
     c8a:	6183      	str	r3, [r0, #24]
    }

    /* Initialize software flags*/
    module_inst->register_callback_mask = 0x00;
     c8c:	7703      	strb	r3, [r0, #28]
    module_inst->enable_callback_mask   = 0x00;
     c8e:	7743      	strb	r3, [r0, #29]

#  if (AC_INST_NUM == 1)
    _ac_instance[0] = module_inst;
     c90:	4b07      	ldr	r3, [pc, #28]	; (cb0 <ac_init+0x44>)
     c92:	6018      	str	r0, [r3, #0]
    gclk_chan_conf.source_generator = config->source_generator;
     c94:	a901      	add	r1, sp, #4
     c96:	7813      	ldrb	r3, [r2, #0]
     c98:	700b      	strb	r3, [r1, #0]
    system_gclk_chan_set_config(AC_GCLK_ID, &gclk_chan_conf);
     c9a:	2028      	movs	r0, #40	; 0x28
     c9c:	4b05      	ldr	r3, [pc, #20]	; (cb4 <ac_init+0x48>)
     c9e:	4798      	blx	r3
    system_gclk_chan_enable(AC_GCLK_ID);
     ca0:	2028      	movs	r0, #40	; 0x28
     ca2:	4b05      	ldr	r3, [pc, #20]	; (cb8 <ac_init+0x4c>)
     ca4:	4798      	blx	r3
#  endif
#endif

    /* Write configuration to module */
    return _ac_set_config(module_inst, config);
}
     ca6:	2000      	movs	r0, #0
     ca8:	b002      	add	sp, #8
     caa:	bd10      	pop	{r4, pc}
     cac:	40000800 	.word	0x40000800
     cb0:	20001d98 	.word	0x20001d98
     cb4:	00004f39 	.word	0x00004f39
     cb8:	00004ec9 	.word	0x00004ec9

00000cbc <ac_chan_set_config>:
 *  \param[in] config       Pointer to the channel configuration struct
 */
enum status_code ac_chan_set_config(
    struct ac_module *const module_inst,
    const enum ac_chan_channel channel,
    struct ac_chan_config *const config) {
     cbc:	b570      	push	{r4, r5, r6, lr}
    /* Sanity check arguments */
    Assert(module_inst);
    Assert(module_inst->hw);
    Assert(config);

    Ac *const ac_module = module_inst->hw;
     cbe:	6800      	ldr	r0, [r0, #0]

    /* Use a temporary variable to compute the comparator configuration */
    uint32_t compctrl_temp = 0;

    /* Enable output filter mode */
    compctrl_temp |= config->filter;
     cc0:	6854      	ldr	r4, [r2, #4]

    /* Comparators should be enabled during sleep */
    if (config->run_in_standby == true) {
     cc2:	7a53      	ldrb	r3, [r2, #9]
    compctrl_temp |= config->filter;
     cc4:	0025      	movs	r5, r4
    if (config->run_in_standby == true) {
     cc6:	2b00      	cmp	r3, #0
     cc8:	d001      	beq.n	cce <ac_chan_set_config+0x12>
        compctrl_temp |= AC_COMPCTRL_RUNSTDBY;
     cca:	2540      	movs	r5, #64	; 0x40
     ccc:	4325      	orrs	r5, r4

    /* Set sampling mode (single shot or continuous) */
    compctrl_temp |= config->sample_mode;

    /* Set channel interrupt selection */
    compctrl_temp |= config->interrupt_selection;
     cce:	7813      	ldrb	r3, [r2, #0]
     cd0:	7d54      	ldrb	r4, [r2, #21]
     cd2:	4323      	orrs	r3, r4
        (uint32_t)config->positive_input |
     cd4:	8a14      	ldrh	r4, [r2, #16]
     cd6:	8a56      	ldrh	r6, [r2, #18]
     cd8:	4334      	orrs	r4, r6
    compctrl_temp |= config->interrupt_selection;
     cda:	4323      	orrs	r3, r4
     cdc:	68d4      	ldr	r4, [r2, #12]
     cde:	4323      	orrs	r3, r4
     ce0:	432b      	orrs	r3, r5
    Assert(module_inst);

    Ac *const ac_module = module_inst->hw;

#ifdef FEATURE_AC_SYNCBUSY_SCHEME_VERSION_2
    if (ac_module->SYNCBUSY.reg & AC_SYNCBUSY_MASK) {
     ce2:	257f      	movs	r5, #127	; 0x7f
     ce4:	6a04      	ldr	r4, [r0, #32]

    while (ac_is_syncing(module_inst)) {
     ce6:	4225      	tst	r5, r4
     ce8:	d1fc      	bne.n	ce4 <ac_chan_set_config+0x28>
        /* Wait until synchronization is complete */
    }

    /* Write the final configuration to the module's control register */
    ac_module->COMPCTRL[(uint8_t)channel].reg = compctrl_temp;
     cea:	1d0c      	adds	r4, r1, #4
     cec:	00a4      	lsls	r4, r4, #2
     cee:	5023      	str	r3, [r4, r0]

    /* Configure VCC voltage scaling for the comparator */
    ac_module->SCALER[(uint8_t)channel].reg   = config->vcc_scale_factor - 1;
     cf0:	7d13      	ldrb	r3, [r2, #20]
     cf2:	3b01      	subs	r3, #1
     cf4:	b2db      	uxtb	r3, r3
     cf6:	1840      	adds	r0, r0, r1
     cf8:	7303      	strb	r3, [r0, #12]

    return STATUS_OK;
}
     cfa:	2000      	movs	r0, #0
     cfc:	bd70      	pop	{r4, r5, r6, pc}
	...

00000d00 <_adc_get_inst_index>:
     d00:	4b06      	ldr	r3, [pc, #24]	; (d1c <_adc_get_inst_index+0x1c>)
     d02:	4298      	cmp	r0, r3
     d04:	d008      	beq.n	d18 <_adc_get_inst_index+0x18>
     d06:	4a06      	ldr	r2, [pc, #24]	; (d20 <_adc_get_inst_index+0x20>)
     d08:	2300      	movs	r3, #0
     d0a:	4290      	cmp	r0, r2
     d0c:	d001      	beq.n	d12 <_adc_get_inst_index+0x12>
     d0e:	0018      	movs	r0, r3
     d10:	4770      	bx	lr
     d12:	3301      	adds	r3, #1
     d14:	b2db      	uxtb	r3, r3
     d16:	e7fa      	b.n	d0e <_adc_get_inst_index+0xe>
     d18:	2300      	movs	r3, #0
     d1a:	e7fb      	b.n	d14 <_adc_get_inst_index+0x14>
     d1c:	42004400 	.word	0x42004400
     d20:	42004800 	.word	0x42004800

00000d24 <adc_get_config_defaults>:
     d24:	b510      	push	{r4, lr}
     d26:	2300      	movs	r3, #0
     d28:	2200      	movs	r2, #0
     d2a:	7003      	strb	r3, [r0, #0]
     d2c:	7043      	strb	r3, [r0, #1]
     d2e:	7083      	strb	r3, [r0, #2]
     d30:	70c3      	strb	r3, [r0, #3]
     d32:	2100      	movs	r1, #0
     d34:	8303      	strh	r3, [r0, #24]
     d36:	6203      	str	r3, [r0, #32]
     d38:	61c3      	str	r3, [r0, #28]
     d3a:	2401      	movs	r4, #1
     d3c:	7104      	strb	r4, [r0, #4]
     d3e:	24c0      	movs	r4, #192	; 0xc0
     d40:	0164      	lsls	r4, r4, #5
     d42:	80c4      	strh	r4, [r0, #6]
     d44:	7201      	strb	r1, [r0, #8]
     d46:	7242      	strb	r2, [r0, #9]
     d48:	7282      	strb	r2, [r0, #10]
     d4a:	72c2      	strb	r2, [r0, #11]
     d4c:	7302      	strb	r2, [r0, #12]
     d4e:	242a      	movs	r4, #42	; 0x2a
     d50:	5502      	strb	r2, [r0, r4]
     d52:	7342      	strb	r2, [r0, #13]
     d54:	7382      	strb	r2, [r0, #14]
     d56:	73c2      	strb	r2, [r0, #15]
     d58:	6103      	str	r3, [r0, #16]
     d5a:	7502      	strb	r2, [r0, #20]
     d5c:	3c06      	subs	r4, #6
     d5e:	5502      	strb	r2, [r0, r4]
     d60:	84c3      	strh	r3, [r0, #38]	; 0x26
     d62:	8503      	strh	r3, [r0, #40]	; 0x28
     d64:	7541      	strb	r1, [r0, #21]
     d66:	bd10      	pop	{r4, pc}

00000d68 <adc_set_window_mode>:
     d68:	b570      	push	{r4, r5, r6, lr}
     d6a:	6805      	ldr	r5, [r0, #0]
     d6c:	8c2c      	ldrh	r4, [r5, #32]
     d6e:	b2a4      	uxth	r4, r4
     d70:	2c00      	cmp	r4, #0
     d72:	d1fb      	bne.n	d6c <adc_set_window_mode+0x4>
     d74:	896c      	ldrh	r4, [r5, #10]
     d76:	4e0c      	ldr	r6, [pc, #48]	; (da8 <adc_set_window_mode+0x40>)
     d78:	4034      	ands	r4, r6
     d7a:	4321      	orrs	r1, r4
     d7c:	8169      	strh	r1, [r5, #10]
     d7e:	6804      	ldr	r4, [r0, #0]
     d80:	8c21      	ldrh	r1, [r4, #32]
     d82:	b289      	uxth	r1, r1
     d84:	2900      	cmp	r1, #0
     d86:	d1fb      	bne.n	d80 <adc_set_window_mode+0x18>
     d88:	b292      	uxth	r2, r2
     d8a:	81ea      	strh	r2, [r5, #14]
     d8c:	6801      	ldr	r1, [r0, #0]
     d8e:	8c0a      	ldrh	r2, [r1, #32]
     d90:	b292      	uxth	r2, r2
     d92:	2a00      	cmp	r2, #0
     d94:	d1fb      	bne.n	d8e <adc_set_window_mode+0x26>
     d96:	b29b      	uxth	r3, r3
     d98:	822b      	strh	r3, [r5, #16]
     d9a:	6802      	ldr	r2, [r0, #0]
     d9c:	8c13      	ldrh	r3, [r2, #32]
     d9e:	b29b      	uxth	r3, r3
     da0:	2b00      	cmp	r3, #0
     da2:	d1fb      	bne.n	d9c <adc_set_window_mode+0x34>
     da4:	bd70      	pop	{r4, r5, r6, pc}
     da6:	46c0      	nop			; (mov r8, r8)
     da8:	fffff8ff 	.word	0xfffff8ff

00000dac <adc_init>:
     dac:	b5f0      	push	{r4, r5, r6, r7, lr}
     dae:	46de      	mov	lr, fp
     db0:	4657      	mov	r7, sl
     db2:	464e      	mov	r6, r9
     db4:	4645      	mov	r5, r8
     db6:	b5e0      	push	{r5, r6, r7, lr}
     db8:	b09f      	sub	sp, #124	; 0x7c
     dba:	0005      	movs	r5, r0
     dbc:	000e      	movs	r6, r1
     dbe:	0017      	movs	r7, r2
     dc0:	0008      	movs	r0, r1
     dc2:	4b98      	ldr	r3, [pc, #608]	; (1024 <adc_init+0x278>)
     dc4:	4798      	blx	r3
     dc6:	0004      	movs	r4, r0
     dc8:	9001      	str	r0, [sp, #4]
     dca:	602e      	str	r6, [r5, #0]
     dcc:	4a96      	ldr	r2, [pc, #600]	; (1028 <adc_init+0x27c>)
     dce:	69d3      	ldr	r3, [r2, #28]
     dd0:	0080      	lsls	r0, r0, #2
     dd2:	4996      	ldr	r1, [pc, #600]	; (102c <adc_init+0x280>)
     dd4:	5841      	ldr	r1, [r0, r1]
     dd6:	430b      	orrs	r3, r1
     dd8:	61d3      	str	r3, [r2, #28]
     dda:	7833      	ldrb	r3, [r6, #0]
     ddc:	2005      	movs	r0, #5
     dde:	07db      	lsls	r3, r3, #31
     de0:	d506      	bpl.n	df0 <adc_init+0x44>
     de2:	b01f      	add	sp, #124	; 0x7c
     de4:	bc3c      	pop	{r2, r3, r4, r5}
     de6:	4690      	mov	r8, r2
     de8:	4699      	mov	r9, r3
     dea:	46a2      	mov	sl, r4
     dec:	46ab      	mov	fp, r5
     dee:	bdf0      	pop	{r4, r5, r6, r7, pc}
     df0:	682a      	ldr	r2, [r5, #0]
     df2:	8c13      	ldrh	r3, [r2, #32]
     df4:	b29b      	uxth	r3, r3
     df6:	2b00      	cmp	r3, #0
     df8:	d1fb      	bne.n	df2 <adc_init+0x46>
     dfa:	7833      	ldrb	r3, [r6, #0]
     dfc:	201c      	movs	r0, #28
     dfe:	079b      	lsls	r3, r3, #30
     e00:	d4ef      	bmi.n	de2 <adc_init+0x36>
     e02:	787b      	ldrb	r3, [r7, #1]
     e04:	712b      	strb	r3, [r5, #4]
     e06:	2b00      	cmp	r3, #0
     e08:	d104      	bne.n	e14 <adc_init+0x68>
     e0a:	4a89      	ldr	r2, [pc, #548]	; (1030 <adc_init+0x284>)
     e0c:	69d3      	ldr	r3, [r2, #28]
     e0e:	2104      	movs	r1, #4
     e10:	430b      	orrs	r3, r1
     e12:	61d3      	str	r3, [r2, #28]
     e14:	2300      	movs	r3, #0
     e16:	60ab      	str	r3, [r5, #8]
     e18:	60eb      	str	r3, [r5, #12]
     e1a:	612b      	str	r3, [r5, #16]
     e1c:	76ab      	strb	r3, [r5, #26]
     e1e:	76eb      	strb	r3, [r5, #27]
     e20:	832b      	strh	r3, [r5, #24]
     e22:	772b      	strb	r3, [r5, #28]
     e24:	00a3      	lsls	r3, r4, #2
     e26:	4a83      	ldr	r2, [pc, #524]	; (1034 <adc_init+0x288>)
     e28:	509d      	str	r5, [r3, r2]
     e2a:	232a      	movs	r3, #42	; 0x2a
     e2c:	5cfb      	ldrb	r3, [r7, r3]
     e2e:	2b00      	cmp	r3, #0
     e30:	d105      	bne.n	e3e <adc_init+0x92>
     e32:	7b3b      	ldrb	r3, [r7, #12]
     e34:	2b00      	cmp	r3, #0
     e36:	d102      	bne.n	e3e <adc_init+0x92>
     e38:	3301      	adds	r3, #1
     e3a:	776b      	strb	r3, [r5, #29]
     e3c:	e001      	b.n	e42 <adc_init+0x96>
     e3e:	2300      	movs	r3, #0
     e40:	776b      	strb	r3, [r5, #29]
     e42:	682b      	ldr	r3, [r5, #0]
     e44:	469a      	mov	sl, r3
     e46:	783b      	ldrb	r3, [r7, #0]
     e48:	aa04      	add	r2, sp, #16
     e4a:	7013      	strb	r3, [r2, #0]
     e4c:	4b7a      	ldr	r3, [pc, #488]	; (1038 <adc_init+0x28c>)
     e4e:	5d1e      	ldrb	r6, [r3, r4]
     e50:	0011      	movs	r1, r2
     e52:	0030      	movs	r0, r6
     e54:	4b79      	ldr	r3, [pc, #484]	; (103c <adc_init+0x290>)
     e56:	4798      	blx	r3
     e58:	0030      	movs	r0, r6
     e5a:	4b79      	ldr	r3, [pc, #484]	; (1040 <adc_init+0x294>)
     e5c:	4798      	blx	r3
     e5e:	793b      	ldrb	r3, [r7, #4]
     e60:	4698      	mov	r8, r3
     e62:	ae06      	add	r6, sp, #24
     e64:	4b77      	ldr	r3, [pc, #476]	; (1044 <adc_init+0x298>)
     e66:	469c      	mov	ip, r3
     e68:	0032      	movs	r2, r6
     e6a:	0019      	movs	r1, r3
     e6c:	c949      	ldmia	r1!, {r0, r3, r6}
     e6e:	c249      	stmia	r2!, {r0, r3, r6}
     e70:	c949      	ldmia	r1!, {r0, r3, r6}
     e72:	c249      	stmia	r2!, {r0, r3, r6}
     e74:	c949      	ldmia	r1!, {r0, r3, r6}
     e76:	c249      	stmia	r2!, {r0, r3, r6}
     e78:	c949      	ldmia	r1!, {r0, r3, r6}
     e7a:	c249      	stmia	r2!, {r0, r3, r6}
     e7c:	a912      	add	r1, sp, #72	; 0x48
     e7e:	4663      	mov	r3, ip
     e80:	3330      	adds	r3, #48	; 0x30
     e82:	000a      	movs	r2, r1
     e84:	cb43      	ldmia	r3!, {r0, r1, r6}
     e86:	c243      	stmia	r2!, {r0, r1, r6}
     e88:	cb43      	ldmia	r3!, {r0, r1, r6}
     e8a:	c243      	stmia	r2!, {r0, r1, r6}
     e8c:	cb43      	ldmia	r3!, {r0, r1, r6}
     e8e:	c243      	stmia	r2!, {r0, r1, r6}
     e90:	cb43      	ldmia	r3!, {r0, r1, r6}
     e92:	c243      	stmia	r2!, {r0, r1, r6}
     e94:	9b01      	ldr	r3, [sp, #4]
     e96:	2b00      	cmp	r3, #0
     e98:	d004      	beq.n	ea4 <adc_init+0xf8>
     e9a:	a912      	add	r1, sp, #72	; 0x48
     e9c:	2b01      	cmp	r3, #1
     e9e:	d002      	beq.n	ea6 <adc_init+0xfa>
     ea0:	2100      	movs	r1, #0
     ea2:	e000      	b.n	ea6 <adc_init+0xfa>
     ea4:	a906      	add	r1, sp, #24
     ea6:	00a3      	lsls	r3, r4, #2
     ea8:	4a67      	ldr	r2, [pc, #412]	; (1048 <adc_init+0x29c>)
     eaa:	589b      	ldr	r3, [r3, r2]
     eac:	469b      	mov	fp, r3
     eae:	4598      	cmp	r8, r3
     eb0:	d922      	bls.n	ef8 <adc_init+0x14c>
     eb2:	88fb      	ldrh	r3, [r7, #6]
     eb4:	4698      	mov	r8, r3
     eb6:	ae06      	add	r6, sp, #24
     eb8:	4b62      	ldr	r3, [pc, #392]	; (1044 <adc_init+0x298>)
     eba:	469c      	mov	ip, r3
     ebc:	0032      	movs	r2, r6
     ebe:	0019      	movs	r1, r3
     ec0:	c949      	ldmia	r1!, {r0, r3, r6}
     ec2:	c249      	stmia	r2!, {r0, r3, r6}
     ec4:	c949      	ldmia	r1!, {r0, r3, r6}
     ec6:	c249      	stmia	r2!, {r0, r3, r6}
     ec8:	c949      	ldmia	r1!, {r0, r3, r6}
     eca:	c249      	stmia	r2!, {r0, r3, r6}
     ecc:	c949      	ldmia	r1!, {r0, r3, r6}
     ece:	c249      	stmia	r2!, {r0, r3, r6}
     ed0:	a912      	add	r1, sp, #72	; 0x48
     ed2:	4663      	mov	r3, ip
     ed4:	3330      	adds	r3, #48	; 0x30
     ed6:	000a      	movs	r2, r1
     ed8:	cb43      	ldmia	r3!, {r0, r1, r6}
     eda:	c243      	stmia	r2!, {r0, r1, r6}
     edc:	cb43      	ldmia	r3!, {r0, r1, r6}
     ede:	c243      	stmia	r2!, {r0, r1, r6}
     ee0:	cb43      	ldmia	r3!, {r0, r1, r6}
     ee2:	c243      	stmia	r2!, {r0, r1, r6}
     ee4:	cb43      	ldmia	r3!, {r0, r1, r6}
     ee6:	c243      	stmia	r2!, {r0, r1, r6}
     ee8:	9a01      	ldr	r2, [sp, #4]
     eea:	2a00      	cmp	r2, #0
     eec:	d012      	beq.n	f14 <adc_init+0x168>
     eee:	ab12      	add	r3, sp, #72	; 0x48
     ef0:	2a01      	cmp	r2, #1
     ef2:	d010      	beq.n	f16 <adc_init+0x16a>
     ef4:	2300      	movs	r3, #0
     ef6:	e00e      	b.n	f16 <adc_init+0x16a>
     ef8:	4643      	mov	r3, r8
     efa:	0098      	lsls	r0, r3, #2
     efc:	5840      	ldr	r0, [r0, r1]
     efe:	a905      	add	r1, sp, #20
     f00:	2300      	movs	r3, #0
     f02:	704b      	strb	r3, [r1, #1]
     f04:	70cb      	strb	r3, [r1, #3]
     f06:	708b      	strb	r3, [r1, #2]
     f08:	3301      	adds	r3, #1
     f0a:	700b      	strb	r3, [r1, #0]
     f0c:	b2c0      	uxtb	r0, r0
     f0e:	4b4f      	ldr	r3, [pc, #316]	; (104c <adc_init+0x2a0>)
     f10:	4798      	blx	r3
     f12:	e7ce      	b.n	eb2 <adc_init+0x106>
     f14:	ab06      	add	r3, sp, #24
     f16:	45d8      	cmp	r8, fp
     f18:	d90a      	bls.n	f30 <adc_init+0x184>
     f1a:	2100      	movs	r1, #0
     f1c:	2600      	movs	r6, #0
     f1e:	2301      	movs	r3, #1
     f20:	4699      	mov	r9, r3
     f22:	4b48      	ldr	r3, [pc, #288]	; (1044 <adc_init+0x298>)
     f24:	4698      	mov	r8, r3
     f26:	9403      	str	r4, [sp, #12]
     f28:	465b      	mov	r3, fp
     f2a:	9302      	str	r3, [sp, #8]
     f2c:	46ab      	mov	fp, r5
     f2e:	e020      	b.n	f72 <adc_init+0x1c6>
     f30:	4642      	mov	r2, r8
     f32:	0090      	lsls	r0, r2, #2
     f34:	58c0      	ldr	r0, [r0, r3]
     f36:	a905      	add	r1, sp, #20
     f38:	2300      	movs	r3, #0
     f3a:	704b      	strb	r3, [r1, #1]
     f3c:	70cb      	strb	r3, [r1, #3]
     f3e:	708b      	strb	r3, [r1, #2]
     f40:	3301      	adds	r3, #1
     f42:	700b      	strb	r3, [r1, #0]
     f44:	b2c0      	uxtb	r0, r0
     f46:	4b41      	ldr	r3, [pc, #260]	; (104c <adc_init+0x2a0>)
     f48:	4798      	blx	r3
     f4a:	e7e6      	b.n	f1a <adc_init+0x16e>
     f4c:	ab06      	add	r3, sp, #24
     f4e:	0089      	lsls	r1, r1, #2
     f50:	58c8      	ldr	r0, [r1, r3]
     f52:	a905      	add	r1, sp, #20
     f54:	2300      	movs	r3, #0
     f56:	704b      	strb	r3, [r1, #1]
     f58:	70cb      	strb	r3, [r1, #3]
     f5a:	708b      	strb	r3, [r1, #2]
     f5c:	464b      	mov	r3, r9
     f5e:	700b      	strb	r3, [r1, #0]
     f60:	b2c0      	uxtb	r0, r0
     f62:	4b3a      	ldr	r3, [pc, #232]	; (104c <adc_init+0x2a0>)
     f64:	4798      	blx	r3
     f66:	3601      	adds	r6, #1
     f68:	b2f6      	uxtb	r6, r6
     f6a:	0031      	movs	r1, r6
     f6c:	9b02      	ldr	r3, [sp, #8]
     f6e:	429e      	cmp	r6, r3
     f70:	d823      	bhi.n	fba <adc_init+0x20e>
     f72:	464b      	mov	r3, r9
     f74:	40b3      	lsls	r3, r6
     f76:	693a      	ldr	r2, [r7, #16]
     f78:	421a      	tst	r2, r3
     f7a:	d0f4      	beq.n	f66 <adc_init+0x1ba>
     f7c:	a806      	add	r0, sp, #24
     f7e:	0003      	movs	r3, r0
     f80:	4642      	mov	r2, r8
     f82:	ca31      	ldmia	r2!, {r0, r4, r5}
     f84:	c331      	stmia	r3!, {r0, r4, r5}
     f86:	ca31      	ldmia	r2!, {r0, r4, r5}
     f88:	c331      	stmia	r3!, {r0, r4, r5}
     f8a:	ca31      	ldmia	r2!, {r0, r4, r5}
     f8c:	c331      	stmia	r3!, {r0, r4, r5}
     f8e:	ca31      	ldmia	r2!, {r0, r4, r5}
     f90:	c331      	stmia	r3!, {r0, r4, r5}
     f92:	a812      	add	r0, sp, #72	; 0x48
     f94:	4643      	mov	r3, r8
     f96:	3330      	adds	r3, #48	; 0x30
     f98:	0002      	movs	r2, r0
     f9a:	cb31      	ldmia	r3!, {r0, r4, r5}
     f9c:	c231      	stmia	r2!, {r0, r4, r5}
     f9e:	cb31      	ldmia	r3!, {r0, r4, r5}
     fa0:	c231      	stmia	r2!, {r0, r4, r5}
     fa2:	cb31      	ldmia	r3!, {r0, r4, r5}
     fa4:	c231      	stmia	r2!, {r0, r4, r5}
     fa6:	cb31      	ldmia	r3!, {r0, r4, r5}
     fa8:	c231      	stmia	r2!, {r0, r4, r5}
     faa:	9a01      	ldr	r2, [sp, #4]
     fac:	2a00      	cmp	r2, #0
     fae:	d0cd      	beq.n	f4c <adc_init+0x1a0>
     fb0:	ab12      	add	r3, sp, #72	; 0x48
     fb2:	2a01      	cmp	r2, #1
     fb4:	d0cb      	beq.n	f4e <adc_init+0x1a2>
     fb6:	2300      	movs	r3, #0
     fb8:	e7c9      	b.n	f4e <adc_init+0x1a2>
     fba:	465d      	mov	r5, fp
     fbc:	9c03      	ldr	r4, [sp, #12]
     fbe:	7b7b      	ldrb	r3, [r7, #13]
     fc0:	019b      	lsls	r3, r3, #6
     fc2:	7bba      	ldrb	r2, [r7, #14]
     fc4:	01d2      	lsls	r2, r2, #7
     fc6:	4313      	orrs	r3, r2
     fc8:	b2db      	uxtb	r3, r3
     fca:	4652      	mov	r2, sl
     fcc:	7013      	strb	r3, [r2, #0]
     fce:	7d3b      	ldrb	r3, [r7, #20]
     fd0:	01db      	lsls	r3, r3, #7
     fd2:	787a      	ldrb	r2, [r7, #1]
     fd4:	4313      	orrs	r3, r2
     fd6:	b2db      	uxtb	r3, r3
     fd8:	4652      	mov	r2, sl
     fda:	7093      	strb	r3, [r2, #2]
     fdc:	78fb      	ldrb	r3, [r7, #3]
     fde:	2b34      	cmp	r3, #52	; 0x34
     fe0:	d900      	bls.n	fe4 <adc_init+0x238>
     fe2:	e14f      	b.n	1284 <adc_init+0x4d8>
     fe4:	009b      	lsls	r3, r3, #2
     fe6:	4a1a      	ldr	r2, [pc, #104]	; (1050 <adc_init+0x2a4>)
     fe8:	58d3      	ldr	r3, [r2, r3]
     fea:	469f      	mov	pc, r3
     fec:	2204      	movs	r2, #4
     fee:	2610      	movs	r6, #16
     ff0:	2102      	movs	r1, #2
     ff2:	e032      	b.n	105a <adc_init+0x2ae>
     ff4:	7a79      	ldrb	r1, [r7, #9]
     ff6:	7a3a      	ldrb	r2, [r7, #8]
     ff8:	2610      	movs	r6, #16
     ffa:	e02e      	b.n	105a <adc_init+0x2ae>
     ffc:	2206      	movs	r2, #6
     ffe:	2610      	movs	r6, #16
    1000:	2101      	movs	r1, #1
    1002:	e02a      	b.n	105a <adc_init+0x2ae>
    1004:	2208      	movs	r2, #8
    1006:	2610      	movs	r6, #16
    1008:	2100      	movs	r1, #0
    100a:	e026      	b.n	105a <adc_init+0x2ae>
    100c:	2200      	movs	r2, #0
    100e:	2630      	movs	r6, #48	; 0x30
    1010:	2100      	movs	r1, #0
    1012:	e022      	b.n	105a <adc_init+0x2ae>
    1014:	2200      	movs	r2, #0
    1016:	2620      	movs	r6, #32
    1018:	2100      	movs	r1, #0
    101a:	e01e      	b.n	105a <adc_init+0x2ae>
    101c:	2200      	movs	r2, #0
    101e:	2600      	movs	r6, #0
    1020:	2100      	movs	r1, #0
    1022:	e01a      	b.n	105a <adc_init+0x2ae>
    1024:	00000d01 	.word	0x00000d01
    1028:	40000800 	.word	0x40000800
    102c:	0000936c 	.word	0x0000936c
    1030:	40001800 	.word	0x40001800
    1034:	200018cc 	.word	0x200018cc
    1038:	00009394 	.word	0x00009394
    103c:	00004f39 	.word	0x00004f39
    1040:	00004ec9 	.word	0x00004ec9
    1044:	0000930c 	.word	0x0000930c
    1048:	0000938c 	.word	0x0000938c
    104c:	00005035 	.word	0x00005035
    1050:	00009238 	.word	0x00009238
    1054:	2202      	movs	r2, #2
    1056:	2610      	movs	r6, #16
    1058:	2101      	movs	r1, #1
    105a:	0109      	lsls	r1, r1, #4
    105c:	2370      	movs	r3, #112	; 0x70
    105e:	400b      	ands	r3, r1
    1060:	4313      	orrs	r3, r2
    1062:	4652      	mov	r2, sl
    1064:	7313      	strb	r3, [r2, #12]
    1066:	682a      	ldr	r2, [r5, #0]
    1068:	8c13      	ldrh	r3, [r2, #32]
    106a:	b29b      	uxth	r3, r3
    106c:	2b00      	cmp	r3, #0
    106e:	d1fb      	bne.n	1068 <adc_init+0x2bc>
    1070:	7d7b      	ldrb	r3, [r7, #21]
    1072:	2017      	movs	r0, #23
    1074:	2b3f      	cmp	r3, #63	; 0x3f
    1076:	d900      	bls.n	107a <adc_init+0x2ce>
    1078:	e6b3      	b.n	de2 <adc_init+0x36>
    107a:	7bfa      	ldrb	r2, [r7, #15]
    107c:	01d2      	lsls	r2, r2, #7
    107e:	4313      	orrs	r3, r2
    1080:	b2db      	uxtb	r3, r3
    1082:	4652      	mov	r2, sl
    1084:	7353      	strb	r3, [r2, #13]
    1086:	682a      	ldr	r2, [r5, #0]
    1088:	8c13      	ldrh	r3, [r2, #32]
    108a:	b29b      	uxth	r3, r3
    108c:	2b00      	cmp	r3, #0
    108e:	d1fb      	bne.n	1088 <adc_init+0x2dc>
    1090:	78bb      	ldrb	r3, [r7, #2]
    1092:	4652      	mov	r2, sl
    1094:	7053      	strb	r3, [r2, #1]
    1096:	2324      	movs	r3, #36	; 0x24
    1098:	5cfb      	ldrb	r3, [r7, r3]
    109a:	00db      	lsls	r3, r3, #3
    109c:	7b3a      	ldrb	r2, [r7, #12]
    109e:	0092      	lsls	r2, r2, #2
    10a0:	431a      	orrs	r2, r3
    10a2:	7afb      	ldrb	r3, [r7, #11]
    10a4:	4313      	orrs	r3, r2
    10a6:	7aba      	ldrb	r2, [r7, #10]
    10a8:	0052      	lsls	r2, r2, #1
    10aa:	4313      	orrs	r3, r2
    10ac:	4333      	orrs	r3, r6
    10ae:	4652      	mov	r2, sl
    10b0:	8153      	strh	r3, [r2, #10]
    10b2:	682a      	ldr	r2, [r5, #0]
    10b4:	8c13      	ldrh	r3, [r2, #32]
    10b6:	b29b      	uxth	r3, r3
    10b8:	2b00      	cmp	r3, #0
    10ba:	d1fb      	bne.n	10b4 <adc_init+0x308>
    10bc:	8b3b      	ldrh	r3, [r7, #24]
    10be:	2b00      	cmp	r3, #0
    10c0:	d020      	beq.n	1104 <adc_init+0x358>
    10c2:	2e10      	cmp	r6, #16
    10c4:	d100      	bne.n	10c8 <adc_init+0x31c>
    10c6:	e0bf      	b.n	1248 <adc_init+0x49c>
    10c8:	d800      	bhi.n	10cc <adc_init+0x320>
    10ca:	e07f      	b.n	11cc <adc_init+0x420>
    10cc:	2e20      	cmp	r6, #32
    10ce:	d100      	bne.n	10d2 <adc_init+0x326>
    10d0:	e09c      	b.n	120c <adc_init+0x460>
    10d2:	2e30      	cmp	r6, #48	; 0x30
    10d4:	d116      	bne.n	1104 <adc_init+0x358>
    10d6:	7afa      	ldrb	r2, [r7, #11]
    10d8:	2a00      	cmp	r2, #0
    10da:	d00a      	beq.n	10f2 <adc_init+0x346>
    10dc:	69fa      	ldr	r2, [r7, #28]
    10de:	3280      	adds	r2, #128	; 0x80
    10e0:	2017      	movs	r0, #23
    10e2:	2aff      	cmp	r2, #255	; 0xff
    10e4:	d900      	bls.n	10e8 <adc_init+0x33c>
    10e6:	e67c      	b.n	de2 <adc_init+0x36>
    10e8:	6a3a      	ldr	r2, [r7, #32]
    10ea:	3280      	adds	r2, #128	; 0x80
    10ec:	2aff      	cmp	r2, #255	; 0xff
    10ee:	d900      	bls.n	10f2 <adc_init+0x346>
    10f0:	e677      	b.n	de2 <adc_init+0x36>
    10f2:	2017      	movs	r0, #23
    10f4:	69fa      	ldr	r2, [r7, #28]
    10f6:	2aff      	cmp	r2, #255	; 0xff
    10f8:	dd00      	ble.n	10fc <adc_init+0x350>
    10fa:	e672      	b.n	de2 <adc_init+0x36>
    10fc:	6a3a      	ldr	r2, [r7, #32]
    10fe:	2aff      	cmp	r2, #255	; 0xff
    1100:	dd00      	ble.n	1104 <adc_init+0x358>
    1102:	e66e      	b.n	de2 <adc_init+0x36>
    1104:	4652      	mov	r2, sl
    1106:	8952      	ldrh	r2, [r2, #10]
    1108:	4313      	orrs	r3, r2
    110a:	4652      	mov	r2, sl
    110c:	8153      	strh	r3, [r2, #10]
    110e:	682a      	ldr	r2, [r5, #0]
    1110:	8c13      	ldrh	r3, [r2, #32]
    1112:	b29b      	uxth	r3, r3
    1114:	2b00      	cmp	r3, #0
    1116:	d1fb      	bne.n	1110 <adc_init+0x364>
    1118:	8bbb      	ldrh	r3, [r7, #28]
    111a:	4652      	mov	r2, sl
    111c:	81d3      	strh	r3, [r2, #14]
    111e:	682a      	ldr	r2, [r5, #0]
    1120:	8c13      	ldrh	r3, [r2, #32]
    1122:	b29b      	uxth	r3, r3
    1124:	2b00      	cmp	r3, #0
    1126:	d1fb      	bne.n	1120 <adc_init+0x374>
    1128:	8c3b      	ldrh	r3, [r7, #32]
    112a:	4652      	mov	r2, sl
    112c:	8213      	strh	r3, [r2, #16]
    112e:	682a      	ldr	r2, [r5, #0]
    1130:	8c13      	ldrh	r3, [r2, #32]
    1132:	b29b      	uxth	r3, r3
    1134:	2b00      	cmp	r3, #0
    1136:	d1fb      	bne.n	1130 <adc_init+0x384>
    1138:	793b      	ldrb	r3, [r7, #4]
    113a:	88fa      	ldrh	r2, [r7, #6]
    113c:	4313      	orrs	r3, r2
    113e:	4652      	mov	r2, sl
    1140:	8113      	strh	r3, [r2, #8]
    1142:	682a      	ldr	r2, [r5, #0]
    1144:	8c13      	ldrh	r3, [r2, #32]
    1146:	b29b      	uxth	r3, r3
    1148:	2b00      	cmp	r3, #0
    114a:	d1fb      	bne.n	1144 <adc_init+0x398>
    114c:	332a      	adds	r3, #42	; 0x2a
    114e:	5cfb      	ldrb	r3, [r7, r3]
    1150:	4652      	mov	r2, sl
    1152:	70d3      	strb	r3, [r2, #3]
    1154:	2307      	movs	r3, #7
    1156:	7113      	strb	r3, [r2, #4]
    1158:	331d      	adds	r3, #29
    115a:	5cfb      	ldrb	r3, [r7, r3]
    115c:	2b00      	cmp	r3, #0
    115e:	d01d      	beq.n	119c <adc_init+0x3f0>
    1160:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
    1162:	4a49      	ldr	r2, [pc, #292]	; (1288 <adc_init+0x4dc>)
    1164:	2017      	movs	r0, #23
    1166:	4293      	cmp	r3, r2
    1168:	d900      	bls.n	116c <adc_init+0x3c0>
    116a:	e63a      	b.n	de2 <adc_init+0x36>
    116c:	4652      	mov	r2, sl
    116e:	8253      	strh	r3, [r2, #18]
    1170:	682a      	ldr	r2, [r5, #0]
    1172:	8c13      	ldrh	r3, [r2, #32]
    1174:	b29b      	uxth	r3, r3
    1176:	2b00      	cmp	r3, #0
    1178:	d1fb      	bne.n	1172 <adc_init+0x3c6>
    117a:	8d3a      	ldrh	r2, [r7, #40]	; 0x28
    117c:	2380      	movs	r3, #128	; 0x80
    117e:	011b      	lsls	r3, r3, #4
    1180:	18d3      	adds	r3, r2, r3
    1182:	4941      	ldr	r1, [pc, #260]	; (1288 <adc_init+0x4dc>)
    1184:	b29b      	uxth	r3, r3
    1186:	2017      	movs	r0, #23
    1188:	428b      	cmp	r3, r1
    118a:	d900      	bls.n	118e <adc_init+0x3e2>
    118c:	e629      	b.n	de2 <adc_init+0x36>
    118e:	4653      	mov	r3, sl
    1190:	829a      	strh	r2, [r3, #20]
    1192:	682a      	ldr	r2, [r5, #0]
    1194:	8c13      	ldrh	r3, [r2, #32]
    1196:	b29b      	uxth	r3, r3
    1198:	2b00      	cmp	r3, #0
    119a:	d1fb      	bne.n	1194 <adc_init+0x3e8>
    119c:	00a2      	lsls	r2, r4, #2
    119e:	4b3b      	ldr	r3, [pc, #236]	; (128c <adc_init+0x4e0>)
    11a0:	58d3      	ldr	r3, [r2, r3]
    11a2:	493b      	ldr	r1, [pc, #236]	; (1290 <adc_init+0x4e4>)
    11a4:	5d09      	ldrb	r1, [r1, r4]
    11a6:	681b      	ldr	r3, [r3, #0]
    11a8:	40cb      	lsrs	r3, r1
    11aa:	021b      	lsls	r3, r3, #8
    11ac:	21e0      	movs	r1, #224	; 0xe0
    11ae:	00c9      	lsls	r1, r1, #3
    11b0:	400b      	ands	r3, r1
    11b2:	4938      	ldr	r1, [pc, #224]	; (1294 <adc_init+0x4e8>)
    11b4:	5852      	ldr	r2, [r2, r1]
    11b6:	4938      	ldr	r1, [pc, #224]	; (1298 <adc_init+0x4ec>)
    11b8:	5d09      	ldrb	r1, [r1, r4]
    11ba:	6812      	ldr	r2, [r2, #0]
    11bc:	40ca      	lsrs	r2, r1
    11be:	2107      	movs	r1, #7
    11c0:	400a      	ands	r2, r1
    11c2:	4313      	orrs	r3, r2
    11c4:	4652      	mov	r2, sl
    11c6:	8593      	strh	r3, [r2, #44]	; 0x2c
    11c8:	2000      	movs	r0, #0
    11ca:	e60a      	b.n	de2 <adc_init+0x36>
    11cc:	2e00      	cmp	r6, #0
    11ce:	d199      	bne.n	1104 <adc_init+0x358>
    11d0:	7afa      	ldrb	r2, [r7, #11]
    11d2:	2a00      	cmp	r2, #0
    11d4:	d00f      	beq.n	11f6 <adc_init+0x44a>
    11d6:	69fa      	ldr	r2, [r7, #28]
    11d8:	2180      	movs	r1, #128	; 0x80
    11da:	0109      	lsls	r1, r1, #4
    11dc:	468c      	mov	ip, r1
    11de:	4462      	add	r2, ip
    11e0:	4929      	ldr	r1, [pc, #164]	; (1288 <adc_init+0x4dc>)
    11e2:	2017      	movs	r0, #23
    11e4:	428a      	cmp	r2, r1
    11e6:	d900      	bls.n	11ea <adc_init+0x43e>
    11e8:	e5fb      	b.n	de2 <adc_init+0x36>
    11ea:	6a3a      	ldr	r2, [r7, #32]
    11ec:	4462      	add	r2, ip
    11ee:	4926      	ldr	r1, [pc, #152]	; (1288 <adc_init+0x4dc>)
    11f0:	428a      	cmp	r2, r1
    11f2:	d900      	bls.n	11f6 <adc_init+0x44a>
    11f4:	e5f5      	b.n	de2 <adc_init+0x36>
    11f6:	4a24      	ldr	r2, [pc, #144]	; (1288 <adc_init+0x4dc>)
    11f8:	2017      	movs	r0, #23
    11fa:	69f9      	ldr	r1, [r7, #28]
    11fc:	4291      	cmp	r1, r2
    11fe:	dd00      	ble.n	1202 <adc_init+0x456>
    1200:	e5ef      	b.n	de2 <adc_init+0x36>
    1202:	6a39      	ldr	r1, [r7, #32]
    1204:	4291      	cmp	r1, r2
    1206:	dd00      	ble.n	120a <adc_init+0x45e>
    1208:	e5eb      	b.n	de2 <adc_init+0x36>
    120a:	e77b      	b.n	1104 <adc_init+0x358>
    120c:	7afa      	ldrb	r2, [r7, #11]
    120e:	2a00      	cmp	r2, #0
    1210:	d00f      	beq.n	1232 <adc_init+0x486>
    1212:	69fa      	ldr	r2, [r7, #28]
    1214:	2180      	movs	r1, #128	; 0x80
    1216:	0089      	lsls	r1, r1, #2
    1218:	468c      	mov	ip, r1
    121a:	4462      	add	r2, ip
    121c:	491f      	ldr	r1, [pc, #124]	; (129c <adc_init+0x4f0>)
    121e:	2017      	movs	r0, #23
    1220:	428a      	cmp	r2, r1
    1222:	d900      	bls.n	1226 <adc_init+0x47a>
    1224:	e5dd      	b.n	de2 <adc_init+0x36>
    1226:	6a3a      	ldr	r2, [r7, #32]
    1228:	4462      	add	r2, ip
    122a:	491c      	ldr	r1, [pc, #112]	; (129c <adc_init+0x4f0>)
    122c:	428a      	cmp	r2, r1
    122e:	d900      	bls.n	1232 <adc_init+0x486>
    1230:	e5d7      	b.n	de2 <adc_init+0x36>
    1232:	4a1a      	ldr	r2, [pc, #104]	; (129c <adc_init+0x4f0>)
    1234:	2017      	movs	r0, #23
    1236:	69f9      	ldr	r1, [r7, #28]
    1238:	4291      	cmp	r1, r2
    123a:	dd00      	ble.n	123e <adc_init+0x492>
    123c:	e5d1      	b.n	de2 <adc_init+0x36>
    123e:	6a39      	ldr	r1, [r7, #32]
    1240:	4291      	cmp	r1, r2
    1242:	dd00      	ble.n	1246 <adc_init+0x49a>
    1244:	e5cd      	b.n	de2 <adc_init+0x36>
    1246:	e75d      	b.n	1104 <adc_init+0x358>
    1248:	7afa      	ldrb	r2, [r7, #11]
    124a:	2a00      	cmp	r2, #0
    124c:	d00f      	beq.n	126e <adc_init+0x4c2>
    124e:	69fa      	ldr	r2, [r7, #28]
    1250:	2180      	movs	r1, #128	; 0x80
    1252:	0209      	lsls	r1, r1, #8
    1254:	468c      	mov	ip, r1
    1256:	4462      	add	r2, ip
    1258:	4911      	ldr	r1, [pc, #68]	; (12a0 <adc_init+0x4f4>)
    125a:	2017      	movs	r0, #23
    125c:	428a      	cmp	r2, r1
    125e:	d900      	bls.n	1262 <adc_init+0x4b6>
    1260:	e5bf      	b.n	de2 <adc_init+0x36>
    1262:	6a3a      	ldr	r2, [r7, #32]
    1264:	4462      	add	r2, ip
    1266:	490e      	ldr	r1, [pc, #56]	; (12a0 <adc_init+0x4f4>)
    1268:	428a      	cmp	r2, r1
    126a:	d900      	bls.n	126e <adc_init+0x4c2>
    126c:	e5b9      	b.n	de2 <adc_init+0x36>
    126e:	4a0c      	ldr	r2, [pc, #48]	; (12a0 <adc_init+0x4f4>)
    1270:	2017      	movs	r0, #23
    1272:	69f9      	ldr	r1, [r7, #28]
    1274:	4291      	cmp	r1, r2
    1276:	dd00      	ble.n	127a <adc_init+0x4ce>
    1278:	e5b3      	b.n	de2 <adc_init+0x36>
    127a:	6a39      	ldr	r1, [r7, #32]
    127c:	4291      	cmp	r1, r2
    127e:	dd00      	ble.n	1282 <adc_init+0x4d6>
    1280:	e5af      	b.n	de2 <adc_init+0x36>
    1282:	e73f      	b.n	1104 <adc_init+0x358>
    1284:	2017      	movs	r0, #23
    1286:	e5ac      	b.n	de2 <adc_init+0x36>
    1288:	00000fff 	.word	0x00000fff
    128c:	00009380 	.word	0x00009380
    1290:	00009388 	.word	0x00009388
    1294:	00009374 	.word	0x00009374
    1298:	0000937c 	.word	0x0000937c
    129c:	000003ff 	.word	0x000003ff
    12a0:	0000ffff 	.word	0x0000ffff

000012a4 <_adc_interrupt_handler>:
    12a4:	b570      	push	{r4, r5, r6, lr}
    12a6:	0080      	lsls	r0, r0, #2
    12a8:	4b2e      	ldr	r3, [pc, #184]	; (1364 <_adc_interrupt_handler+0xc0>)
    12aa:	58c4      	ldr	r4, [r0, r3]
    12ac:	6823      	ldr	r3, [r4, #0]
    12ae:	799a      	ldrb	r2, [r3, #6]
    12b0:	795d      	ldrb	r5, [r3, #5]
    12b2:	4015      	ands	r5, r2
    12b4:	07ea      	lsls	r2, r5, #31
    12b6:	d52a      	bpl.n	130e <_adc_interrupt_handler+0x6a>
    12b8:	2201      	movs	r2, #1
    12ba:	719a      	strb	r2, [r3, #6]
    12bc:	6962      	ldr	r2, [r4, #20]
    12be:	1c93      	adds	r3, r2, #2
    12c0:	6163      	str	r3, [r4, #20]
    12c2:	6823      	ldr	r3, [r4, #0]
    12c4:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    12c6:	b29b      	uxth	r3, r3
    12c8:	8013      	strh	r3, [r2, #0]
    12ca:	8b23      	ldrh	r3, [r4, #24]
    12cc:	3b01      	subs	r3, #1
    12ce:	b29b      	uxth	r3, r3
    12d0:	8323      	strh	r3, [r4, #24]
    12d2:	2b00      	cmp	r3, #0
    12d4:	d015      	beq.n	1302 <_adc_interrupt_handler+0x5e>
    12d6:	7f63      	ldrb	r3, [r4, #29]
    12d8:	2b00      	cmp	r3, #0
    12da:	d018      	beq.n	130e <_adc_interrupt_handler+0x6a>
    12dc:	6822      	ldr	r2, [r4, #0]
    12de:	79d3      	ldrb	r3, [r2, #7]
    12e0:	b25b      	sxtb	r3, r3
    12e2:	2b00      	cmp	r3, #0
    12e4:	db13      	blt.n	130e <_adc_interrupt_handler+0x6a>
    12e6:	8c13      	ldrh	r3, [r2, #32]
    12e8:	b29b      	uxth	r3, r3
    12ea:	2b00      	cmp	r3, #0
    12ec:	d1fb      	bne.n	12e6 <_adc_interrupt_handler+0x42>
    12ee:	7e13      	ldrb	r3, [r2, #24]
    12f0:	2102      	movs	r1, #2
    12f2:	430b      	orrs	r3, r1
    12f4:	7613      	strb	r3, [r2, #24]
    12f6:	6822      	ldr	r2, [r4, #0]
    12f8:	8c13      	ldrh	r3, [r2, #32]
    12fa:	b29b      	uxth	r3, r3
    12fc:	2b00      	cmp	r3, #0
    12fe:	d1fb      	bne.n	12f8 <_adc_interrupt_handler+0x54>
    1300:	e005      	b.n	130e <_adc_interrupt_handler+0x6a>
    1302:	2301      	movs	r3, #1
    1304:	6822      	ldr	r2, [r4, #0]
    1306:	7113      	strb	r3, [r2, #4]
    1308:	7f23      	ldrb	r3, [r4, #28]
    130a:	2b05      	cmp	r3, #5
    130c:	d016      	beq.n	133c <_adc_interrupt_handler+0x98>
    130e:	076b      	lsls	r3, r5, #29
    1310:	d508      	bpl.n	1324 <_adc_interrupt_handler+0x80>
    1312:	2304      	movs	r3, #4
    1314:	6822      	ldr	r2, [r4, #0]
    1316:	7193      	strb	r3, [r2, #6]
    1318:	7ee3      	ldrb	r3, [r4, #27]
    131a:	079b      	lsls	r3, r3, #30
    131c:	d502      	bpl.n	1324 <_adc_interrupt_handler+0x80>
    131e:	7ea3      	ldrb	r3, [r4, #26]
    1320:	079b      	lsls	r3, r3, #30
    1322:	d417      	bmi.n	1354 <_adc_interrupt_handler+0xb0>
    1324:	07ab      	lsls	r3, r5, #30
    1326:	d508      	bpl.n	133a <_adc_interrupt_handler+0x96>
    1328:	2302      	movs	r3, #2
    132a:	6822      	ldr	r2, [r4, #0]
    132c:	7193      	strb	r3, [r2, #6]
    132e:	7ee3      	ldrb	r3, [r4, #27]
    1330:	075b      	lsls	r3, r3, #29
    1332:	d502      	bpl.n	133a <_adc_interrupt_handler+0x96>
    1334:	7ea3      	ldrb	r3, [r4, #26]
    1336:	075b      	lsls	r3, r3, #29
    1338:	d410      	bmi.n	135c <_adc_interrupt_handler+0xb8>
    133a:	bd70      	pop	{r4, r5, r6, pc}
    133c:	2300      	movs	r3, #0
    133e:	7723      	strb	r3, [r4, #28]
    1340:	7ee3      	ldrb	r3, [r4, #27]
    1342:	07db      	lsls	r3, r3, #31
    1344:	d5e3      	bpl.n	130e <_adc_interrupt_handler+0x6a>
    1346:	7ea3      	ldrb	r3, [r4, #26]
    1348:	07db      	lsls	r3, r3, #31
    134a:	d5e0      	bpl.n	130e <_adc_interrupt_handler+0x6a>
    134c:	0020      	movs	r0, r4
    134e:	68a3      	ldr	r3, [r4, #8]
    1350:	4798      	blx	r3
    1352:	e7dc      	b.n	130e <_adc_interrupt_handler+0x6a>
    1354:	0020      	movs	r0, r4
    1356:	68e3      	ldr	r3, [r4, #12]
    1358:	4798      	blx	r3
    135a:	e7e3      	b.n	1324 <_adc_interrupt_handler+0x80>
    135c:	6923      	ldr	r3, [r4, #16]
    135e:	0020      	movs	r0, r4
    1360:	4798      	blx	r3
    1362:	e7ea      	b.n	133a <_adc_interrupt_handler+0x96>
    1364:	200018cc 	.word	0x200018cc

00001368 <ADC0_Handler>:
    1368:	b510      	push	{r4, lr}
    136a:	2000      	movs	r0, #0
    136c:	4b01      	ldr	r3, [pc, #4]	; (1374 <ADC0_Handler+0xc>)
    136e:	4798      	blx	r3
    1370:	bd10      	pop	{r4, pc}
    1372:	46c0      	nop			; (mov r8, r8)
    1374:	000012a5 	.word	0x000012a5

00001378 <ADC1_Handler>:
    1378:	b510      	push	{r4, lr}
    137a:	2001      	movs	r0, #1
    137c:	4b01      	ldr	r3, [pc, #4]	; (1384 <ADC1_Handler+0xc>)
    137e:	4798      	blx	r3
    1380:	bd10      	pop	{r4, pc}
    1382:	46c0      	nop			; (mov r8, r8)
    1384:	000012a5 	.word	0x000012a5

00001388 <adc_register_callback>:
    1388:	1c93      	adds	r3, r2, #2
    138a:	009b      	lsls	r3, r3, #2
    138c:	5019      	str	r1, [r3, r0]
    138e:	2301      	movs	r3, #1
    1390:	4093      	lsls	r3, r2
    1392:	001a      	movs	r2, r3
    1394:	7e83      	ldrb	r3, [r0, #26]
    1396:	4313      	orrs	r3, r2
    1398:	7683      	strb	r3, [r0, #26]
    139a:	4770      	bx	lr

0000139c <adc_read_buffer_job>:
    139c:	b510      	push	{r4, lr}
    139e:	8b03      	ldrh	r3, [r0, #24]
    13a0:	b29b      	uxth	r3, r3
    13a2:	2405      	movs	r4, #5
    13a4:	2b00      	cmp	r3, #0
    13a6:	d001      	beq.n	13ac <adc_read_buffer_job+0x10>
    13a8:	0020      	movs	r0, r4
    13aa:	bd10      	pop	{r4, pc}
    13ac:	7f03      	ldrb	r3, [r0, #28]
    13ae:	2b05      	cmp	r3, #5
    13b0:	d0fa      	beq.n	13a8 <adc_read_buffer_job+0xc>
    13b2:	2305      	movs	r3, #5
    13b4:	7703      	strb	r3, [r0, #28]
    13b6:	8302      	strh	r2, [r0, #24]
    13b8:	6141      	str	r1, [r0, #20]
    13ba:	3b04      	subs	r3, #4
    13bc:	6802      	ldr	r2, [r0, #0]
    13be:	7153      	strb	r3, [r2, #5]
    13c0:	7f43      	ldrb	r3, [r0, #29]
    13c2:	2400      	movs	r4, #0
    13c4:	2b00      	cmp	r3, #0
    13c6:	d0ef      	beq.n	13a8 <adc_read_buffer_job+0xc>
    13c8:	6802      	ldr	r2, [r0, #0]
    13ca:	8c13      	ldrh	r3, [r2, #32]
    13cc:	b29b      	uxth	r3, r3
    13ce:	2b00      	cmp	r3, #0
    13d0:	d1fb      	bne.n	13ca <adc_read_buffer_job+0x2e>
    13d2:	7e13      	ldrb	r3, [r2, #24]
    13d4:	2102      	movs	r1, #2
    13d6:	430b      	orrs	r3, r1
    13d8:	7613      	strb	r3, [r2, #24]
    13da:	6802      	ldr	r2, [r0, #0]
    13dc:	8c13      	ldrh	r3, [r2, #32]
    13de:	b29b      	uxth	r3, r3
    13e0:	2b00      	cmp	r3, #0
    13e2:	d1fb      	bne.n	13dc <adc_read_buffer_job+0x40>
    13e4:	2400      	movs	r4, #0
    13e6:	e7df      	b.n	13a8 <adc_read_buffer_job+0xc>

000013e8 <EIC_Handler>:
    13e8:	b570      	push	{r4, r5, r6, lr}
    13ea:	2200      	movs	r2, #0
    13ec:	4b10      	ldr	r3, [pc, #64]	; (1430 <EIC_Handler+0x48>)
    13ee:	701a      	strb	r2, [r3, #0]
    13f0:	2300      	movs	r3, #0
    13f2:	4910      	ldr	r1, [pc, #64]	; (1434 <EIC_Handler+0x4c>)
    13f4:	251f      	movs	r5, #31
    13f6:	4e10      	ldr	r6, [pc, #64]	; (1438 <EIC_Handler+0x50>)
    13f8:	4c0d      	ldr	r4, [pc, #52]	; (1430 <EIC_Handler+0x48>)
    13fa:	e00a      	b.n	1412 <EIC_Handler+0x2a>
    13fc:	490d      	ldr	r1, [pc, #52]	; (1434 <EIC_Handler+0x4c>)
    13fe:	e008      	b.n	1412 <EIC_Handler+0x2a>
    1400:	7823      	ldrb	r3, [r4, #0]
    1402:	3301      	adds	r3, #1
    1404:	b2db      	uxtb	r3, r3
    1406:	7023      	strb	r3, [r4, #0]
    1408:	2b0f      	cmp	r3, #15
    140a:	d810      	bhi.n	142e <EIC_Handler+0x46>
    140c:	2100      	movs	r1, #0
    140e:	2b1f      	cmp	r3, #31
    1410:	d9f4      	bls.n	13fc <EIC_Handler+0x14>
    1412:	0028      	movs	r0, r5
    1414:	4018      	ands	r0, r3
    1416:	2201      	movs	r2, #1
    1418:	4082      	lsls	r2, r0
    141a:	6948      	ldr	r0, [r1, #20]
    141c:	4210      	tst	r0, r2
    141e:	d0ef      	beq.n	1400 <EIC_Handler+0x18>
    1420:	614a      	str	r2, [r1, #20]
    1422:	009b      	lsls	r3, r3, #2
    1424:	599b      	ldr	r3, [r3, r6]
    1426:	2b00      	cmp	r3, #0
    1428:	d0ea      	beq.n	1400 <EIC_Handler+0x18>
    142a:	4798      	blx	r3
    142c:	e7e8      	b.n	1400 <EIC_Handler+0x18>
    142e:	bd70      	pop	{r4, r5, r6, pc}
    1430:	200018d4 	.word	0x200018d4
    1434:	40002800 	.word	0x40002800
    1438:	200018d8 	.word	0x200018d8

0000143c <_extint_enable>:
    143c:	4a06      	ldr	r2, [pc, #24]	; (1458 <_extint_enable+0x1c>)
    143e:	7813      	ldrb	r3, [r2, #0]
    1440:	2102      	movs	r1, #2
    1442:	430b      	orrs	r3, r1
    1444:	7013      	strb	r3, [r2, #0]
    1446:	2001      	movs	r0, #1
    1448:	6853      	ldr	r3, [r2, #4]
    144a:	4219      	tst	r1, r3
    144c:	d1fc      	bne.n	1448 <_extint_enable+0xc>
    144e:	6853      	ldr	r3, [r2, #4]
    1450:	4218      	tst	r0, r3
    1452:	d1f9      	bne.n	1448 <_extint_enable+0xc>
    1454:	4770      	bx	lr
    1456:	46c0      	nop			; (mov r8, r8)
    1458:	40002800 	.word	0x40002800

0000145c <_system_extint_init>:
    145c:	b500      	push	{lr}
    145e:	b083      	sub	sp, #12
    1460:	4a17      	ldr	r2, [pc, #92]	; (14c0 <_system_extint_init+0x64>)
    1462:	6951      	ldr	r1, [r2, #20]
    1464:	2380      	movs	r3, #128	; 0x80
    1466:	00db      	lsls	r3, r3, #3
    1468:	430b      	orrs	r3, r1
    146a:	6153      	str	r3, [r2, #20]
    146c:	a901      	add	r1, sp, #4
    146e:	2300      	movs	r3, #0
    1470:	700b      	strb	r3, [r1, #0]
    1472:	2002      	movs	r0, #2
    1474:	4b13      	ldr	r3, [pc, #76]	; (14c4 <_system_extint_init+0x68>)
    1476:	4798      	blx	r3
    1478:	2002      	movs	r0, #2
    147a:	4b13      	ldr	r3, [pc, #76]	; (14c8 <_system_extint_init+0x6c>)
    147c:	4798      	blx	r3
    147e:	4a13      	ldr	r2, [pc, #76]	; (14cc <_system_extint_init+0x70>)
    1480:	7813      	ldrb	r3, [r2, #0]
    1482:	2101      	movs	r1, #1
    1484:	430b      	orrs	r3, r1
    1486:	7013      	strb	r3, [r2, #0]
    1488:	3101      	adds	r1, #1
    148a:	2001      	movs	r0, #1
    148c:	6853      	ldr	r3, [r2, #4]
    148e:	4219      	tst	r1, r3
    1490:	d1fc      	bne.n	148c <_system_extint_init+0x30>
    1492:	6853      	ldr	r3, [r2, #4]
    1494:	4218      	tst	r0, r3
    1496:	d1f9      	bne.n	148c <_system_extint_init+0x30>
    1498:	4a0c      	ldr	r2, [pc, #48]	; (14cc <_system_extint_init+0x70>)
    149a:	7813      	ldrb	r3, [r2, #0]
    149c:	2110      	movs	r1, #16
    149e:	438b      	bics	r3, r1
    14a0:	7013      	strb	r3, [r2, #0]
    14a2:	4b0b      	ldr	r3, [pc, #44]	; (14d0 <_system_extint_init+0x74>)
    14a4:	0019      	movs	r1, r3
    14a6:	3140      	adds	r1, #64	; 0x40
    14a8:	2200      	movs	r2, #0
    14aa:	c304      	stmia	r3!, {r2}
    14ac:	428b      	cmp	r3, r1
    14ae:	d1fc      	bne.n	14aa <_system_extint_init+0x4e>
    14b0:	2208      	movs	r2, #8
    14b2:	4b08      	ldr	r3, [pc, #32]	; (14d4 <_system_extint_init+0x78>)
    14b4:	601a      	str	r2, [r3, #0]
    14b6:	4b08      	ldr	r3, [pc, #32]	; (14d8 <_system_extint_init+0x7c>)
    14b8:	4798      	blx	r3
    14ba:	b003      	add	sp, #12
    14bc:	bd00      	pop	{pc}
    14be:	46c0      	nop			; (mov r8, r8)
    14c0:	40000800 	.word	0x40000800
    14c4:	00004f39 	.word	0x00004f39
    14c8:	00004ec9 	.word	0x00004ec9
    14cc:	40002800 	.word	0x40002800
    14d0:	200018d8 	.word	0x200018d8
    14d4:	e000e100 	.word	0xe000e100
    14d8:	0000143d 	.word	0x0000143d

000014dc <i2c_master_init>:
    14dc:	b5f0      	push	{r4, r5, r6, r7, lr}
    14de:	46d6      	mov	lr, sl
    14e0:	464f      	mov	r7, r9
    14e2:	4646      	mov	r6, r8
    14e4:	b5c0      	push	{r6, r7, lr}
    14e6:	b08a      	sub	sp, #40	; 0x28
    14e8:	0006      	movs	r6, r0
    14ea:	000f      	movs	r7, r1
    14ec:	0014      	movs	r4, r2
    14ee:	6031      	str	r1, [r6, #0]
    14f0:	0008      	movs	r0, r1
    14f2:	4ba2      	ldr	r3, [pc, #648]	; (177c <i2c_master_init+0x2a0>)
    14f4:	4798      	blx	r3
    14f6:	1c45      	adds	r5, r0, #1
    14f8:	2805      	cmp	r0, #5
    14fa:	d01e      	beq.n	153a <i2c_master_init+0x5e>
    14fc:	3013      	adds	r0, #19
    14fe:	4aa0      	ldr	r2, [pc, #640]	; (1780 <i2c_master_init+0x2a4>)
    1500:	69d1      	ldr	r1, [r2, #28]
    1502:	2301      	movs	r3, #1
    1504:	40ab      	lsls	r3, r5
    1506:	430b      	orrs	r3, r1
    1508:	61d3      	str	r3, [r2, #28]
    150a:	a909      	add	r1, sp, #36	; 0x24
    150c:	7b23      	ldrb	r3, [r4, #12]
    150e:	700b      	strb	r3, [r1, #0]
    1510:	b2c5      	uxtb	r5, r0
    1512:	0028      	movs	r0, r5
    1514:	4b9b      	ldr	r3, [pc, #620]	; (1784 <i2c_master_init+0x2a8>)
    1516:	4798      	blx	r3
    1518:	0028      	movs	r0, r5
    151a:	4b9b      	ldr	r3, [pc, #620]	; (1788 <i2c_master_init+0x2ac>)
    151c:	4798      	blx	r3
    151e:	7b20      	ldrb	r0, [r4, #12]
    1520:	2100      	movs	r1, #0
    1522:	4b9a      	ldr	r3, [pc, #616]	; (178c <i2c_master_init+0x2b0>)
    1524:	4798      	blx	r3
    1526:	683b      	ldr	r3, [r7, #0]
    1528:	201c      	movs	r0, #28
    152a:	079b      	lsls	r3, r3, #30
    152c:	d507      	bpl.n	153e <i2c_master_init+0x62>
    152e:	b00a      	add	sp, #40	; 0x28
    1530:	bc1c      	pop	{r2, r3, r4}
    1532:	4690      	mov	r8, r2
    1534:	4699      	mov	r9, r3
    1536:	46a2      	mov	sl, r4
    1538:	bdf0      	pop	{r4, r5, r6, r7, pc}
    153a:	2019      	movs	r0, #25
    153c:	e7df      	b.n	14fe <i2c_master_init+0x22>
    153e:	683b      	ldr	r3, [r7, #0]
    1540:	3817      	subs	r0, #23
    1542:	07db      	lsls	r3, r3, #31
    1544:	d4f3      	bmi.n	152e <i2c_master_init+0x52>
    1546:	6830      	ldr	r0, [r6, #0]
    1548:	4b8c      	ldr	r3, [pc, #560]	; (177c <i2c_master_init+0x2a0>)
    154a:	4699      	mov	r9, r3
    154c:	4798      	blx	r3
    154e:	0005      	movs	r5, r0
    1550:	498f      	ldr	r1, [pc, #572]	; (1790 <i2c_master_init+0x2b4>)
    1552:	4b90      	ldr	r3, [pc, #576]	; (1794 <i2c_master_init+0x2b8>)
    1554:	4798      	blx	r3
    1556:	00ad      	lsls	r5, r5, #2
    1558:	4b8f      	ldr	r3, [pc, #572]	; (1798 <i2c_master_init+0x2bc>)
    155a:	50ee      	str	r6, [r5, r3]
    155c:	2300      	movs	r3, #0
    155e:	7633      	strb	r3, [r6, #24]
    1560:	7673      	strb	r3, [r6, #25]
    1562:	2500      	movs	r5, #0
    1564:	8373      	strh	r3, [r6, #26]
    1566:	83b3      	strh	r3, [r6, #28]
    1568:	2225      	movs	r2, #37	; 0x25
    156a:	54b5      	strb	r5, [r6, r2]
    156c:	6233      	str	r3, [r6, #32]
    156e:	3314      	adds	r3, #20
    1570:	603b      	str	r3, [r7, #0]
    1572:	6833      	ldr	r3, [r6, #0]
    1574:	4698      	mov	r8, r3
    1576:	0018      	movs	r0, r3
    1578:	47c8      	blx	r9
    157a:	4681      	mov	r9, r0
    157c:	2380      	movs	r3, #128	; 0x80
    157e:	aa08      	add	r2, sp, #32
    1580:	7013      	strb	r3, [r2, #0]
    1582:	7055      	strb	r5, [r2, #1]
    1584:	2301      	movs	r3, #1
    1586:	7093      	strb	r3, [r2, #2]
    1588:	70d5      	strb	r5, [r2, #3]
    158a:	69e0      	ldr	r0, [r4, #28]
    158c:	6a27      	ldr	r7, [r4, #32]
    158e:	2800      	cmp	r0, #0
    1590:	d100      	bne.n	1594 <i2c_master_init+0xb8>
    1592:	e0af      	b.n	16f4 <i2c_master_init+0x218>
    1594:	ab08      	add	r3, sp, #32
    1596:	7018      	strb	r0, [r3, #0]
    1598:	2302      	movs	r3, #2
    159a:	aa08      	add	r2, sp, #32
    159c:	7053      	strb	r3, [r2, #1]
    159e:	0c00      	lsrs	r0, r0, #16
    15a0:	b2c0      	uxtb	r0, r0
    15a2:	0011      	movs	r1, r2
    15a4:	4b7d      	ldr	r3, [pc, #500]	; (179c <i2c_master_init+0x2c0>)
    15a6:	4798      	blx	r3
    15a8:	2f00      	cmp	r7, #0
    15aa:	d100      	bne.n	15ae <i2c_master_init+0xd2>
    15ac:	e0a7      	b.n	16fe <i2c_master_init+0x222>
    15ae:	ab08      	add	r3, sp, #32
    15b0:	701f      	strb	r7, [r3, #0]
    15b2:	2302      	movs	r3, #2
    15b4:	aa08      	add	r2, sp, #32
    15b6:	7053      	strb	r3, [r2, #1]
    15b8:	0c3f      	lsrs	r7, r7, #16
    15ba:	b2f8      	uxtb	r0, r7
    15bc:	0011      	movs	r1, r2
    15be:	4b77      	ldr	r3, [pc, #476]	; (179c <i2c_master_init+0x2c0>)
    15c0:	4798      	blx	r3
    15c2:	8aa3      	ldrh	r3, [r4, #20]
    15c4:	80f3      	strh	r3, [r6, #6]
    15c6:	8ae3      	ldrh	r3, [r4, #22]
    15c8:	8133      	strh	r3, [r6, #8]
    15ca:	7e23      	ldrb	r3, [r4, #24]
    15cc:	2280      	movs	r2, #128	; 0x80
    15ce:	2b00      	cmp	r3, #0
    15d0:	d104      	bne.n	15dc <i2c_master_init+0x100>
    15d2:	4b73      	ldr	r3, [pc, #460]	; (17a0 <i2c_master_init+0x2c4>)
    15d4:	789b      	ldrb	r3, [r3, #2]
    15d6:	079b      	lsls	r3, r3, #30
    15d8:	0fdb      	lsrs	r3, r3, #31
    15da:	01da      	lsls	r2, r3, #7
    15dc:	68a1      	ldr	r1, [r4, #8]
    15de:	6923      	ldr	r3, [r4, #16]
    15e0:	430b      	orrs	r3, r1
    15e2:	4313      	orrs	r3, r2
    15e4:	2224      	movs	r2, #36	; 0x24
    15e6:	5ca2      	ldrb	r2, [r4, r2]
    15e8:	2a00      	cmp	r2, #0
    15ea:	d002      	beq.n	15f2 <i2c_master_init+0x116>
    15ec:	2280      	movs	r2, #128	; 0x80
    15ee:	05d2      	lsls	r2, r2, #23
    15f0:	4313      	orrs	r3, r2
    15f2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    15f4:	4313      	orrs	r3, r2
    15f6:	222c      	movs	r2, #44	; 0x2c
    15f8:	5ca2      	ldrb	r2, [r4, r2]
    15fa:	2a00      	cmp	r2, #0
    15fc:	d103      	bne.n	1606 <i2c_master_init+0x12a>
    15fe:	2280      	movs	r2, #128	; 0x80
    1600:	0492      	lsls	r2, r2, #18
    1602:	4291      	cmp	r1, r2
    1604:	d102      	bne.n	160c <i2c_master_init+0x130>
    1606:	2280      	movs	r2, #128	; 0x80
    1608:	0512      	lsls	r2, r2, #20
    160a:	4313      	orrs	r3, r2
    160c:	222d      	movs	r2, #45	; 0x2d
    160e:	5ca2      	ldrb	r2, [r4, r2]
    1610:	2a00      	cmp	r2, #0
    1612:	d002      	beq.n	161a <i2c_master_init+0x13e>
    1614:	2280      	movs	r2, #128	; 0x80
    1616:	0412      	lsls	r2, r2, #16
    1618:	4313      	orrs	r3, r2
    161a:	222e      	movs	r2, #46	; 0x2e
    161c:	5ca2      	ldrb	r2, [r4, r2]
    161e:	2a00      	cmp	r2, #0
    1620:	d002      	beq.n	1628 <i2c_master_init+0x14c>
    1622:	2280      	movs	r2, #128	; 0x80
    1624:	03d2      	lsls	r2, r2, #15
    1626:	4313      	orrs	r3, r2
    1628:	4642      	mov	r2, r8
    162a:	6812      	ldr	r2, [r2, #0]
    162c:	4313      	orrs	r3, r2
    162e:	4642      	mov	r2, r8
    1630:	6013      	str	r3, [r2, #0]
    1632:	2380      	movs	r3, #128	; 0x80
    1634:	005b      	lsls	r3, r3, #1
    1636:	6053      	str	r3, [r2, #4]
    1638:	464d      	mov	r5, r9
    163a:	3513      	adds	r5, #19
    163c:	b2e8      	uxtb	r0, r5
    163e:	4b59      	ldr	r3, [pc, #356]	; (17a4 <i2c_master_init+0x2c8>)
    1640:	4798      	blx	r3
    1642:	9007      	str	r0, [sp, #28]
    1644:	23fa      	movs	r3, #250	; 0xfa
    1646:	009b      	lsls	r3, r3, #2
    1648:	6822      	ldr	r2, [r4, #0]
    164a:	435a      	muls	r2, r3
    164c:	4691      	mov	r9, r2
    164e:	6863      	ldr	r3, [r4, #4]
    1650:	469a      	mov	sl, r3
    1652:	4d55      	ldr	r5, [pc, #340]	; (17a8 <i2c_master_init+0x2cc>)
    1654:	47a8      	blx	r5
    1656:	9000      	str	r0, [sp, #0]
    1658:	9101      	str	r1, [sp, #4]
    165a:	464b      	mov	r3, r9
    165c:	0058      	lsls	r0, r3, #1
    165e:	47a8      	blx	r5
    1660:	9002      	str	r0, [sp, #8]
    1662:	9103      	str	r1, [sp, #12]
    1664:	8e20      	ldrh	r0, [r4, #48]	; 0x30
    1666:	47a8      	blx	r5
    1668:	9004      	str	r0, [sp, #16]
    166a:	9105      	str	r1, [sp, #20]
    166c:	4f4f      	ldr	r7, [pc, #316]	; (17ac <i2c_master_init+0x2d0>)
    166e:	4a50      	ldr	r2, [pc, #320]	; (17b0 <i2c_master_init+0x2d4>)
    1670:	4b50      	ldr	r3, [pc, #320]	; (17b4 <i2c_master_init+0x2d8>)
    1672:	9800      	ldr	r0, [sp, #0]
    1674:	9901      	ldr	r1, [sp, #4]
    1676:	47b8      	blx	r7
    1678:	0002      	movs	r2, r0
    167a:	000b      	movs	r3, r1
    167c:	9804      	ldr	r0, [sp, #16]
    167e:	9905      	ldr	r1, [sp, #20]
    1680:	47b8      	blx	r7
    1682:	4e4d      	ldr	r6, [pc, #308]	; (17b8 <i2c_master_init+0x2dc>)
    1684:	2200      	movs	r2, #0
    1686:	4b4d      	ldr	r3, [pc, #308]	; (17bc <i2c_master_init+0x2e0>)
    1688:	47b0      	blx	r6
    168a:	9004      	str	r0, [sp, #16]
    168c:	9105      	str	r1, [sp, #20]
    168e:	4648      	mov	r0, r9
    1690:	47a8      	blx	r5
    1692:	0002      	movs	r2, r0
    1694:	000b      	movs	r3, r1
    1696:	9804      	ldr	r0, [sp, #16]
    1698:	9905      	ldr	r1, [sp, #20]
    169a:	47b8      	blx	r7
    169c:	0002      	movs	r2, r0
    169e:	000b      	movs	r3, r1
    16a0:	4d47      	ldr	r5, [pc, #284]	; (17c0 <i2c_master_init+0x2e4>)
    16a2:	9800      	ldr	r0, [sp, #0]
    16a4:	9901      	ldr	r1, [sp, #4]
    16a6:	47a8      	blx	r5
    16a8:	9a02      	ldr	r2, [sp, #8]
    16aa:	9b03      	ldr	r3, [sp, #12]
    16ac:	47b0      	blx	r6
    16ae:	2200      	movs	r2, #0
    16b0:	4b44      	ldr	r3, [pc, #272]	; (17c4 <i2c_master_init+0x2e8>)
    16b2:	47a8      	blx	r5
    16b4:	9a02      	ldr	r2, [sp, #8]
    16b6:	9b03      	ldr	r3, [sp, #12]
    16b8:	4d43      	ldr	r5, [pc, #268]	; (17c8 <i2c_master_init+0x2ec>)
    16ba:	47a8      	blx	r5
    16bc:	4b43      	ldr	r3, [pc, #268]	; (17cc <i2c_master_init+0x2f0>)
    16be:	4798      	blx	r3
    16c0:	0005      	movs	r5, r0
    16c2:	2380      	movs	r3, #128	; 0x80
    16c4:	049b      	lsls	r3, r3, #18
    16c6:	68a2      	ldr	r2, [r4, #8]
    16c8:	429a      	cmp	r2, r3
    16ca:	d01e      	beq.n	170a <i2c_master_init+0x22e>
    16cc:	0003      	movs	r3, r0
    16ce:	2040      	movs	r0, #64	; 0x40
    16d0:	2dff      	cmp	r5, #255	; 0xff
    16d2:	d900      	bls.n	16d6 <i2c_master_init+0x1fa>
    16d4:	e72b      	b.n	152e <i2c_master_init+0x52>
    16d6:	2400      	movs	r4, #0
    16d8:	2000      	movs	r0, #0
    16da:	25ff      	movs	r5, #255	; 0xff
    16dc:	401d      	ands	r5, r3
    16de:	0624      	lsls	r4, r4, #24
    16e0:	4325      	orrs	r5, r4
    16e2:	0400      	lsls	r0, r0, #16
    16e4:	23ff      	movs	r3, #255	; 0xff
    16e6:	041b      	lsls	r3, r3, #16
    16e8:	4018      	ands	r0, r3
    16ea:	4305      	orrs	r5, r0
    16ec:	4643      	mov	r3, r8
    16ee:	60dd      	str	r5, [r3, #12]
    16f0:	2000      	movs	r0, #0
    16f2:	e71c      	b.n	152e <i2c_master_init+0x52>
    16f4:	2100      	movs	r1, #0
    16f6:	4640      	mov	r0, r8
    16f8:	4b35      	ldr	r3, [pc, #212]	; (17d0 <i2c_master_init+0x2f4>)
    16fa:	4798      	blx	r3
    16fc:	e74a      	b.n	1594 <i2c_master_init+0xb8>
    16fe:	2101      	movs	r1, #1
    1700:	4640      	mov	r0, r8
    1702:	4b33      	ldr	r3, [pc, #204]	; (17d0 <i2c_master_init+0x2f4>)
    1704:	4798      	blx	r3
    1706:	0007      	movs	r7, r0
    1708:	e751      	b.n	15ae <i2c_master_init+0xd2>
    170a:	26fa      	movs	r6, #250	; 0xfa
    170c:	00b6      	lsls	r6, r6, #2
    170e:	4653      	mov	r3, sl
    1710:	435e      	muls	r6, r3
    1712:	9800      	ldr	r0, [sp, #0]
    1714:	9901      	ldr	r1, [sp, #4]
    1716:	0002      	movs	r2, r0
    1718:	000b      	movs	r3, r1
    171a:	4c27      	ldr	r4, [pc, #156]	; (17b8 <i2c_master_init+0x2dc>)
    171c:	47a0      	blx	r4
    171e:	9000      	str	r0, [sp, #0]
    1720:	9101      	str	r1, [sp, #4]
    1722:	0030      	movs	r0, r6
    1724:	4b20      	ldr	r3, [pc, #128]	; (17a8 <i2c_master_init+0x2cc>)
    1726:	4798      	blx	r3
    1728:	2200      	movs	r2, #0
    172a:	4b2a      	ldr	r3, [pc, #168]	; (17d4 <i2c_master_init+0x2f8>)
    172c:	47b8      	blx	r7
    172e:	0002      	movs	r2, r0
    1730:	000b      	movs	r3, r1
    1732:	9800      	ldr	r0, [sp, #0]
    1734:	9901      	ldr	r1, [sp, #4]
    1736:	4c24      	ldr	r4, [pc, #144]	; (17c8 <i2c_master_init+0x2ec>)
    1738:	47a0      	blx	r4
    173a:	2200      	movs	r2, #0
    173c:	4b21      	ldr	r3, [pc, #132]	; (17c4 <i2c_master_init+0x2e8>)
    173e:	4c20      	ldr	r4, [pc, #128]	; (17c0 <i2c_master_init+0x2e4>)
    1740:	47a0      	blx	r4
    1742:	4b22      	ldr	r3, [pc, #136]	; (17cc <i2c_master_init+0x2f0>)
    1744:	4798      	blx	r3
    1746:	1e04      	subs	r4, r0, #0
    1748:	d00c      	beq.n	1764 <i2c_master_init+0x288>
    174a:	0031      	movs	r1, r6
    174c:	9807      	ldr	r0, [sp, #28]
    174e:	4b22      	ldr	r3, [pc, #136]	; (17d8 <i2c_master_init+0x2fc>)
    1750:	4798      	blx	r3
    1752:	3802      	subs	r0, #2
    1754:	1b00      	subs	r0, r0, r4
    1756:	002b      	movs	r3, r5
    1758:	2dff      	cmp	r5, #255	; 0xff
    175a:	d80c      	bhi.n	1776 <i2c_master_init+0x29a>
    175c:	28ff      	cmp	r0, #255	; 0xff
    175e:	d9bc      	bls.n	16da <i2c_master_init+0x1fe>
    1760:	2040      	movs	r0, #64	; 0x40
    1762:	e6e4      	b.n	152e <i2c_master_init+0x52>
    1764:	0071      	lsls	r1, r6, #1
    1766:	1e48      	subs	r0, r1, #1
    1768:	9b07      	ldr	r3, [sp, #28]
    176a:	469c      	mov	ip, r3
    176c:	4460      	add	r0, ip
    176e:	4b1a      	ldr	r3, [pc, #104]	; (17d8 <i2c_master_init+0x2fc>)
    1770:	4798      	blx	r3
    1772:	3801      	subs	r0, #1
    1774:	e7ef      	b.n	1756 <i2c_master_init+0x27a>
    1776:	2040      	movs	r0, #64	; 0x40
    1778:	e6d9      	b.n	152e <i2c_master_init+0x52>
    177a:	46c0      	nop			; (mov r8, r8)
    177c:	0000284d 	.word	0x0000284d
    1780:	40000800 	.word	0x40000800
    1784:	00004f39 	.word	0x00004f39
    1788:	00004ec9 	.word	0x00004ec9
    178c:	00002685 	.word	0x00002685
    1790:	00001ab9 	.word	0x00001ab9
    1794:	000034f9 	.word	0x000034f9
    1798:	20001d80 	.word	0x20001d80
    179c:	00005035 	.word	0x00005035
    17a0:	41002000 	.word	0x41002000
    17a4:	00004f5d 	.word	0x00004f5d
    17a8:	00008689 	.word	0x00008689
    17ac:	00007af5 	.word	0x00007af5
    17b0:	e826d695 	.word	0xe826d695
    17b4:	3e112e0b 	.word	0x3e112e0b
    17b8:	00006e6d 	.word	0x00006e6d
    17bc:	40240000 	.word	0x40240000
    17c0:	00007ff5 	.word	0x00007ff5
    17c4:	3ff00000 	.word	0x3ff00000
    17c8:	0000748d 	.word	0x0000748d
    17cc:	00008621 	.word	0x00008621
    17d0:	000026d1 	.word	0x000026d1
    17d4:	40080000 	.word	0x40080000
    17d8:	00006269 	.word	0x00006269

000017dc <_i2c_master_address_response>:
    17dc:	6803      	ldr	r3, [r0, #0]
    17de:	7e1a      	ldrb	r2, [r3, #24]
    17e0:	0792      	lsls	r2, r2, #30
    17e2:	d507      	bpl.n	17f4 <_i2c_master_address_response+0x18>
    17e4:	2202      	movs	r2, #2
    17e6:	761a      	strb	r2, [r3, #24]
    17e8:	8b5b      	ldrh	r3, [r3, #26]
    17ea:	079b      	lsls	r3, r3, #30
    17ec:	2041      	movs	r0, #65	; 0x41
    17ee:	17db      	asrs	r3, r3, #31
    17f0:	4018      	ands	r0, r3
    17f2:	4770      	bx	lr
    17f4:	8b5a      	ldrh	r2, [r3, #26]
    17f6:	0752      	lsls	r2, r2, #29
    17f8:	d506      	bpl.n	1808 <_i2c_master_address_response+0x2c>
    17fa:	6859      	ldr	r1, [r3, #4]
    17fc:	22c0      	movs	r2, #192	; 0xc0
    17fe:	0292      	lsls	r2, r2, #10
    1800:	430a      	orrs	r2, r1
    1802:	605a      	str	r2, [r3, #4]
    1804:	2018      	movs	r0, #24
    1806:	e7f4      	b.n	17f2 <_i2c_master_address_response+0x16>
    1808:	2000      	movs	r0, #0
    180a:	e7f2      	b.n	17f2 <_i2c_master_address_response+0x16>

0000180c <_i2c_master_wait_for_bus>:
    180c:	b530      	push	{r4, r5, lr}
    180e:	6802      	ldr	r2, [r0, #0]
    1810:	2300      	movs	r3, #0
    1812:	2401      	movs	r4, #1
    1814:	2502      	movs	r5, #2
    1816:	7e11      	ldrb	r1, [r2, #24]
    1818:	4221      	tst	r1, r4
    181a:	d10b      	bne.n	1834 <_i2c_master_wait_for_bus+0x28>
    181c:	7e11      	ldrb	r1, [r2, #24]
    181e:	4229      	tst	r1, r5
    1820:	d106      	bne.n	1830 <_i2c_master_wait_for_bus+0x24>
    1822:	3301      	adds	r3, #1
    1824:	b29b      	uxth	r3, r3
    1826:	8901      	ldrh	r1, [r0, #8]
    1828:	4299      	cmp	r1, r3
    182a:	d8f4      	bhi.n	1816 <_i2c_master_wait_for_bus+0xa>
    182c:	2012      	movs	r0, #18
    182e:	e002      	b.n	1836 <_i2c_master_wait_for_bus+0x2a>
    1830:	2000      	movs	r0, #0
    1832:	e000      	b.n	1836 <_i2c_master_wait_for_bus+0x2a>
    1834:	2000      	movs	r0, #0
    1836:	bd30      	pop	{r4, r5, pc}

00001838 <_i2c_master_send_hs_master_code>:
    1838:	b510      	push	{r4, lr}
    183a:	6804      	ldr	r4, [r0, #0]
    183c:	6862      	ldr	r2, [r4, #4]
    183e:	2380      	movs	r3, #128	; 0x80
    1840:	02db      	lsls	r3, r3, #11
    1842:	4313      	orrs	r3, r2
    1844:	6063      	str	r3, [r4, #4]
    1846:	6261      	str	r1, [r4, #36]	; 0x24
    1848:	4b02      	ldr	r3, [pc, #8]	; (1854 <_i2c_master_send_hs_master_code+0x1c>)
    184a:	4798      	blx	r3
    184c:	2301      	movs	r3, #1
    184e:	7623      	strb	r3, [r4, #24]
    1850:	bd10      	pop	{r4, pc}
    1852:	46c0      	nop			; (mov r8, r8)
    1854:	0000180d 	.word	0x0000180d

00001858 <_i2c_master_wait_for_sync>:
    1858:	6801      	ldr	r1, [r0, #0]
    185a:	2207      	movs	r2, #7
    185c:	69cb      	ldr	r3, [r1, #28]
    185e:	421a      	tst	r2, r3
    1860:	d1fc      	bne.n	185c <_i2c_master_wait_for_sync+0x4>
    1862:	4770      	bx	lr

00001864 <_i2c_master_read>:
    1864:	b570      	push	{r4, r5, r6, lr}
    1866:	0004      	movs	r4, r0
    1868:	6806      	ldr	r6, [r0, #0]
    186a:	6832      	ldr	r2, [r6, #0]
    186c:	8b45      	ldrh	r5, [r0, #26]
    186e:	8b83      	ldrh	r3, [r0, #28]
    1870:	1aed      	subs	r5, r5, r3
    1872:	b2ad      	uxth	r5, r5
    1874:	8b83      	ldrh	r3, [r0, #28]
    1876:	3b01      	subs	r3, #1
    1878:	b29b      	uxth	r3, r3
    187a:	8383      	strh	r3, [r0, #28]
    187c:	0113      	lsls	r3, r2, #4
    187e:	d51d      	bpl.n	18bc <_i2c_master_read+0x58>
    1880:	7ac3      	ldrb	r3, [r0, #11]
    1882:	2b00      	cmp	r3, #0
    1884:	d003      	beq.n	188e <_i2c_master_read+0x2a>
    1886:	8b83      	ldrh	r3, [r0, #28]
    1888:	b29b      	uxth	r3, r3
    188a:	2b01      	cmp	r3, #1
    188c:	d010      	beq.n	18b0 <_i2c_master_read+0x4c>
    188e:	8ba3      	ldrh	r3, [r4, #28]
    1890:	b29b      	uxth	r3, r3
    1892:	2b00      	cmp	r3, #0
    1894:	d102      	bne.n	189c <_i2c_master_read+0x38>
    1896:	7aa3      	ldrb	r3, [r4, #10]
    1898:	2b00      	cmp	r3, #0
    189a:	d11c      	bne.n	18d6 <_i2c_master_read+0x72>
    189c:	0020      	movs	r0, r4
    189e:	4b12      	ldr	r3, [pc, #72]	; (18e8 <_i2c_master_read+0x84>)
    18a0:	4798      	blx	r3
    18a2:	6a23      	ldr	r3, [r4, #32]
    18a4:	195d      	adds	r5, r3, r5
    18a6:	2328      	movs	r3, #40	; 0x28
    18a8:	5cf3      	ldrb	r3, [r6, r3]
    18aa:	b2db      	uxtb	r3, r3
    18ac:	702b      	strb	r3, [r5, #0]
    18ae:	bd70      	pop	{r4, r5, r6, pc}
    18b0:	6872      	ldr	r2, [r6, #4]
    18b2:	2380      	movs	r3, #128	; 0x80
    18b4:	02db      	lsls	r3, r3, #11
    18b6:	4313      	orrs	r3, r2
    18b8:	6073      	str	r3, [r6, #4]
    18ba:	e7e8      	b.n	188e <_i2c_master_read+0x2a>
    18bc:	7ac3      	ldrb	r3, [r0, #11]
    18be:	2b00      	cmp	r3, #0
    18c0:	d0e5      	beq.n	188e <_i2c_master_read+0x2a>
    18c2:	8b83      	ldrh	r3, [r0, #28]
    18c4:	b29b      	uxth	r3, r3
    18c6:	2b00      	cmp	r3, #0
    18c8:	d1e1      	bne.n	188e <_i2c_master_read+0x2a>
    18ca:	6872      	ldr	r2, [r6, #4]
    18cc:	2380      	movs	r3, #128	; 0x80
    18ce:	02db      	lsls	r3, r3, #11
    18d0:	4313      	orrs	r3, r2
    18d2:	6073      	str	r3, [r6, #4]
    18d4:	e7db      	b.n	188e <_i2c_master_read+0x2a>
    18d6:	0020      	movs	r0, r4
    18d8:	4b03      	ldr	r3, [pc, #12]	; (18e8 <_i2c_master_read+0x84>)
    18da:	4798      	blx	r3
    18dc:	6872      	ldr	r2, [r6, #4]
    18de:	23c0      	movs	r3, #192	; 0xc0
    18e0:	029b      	lsls	r3, r3, #10
    18e2:	4313      	orrs	r3, r2
    18e4:	6073      	str	r3, [r6, #4]
    18e6:	e7d9      	b.n	189c <_i2c_master_read+0x38>
    18e8:	00001859 	.word	0x00001859

000018ec <_i2c_master_write>:
    18ec:	b570      	push	{r4, r5, r6, lr}
    18ee:	0004      	movs	r4, r0
    18f0:	6805      	ldr	r5, [r0, #0]
    18f2:	8b6b      	ldrh	r3, [r5, #26]
    18f4:	075b      	lsls	r3, r3, #29
    18f6:	d503      	bpl.n	1900 <_i2c_master_write+0x14>
    18f8:	221e      	movs	r2, #30
    18fa:	2325      	movs	r3, #37	; 0x25
    18fc:	54c2      	strb	r2, [r0, r3]
    18fe:	bd70      	pop	{r4, r5, r6, pc}
    1900:	8b46      	ldrh	r6, [r0, #26]
    1902:	8b83      	ldrh	r3, [r0, #28]
    1904:	1af6      	subs	r6, r6, r3
    1906:	b2b6      	uxth	r6, r6
    1908:	8b83      	ldrh	r3, [r0, #28]
    190a:	3b01      	subs	r3, #1
    190c:	b29b      	uxth	r3, r3
    190e:	8383      	strh	r3, [r0, #28]
    1910:	4b04      	ldr	r3, [pc, #16]	; (1924 <_i2c_master_write+0x38>)
    1912:	4798      	blx	r3
    1914:	6a23      	ldr	r3, [r4, #32]
    1916:	199e      	adds	r6, r3, r6
    1918:	7833      	ldrb	r3, [r6, #0]
    191a:	b2db      	uxtb	r3, r3
    191c:	2228      	movs	r2, #40	; 0x28
    191e:	54ab      	strb	r3, [r5, r2]
    1920:	e7ed      	b.n	18fe <_i2c_master_write+0x12>
    1922:	46c0      	nop			; (mov r8, r8)
    1924:	00001859 	.word	0x00001859

00001928 <_i2c_master_write_packet>:
    1928:	b570      	push	{r4, r5, r6, lr}
    192a:	0005      	movs	r5, r0
    192c:	000c      	movs	r4, r1
    192e:	6806      	ldr	r6, [r0, #0]
    1930:	7a4b      	ldrb	r3, [r1, #9]
    1932:	2b00      	cmp	r3, #0
    1934:	d11a      	bne.n	196c <_i2c_master_write_packet+0x44>
    1936:	6873      	ldr	r3, [r6, #4]
    1938:	4a13      	ldr	r2, [pc, #76]	; (1988 <_i2c_master_write_packet+0x60>)
    193a:	4013      	ands	r3, r2
    193c:	6073      	str	r3, [r6, #4]
    193e:	6863      	ldr	r3, [r4, #4]
    1940:	622b      	str	r3, [r5, #32]
    1942:	8863      	ldrh	r3, [r4, #2]
    1944:	83ab      	strh	r3, [r5, #28]
    1946:	2200      	movs	r2, #0
    1948:	2324      	movs	r3, #36	; 0x24
    194a:	54ea      	strb	r2, [r5, r3]
    194c:	3205      	adds	r2, #5
    194e:	3301      	adds	r3, #1
    1950:	54ea      	strb	r2, [r5, r3]
    1952:	3b22      	subs	r3, #34	; 0x22
    1954:	75b3      	strb	r3, [r6, #22]
    1956:	7a23      	ldrb	r3, [r4, #8]
    1958:	2b00      	cmp	r3, #0
    195a:	d10b      	bne.n	1974 <_i2c_master_write_packet+0x4c>
    195c:	8823      	ldrh	r3, [r4, #0]
    195e:	005b      	lsls	r3, r3, #1
    1960:	7a62      	ldrb	r2, [r4, #9]
    1962:	0392      	lsls	r2, r2, #14
    1964:	4313      	orrs	r3, r2
    1966:	6273      	str	r3, [r6, #36]	; 0x24
    1968:	2000      	movs	r0, #0
    196a:	bd70      	pop	{r4, r5, r6, pc}
    196c:	7a89      	ldrb	r1, [r1, #10]
    196e:	4b07      	ldr	r3, [pc, #28]	; (198c <_i2c_master_write_packet+0x64>)
    1970:	4798      	blx	r3
    1972:	e7e0      	b.n	1936 <_i2c_master_write_packet+0xe>
    1974:	8823      	ldrh	r3, [r4, #0]
    1976:	005b      	lsls	r3, r3, #1
    1978:	7a62      	ldrb	r2, [r4, #9]
    197a:	0392      	lsls	r2, r2, #14
    197c:	4313      	orrs	r3, r2
    197e:	2280      	movs	r2, #128	; 0x80
    1980:	0212      	lsls	r2, r2, #8
    1982:	4313      	orrs	r3, r2
    1984:	6273      	str	r3, [r6, #36]	; 0x24
    1986:	e7ef      	b.n	1968 <_i2c_master_write_packet+0x40>
    1988:	fffbffff 	.word	0xfffbffff
    198c:	00001839 	.word	0x00001839

00001990 <_i2c_master_read_packet>:
    1990:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1992:	0005      	movs	r5, r0
    1994:	000c      	movs	r4, r1
    1996:	6806      	ldr	r6, [r0, #0]
    1998:	684b      	ldr	r3, [r1, #4]
    199a:	6203      	str	r3, [r0, #32]
    199c:	884b      	ldrh	r3, [r1, #2]
    199e:	8383      	strh	r3, [r0, #28]
    19a0:	2201      	movs	r2, #1
    19a2:	2324      	movs	r3, #36	; 0x24
    19a4:	54c2      	strb	r2, [r0, r3]
    19a6:	3204      	adds	r2, #4
    19a8:	3301      	adds	r3, #1
    19aa:	54c2      	strb	r2, [r0, r3]
    19ac:	6837      	ldr	r7, [r6, #0]
    19ae:	013f      	lsls	r7, r7, #4
    19b0:	0fff      	lsrs	r7, r7, #31
    19b2:	7a4b      	ldrb	r3, [r1, #9]
    19b4:	2b00      	cmp	r3, #0
    19b6:	d117      	bne.n	19e8 <_i2c_master_read_packet+0x58>
    19b8:	2f00      	cmp	r7, #0
    19ba:	d002      	beq.n	19c2 <_i2c_master_read_packet+0x32>
    19bc:	8863      	ldrh	r3, [r4, #2]
    19be:	2b01      	cmp	r3, #1
    19c0:	d016      	beq.n	19f0 <_i2c_master_read_packet+0x60>
    19c2:	6873      	ldr	r3, [r6, #4]
    19c4:	4a20      	ldr	r2, [pc, #128]	; (1a48 <_i2c_master_read_packet+0xb8>)
    19c6:	4013      	ands	r3, r2
    19c8:	6073      	str	r3, [r6, #4]
    19ca:	7a23      	ldrb	r3, [r4, #8]
    19cc:	2b00      	cmp	r3, #0
    19ce:	d115      	bne.n	19fc <_i2c_master_read_packet+0x6c>
    19d0:	2303      	movs	r3, #3
    19d2:	75b3      	strb	r3, [r6, #22]
    19d4:	8823      	ldrh	r3, [r4, #0]
    19d6:	005b      	lsls	r3, r3, #1
    19d8:	7a62      	ldrb	r2, [r4, #9]
    19da:	0392      	lsls	r2, r2, #14
    19dc:	4313      	orrs	r3, r2
    19de:	2201      	movs	r2, #1
    19e0:	4313      	orrs	r3, r2
    19e2:	6273      	str	r3, [r6, #36]	; 0x24
    19e4:	2000      	movs	r0, #0
    19e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    19e8:	7a89      	ldrb	r1, [r1, #10]
    19ea:	4b18      	ldr	r3, [pc, #96]	; (1a4c <_i2c_master_read_packet+0xbc>)
    19ec:	4798      	blx	r3
    19ee:	e7e3      	b.n	19b8 <_i2c_master_read_packet+0x28>
    19f0:	6872      	ldr	r2, [r6, #4]
    19f2:	2380      	movs	r3, #128	; 0x80
    19f4:	02db      	lsls	r3, r3, #11
    19f6:	4313      	orrs	r3, r2
    19f8:	6073      	str	r3, [r6, #4]
    19fa:	e7e6      	b.n	19ca <_i2c_master_read_packet+0x3a>
    19fc:	8823      	ldrh	r3, [r4, #0]
    19fe:	005b      	lsls	r3, r3, #1
    1a00:	7a62      	ldrb	r2, [r4, #9]
    1a02:	0392      	lsls	r2, r2, #14
    1a04:	4313      	orrs	r3, r2
    1a06:	2280      	movs	r2, #128	; 0x80
    1a08:	0212      	lsls	r2, r2, #8
    1a0a:	4313      	orrs	r3, r2
    1a0c:	6273      	str	r3, [r6, #36]	; 0x24
    1a0e:	0028      	movs	r0, r5
    1a10:	4b0f      	ldr	r3, [pc, #60]	; (1a50 <_i2c_master_read_packet+0xc0>)
    1a12:	4798      	blx	r3
    1a14:	6873      	ldr	r3, [r6, #4]
    1a16:	4a0c      	ldr	r2, [pc, #48]	; (1a48 <_i2c_master_read_packet+0xb8>)
    1a18:	4013      	ands	r3, r2
    1a1a:	6073      	str	r3, [r6, #4]
    1a1c:	2800      	cmp	r0, #0
    1a1e:	d1e2      	bne.n	19e6 <_i2c_master_read_packet+0x56>
    1a20:	0028      	movs	r0, r5
    1a22:	4b0c      	ldr	r3, [pc, #48]	; (1a54 <_i2c_master_read_packet+0xc4>)
    1a24:	4798      	blx	r3
    1a26:	2800      	cmp	r0, #0
    1a28:	d1dd      	bne.n	19e6 <_i2c_master_read_packet+0x56>
    1a2a:	2303      	movs	r3, #3
    1a2c:	75b3      	strb	r3, [r6, #22]
    1a2e:	8823      	ldrh	r3, [r4, #0]
    1a30:	0a1b      	lsrs	r3, r3, #8
    1a32:	2278      	movs	r2, #120	; 0x78
    1a34:	4313      	orrs	r3, r2
    1a36:	005b      	lsls	r3, r3, #1
    1a38:	7a62      	ldrb	r2, [r4, #9]
    1a3a:	0392      	lsls	r2, r2, #14
    1a3c:	2101      	movs	r1, #1
    1a3e:	430a      	orrs	r2, r1
    1a40:	4313      	orrs	r3, r2
    1a42:	6273      	str	r3, [r6, #36]	; 0x24
    1a44:	e7cf      	b.n	19e6 <_i2c_master_read_packet+0x56>
    1a46:	46c0      	nop			; (mov r8, r8)
    1a48:	fffbffff 	.word	0xfffbffff
    1a4c:	00001839 	.word	0x00001839
    1a50:	0000180d 	.word	0x0000180d
    1a54:	000017dd 	.word	0x000017dd

00001a58 <i2c_master_register_callback>:
    1a58:	1c93      	adds	r3, r2, #2
    1a5a:	009b      	lsls	r3, r3, #2
    1a5c:	18c3      	adds	r3, r0, r3
    1a5e:	6059      	str	r1, [r3, #4]
    1a60:	7e03      	ldrb	r3, [r0, #24]
    1a62:	2101      	movs	r1, #1
    1a64:	4091      	lsls	r1, r2
    1a66:	430b      	orrs	r3, r1
    1a68:	b2db      	uxtb	r3, r3
    1a6a:	7603      	strb	r3, [r0, #24]
    1a6c:	4770      	bx	lr
	...

00001a70 <i2c_master_read_packet_job>:
    1a70:	b510      	push	{r4, lr}
    1a72:	8b83      	ldrh	r3, [r0, #28]
    1a74:	b29b      	uxth	r3, r3
    1a76:	2205      	movs	r2, #5
    1a78:	2b00      	cmp	r3, #0
    1a7a:	d001      	beq.n	1a80 <i2c_master_read_packet_job+0x10>
    1a7c:	0010      	movs	r0, r2
    1a7e:	bd10      	pop	{r4, pc}
    1a80:	3301      	adds	r3, #1
    1a82:	7283      	strb	r3, [r0, #10]
    1a84:	72c3      	strb	r3, [r0, #11]
    1a86:	4b02      	ldr	r3, [pc, #8]	; (1a90 <i2c_master_read_packet_job+0x20>)
    1a88:	4798      	blx	r3
    1a8a:	0002      	movs	r2, r0
    1a8c:	e7f6      	b.n	1a7c <i2c_master_read_packet_job+0xc>
    1a8e:	46c0      	nop			; (mov r8, r8)
    1a90:	00001991 	.word	0x00001991

00001a94 <i2c_master_write_packet_job>:
    1a94:	b510      	push	{r4, lr}
    1a96:	8b83      	ldrh	r3, [r0, #28]
    1a98:	b29b      	uxth	r3, r3
    1a9a:	2205      	movs	r2, #5
    1a9c:	2b00      	cmp	r3, #0
    1a9e:	d001      	beq.n	1aa4 <i2c_master_write_packet_job+0x10>
    1aa0:	0010      	movs	r0, r2
    1aa2:	bd10      	pop	{r4, pc}
    1aa4:	3301      	adds	r3, #1
    1aa6:	7283      	strb	r3, [r0, #10]
    1aa8:	72c3      	strb	r3, [r0, #11]
    1aaa:	4b02      	ldr	r3, [pc, #8]	; (1ab4 <i2c_master_write_packet_job+0x20>)
    1aac:	4798      	blx	r3
    1aae:	0002      	movs	r2, r0
    1ab0:	e7f6      	b.n	1aa0 <i2c_master_write_packet_job+0xc>
    1ab2:	46c0      	nop			; (mov r8, r8)
    1ab4:	00001929 	.word	0x00001929

00001ab8 <_i2c_master_interrupt_handler>:
    1ab8:	b570      	push	{r4, r5, r6, lr}
    1aba:	0080      	lsls	r0, r0, #2
    1abc:	4b75      	ldr	r3, [pc, #468]	; (1c94 <_i2c_master_interrupt_handler+0x1dc>)
    1abe:	58c4      	ldr	r4, [r0, r3]
    1ac0:	6825      	ldr	r5, [r4, #0]
    1ac2:	682b      	ldr	r3, [r5, #0]
    1ac4:	011b      	lsls	r3, r3, #4
    1ac6:	0fda      	lsrs	r2, r3, #31
    1ac8:	7e63      	ldrb	r3, [r4, #25]
    1aca:	7e26      	ldrb	r6, [r4, #24]
    1acc:	401e      	ands	r6, r3
    1ace:	8b63      	ldrh	r3, [r4, #26]
    1ad0:	b29b      	uxth	r3, r3
    1ad2:	2b00      	cmp	r3, #0
    1ad4:	d103      	bne.n	1ade <_i2c_master_interrupt_handler+0x26>
    1ad6:	8ba3      	ldrh	r3, [r4, #28]
    1ad8:	b29b      	uxth	r3, r3
    1ada:	2b00      	cmp	r3, #0
    1adc:	d123      	bne.n	1b26 <_i2c_master_interrupt_handler+0x6e>
    1ade:	8b63      	ldrh	r3, [r4, #26]
    1ae0:	b29b      	uxth	r3, r3
    1ae2:	2b00      	cmp	r3, #0
    1ae4:	d008      	beq.n	1af8 <_i2c_master_interrupt_handler+0x40>
    1ae6:	8ba3      	ldrh	r3, [r4, #28]
    1ae8:	b29b      	uxth	r3, r3
    1aea:	2b00      	cmp	r3, #0
    1aec:	d104      	bne.n	1af8 <_i2c_master_interrupt_handler+0x40>
    1aee:	3325      	adds	r3, #37	; 0x25
    1af0:	5ce3      	ldrb	r3, [r4, r3]
    1af2:	2b05      	cmp	r3, #5
    1af4:	d100      	bne.n	1af8 <_i2c_master_interrupt_handler+0x40>
    1af6:	e06d      	b.n	1bd4 <_i2c_master_interrupt_handler+0x11c>
    1af8:	8b63      	ldrh	r3, [r4, #26]
    1afa:	b29b      	uxth	r3, r3
    1afc:	2b00      	cmp	r3, #0
    1afe:	d024      	beq.n	1b4a <_i2c_master_interrupt_handler+0x92>
    1b00:	8ba3      	ldrh	r3, [r4, #28]
    1b02:	b29b      	uxth	r3, r3
    1b04:	2b00      	cmp	r3, #0
    1b06:	d020      	beq.n	1b4a <_i2c_master_interrupt_handler+0x92>
    1b08:	8b6b      	ldrh	r3, [r5, #26]
    1b0a:	069b      	lsls	r3, r3, #26
    1b0c:	d500      	bpl.n	1b10 <_i2c_master_interrupt_handler+0x58>
    1b0e:	e081      	b.n	1c14 <_i2c_master_interrupt_handler+0x15c>
    1b10:	2a00      	cmp	r2, #0
    1b12:	d004      	beq.n	1b1e <_i2c_master_interrupt_handler+0x66>
    1b14:	8ba3      	ldrh	r3, [r4, #28]
    1b16:	b29b      	uxth	r3, r3
    1b18:	2b01      	cmp	r3, #1
    1b1a:	d100      	bne.n	1b1e <_i2c_master_interrupt_handler+0x66>
    1b1c:	e07a      	b.n	1c14 <_i2c_master_interrupt_handler+0x15c>
    1b1e:	2241      	movs	r2, #65	; 0x41
    1b20:	2325      	movs	r3, #37	; 0x25
    1b22:	54e2      	strb	r2, [r4, r3]
    1b24:	e011      	b.n	1b4a <_i2c_master_interrupt_handler+0x92>
    1b26:	7e2b      	ldrb	r3, [r5, #24]
    1b28:	07db      	lsls	r3, r3, #31
    1b2a:	d507      	bpl.n	1b3c <_i2c_master_interrupt_handler+0x84>
    1b2c:	2301      	movs	r3, #1
    1b2e:	762b      	strb	r3, [r5, #24]
    1b30:	8b6b      	ldrh	r3, [r5, #26]
    1b32:	079b      	lsls	r3, r3, #30
    1b34:	d52e      	bpl.n	1b94 <_i2c_master_interrupt_handler+0xdc>
    1b36:	2241      	movs	r2, #65	; 0x41
    1b38:	2325      	movs	r3, #37	; 0x25
    1b3a:	54e2      	strb	r2, [r4, r3]
    1b3c:	8ba3      	ldrh	r3, [r4, #28]
    1b3e:	b29b      	uxth	r3, r3
    1b40:	8363      	strh	r3, [r4, #26]
    1b42:	2325      	movs	r3, #37	; 0x25
    1b44:	5ce3      	ldrb	r3, [r4, r3]
    1b46:	2b05      	cmp	r3, #5
    1b48:	d038      	beq.n	1bbc <_i2c_master_interrupt_handler+0x104>
    1b4a:	8b63      	ldrh	r3, [r4, #26]
    1b4c:	b29b      	uxth	r3, r3
    1b4e:	2b00      	cmp	r3, #0
    1b50:	d007      	beq.n	1b62 <_i2c_master_interrupt_handler+0xaa>
    1b52:	8ba3      	ldrh	r3, [r4, #28]
    1b54:	b29b      	uxth	r3, r3
    1b56:	2b00      	cmp	r3, #0
    1b58:	d103      	bne.n	1b62 <_i2c_master_interrupt_handler+0xaa>
    1b5a:	3325      	adds	r3, #37	; 0x25
    1b5c:	5ce3      	ldrb	r3, [r4, r3]
    1b5e:	2b05      	cmp	r3, #5
    1b60:	d064      	beq.n	1c2c <_i2c_master_interrupt_handler+0x174>
    1b62:	2325      	movs	r3, #37	; 0x25
    1b64:	5ce3      	ldrb	r3, [r4, r3]
    1b66:	2b05      	cmp	r3, #5
    1b68:	d013      	beq.n	1b92 <_i2c_master_interrupt_handler+0xda>
    1b6a:	2325      	movs	r3, #37	; 0x25
    1b6c:	5ce3      	ldrb	r3, [r4, r3]
    1b6e:	2b00      	cmp	r3, #0
    1b70:	d00f      	beq.n	1b92 <_i2c_master_interrupt_handler+0xda>
    1b72:	2303      	movs	r3, #3
    1b74:	752b      	strb	r3, [r5, #20]
    1b76:	2300      	movs	r3, #0
    1b78:	8363      	strh	r3, [r4, #26]
    1b7a:	83a3      	strh	r3, [r4, #28]
    1b7c:	3325      	adds	r3, #37	; 0x25
    1b7e:	5ce3      	ldrb	r3, [r4, r3]
    1b80:	2b41      	cmp	r3, #65	; 0x41
    1b82:	d003      	beq.n	1b8c <_i2c_master_interrupt_handler+0xd4>
    1b84:	7aa3      	ldrb	r3, [r4, #10]
    1b86:	2b00      	cmp	r3, #0
    1b88:	d000      	beq.n	1b8c <_i2c_master_interrupt_handler+0xd4>
    1b8a:	e075      	b.n	1c78 <_i2c_master_interrupt_handler+0x1c0>
    1b8c:	0773      	lsls	r3, r6, #29
    1b8e:	d500      	bpl.n	1b92 <_i2c_master_interrupt_handler+0xda>
    1b90:	e07b      	b.n	1c8a <_i2c_master_interrupt_handler+0x1d2>
    1b92:	bd70      	pop	{r4, r5, r6, pc}
    1b94:	8b6b      	ldrh	r3, [r5, #26]
    1b96:	075b      	lsls	r3, r3, #29
    1b98:	d5d0      	bpl.n	1b3c <_i2c_master_interrupt_handler+0x84>
    1b9a:	2218      	movs	r2, #24
    1b9c:	2325      	movs	r3, #37	; 0x25
    1b9e:	54e2      	strb	r2, [r4, r3]
    1ba0:	2300      	movs	r3, #0
    1ba2:	83a3      	strh	r3, [r4, #28]
    1ba4:	7aa3      	ldrb	r3, [r4, #10]
    1ba6:	2b00      	cmp	r3, #0
    1ba8:	d0c8      	beq.n	1b3c <_i2c_master_interrupt_handler+0x84>
    1baa:	0020      	movs	r0, r4
    1bac:	4b3a      	ldr	r3, [pc, #232]	; (1c98 <_i2c_master_interrupt_handler+0x1e0>)
    1bae:	4798      	blx	r3
    1bb0:	686a      	ldr	r2, [r5, #4]
    1bb2:	23c0      	movs	r3, #192	; 0xc0
    1bb4:	029b      	lsls	r3, r3, #10
    1bb6:	4313      	orrs	r3, r2
    1bb8:	606b      	str	r3, [r5, #4]
    1bba:	e7bf      	b.n	1b3c <_i2c_master_interrupt_handler+0x84>
    1bbc:	331f      	adds	r3, #31
    1bbe:	5ce3      	ldrb	r3, [r4, r3]
    1bc0:	2b00      	cmp	r3, #0
    1bc2:	d003      	beq.n	1bcc <_i2c_master_interrupt_handler+0x114>
    1bc4:	0020      	movs	r0, r4
    1bc6:	4b35      	ldr	r3, [pc, #212]	; (1c9c <_i2c_master_interrupt_handler+0x1e4>)
    1bc8:	4798      	blx	r3
    1bca:	e7be      	b.n	1b4a <_i2c_master_interrupt_handler+0x92>
    1bcc:	0020      	movs	r0, r4
    1bce:	4b34      	ldr	r3, [pc, #208]	; (1ca0 <_i2c_master_interrupt_handler+0x1e8>)
    1bd0:	4798      	blx	r3
    1bd2:	e7ba      	b.n	1b4a <_i2c_master_interrupt_handler+0x92>
    1bd4:	331f      	adds	r3, #31
    1bd6:	5ce3      	ldrb	r3, [r4, r3]
    1bd8:	2b00      	cmp	r3, #0
    1bda:	d000      	beq.n	1bde <_i2c_master_interrupt_handler+0x126>
    1bdc:	e78c      	b.n	1af8 <_i2c_master_interrupt_handler+0x40>
    1bde:	3303      	adds	r3, #3
    1be0:	752b      	strb	r3, [r5, #20]
    1be2:	2300      	movs	r3, #0
    1be4:	8363      	strh	r3, [r4, #26]
    1be6:	3325      	adds	r3, #37	; 0x25
    1be8:	2200      	movs	r2, #0
    1bea:	54e2      	strb	r2, [r4, r3]
    1bec:	7aa3      	ldrb	r3, [r4, #10]
    1bee:	2b00      	cmp	r3, #0
    1bf0:	d107      	bne.n	1c02 <_i2c_master_interrupt_handler+0x14a>
    1bf2:	2301      	movs	r3, #1
    1bf4:	762b      	strb	r3, [r5, #24]
    1bf6:	07f3      	lsls	r3, r6, #31
    1bf8:	d5a7      	bpl.n	1b4a <_i2c_master_interrupt_handler+0x92>
    1bfa:	68e3      	ldr	r3, [r4, #12]
    1bfc:	0020      	movs	r0, r4
    1bfe:	4798      	blx	r3
    1c00:	e7a3      	b.n	1b4a <_i2c_master_interrupt_handler+0x92>
    1c02:	0020      	movs	r0, r4
    1c04:	4b24      	ldr	r3, [pc, #144]	; (1c98 <_i2c_master_interrupt_handler+0x1e0>)
    1c06:	4798      	blx	r3
    1c08:	686a      	ldr	r2, [r5, #4]
    1c0a:	23c0      	movs	r3, #192	; 0xc0
    1c0c:	029b      	lsls	r3, r3, #10
    1c0e:	4313      	orrs	r3, r2
    1c10:	606b      	str	r3, [r5, #4]
    1c12:	e7f0      	b.n	1bf6 <_i2c_master_interrupt_handler+0x13e>
    1c14:	2324      	movs	r3, #36	; 0x24
    1c16:	5ce3      	ldrb	r3, [r4, r3]
    1c18:	2b00      	cmp	r3, #0
    1c1a:	d103      	bne.n	1c24 <_i2c_master_interrupt_handler+0x16c>
    1c1c:	0020      	movs	r0, r4
    1c1e:	4b20      	ldr	r3, [pc, #128]	; (1ca0 <_i2c_master_interrupt_handler+0x1e8>)
    1c20:	4798      	blx	r3
    1c22:	e792      	b.n	1b4a <_i2c_master_interrupt_handler+0x92>
    1c24:	0020      	movs	r0, r4
    1c26:	4b1d      	ldr	r3, [pc, #116]	; (1c9c <_i2c_master_interrupt_handler+0x1e4>)
    1c28:	4798      	blx	r3
    1c2a:	e78e      	b.n	1b4a <_i2c_master_interrupt_handler+0x92>
    1c2c:	331f      	adds	r3, #31
    1c2e:	5ce3      	ldrb	r3, [r4, r3]
    1c30:	2b01      	cmp	r3, #1
    1c32:	d196      	bne.n	1b62 <_i2c_master_interrupt_handler+0xaa>
    1c34:	7e2b      	ldrb	r3, [r5, #24]
    1c36:	079b      	lsls	r3, r3, #30
    1c38:	d501      	bpl.n	1c3e <_i2c_master_interrupt_handler+0x186>
    1c3a:	2302      	movs	r3, #2
    1c3c:	762b      	strb	r3, [r5, #24]
    1c3e:	2303      	movs	r3, #3
    1c40:	752b      	strb	r3, [r5, #20]
    1c42:	2300      	movs	r3, #0
    1c44:	8363      	strh	r3, [r4, #26]
    1c46:	3325      	adds	r3, #37	; 0x25
    1c48:	2200      	movs	r2, #0
    1c4a:	54e2      	strb	r2, [r4, r3]
    1c4c:	07b3      	lsls	r3, r6, #30
    1c4e:	d503      	bpl.n	1c58 <_i2c_master_interrupt_handler+0x1a0>
    1c50:	2324      	movs	r3, #36	; 0x24
    1c52:	5ce3      	ldrb	r3, [r4, r3]
    1c54:	2b01      	cmp	r3, #1
    1c56:	d00b      	beq.n	1c70 <_i2c_master_interrupt_handler+0x1b8>
    1c58:	07f3      	lsls	r3, r6, #31
    1c5a:	d400      	bmi.n	1c5e <_i2c_master_interrupt_handler+0x1a6>
    1c5c:	e781      	b.n	1b62 <_i2c_master_interrupt_handler+0xaa>
    1c5e:	2324      	movs	r3, #36	; 0x24
    1c60:	5ce3      	ldrb	r3, [r4, r3]
    1c62:	2b00      	cmp	r3, #0
    1c64:	d000      	beq.n	1c68 <_i2c_master_interrupt_handler+0x1b0>
    1c66:	e77c      	b.n	1b62 <_i2c_master_interrupt_handler+0xaa>
    1c68:	68e3      	ldr	r3, [r4, #12]
    1c6a:	0020      	movs	r0, r4
    1c6c:	4798      	blx	r3
    1c6e:	e778      	b.n	1b62 <_i2c_master_interrupt_handler+0xaa>
    1c70:	6923      	ldr	r3, [r4, #16]
    1c72:	0020      	movs	r0, r4
    1c74:	4798      	blx	r3
    1c76:	e774      	b.n	1b62 <_i2c_master_interrupt_handler+0xaa>
    1c78:	0020      	movs	r0, r4
    1c7a:	4b07      	ldr	r3, [pc, #28]	; (1c98 <_i2c_master_interrupt_handler+0x1e0>)
    1c7c:	4798      	blx	r3
    1c7e:	686a      	ldr	r2, [r5, #4]
    1c80:	23e0      	movs	r3, #224	; 0xe0
    1c82:	02db      	lsls	r3, r3, #11
    1c84:	4313      	orrs	r3, r2
    1c86:	606b      	str	r3, [r5, #4]
    1c88:	e780      	b.n	1b8c <_i2c_master_interrupt_handler+0xd4>
    1c8a:	6963      	ldr	r3, [r4, #20]
    1c8c:	0020      	movs	r0, r4
    1c8e:	4798      	blx	r3
    1c90:	e77f      	b.n	1b92 <_i2c_master_interrupt_handler+0xda>
    1c92:	46c0      	nop			; (mov r8, r8)
    1c94:	20001d80 	.word	0x20001d80
    1c98:	00001859 	.word	0x00001859
    1c9c:	00001865 	.word	0x00001865
    1ca0:	000018ed 	.word	0x000018ed

00001ca4 <DMX_transmit_enable>:
    DMX_flags &= ~(1 << DMX_RXR);
}

void DMX_transmit_enable(void)
{
    DMX_flags |= (1 << DMX_TXR);
    1ca4:	4a02      	ldr	r2, [pc, #8]	; (1cb0 <DMX_transmit_enable+0xc>)
    1ca6:	7813      	ldrb	r3, [r2, #0]
    1ca8:	2104      	movs	r1, #4
    1caa:	430b      	orrs	r3, r1
    1cac:	7013      	strb	r3, [r2, #0]
}
    1cae:	4770      	bx	lr
    1cb0:	20001d28 	.word	0x20001d28

00001cb4 <configure_DMX>:
{
    1cb4:	b530      	push	{r4, r5, lr}
    1cb6:	b093      	sub	sp, #76	; 0x4c
{
	/* Sanity check arguments */
	Assert(config);

	/* Set default config in the config struct */
	config->data_order       = USART_DATAORDER_LSB;
    1cb8:	2380      	movs	r3, #128	; 0x80
    1cba:	05db      	lsls	r3, r3, #23
    1cbc:	9300      	str	r3, [sp, #0]
	config->transfer_mode    = USART_TRANSFER_ASYNCHRONOUSLY;
    1cbe:	2300      	movs	r3, #0
    1cc0:	9301      	str	r3, [sp, #4]
	config->parity           = USART_PARITY_NONE;
    1cc2:	22ff      	movs	r2, #255	; 0xff
    1cc4:	4669      	mov	r1, sp
    1cc6:	810a      	strh	r2, [r1, #8]
	config->stopbits         = USART_STOPBITS_1;
	config->character_size   = USART_CHARACTER_SIZE_8BIT;
    1cc8:	72cb      	strb	r3, [r1, #11]
	config->baudrate         = 9600;
	config->receiver_enable  = true;
    1cca:	2201      	movs	r2, #1
    1ccc:	212c      	movs	r1, #44	; 0x2c
    1cce:	4668      	mov	r0, sp
    1cd0:	5442      	strb	r2, [r0, r1]
	config->transmitter_enable = true;
    1cd2:	3101      	adds	r1, #1
    1cd4:	5442      	strb	r2, [r0, r1]
	config->clock_polarity_inverted = false;
    1cd6:	322d      	adds	r2, #45	; 0x2d
    1cd8:	5483      	strb	r3, [r0, r2]
	config->use_external_clock = false;
    1cda:	3201      	adds	r2, #1
    1cdc:	5483      	strb	r3, [r0, r2]
	config->ext_clock_freq   = 0;
    1cde:	930c      	str	r3, [sp, #48]	; 0x30
	config->mux_setting      = USART_RX_1_TX_2_XCK_3;
	config->run_in_standby   = false;
    1ce0:	3205      	adds	r2, #5
    1ce2:	5483      	strb	r3, [r0, r2]
	config->pinmux_pad0      = PINMUX_DEFAULT;
	config->pinmux_pad1      = PINMUX_DEFAULT;
	config->pinmux_pad2      = PINMUX_DEFAULT;
	config->pinmux_pad3      = PINMUX_DEFAULT;
#ifdef FEATURE_USART_OVER_SAMPLE
	config->sample_adjustment     = USART_SAMPLE_ADJUSTMENT_7_8_9;
    1ce4:	9305      	str	r3, [sp, #20]
	config->sample_rate           = USART_SAMPLE_RATE_16X_ARITHMETIC;
    1ce6:	2200      	movs	r2, #0
    1ce8:	8203      	strh	r3, [r0, #16]
#endif
#ifdef FEATURE_USART_LIN_SLAVE
	config->lin_slave_enable      = false;
    1cea:	76c2      	strb	r2, [r0, #27]
#endif

#ifdef FEATURE_USART_LIN_MASTER
	config->lin_node = LIN_INVALID_MODE;
    1cec:	9307      	str	r3, [sp, #28]
	config->lin_header_delay = LIN_MASTER_HEADER_DELAY_0;
    1cee:	8403      	strh	r3, [r0, #32]
	config->lin_break_length = LIN_MASTER_BREAK_LENGTH_13_BIT;
    1cf0:	8443      	strh	r3, [r0, #34]	; 0x22
#endif

#ifdef FEATURE_USART_IMMEDIATE_BUFFER_OVERFLOW_NOTIFICATION
	config->immediate_buffer_overflow_notification  = false;
    1cf2:	7602      	strb	r2, [r0, #24]
#endif
#ifdef FEATURE_USART_START_FRAME_DECTION
	config->start_frame_detection_enable            = false;
    1cf4:	2324      	movs	r3, #36	; 0x24
    1cf6:	54c2      	strb	r2, [r0, r3]
#endif
#ifdef FEATURE_USART_IRDA
	config->encoding_format_enable                  = false;
    1cf8:	7642      	strb	r2, [r0, #25]
	config->receive_pulse_length                    = 19;
    1cfa:	2313      	movs	r3, #19
    1cfc:	7683      	strb	r3, [r0, #26]
	config->iso7816_config.inhibit_nack             = ISO7816_INHIBIT_NACK_DISABLE;
	config->iso7816_config.successive_recv_nack     = ISO7816_SUCCESSIVE_RECV_NACK_DISABLE;
	config->iso7816_config.max_iterations           = 7;
#endif
#ifdef FEATURE_USART_COLLISION_DECTION
	config->collision_detection_enable              = false;
    1cfe:	3313      	adds	r3, #19
    1d00:	54c2      	strb	r2, [r0, r3]
#endif
#ifdef FEATURE_USART_RS485
	config->rs485_guard_time = RS485_GUARD_TIME_0_BIT;
    1d02:	3b01      	subs	r3, #1
    1d04:	54c2      	strb	r2, [r0, r3]
    config_usart.baudrate    =					250000;
    1d06:	4b28      	ldr	r3, [pc, #160]	; (1da8 <configure_DMX+0xf4>)
    1d08:	930a      	str	r3, [sp, #40]	; 0x28
    config_usart.mux_setting =					USART_RX_1_TX_0_XCK_1;
    1d0a:	2380      	movs	r3, #128	; 0x80
    1d0c:	035b      	lsls	r3, r3, #13
    1d0e:	9303      	str	r3, [sp, #12]
    config_usart.pinmux_pad0 =					PINMUX_PB16C_SERCOM5_PAD0;
    1d10:	4b26      	ldr	r3, [pc, #152]	; (1dac <configure_DMX+0xf8>)
    1d12:	930e      	str	r3, [sp, #56]	; 0x38
    config_usart.pinmux_pad1 =					PINMUX_PB17C_SERCOM5_PAD1;
    1d14:	4b26      	ldr	r3, [pc, #152]	; (1db0 <configure_DMX+0xfc>)
    1d16:	930f      	str	r3, [sp, #60]	; 0x3c
    config_usart.pinmux_pad2 =					PINMUX_UNUSED;
    1d18:	2301      	movs	r3, #1
    1d1a:	425b      	negs	r3, r3
    1d1c:	9310      	str	r3, [sp, #64]	; 0x40
    config_usart.pinmux_pad3 =					PINMUX_UNUSED;
    1d1e:	9311      	str	r3, [sp, #68]	; 0x44
    config_usart.stopbits =						USART_STOPBITS_2;
    1d20:	3341      	adds	r3, #65	; 0x41
    1d22:	7283      	strb	r3, [r0, #10]
    config_usart.generator_source =				GCLK_GENERATOR_3;
    1d24:	2203      	movs	r2, #3
    1d26:	3b0b      	subs	r3, #11
    1d28:	54c2      	strb	r2, [r0, r3]
    while (usart_init(&DMX_instance, DMX_MODULE, &config_usart) != STATUS_OK);
    1d2a:	4d22      	ldr	r5, [pc, #136]	; (1db4 <configure_DMX+0x100>)
    1d2c:	4c22      	ldr	r4, [pc, #136]	; (1db8 <configure_DMX+0x104>)
    1d2e:	466a      	mov	r2, sp
    1d30:	4922      	ldr	r1, [pc, #136]	; (1dbc <configure_DMX+0x108>)
    1d32:	0028      	movs	r0, r5
    1d34:	47a0      	blx	r4
    1d36:	2800      	cmp	r0, #0
    1d38:	d1f9      	bne.n	1d2e <configure_DMX+0x7a>
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);
    1d3a:	4d1e      	ldr	r5, [pc, #120]	; (1db4 <configure_DMX+0x100>)
    1d3c:	682c      	ldr	r4, [r5, #0]

#if USART_CALLBACK_MODE == true
	/* Enable Global interrupt for module */
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    1d3e:	0020      	movs	r0, r4
    1d40:	4b1f      	ldr	r3, [pc, #124]	; (1dc0 <configure_DMX+0x10c>)
    1d42:	4798      	blx	r3
 * \param[in] vector Interrupt vector to enable
 */
static inline void system_interrupt_enable(
		const enum system_interrupt_vector vector)
{
	NVIC->ISER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
    1d44:	231f      	movs	r3, #31
    1d46:	4018      	ands	r0, r3
    1d48:	3b1e      	subs	r3, #30
    1d4a:	4083      	lsls	r3, r0
    1d4c:	4a1d      	ldr	r2, [pc, #116]	; (1dc4 <configure_DMX+0x110>)
    1d4e:	6013      	str	r3, [r2, #0]
	SercomUsart *const usart_hw = &(module->hw->USART);
    1d50:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
    1d52:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    1d54:	2b00      	cmp	r3, #0
    1d56:	d1fc      	bne.n	1d52 <configure_DMX+0x9e>

	/* Wait until synchronization is complete */
	_usart_wait_for_sync(module);

	/* Enable USART module */
	usart_hw->CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    1d58:	6823      	ldr	r3, [r4, #0]
    1d5a:	2202      	movs	r2, #2
    1d5c:	4313      	orrs	r3, r2
    1d5e:	6023      	str	r3, [r4, #0]
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);
    1d60:	4b14      	ldr	r3, [pc, #80]	; (1db4 <configure_DMX+0x100>)
    1d62:	681b      	ldr	r3, [r3, #0]
	return (usart_hw->SYNCBUSY.reg);
    1d64:	69da      	ldr	r2, [r3, #28]
	while (usart_is_syncing(module)) {
    1d66:	2a00      	cmp	r2, #0
    1d68:	d1fc      	bne.n	1d64 <configure_DMX+0xb0>
			module->receiver_enabled = true;
			break;

		case USART_TRANSCEIVER_TX:
			/* Enable TX */
			usart_hw->CTRLB.reg |= SERCOM_USART_CTRLB_TXEN;
    1d6a:	6859      	ldr	r1, [r3, #4]
    1d6c:	2280      	movs	r2, #128	; 0x80
    1d6e:	0252      	lsls	r2, r2, #9
    1d70:	430a      	orrs	r2, r1
    1d72:	605a      	str	r2, [r3, #4]
			module->transmitter_enabled = true;
    1d74:	2101      	movs	r1, #1
    1d76:	4a0f      	ldr	r2, [pc, #60]	; (1db4 <configure_DMX+0x100>)
    1d78:	71d1      	strb	r1, [r2, #7]
	return (usart_hw->SYNCBUSY.reg);
    1d7a:	69da      	ldr	r2, [r3, #28]
	while (usart_is_syncing(module)) {
    1d7c:	2a00      	cmp	r2, #0
    1d7e:	d1fc      	bne.n	1d7a <configure_DMX+0xc6>
    delay_ms(1);
    1d80:	2000      	movs	r0, #0
    1d82:	4b11      	ldr	r3, [pc, #68]	; (1dc8 <configure_DMX+0x114>)
    1d84:	4798      	blx	r3
    1d86:	0002      	movs	r2, r0
    1d88:	2300      	movs	r3, #0
    1d8a:	4810      	ldr	r0, [pc, #64]	; (1dcc <configure_DMX+0x118>)
    1d8c:	2100      	movs	r1, #0
    1d8e:	1880      	adds	r0, r0, r2
    1d90:	4159      	adcs	r1, r3
    1d92:	4a0f      	ldr	r2, [pc, #60]	; (1dd0 <configure_DMX+0x11c>)
    1d94:	2300      	movs	r3, #0
    1d96:	4c0f      	ldr	r4, [pc, #60]	; (1dd4 <configure_DMX+0x120>)
    1d98:	47a0      	blx	r4
    1d9a:	4b0f      	ldr	r3, [pc, #60]	; (1dd8 <configure_DMX+0x124>)
    1d9c:	4798      	blx	r3
    DMX_transmit_enable();
    1d9e:	4b0f      	ldr	r3, [pc, #60]	; (1ddc <configure_DMX+0x128>)
    1da0:	4798      	blx	r3
}
    1da2:	b013      	add	sp, #76	; 0x4c
    1da4:	bd30      	pop	{r4, r5, pc}
    1da6:	46c0      	nop			; (mov r8, r8)
    1da8:	0003d090 	.word	0x0003d090
    1dac:	00300002 	.word	0x00300002
    1db0:	00310002 	.word	0x00310002
    1db4:	20001d2c 	.word	0x20001d2c
    1db8:	00002ebd 	.word	0x00002ebd
    1dbc:	42001800 	.word	0x42001800
    1dc0:	00003535 	.word	0x00003535
    1dc4:	e000e100 	.word	0xe000e100
    1dc8:	00004e5d 	.word	0x00004e5d
    1dcc:	00001b57 	.word	0x00001b57
    1dd0:	00001b58 	.word	0x00001b58
    1dd4:	000063f5 	.word	0x000063f5
    1dd8:	20000001 	.word	0x20000001
    1ddc:	00001ca5 	.word	0x00001ca5

00001de0 <DMX_change_baudrate>:
    /* usart_register_callback(&DMX_instance, DMX_transmit_callback, USART_CALLBACK_BUFFER_TRANSMITTED);
     usart_enable_callback(&DMX_instance, USART_CALLBACK_BUFFER_TRANSMITTED);*/
}

void DMX_change_baudrate(uint32_t baud)
{
    1de0:	b510      	push	{r4, lr}
    float part = 1.0 - 16.0 * baud / 48000000;
    1de2:	4b22      	ldr	r3, [pc, #136]	; (1e6c <DMX_change_baudrate+0x8c>)
    1de4:	4798      	blx	r3
    1de6:	2200      	movs	r2, #0
    1de8:	4b21      	ldr	r3, [pc, #132]	; (1e70 <DMX_change_baudrate+0x90>)
    1dea:	4c22      	ldr	r4, [pc, #136]	; (1e74 <DMX_change_baudrate+0x94>)
    1dec:	47a0      	blx	r4
    1dee:	2200      	movs	r2, #0
    1df0:	4b21      	ldr	r3, [pc, #132]	; (1e78 <DMX_change_baudrate+0x98>)
    1df2:	4c22      	ldr	r4, [pc, #136]	; (1e7c <DMX_change_baudrate+0x9c>)
    1df4:	47a0      	blx	r4
    1df6:	0002      	movs	r2, r0
    1df8:	000b      	movs	r3, r1
    1dfa:	2000      	movs	r0, #0
    1dfc:	4920      	ldr	r1, [pc, #128]	; (1e80 <DMX_change_baudrate+0xa0>)
    1dfe:	4c21      	ldr	r4, [pc, #132]	; (1e84 <DMX_change_baudrate+0xa4>)
    1e00:	47a0      	blx	r4
    1e02:	4b21      	ldr	r3, [pc, #132]	; (1e88 <DMX_change_baudrate+0xa8>)
    1e04:	4798      	blx	r3
    uint16_t baudrate = (uint16_t)(65536 * part);
    1e06:	218f      	movs	r1, #143	; 0x8f
    1e08:	05c9      	lsls	r1, r1, #23
    1e0a:	4b20      	ldr	r3, [pc, #128]	; (1e8c <DMX_change_baudrate+0xac>)
    1e0c:	4798      	blx	r3
    1e0e:	4b20      	ldr	r3, [pc, #128]	; (1e90 <DMX_change_baudrate+0xb0>)
    1e10:	4798      	blx	r3
    1e12:	b280      	uxth	r0, r0

    if(baudrate == DMX_MODULE->USART.BAUD.reg)return;
    1e14:	4b1f      	ldr	r3, [pc, #124]	; (1e94 <DMX_change_baudrate+0xb4>)
    1e16:	899b      	ldrh	r3, [r3, #12]
    1e18:	b29b      	uxth	r3, r3
    1e1a:	4298      	cmp	r0, r3
    1e1c:	d024      	beq.n	1e68 <DMX_change_baudrate+0x88>

    DMX_MODULE->USART.CTRLA.reg &= ~(1 << SERCOM_USART_CTRLA_ENABLE_Pos);
    1e1e:	4b1d      	ldr	r3, [pc, #116]	; (1e94 <DMX_change_baudrate+0xb4>)
    1e20:	681a      	ldr	r2, [r3, #0]
    1e22:	2102      	movs	r1, #2
    1e24:	438a      	bics	r2, r1
    1e26:	601a      	str	r2, [r3, #0]
    DMX_MODULE->USART.CTRLB.bit.TXEN = 0;
    1e28:	685a      	ldr	r2, [r3, #4]
    1e2a:	491b      	ldr	r1, [pc, #108]	; (1e98 <DMX_change_baudrate+0xb8>)
    1e2c:	400a      	ands	r2, r1
    1e2e:	605a      	str	r2, [r3, #4]
    DMX_MODULE->USART.CTRLB.bit.RXEN = 0;
    1e30:	685a      	ldr	r2, [r3, #4]
    1e32:	491a      	ldr	r1, [pc, #104]	; (1e9c <DMX_change_baudrate+0xbc>)
    1e34:	400a      	ands	r2, r1
    1e36:	605a      	str	r2, [r3, #4]
    while(DMX_MODULE->USART.SYNCBUSY.reg);
    1e38:	001a      	movs	r2, r3
    1e3a:	69d3      	ldr	r3, [r2, #28]
    1e3c:	2b00      	cmp	r3, #0
    1e3e:	d1fc      	bne.n	1e3a <DMX_change_baudrate+0x5a>

    DMX_MODULE->USART.BAUD.reg = baudrate;
    1e40:	4b14      	ldr	r3, [pc, #80]	; (1e94 <DMX_change_baudrate+0xb4>)
    1e42:	8198      	strh	r0, [r3, #12]
    DMX_MODULE->USART.CTRLB.bit.TXEN = 1;
    1e44:	6859      	ldr	r1, [r3, #4]
    1e46:	2280      	movs	r2, #128	; 0x80
    1e48:	0252      	lsls	r2, r2, #9
    1e4a:	430a      	orrs	r2, r1
    1e4c:	605a      	str	r2, [r3, #4]
    DMX_MODULE->USART.CTRLB.bit.RXEN = 1;
    1e4e:	6859      	ldr	r1, [r3, #4]
    1e50:	2280      	movs	r2, #128	; 0x80
    1e52:	0292      	lsls	r2, r2, #10
    1e54:	430a      	orrs	r2, r1
    1e56:	605a      	str	r2, [r3, #4]
    DMX_MODULE->USART.CTRLA.reg |= (1 << SERCOM_USART_CTRLA_ENABLE_Pos);
    1e58:	681a      	ldr	r2, [r3, #0]
    1e5a:	2102      	movs	r1, #2
    1e5c:	430a      	orrs	r2, r1
    1e5e:	601a      	str	r2, [r3, #0]
    while(DMX_MODULE->USART.SYNCBUSY.reg);
    1e60:	001a      	movs	r2, r3
    1e62:	69d3      	ldr	r3, [r2, #28]
    1e64:	2b00      	cmp	r3, #0
    1e66:	d1fc      	bne.n	1e62 <DMX_change_baudrate+0x82>

    1e68:	bd10      	pop	{r4, pc}
    1e6a:	46c0      	nop			; (mov r8, r8)
    1e6c:	00008689 	.word	0x00008689
    1e70:	40300000 	.word	0x40300000
    1e74:	00007af5 	.word	0x00007af5
    1e78:	4186e360 	.word	0x4186e360
    1e7c:	0000748d 	.word	0x0000748d
    1e80:	3ff00000 	.word	0x3ff00000
    1e84:	00007ff5 	.word	0x00007ff5
    1e88:	0000879d 	.word	0x0000879d
    1e8c:	00006789 	.word	0x00006789
    1e90:	00006489 	.word	0x00006489
    1e94:	42001800 	.word	0x42001800
    1e98:	fffeffff 	.word	0xfffeffff
    1e9c:	fffdffff 	.word	0xfffdffff

00001ea0 <DMX_SendMessage>:
{
    1ea0:	b5f0      	push	{r4, r5, r6, r7, lr}
    1ea2:	b083      	sub	sp, #12
    1ea4:	0004      	movs	r4, r0
    1ea6:	000d      	movs	r5, r1
		port_base->OUTSET.reg = pin_mask;
    1ea8:	2280      	movs	r2, #128	; 0x80
    1eaa:	0352      	lsls	r2, r2, #13
    1eac:	2382      	movs	r3, #130	; 0x82
    1eae:	05db      	lsls	r3, r3, #23
    1eb0:	619a      	str	r2, [r3, #24]
    uint8_t null_var =0;
    1eb2:	2200      	movs	r2, #0
    1eb4:	466b      	mov	r3, sp
    1eb6:	71da      	strb	r2, [r3, #7]
    DMX_change_baudrate(100000);
    1eb8:	480f      	ldr	r0, [pc, #60]	; (1ef8 <DMX_SendMessage+0x58>)
    1eba:	4b10      	ldr	r3, [pc, #64]	; (1efc <DMX_SendMessage+0x5c>)
    1ebc:	4798      	blx	r3
    while(usart_write_buffer_job(&DMX_instance, &null_var, 1)!=STATUS_OK);
    1ebe:	4e10      	ldr	r6, [pc, #64]	; (1f00 <DMX_SendMessage+0x60>)
    1ec0:	4f10      	ldr	r7, [pc, #64]	; (1f04 <DMX_SendMessage+0x64>)
    1ec2:	2201      	movs	r2, #1
    1ec4:	466b      	mov	r3, sp
    1ec6:	1dd9      	adds	r1, r3, #7
    1ec8:	0030      	movs	r0, r6
    1eca:	47b8      	blx	r7
    1ecc:	2800      	cmp	r0, #0
    1ece:	d1f8      	bne.n	1ec2 <DMX_SendMessage+0x22>
    DMX_change_baudrate(250000);
    1ed0:	480d      	ldr	r0, [pc, #52]	; (1f08 <DMX_SendMessage+0x68>)
    1ed2:	4b0a      	ldr	r3, [pc, #40]	; (1efc <DMX_SendMessage+0x5c>)
    1ed4:	4798      	blx	r3
    while(usart_write_buffer_job(&DMX_instance, &null_var, 1)!=STATUS_OK);
    1ed6:	4e0a      	ldr	r6, [pc, #40]	; (1f00 <DMX_SendMessage+0x60>)
    1ed8:	4f0a      	ldr	r7, [pc, #40]	; (1f04 <DMX_SendMessage+0x64>)
    1eda:	2201      	movs	r2, #1
    1edc:	466b      	mov	r3, sp
    1ede:	1dd9      	adds	r1, r3, #7
    1ee0:	0030      	movs	r0, r6
    1ee2:	47b8      	blx	r7
    1ee4:	2800      	cmp	r0, #0
    1ee6:	d1f8      	bne.n	1eda <DMX_SendMessage+0x3a>
    usart_write_buffer_job(&DMX_instance, p_string, length);
    1ee8:	002a      	movs	r2, r5
    1eea:	0021      	movs	r1, r4
    1eec:	4804      	ldr	r0, [pc, #16]	; (1f00 <DMX_SendMessage+0x60>)
    1eee:	4b05      	ldr	r3, [pc, #20]	; (1f04 <DMX_SendMessage+0x64>)
    1ef0:	4798      	blx	r3
}
    1ef2:	b003      	add	sp, #12
    1ef4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1ef6:	46c0      	nop			; (mov r8, r8)
    1ef8:	000186a0 	.word	0x000186a0
    1efc:	00001de1 	.word	0x00001de1
    1f00:	20001d2c 	.word	0x20001d2c
    1f04:	0000331d 	.word	0x0000331d
    1f08:	0003d090 	.word	0x0003d090

00001f0c <read_memory_map>:
    read_memory_map();
    get_num_of_saves();
}

/* Reads the memory map */
void read_memory_map(void) {
    1f0c:	b510      	push	{r4, lr}
    1f0e:	b082      	sub	sp, #8
    uint8_t i2c_packet[2] = {0, 0};
    1f10:	a901      	add	r1, sp, #4
    1f12:	2400      	movs	r4, #0
    1f14:	700c      	strb	r4, [r1, #0]
    1f16:	704c      	strb	r4, [r1, #1]
    i2c_read(EEPROM_ADDR, i2c_packet, MEMORY_MAP_SIZE_BYTES);
    1f18:	2204      	movs	r2, #4
    1f1a:	2050      	movs	r0, #80	; 0x50
    1f1c:	4b04      	ldr	r3, [pc, #16]	; (1f30 <read_memory_map+0x24>)
    1f1e:	4798      	blx	r3
    fs.memory_map = *(uint32_t *)i2c_get_rx_Buffer();
    1f20:	4b04      	ldr	r3, [pc, #16]	; (1f34 <read_memory_map+0x28>)
    1f22:	4798      	blx	r3
    1f24:	4b04      	ldr	r3, [pc, #16]	; (1f38 <read_memory_map+0x2c>)
    1f26:	6802      	ldr	r2, [r0, #0]
    1f28:	601a      	str	r2, [r3, #0]
    1f2a:	605c      	str	r4, [r3, #4]
}
    1f2c:	b002      	add	sp, #8
    1f2e:	bd10      	pop	{r4, pc}
    1f30:	00003d55 	.word	0x00003d55
    1f34:	00003da5 	.word	0x00003da5
    1f38:	20001d60 	.word	0x20001d60

00001f3c <write_memory_map>:

/* Writes the memory map */
void write_memory_map(void) {
    1f3c:	b510      	push	{r4, lr}
    1f3e:	b084      	sub	sp, #16
    uint8_t i2c_packet[10] = {0, 0};
    1f40:	ac01      	add	r4, sp, #4
    1f42:	220a      	movs	r2, #10
    1f44:	2100      	movs	r1, #0
    1f46:	0020      	movs	r0, r4
    1f48:	4b08      	ldr	r3, [pc, #32]	; (1f6c <write_memory_map+0x30>)
    1f4a:	4798      	blx	r3
    for (uint8_t i = 0; i < MEMORY_MAP_SIZE_BYTES; i++)
        i2c_packet[i + 2] = (fs.memory_map >> (i * 8)) & 0xFF;
    1f4c:	4b08      	ldr	r3, [pc, #32]	; (1f70 <write_memory_map+0x34>)
    1f4e:	681b      	ldr	r3, [r3, #0]
    1f50:	70a3      	strb	r3, [r4, #2]
    1f52:	0a1a      	lsrs	r2, r3, #8
    1f54:	70e2      	strb	r2, [r4, #3]
    1f56:	0c1a      	lsrs	r2, r3, #16
    1f58:	7122      	strb	r2, [r4, #4]
    1f5a:	0e1b      	lsrs	r3, r3, #24
    1f5c:	7163      	strb	r3, [r4, #5]
    i2c_write(EEPROM_ADDR, i2c_packet, MEMORY_MAP_SIZE_BYTES + 2);
    1f5e:	2206      	movs	r2, #6
    1f60:	0021      	movs	r1, r4
    1f62:	2050      	movs	r0, #80	; 0x50
    1f64:	4b03      	ldr	r3, [pc, #12]	; (1f74 <write_memory_map+0x38>)
    1f66:	4798      	blx	r3
}
    1f68:	b004      	add	sp, #16
    1f6a:	bd10      	pop	{r4, pc}
    1f6c:	00008973 	.word	0x00008973
    1f70:	20001d60 	.word	0x20001d60
    1f74:	00003ce1 	.word	0x00003ce1

00001f78 <preset_get_mem_pos>:

/* Converts preset position to a actual pointer in memory. Returns -1 if preset isn't in memory map. */
uint16_t preset_get_mem_pos(uint8_t position) {
    if (position > MAX_SAVES)
    1f78:	2820      	cmp	r0, #32
    1f7a:	d901      	bls.n	1f80 <preset_get_mem_pos+0x8>
        return 0xFFFF;
    1f7c:	4807      	ldr	r0, [pc, #28]	; (1f9c <preset_get_mem_pos+0x24>)

    if(mem_pos % MEMORY_PAGE_SIZE)
        mem_pos += MEMORY_PAGE_SIZE - mem_pos % 64;

    return mem_pos;
}
    1f7e:	4770      	bx	lr
    uint16_t mem_pos = position * sizeof(PRESET) + MEMORY_PAGE_SIZE;
    1f80:	23c8      	movs	r3, #200	; 0xc8
    1f82:	005b      	lsls	r3, r3, #1
    1f84:	4358      	muls	r0, r3
    1f86:	3040      	adds	r0, #64	; 0x40
    1f88:	b280      	uxth	r0, r0
    if(mem_pos % MEMORY_PAGE_SIZE)
    1f8a:	3b52      	subs	r3, #82	; 0x52
    1f8c:	3bff      	subs	r3, #255	; 0xff
    1f8e:	4203      	tst	r3, r0
    1f90:	d0f5      	beq.n	1f7e <preset_get_mem_pos+0x6>
        mem_pos += MEMORY_PAGE_SIZE - mem_pos % 64;
    1f92:	4398      	bics	r0, r3
    1f94:	3040      	adds	r0, #64	; 0x40
    1f96:	b280      	uxth	r0, r0
    1f98:	e7f1      	b.n	1f7e <preset_get_mem_pos+0x6>
    1f9a:	46c0      	nop			; (mov r8, r8)
    1f9c:	0000ffff 	.word	0x0000ffff

00001fa0 <get_num_of_saves>:

/* Checks the memory map and counts saves. */
void get_num_of_saves(void) {
    1fa0:	b5f0      	push	{r4, r5, r6, r7, lr}
    uint8_t stevec = 0;
    for (uint8_t i = 0; i < MAX_SAVES; i++) {
        if (fs.memory_map & (1ULL << i))
    1fa2:	4b10      	ldr	r3, [pc, #64]	; (1fe4 <get_num_of_saves+0x44>)
    1fa4:	681f      	ldr	r7, [r3, #0]
    1fa6:	685c      	ldr	r4, [r3, #4]
    1fa8:	2300      	movs	r3, #0
    uint8_t stevec = 0;
    1faa:	2100      	movs	r1, #0
        if (fs.memory_map & (1ULL << i))
    1fac:	2620      	movs	r6, #32
    1fae:	2001      	movs	r0, #1
    1fb0:	e009      	b.n	1fc6 <get_num_of_saves+0x26>
    1fb2:	1af2      	subs	r2, r6, r3
    1fb4:	0025      	movs	r5, r4
    1fb6:	4095      	lsls	r5, r2
    1fb8:	003a      	movs	r2, r7
    1fba:	40da      	lsrs	r2, r3
    1fbc:	432a      	orrs	r2, r5
    1fbe:	e009      	b.n	1fd4 <get_num_of_saves+0x34>
    1fc0:	3301      	adds	r3, #1
    for (uint8_t i = 0; i < MAX_SAVES; i++) {
    1fc2:	2b20      	cmp	r3, #32
    1fc4:	d00b      	beq.n	1fde <get_num_of_saves+0x3e>
        if (fs.memory_map & (1ULL << i))
    1fc6:	2220      	movs	r2, #32
    1fc8:	4252      	negs	r2, r2
    1fca:	189a      	adds	r2, r3, r2
    1fcc:	d4f1      	bmi.n	1fb2 <get_num_of_saves+0x12>
    1fce:	0025      	movs	r5, r4
    1fd0:	40d5      	lsrs	r5, r2
    1fd2:	002a      	movs	r2, r5
    1fd4:	4202      	tst	r2, r0
    1fd6:	d0f3      	beq.n	1fc0 <get_num_of_saves+0x20>
            stevec++;
    1fd8:	3101      	adds	r1, #1
    1fda:	b2c9      	uxtb	r1, r1
    1fdc:	e7f0      	b.n	1fc0 <get_num_of_saves+0x20>
    }
    fs.num_of_saves = stevec;
    1fde:	4b01      	ldr	r3, [pc, #4]	; (1fe4 <get_num_of_saves+0x44>)
    1fe0:	7219      	strb	r1, [r3, #8]
}
    1fe2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1fe4:	20001d60 	.word	0x20001d60

00001fe8 <memory_init>:
void memory_init(void) {
    1fe8:	b510      	push	{r4, lr}
    fs.memory_map = 0;
    1fea:	2000      	movs	r0, #0
    1fec:	2100      	movs	r1, #0
    1fee:	4b04      	ldr	r3, [pc, #16]	; (2000 <STACK_SIZE>)
    1ff0:	6018      	str	r0, [r3, #0]
    1ff2:	6059      	str	r1, [r3, #4]
    read_memory_map();
    1ff4:	4b03      	ldr	r3, [pc, #12]	; (2004 <STACK_SIZE+0x4>)
    1ff6:	4798      	blx	r3
    get_num_of_saves();
    1ff8:	4b03      	ldr	r3, [pc, #12]	; (2008 <STACK_SIZE+0x8>)
    1ffa:	4798      	blx	r3
}
    1ffc:	bd10      	pop	{r4, pc}
    1ffe:	46c0      	nop			; (mov r8, r8)
    2000:	20001d60 	.word	0x20001d60
    2004:	00001f0d 	.word	0x00001f0d
    2008:	00001fa1 	.word	0x00001fa1

0000200c <read_memory>:

/* Loads the preset from 0-MAX_SAVES, returns 0 if it fails, 1 on success*/
uint8_t read_memory(PRESET *preset, uint8_t position) {
    200c:	b530      	push	{r4, r5, lr}
    200e:	b083      	sub	sp, #12
    2010:	0004      	movs	r4, r0

    if(!(fs.memory_map & (1 << position)))
    2012:	4815      	ldr	r0, [pc, #84]	; (2068 <read_memory+0x5c>)
    2014:	2301      	movs	r3, #1
    2016:	408b      	lsls	r3, r1
    2018:	17da      	asrs	r2, r3, #31
    201a:	6805      	ldr	r5, [r0, #0]
    201c:	402b      	ands	r3, r5
    201e:	6840      	ldr	r0, [r0, #4]
    2020:	4002      	ands	r2, r0
    2022:	4313      	orrs	r3, r2
        return 0;
    2024:	2200      	movs	r2, #0
    if(!(fs.memory_map & (1 << position)))
    2026:	2b00      	cmp	r3, #0
    2028:	d01a      	beq.n	2060 <read_memory+0x54>
    uint16_t mem_position = preset_get_mem_pos(position);
    202a:	0008      	movs	r0, r1
    202c:	4b0f      	ldr	r3, [pc, #60]	; (206c <read_memory+0x60>)
    202e:	4798      	blx	r3

    if (mem_position == 0xFFFF)
    2030:	4b0f      	ldr	r3, [pc, #60]	; (2070 <read_memory+0x64>)
        return 0;
    2032:	2200      	movs	r2, #0
    if (mem_position == 0xFFFF)
    2034:	4298      	cmp	r0, r3
    2036:	d013      	beq.n	2060 <read_memory+0x54>
    uint8_t i2c_packet[2] = {mem_position >> 8, mem_position & 0xFF};
    2038:	a901      	add	r1, sp, #4
    203a:	0a03      	lsrs	r3, r0, #8
    203c:	700b      	strb	r3, [r1, #0]
    203e:	7048      	strb	r0, [r1, #1]
    i2c_read(EEPROM_ADDR, i2c_packet, sizeof(PRESET));
    2040:	3291      	adds	r2, #145	; 0x91
    2042:	32ff      	adds	r2, #255	; 0xff
    2044:	2050      	movs	r0, #80	; 0x50
    2046:	4b0b      	ldr	r3, [pc, #44]	; (2074 <read_memory+0x68>)
    2048:	4798      	blx	r3
    uint8_t *p_to_preset = (uint8_t *)preset;
    uint8_t *p_to_buf = i2c_get_rx_Buffer();
    204a:	4b0b      	ldr	r3, [pc, #44]	; (2078 <read_memory+0x6c>)
    204c:	4798      	blx	r3
    204e:	2300      	movs	r3, #0
    for (uint16_t i = 0; i < sizeof(PRESET); i++)
    2050:	21c8      	movs	r1, #200	; 0xc8
    2052:	0049      	lsls	r1, r1, #1
        *(p_to_preset++) = *(p_to_buf++);
    2054:	5cc2      	ldrb	r2, [r0, r3]
    2056:	54e2      	strb	r2, [r4, r3]
    2058:	3301      	adds	r3, #1
    for (uint16_t i = 0; i < sizeof(PRESET); i++)
    205a:	428b      	cmp	r3, r1
    205c:	d1fa      	bne.n	2054 <read_memory+0x48>
    return 1;
    205e:	2201      	movs	r2, #1
}
    2060:	0010      	movs	r0, r2
    2062:	b003      	add	sp, #12
    2064:	bd30      	pop	{r4, r5, pc}
    2066:	46c0      	nop			; (mov r8, r8)
    2068:	20001d60 	.word	0x20001d60
    206c:	00001f79 	.word	0x00001f79
    2070:	0000ffff 	.word	0x0000ffff
    2074:	00003d55 	.word	0x00003d55
    2078:	00003da5 	.word	0x00003da5

0000207c <memory_full_format>:
/* Deletes the preset. */
void preset_delete(PRESET *preset) {
    fs.memory_map &= ~(1UL << preset->position);
    write_memory_map();
}
void memory_full_format(void) {
    207c:	b5f0      	push	{r4, r5, r6, r7, lr}
    207e:	b093      	sub	sp, #76	; 0x4c
    2080:	ab01      	add	r3, sp, #4
    2082:	2146      	movs	r1, #70	; 0x46
    2084:	4469      	add	r1, sp
    uint8_t null_array[66];
    for (uint8_t i = 0; i < 66; i++)
        null_array[i] = 0;
    2086:	2200      	movs	r2, #0
    2088:	701a      	strb	r2, [r3, #0]
    208a:	3301      	adds	r3, #1
    for (uint8_t i = 0; i < 66; i++)
    208c:	428b      	cmp	r3, r1
    208e:	d1fb      	bne.n	2088 <memory_full_format+0xc>
    2090:	2400      	movs	r4, #0
    for (uint16_t i = 0; i < MEMORY_SIZE; i += 64) {
        null_array[0] = i >> 8;
    2092:	ad01      	add	r5, sp, #4
        null_array[1] = i & 0xFF;
        i2c_write(EEPROM_ADDR, null_array, 66);
    2094:	4f08      	ldr	r7, [pc, #32]	; (20b8 <memory_full_format+0x3c>)
    for (uint16_t i = 0; i < MEMORY_SIZE; i += 64) {
    2096:	2680      	movs	r6, #128	; 0x80
    2098:	01f6      	lsls	r6, r6, #7
        null_array[0] = i >> 8;
    209a:	0a23      	lsrs	r3, r4, #8
    209c:	702b      	strb	r3, [r5, #0]
        null_array[1] = i & 0xFF;
    209e:	706c      	strb	r4, [r5, #1]
        i2c_write(EEPROM_ADDR, null_array, 66);
    20a0:	2242      	movs	r2, #66	; 0x42
    20a2:	0029      	movs	r1, r5
    20a4:	2050      	movs	r0, #80	; 0x50
    20a6:	47b8      	blx	r7
    for (uint16_t i = 0; i < MEMORY_SIZE; i += 64) {
    20a8:	3440      	adds	r4, #64	; 0x40
    20aa:	b2a4      	uxth	r4, r4
    20ac:	42b4      	cmp	r4, r6
    20ae:	d1f4      	bne.n	209a <memory_full_format+0x1e>
    }
    read_memory_map();
    20b0:	4b02      	ldr	r3, [pc, #8]	; (20bc <memory_full_format+0x40>)
    20b2:	4798      	blx	r3
}
    20b4:	b013      	add	sp, #76	; 0x4c
    20b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    20b8:	00003ce1 	.word	0x00003ce1
    20bc:	00001f0d 	.word	0x00001f0d

000020c0 <write_memory>:
void memory_format(void) {
    fs.memory_map = 0;
    write_memory_map();
}

void write_memory(PRESET *preset, uint8_t position) {
    20c0:	b5f0      	push	{r4, r5, r6, r7, lr}
    20c2:	46c6      	mov	lr, r8
    20c4:	b500      	push	{lr}
    20c6:	b092      	sub	sp, #72	; 0x48
    20c8:	0006      	movs	r6, r0
    20ca:	000c      	movs	r4, r1
    volatile uint16_t remaining_size = sizeof(PRESET);
    20cc:	22c8      	movs	r2, #200	; 0xc8
    20ce:	0052      	lsls	r2, r2, #1
    20d0:	2346      	movs	r3, #70	; 0x46
    20d2:	446b      	add	r3, sp
    20d4:	801a      	strh	r2, [r3, #0]

    uint8_t send_packet[66];
    preset->position = position;
    20d6:	8171      	strh	r1, [r6, #10]
    fs.memory_map |= (1ULL << position);
    20d8:	4b37      	ldr	r3, [pc, #220]	; (21b8 <write_memory+0xf8>)
    20da:	3ab1      	subs	r2, #177	; 0xb1
    20dc:	3aff      	subs	r2, #255	; 0xff
    20de:	1889      	adds	r1, r1, r2
    20e0:	d415      	bmi.n	210e <write_memory+0x4e>
    20e2:	3221      	adds	r2, #33	; 0x21
    20e4:	408a      	lsls	r2, r1
    20e6:	2101      	movs	r1, #1
    20e8:	40a1      	lsls	r1, r4
    20ea:	6818      	ldr	r0, [r3, #0]
    20ec:	4301      	orrs	r1, r0
    20ee:	6019      	str	r1, [r3, #0]
    20f0:	6859      	ldr	r1, [r3, #4]
    20f2:	430a      	orrs	r2, r1
    20f4:	605a      	str	r2, [r3, #4]
    write_memory_map();
    20f6:	4b31      	ldr	r3, [pc, #196]	; (21bc <write_memory+0xfc>)
    20f8:	4798      	blx	r3

    uint8_t *p_to_preset = (uint8_t *)preset;
    uint16_t memory_position = preset_get_mem_pos(position);
    20fa:	0020      	movs	r0, r4
    20fc:	4b30      	ldr	r3, [pc, #192]	; (21c0 <write_memory+0x100>)
    20fe:	4798      	blx	r3
    2100:	0005      	movs	r5, r0
    uint8_t *p_to_preset = (uint8_t *)preset;
    2102:	46b0      	mov	r8, r6
    uint16_t memory_position = preset_get_mem_pos(position);
    2104:	2707      	movs	r7, #7

    for(uint16_t i = 0; i < sizeof(PRESET); i += 64) {
        send_packet[0] = (memory_position) >> 8;
    2106:	ac01      	add	r4, sp, #4
        send_packet[1] = (memory_position) & 0xFF;

        if(remaining_size > 64) {
    2108:	2646      	movs	r6, #70	; 0x46
    210a:	446e      	add	r6, sp
    210c:	e008      	b.n	2120 <write_memory+0x60>
    fs.memory_map |= (1ULL << position);
    210e:	2120      	movs	r1, #32
    2110:	1b09      	subs	r1, r1, r4
    2112:	2201      	movs	r2, #1
    2114:	40ca      	lsrs	r2, r1
    2116:	e7e6      	b.n	20e6 <write_memory+0x26>
    2118:	3f01      	subs	r7, #1
    211a:	b2bf      	uxth	r7, r7
    for(uint16_t i = 0; i < sizeof(PRESET); i += 64) {
    211c:	2f00      	cmp	r7, #0
    211e:	d046      	beq.n	21ae <write_memory+0xee>
        send_packet[0] = (memory_position) >> 8;
    2120:	0a2b      	lsrs	r3, r5, #8
    2122:	7023      	strb	r3, [r4, #0]
        send_packet[1] = (memory_position) & 0xFF;
    2124:	7065      	strb	r5, [r4, #1]
        if(remaining_size > 64) {
    2126:	8833      	ldrh	r3, [r6, #0]
    2128:	b29b      	uxth	r3, r3
    212a:	2b40      	cmp	r3, #64	; 0x40
    212c:	d916      	bls.n	215c <write_memory+0x9c>
    212e:	4641      	mov	r1, r8
    2130:	466b      	mov	r3, sp
    2132:	1d9a      	adds	r2, r3, #6
            for(uint8_t j = 0; j < 64; j++) {
                send_packet[j + 2] = *(p_to_preset++);
    2134:	780b      	ldrb	r3, [r1, #0]
    2136:	7013      	strb	r3, [r2, #0]
                memory_position++;
                remaining_size--;
    2138:	8833      	ldrh	r3, [r6, #0]
    213a:	3b01      	subs	r3, #1
    213c:	b29b      	uxth	r3, r3
    213e:	8033      	strh	r3, [r6, #0]
    2140:	3101      	adds	r1, #1
    2142:	3201      	adds	r2, #1
            for(uint8_t j = 0; j < 64; j++) {
    2144:	4296      	cmp	r6, r2
    2146:	d1f5      	bne.n	2134 <write_memory+0x74>
    2148:	2340      	movs	r3, #64	; 0x40
    214a:	469c      	mov	ip, r3
    214c:	44e0      	add	r8, ip
    214e:	3540      	adds	r5, #64	; 0x40
    2150:	b2ad      	uxth	r5, r5
            }
            i2c_write(EEPROM_ADDR, send_packet, 66);
    2152:	2242      	movs	r2, #66	; 0x42
    2154:	0021      	movs	r1, r4
    2156:	2050      	movs	r0, #80	; 0x50
    2158:	4b1a      	ldr	r3, [pc, #104]	; (21c4 <write_memory+0x104>)
    215a:	4798      	blx	r3
        }

        if(remaining_size < 64 && remaining_size > 0) {
    215c:	8833      	ldrh	r3, [r6, #0]
    215e:	b29b      	uxth	r3, r3
    2160:	2b3f      	cmp	r3, #63	; 0x3f
    2162:	d8d9      	bhi.n	2118 <write_memory+0x58>
    2164:	8833      	ldrh	r3, [r6, #0]
    2166:	b29b      	uxth	r3, r3
    2168:	2b00      	cmp	r3, #0
    216a:	d0d5      	beq.n	2118 <write_memory+0x58>
            send_packet[0] = (memory_position) >> 8;
    216c:	ab01      	add	r3, sp, #4
    216e:	0a2a      	lsrs	r2, r5, #8
    2170:	701a      	strb	r2, [r3, #0]
            send_packet[1] = (memory_position) & 0xFF;
    2172:	705d      	strb	r5, [r3, #1]
            for(uint8_t j = 0; j < remaining_size; j++) {
    2174:	2346      	movs	r3, #70	; 0x46
    2176:	446b      	add	r3, sp
    2178:	881b      	ldrh	r3, [r3, #0]
    217a:	b29b      	uxth	r3, r3
    217c:	2b00      	cmp	r3, #0
    217e:	d00e      	beq.n	219e <write_memory+0xde>
    2180:	4643      	mov	r3, r8
    2182:	2200      	movs	r2, #0
    2184:	2446      	movs	r4, #70	; 0x46
    2186:	446c      	add	r4, sp
                send_packet[j + 2] = *(p_to_preset++);
    2188:	a901      	add	r1, sp, #4
    218a:	1889      	adds	r1, r1, r2
    218c:	7818      	ldrb	r0, [r3, #0]
    218e:	7088      	strb	r0, [r1, #2]
            for(uint8_t j = 0; j < remaining_size; j++) {
    2190:	3201      	adds	r2, #1
    2192:	b2d2      	uxtb	r2, r2
    2194:	8821      	ldrh	r1, [r4, #0]
    2196:	3301      	adds	r3, #1
    2198:	b289      	uxth	r1, r1
    219a:	4291      	cmp	r1, r2
    219c:	d8f4      	bhi.n	2188 <write_memory+0xc8>
            }
            i2c_write(EEPROM_ADDR, send_packet, remaining_size);
    219e:	2346      	movs	r3, #70	; 0x46
    21a0:	446b      	add	r3, sp
    21a2:	881a      	ldrh	r2, [r3, #0]
    21a4:	b2d2      	uxtb	r2, r2
    21a6:	a901      	add	r1, sp, #4
    21a8:	2050      	movs	r0, #80	; 0x50
    21aa:	4b06      	ldr	r3, [pc, #24]	; (21c4 <write_memory+0x104>)
    21ac:	4798      	blx	r3
            break;
        }
    }

    return;
}
    21ae:	b012      	add	sp, #72	; 0x48
    21b0:	bc04      	pop	{r2}
    21b2:	4690      	mov	r8, r2
    21b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    21b6:	46c0      	nop			; (mov r8, r8)
    21b8:	20001d60 	.word	0x20001d60
    21bc:	00001f3d 	.word	0x00001f3d
    21c0:	00001f79 	.word	0x00001f79
    21c4:	00003ce1 	.word	0x00003ce1

000021c8 <memory_load_preset>:

void memory_load_preset(channel **ch, uint8_t *dmx_ch, uint8_t pos) {
    21c8:	b530      	push	{r4, r5, lr}
    21ca:	b0e5      	sub	sp, #404	; 0x194
    21cc:	0005      	movs	r5, r0
    21ce:	000c      	movs	r4, r1
    PRESET preset;
    if(!read_memory(&preset, pos))return;
    21d0:	0011      	movs	r1, r2
    21d2:	4668      	mov	r0, sp
    21d4:	4b1d      	ldr	r3, [pc, #116]	; (224c <memory_load_preset+0x84>)
    21d6:	4798      	blx	r3
    21d8:	2800      	cmp	r0, #0
    21da:	d034      	beq.n	2246 <memory_load_preset+0x7e>
    21dc:	ab03      	add	r3, sp, #12
    21de:	a843      	add	r0, sp, #268	; 0x10c
    for(uint16_t i = 0; i < 256; i++) {
        *(dmx_ch + i) = *(preset.channels + i);
    21e0:	781a      	ldrb	r2, [r3, #0]
    21e2:	7022      	strb	r2, [r4, #0]
    21e4:	3301      	adds	r3, #1
    21e6:	3401      	adds	r4, #1
    for(uint16_t i = 0; i < 256; i++) {
    21e8:	4283      	cmp	r3, r0
    21ea:	d1f9      	bne.n	21e0 <memory_load_preset+0x18>
    21ec:	002a      	movs	r2, r5
    21ee:	a94b      	add	r1, sp, #300	; 0x12c
    21f0:	3514      	adds	r5, #20
    }
    for(uint8_t i = 0; i < 5; i++)    {
        ch[i]->level = preset.level[i];
    21f2:	7818      	ldrb	r0, [r3, #0]
    21f4:	6814      	ldr	r4, [r2, #0]
    21f6:	7020      	strb	r0, [r4, #0]
        ch[i]->enabled = preset.enabled[i];
    21f8:	7958      	ldrb	r0, [r3, #5]
    21fa:	6814      	ldr	r4, [r2, #0]
    21fc:	7060      	strb	r0, [r4, #1]
        ch[i]->dmx_ch = preset.dmx_ch[i];
    21fe:	7a98      	ldrb	r0, [r3, #10]
    2200:	6814      	ldr	r4, [r2, #0]
    2202:	70a0      	strb	r0, [r4, #2]
        ch[i]->input_channel = preset.input_channel[i];
    2204:	7bd8      	ldrb	r0, [r3, #15]
    2206:	6814      	ldr	r4, [r2, #0]
    2208:	70e0      	strb	r0, [r4, #3]
        ch[i]->midi_ch = preset.midi_ch[i];
    220a:	7d18      	ldrb	r0, [r3, #20]
    220c:	6814      	ldr	r4, [r2, #0]
    220e:	7120      	strb	r0, [r4, #4]
        ch[i]->note = preset.note[i];
    2210:	7e58      	ldrb	r0, [r3, #25]
    2212:	6814      	ldr	r4, [r2, #0]
    2214:	7160      	strb	r0, [r4, #5]
        ch[i]->adsr->attack = preset.attack[i];
    2216:	6810      	ldr	r0, [r2, #0]
    2218:	6880      	ldr	r0, [r0, #8]
    221a:	680c      	ldr	r4, [r1, #0]
    221c:	6084      	str	r4, [r0, #8]
        ch[i]->adsr->decay = preset.decay[i];
    221e:	6810      	ldr	r0, [r2, #0]
    2220:	6880      	ldr	r0, [r0, #8]
    2222:	694c      	ldr	r4, [r1, #20]
    2224:	6104      	str	r4, [r0, #16]
        ch[i]->adsr->sustain = preset.sustain[i];
    2226:	6810      	ldr	r0, [r2, #0]
    2228:	6880      	ldr	r0, [r0, #8]
    222a:	6a8c      	ldr	r4, [r1, #40]	; 0x28
    222c:	6184      	str	r4, [r0, #24]
        ch[i]->adsr->sustain_level = preset.sustain_level[i];
    222e:	6810      	ldr	r0, [r2, #0]
    2230:	6880      	ldr	r0, [r0, #8]
    2232:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
    2234:	61c4      	str	r4, [r0, #28]
        ch[i]->adsr->release = preset.release[i];
    2236:	ca01      	ldmia	r2!, {r0}
    2238:	6880      	ldr	r0, [r0, #8]
    223a:	6d0c      	ldr	r4, [r1, #80]	; 0x50
    223c:	6244      	str	r4, [r0, #36]	; 0x24
    223e:	3301      	adds	r3, #1
    2240:	3104      	adds	r1, #4
    for(uint8_t i = 0; i < 5; i++)    {
    2242:	42aa      	cmp	r2, r5
    2244:	d1d5      	bne.n	21f2 <memory_load_preset+0x2a>
    }
}
    2246:	b065      	add	sp, #404	; 0x194
    2248:	bd30      	pop	{r4, r5, pc}
    224a:	46c0      	nop			; (mov r8, r8)
    224c:	0000200d 	.word	0x0000200d

00002250 <memory_write_preset>:

void memory_write_preset(channel **ch, uint8_t *dmx_ch, uint8_t pos) {
    2250:	b570      	push	{r4, r5, r6, lr}
    2252:	b0e4      	sub	sp, #400	; 0x190
    2254:	000c      	movs	r4, r1
    2256:	ab03      	add	r3, sp, #12
    2258:	ae43      	add	r6, sp, #268	; 0x10c
    PRESET preset;

    for(uint16_t i = 0; i < 256; i++) {
        *(preset.channels + i) = *(dmx_ch + i);
    225a:	7825      	ldrb	r5, [r4, #0]
    225c:	701d      	strb	r5, [r3, #0]
    225e:	3401      	adds	r4, #1
    2260:	3301      	adds	r3, #1
    for(uint16_t i = 0; i < 256; i++) {
    2262:	42b3      	cmp	r3, r6
    2264:	d1f9      	bne.n	225a <memory_write_preset+0xa>
    2266:	0004      	movs	r4, r0
    2268:	a94b      	add	r1, sp, #300	; 0x12c
    226a:	3014      	adds	r0, #20
    226c:	0006      	movs	r6, r0
    }
    for(uint8_t i = 0; i < 5; i++)    {
        preset.level[i] = ch[i]->level;
    226e:	cc01      	ldmia	r4!, {r0}
    2270:	7805      	ldrb	r5, [r0, #0]
    2272:	701d      	strb	r5, [r3, #0]
        preset.enabled[i] = ch[i]->enabled;
    2274:	7845      	ldrb	r5, [r0, #1]
    2276:	715d      	strb	r5, [r3, #5]
        preset.dmx_ch[i] = ch[i]->dmx_ch;
    2278:	7885      	ldrb	r5, [r0, #2]
    227a:	729d      	strb	r5, [r3, #10]
        preset.input_channel[i] = ch[i]->input_channel;
    227c:	78c5      	ldrb	r5, [r0, #3]
    227e:	73dd      	strb	r5, [r3, #15]
        preset.midi_ch[i] = ch[i]->midi_ch;
    2280:	7905      	ldrb	r5, [r0, #4]
    2282:	751d      	strb	r5, [r3, #20]
        preset.note[i] = ch[i]->note;
    2284:	7945      	ldrb	r5, [r0, #5]
    2286:	765d      	strb	r5, [r3, #25]
        preset.attack[i] = ch[i]->adsr->attack;
    2288:	6885      	ldr	r5, [r0, #8]
    228a:	68ad      	ldr	r5, [r5, #8]
    228c:	600d      	str	r5, [r1, #0]
        preset.decay[i] = ch[i]->adsr->decay;
    228e:	6885      	ldr	r5, [r0, #8]
    2290:	692d      	ldr	r5, [r5, #16]
    2292:	614d      	str	r5, [r1, #20]
        preset.sustain[i] = ch[i]->adsr->sustain;
    2294:	6885      	ldr	r5, [r0, #8]
    2296:	69ad      	ldr	r5, [r5, #24]
    2298:	628d      	str	r5, [r1, #40]	; 0x28
        preset.sustain_level[i] = ch[i]->adsr->sustain_level;
    229a:	6885      	ldr	r5, [r0, #8]
    229c:	69ed      	ldr	r5, [r5, #28]
    229e:	63cd      	str	r5, [r1, #60]	; 0x3c
        preset.release[i] = ch[i]->adsr->release;
    22a0:	6885      	ldr	r5, [r0, #8]
    22a2:	6a68      	ldr	r0, [r5, #36]	; 0x24
    22a4:	6508      	str	r0, [r1, #80]	; 0x50
    22a6:	3301      	adds	r3, #1
    22a8:	3104      	adds	r1, #4
    for(uint8_t i = 0; i < 5; i++)    {
    22aa:	42b4      	cmp	r4, r6
    22ac:	d1df      	bne.n	226e <memory_write_preset+0x1e>
    }

    write_memory(&preset, pos);
    22ae:	0011      	movs	r1, r2
    22b0:	4668      	mov	r0, sp
    22b2:	4b02      	ldr	r3, [pc, #8]	; (22bc <memory_write_preset+0x6c>)
    22b4:	4798      	blx	r3
}
    22b6:	b064      	add	sp, #400	; 0x190
    22b8:	bd70      	pop	{r4, r5, r6, pc}
    22ba:	46c0      	nop			; (mov r8, r8)
    22bc:	000020c1 	.word	0x000020c1

000022c0 <memory_get_preset_name>:
void memory_get_preset_name(char *dest, uint8_t num) {
    22c0:	b530      	push	{r4, r5, lr}
    22c2:	b0e5      	sub	sp, #404	; 0x194
    22c4:	0005      	movs	r5, r0
    22c6:	1e0c      	subs	r4, r1, #0
    PRESET preset;
    if(num == 0)
    22c8:	d00a      	beq.n	22e0 <memory_get_preset_name+0x20>
        return sprintf(dest, "");

    if(!read_memory(&preset, num))
    22ca:	4668      	mov	r0, sp
    22cc:	4b09      	ldr	r3, [pc, #36]	; (22f4 <memory_get_preset_name+0x34>)
    22ce:	4798      	blx	r3
    22d0:	2800      	cmp	r0, #0
    22d2:	d009      	beq.n	22e8 <memory_get_preset_name+0x28>
        return sprintf(dest, "EMPTY %d", num);
    else
        return sprintf(dest, "SAVE %d", num);
    22d4:	0022      	movs	r2, r4
    22d6:	4908      	ldr	r1, [pc, #32]	; (22f8 <memory_get_preset_name+0x38>)
    22d8:	0028      	movs	r0, r5
    22da:	4b08      	ldr	r3, [pc, #32]	; (22fc <memory_get_preset_name+0x3c>)
    22dc:	4798      	blx	r3
    22de:	e001      	b.n	22e4 <memory_get_preset_name+0x24>
        return sprintf(dest, "");
    22e0:	2300      	movs	r3, #0
    22e2:	7003      	strb	r3, [r0, #0]
    22e4:	b065      	add	sp, #404	; 0x194
    22e6:	bd30      	pop	{r4, r5, pc}
        return sprintf(dest, "EMPTY %d", num);
    22e8:	0022      	movs	r2, r4
    22ea:	4905      	ldr	r1, [pc, #20]	; (2300 <memory_get_preset_name+0x40>)
    22ec:	0028      	movs	r0, r5
    22ee:	4b03      	ldr	r3, [pc, #12]	; (22fc <memory_get_preset_name+0x3c>)
    22f0:	4798      	blx	r3
    22f2:	e7f7      	b.n	22e4 <memory_get_preset_name+0x24>
    22f4:	0000200d 	.word	0x0000200d
    22f8:	000093a4 	.word	0x000093a4
    22fc:	00008af9 	.word	0x00008af9
    2300:	00009398 	.word	0x00009398

00002304 <dac_is_syncing>:
    2304:	6803      	ldr	r3, [r0, #0]
    2306:	6918      	ldr	r0, [r3, #16]
    2308:	1e43      	subs	r3, r0, #1
    230a:	4198      	sbcs	r0, r3
    230c:	b2c0      	uxtb	r0, r0
    230e:	4770      	bx	lr

00002310 <dac_get_config_defaults>:
    2310:	2300      	movs	r3, #0
    2312:	7003      	strb	r3, [r0, #0]
    2314:	2201      	movs	r2, #1
    2316:	7042      	strb	r2, [r0, #1]
    2318:	7083      	strb	r3, [r0, #2]
    231a:	7103      	strb	r3, [r0, #4]
    231c:	70c3      	strb	r3, [r0, #3]
    231e:	7143      	strb	r3, [r0, #5]
    2320:	7183      	strb	r3, [r0, #6]
    2322:	4770      	bx	lr

00002324 <dac_init>:
    2324:	b5f0      	push	{r4, r5, r6, r7, lr}
    2326:	46c6      	mov	lr, r8
    2328:	b500      	push	{lr}
    232a:	b082      	sub	sp, #8
    232c:	0005      	movs	r5, r0
    232e:	0014      	movs	r4, r2
    2330:	6001      	str	r1, [r0, #0]
    2332:	4a28      	ldr	r2, [pc, #160]	; (23d4 <dac_init+0xb0>)
    2334:	69d0      	ldr	r0, [r2, #28]
    2336:	2380      	movs	r3, #128	; 0x80
    2338:	039b      	lsls	r3, r3, #14
    233a:	4303      	orrs	r3, r0
    233c:	61d3      	str	r3, [r2, #28]
    233e:	780b      	ldrb	r3, [r1, #0]
    2340:	201c      	movs	r0, #28
    2342:	079b      	lsls	r3, r3, #30
    2344:	d503      	bpl.n	234e <dac_init+0x2a>
    2346:	b002      	add	sp, #8
    2348:	bc04      	pop	{r2}
    234a:	4690      	mov	r8, r2
    234c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    234e:	780b      	ldrb	r3, [r1, #0]
    2350:	3817      	subs	r0, #23
    2352:	07db      	lsls	r3, r3, #31
    2354:	d4f7      	bmi.n	2346 <dac_init+0x22>
    2356:	a901      	add	r1, sp, #4
    2358:	78e3      	ldrb	r3, [r4, #3]
    235a:	700b      	strb	r3, [r1, #0]
    235c:	301f      	adds	r0, #31
    235e:	4b1e      	ldr	r3, [pc, #120]	; (23d8 <dac_init+0xb4>)
    2360:	4798      	blx	r3
    2362:	2024      	movs	r0, #36	; 0x24
    2364:	4b1d      	ldr	r3, [pc, #116]	; (23dc <dac_init+0xb8>)
    2366:	4798      	blx	r3
    2368:	2600      	movs	r6, #0
    236a:	466b      	mov	r3, sp
    236c:	705e      	strb	r6, [r3, #1]
    236e:	70de      	strb	r6, [r3, #3]
    2370:	2301      	movs	r3, #1
    2372:	466a      	mov	r2, sp
    2374:	7013      	strb	r3, [r2, #0]
    2376:	7096      	strb	r6, [r2, #2]
    2378:	4669      	mov	r1, sp
    237a:	2002      	movs	r0, #2
    237c:	4b18      	ldr	r3, [pc, #96]	; (23e0 <dac_init+0xbc>)
    237e:	4798      	blx	r3
    2380:	682f      	ldr	r7, [r5, #0]
    2382:	7863      	ldrb	r3, [r4, #1]
    2384:	712b      	strb	r3, [r5, #4]
    2386:	71ae      	strb	r6, [r5, #6]
    2388:	7963      	ldrb	r3, [r4, #5]
    238a:	1e5a      	subs	r2, r3, #1
    238c:	4193      	sbcs	r3, r2
    238e:	019b      	lsls	r3, r3, #6
    2390:	7822      	ldrb	r2, [r4, #0]
    2392:	4690      	mov	r8, r2
    2394:	78a2      	ldrb	r2, [r4, #2]
    2396:	2a00      	cmp	r2, #0
    2398:	d003      	beq.n	23a2 <dac_init+0x7e>
    239a:	2204      	movs	r2, #4
    239c:	4641      	mov	r1, r8
    239e:	4311      	orrs	r1, r2
    23a0:	4688      	mov	r8, r1
    23a2:	7922      	ldrb	r2, [r4, #4]
    23a4:	2a00      	cmp	r2, #0
    23a6:	d003      	beq.n	23b0 <dac_init+0x8c>
    23a8:	2208      	movs	r2, #8
    23aa:	4641      	mov	r1, r8
    23ac:	4311      	orrs	r1, r2
    23ae:	4688      	mov	r8, r1
    23b0:	b2db      	uxtb	r3, r3
    23b2:	703b      	strb	r3, [r7, #0]
    23b4:	4e0b      	ldr	r6, [pc, #44]	; (23e4 <dac_init+0xc0>)
    23b6:	0028      	movs	r0, r5
    23b8:	47b0      	blx	r6
    23ba:	2800      	cmp	r0, #0
    23bc:	d1fb      	bne.n	23b6 <dac_init+0x92>
    23be:	4643      	mov	r3, r8
    23c0:	707b      	strb	r3, [r7, #1]
    23c2:	7823      	ldrb	r3, [r4, #0]
    23c4:	716b      	strb	r3, [r5, #5]
    23c6:	2300      	movs	r3, #0
    23c8:	616b      	str	r3, [r5, #20]
    23ca:	61ab      	str	r3, [r5, #24]
    23cc:	61eb      	str	r3, [r5, #28]
    23ce:	4b06      	ldr	r3, [pc, #24]	; (23e8 <dac_init+0xc4>)
    23d0:	601d      	str	r5, [r3, #0]
    23d2:	e7b8      	b.n	2346 <dac_init+0x22>
    23d4:	40000800 	.word	0x40000800
    23d8:	00004f39 	.word	0x00004f39
    23dc:	00004ec9 	.word	0x00004ec9
    23e0:	00005035 	.word	0x00005035
    23e4:	00002305 	.word	0x00002305
    23e8:	20001d70 	.word	0x20001d70

000023ec <dac_enable>:
    23ec:	b570      	push	{r4, r5, r6, lr}
    23ee:	0004      	movs	r4, r0
    23f0:	6805      	ldr	r5, [r0, #0]
    23f2:	786b      	ldrb	r3, [r5, #1]
    23f4:	7902      	ldrb	r2, [r0, #4]
    23f6:	4313      	orrs	r3, r2
    23f8:	706b      	strb	r3, [r5, #1]
    23fa:	4e0c      	ldr	r6, [pc, #48]	; (242c <dac_enable+0x40>)
    23fc:	0020      	movs	r0, r4
    23fe:	47b0      	blx	r6
    2400:	2800      	cmp	r0, #0
    2402:	d1fb      	bne.n	23fc <dac_enable+0x10>
    2404:	782b      	ldrb	r3, [r5, #0]
    2406:	2202      	movs	r2, #2
    2408:	4313      	orrs	r3, r2
    240a:	702b      	strb	r3, [r5, #0]
    240c:	7963      	ldrb	r3, [r4, #5]
    240e:	2b00      	cmp	r3, #0
    2410:	d104      	bne.n	241c <dac_enable+0x30>
    2412:	4a07      	ldr	r2, [pc, #28]	; (2430 <dac_enable+0x44>)
    2414:	69d3      	ldr	r3, [r2, #28]
    2416:	2104      	movs	r1, #4
    2418:	430b      	orrs	r3, r1
    241a:	61d3      	str	r3, [r2, #28]
    241c:	782b      	ldrb	r3, [r5, #0]
    241e:	079b      	lsls	r3, r3, #30
    2420:	d503      	bpl.n	242a <dac_enable+0x3e>
    2422:	2201      	movs	r2, #1
    2424:	79eb      	ldrb	r3, [r5, #7]
    2426:	4213      	tst	r3, r2
    2428:	d0fc      	beq.n	2424 <dac_enable+0x38>
    242a:	bd70      	pop	{r4, r5, r6, pc}
    242c:	00002305 	.word	0x00002305
    2430:	40001800 	.word	0x40001800

00002434 <dac_chan_get_config_defaults>:
    2434:	4770      	bx	lr

00002436 <dac_chan_set_config>:
    2436:	4770      	bx	lr

00002438 <dac_chan_enable>:
    2438:	4770      	bx	lr
	...

0000243c <dac_chan_write>:
    243c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    243e:	0004      	movs	r4, r0
    2440:	0017      	movs	r7, r2
    2442:	6806      	ldr	r6, [r0, #0]
    2444:	4d06      	ldr	r5, [pc, #24]	; (2460 <dac_chan_write+0x24>)
    2446:	0020      	movs	r0, r4
    2448:	47a8      	blx	r5
    244a:	2800      	cmp	r0, #0
    244c:	d1fb      	bne.n	2446 <dac_chan_write+0xa>
    244e:	79a3      	ldrb	r3, [r4, #6]
    2450:	2b00      	cmp	r3, #0
    2452:	d102      	bne.n	245a <dac_chan_write+0x1e>
    2454:	8137      	strh	r7, [r6, #8]
    2456:	2000      	movs	r0, #0
    2458:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    245a:	81b7      	strh	r7, [r6, #12]
    245c:	e7fb      	b.n	2456 <dac_chan_write+0x1a>
    245e:	46c0      	nop			; (mov r8, r8)
    2460:	00002305 	.word	0x00002305

00002464 <DAC_Handler>:
    2464:	b570      	push	{r4, r5, r6, lr}
    2466:	4b27      	ldr	r3, [pc, #156]	; (2504 <DAC_Handler+0xa0>)
    2468:	681c      	ldr	r4, [r3, #0]
    246a:	6825      	ldr	r5, [r4, #0]
    246c:	79ab      	ldrb	r3, [r5, #6]
    246e:	07db      	lsls	r3, r3, #31
    2470:	d507      	bpl.n	2482 <DAC_Handler+0x1e>
    2472:	2301      	movs	r3, #1
    2474:	71ab      	strb	r3, [r5, #6]
    2476:	0023      	movs	r3, r4
    2478:	3314      	adds	r3, #20
    247a:	d002      	beq.n	2482 <DAC_Handler+0x1e>
    247c:	7c63      	ldrb	r3, [r4, #17]
    247e:	2b00      	cmp	r3, #0
    2480:	d131      	bne.n	24e6 <DAC_Handler+0x82>
    2482:	79ab      	ldrb	r3, [r5, #6]
    2484:	079b      	lsls	r3, r3, #30
    2486:	d538      	bpl.n	24fa <DAC_Handler+0x96>
    2488:	2302      	movs	r3, #2
    248a:	71ab      	strb	r3, [r5, #6]
    248c:	89a3      	ldrh	r3, [r4, #12]
    248e:	b29b      	uxth	r3, r3
    2490:	2b00      	cmp	r3, #0
    2492:	d02c      	beq.n	24ee <DAC_Handler+0x8a>
    2494:	89e3      	ldrh	r3, [r4, #14]
    2496:	b29b      	uxth	r3, r3
    2498:	1c5a      	adds	r2, r3, #1
    249a:	b292      	uxth	r2, r2
    249c:	81e2      	strh	r2, [r4, #14]
    249e:	005b      	lsls	r3, r3, #1
    24a0:	68a2      	ldr	r2, [r4, #8]
    24a2:	4694      	mov	ip, r2
    24a4:	4463      	add	r3, ip
    24a6:	881b      	ldrh	r3, [r3, #0]
    24a8:	b29b      	uxth	r3, r3
    24aa:	81ab      	strh	r3, [r5, #12]
    24ac:	89a3      	ldrh	r3, [r4, #12]
    24ae:	3b01      	subs	r3, #1
    24b0:	b29b      	uxth	r3, r3
    24b2:	81a3      	strh	r3, [r4, #12]
    24b4:	89a3      	ldrh	r3, [r4, #12]
    24b6:	b29b      	uxth	r3, r3
    24b8:	2b00      	cmp	r3, #0
    24ba:	d118      	bne.n	24ee <DAC_Handler+0x8a>
    24bc:	2200      	movs	r2, #0
    24be:	3320      	adds	r3, #32
    24c0:	54e2      	strb	r2, [r4, r3]
    24c2:	3b1e      	subs	r3, #30
    24c4:	712b      	strb	r3, [r5, #4]
    24c6:	71ab      	strb	r3, [r5, #6]
    24c8:	2180      	movs	r1, #128	; 0x80
    24ca:	0549      	lsls	r1, r1, #21
    24cc:	337e      	adds	r3, #126	; 0x7e
    24ce:	4a0e      	ldr	r2, [pc, #56]	; (2508 <DAC_Handler+0xa4>)
    24d0:	50d1      	str	r1, [r2, r3]
    24d2:	0023      	movs	r3, r4
    24d4:	3314      	adds	r3, #20
    24d6:	d010      	beq.n	24fa <DAC_Handler+0x96>
    24d8:	7ca3      	ldrb	r3, [r4, #18]
    24da:	2b00      	cmp	r3, #0
    24dc:	d00a      	beq.n	24f4 <DAC_Handler+0x90>
    24de:	2000      	movs	r0, #0
    24e0:	69e3      	ldr	r3, [r4, #28]
    24e2:	4798      	blx	r3
    24e4:	e006      	b.n	24f4 <DAC_Handler+0x90>
    24e6:	2000      	movs	r0, #0
    24e8:	69a3      	ldr	r3, [r4, #24]
    24ea:	4798      	blx	r3
    24ec:	e7c9      	b.n	2482 <DAC_Handler+0x1e>
    24ee:	0023      	movs	r3, r4
    24f0:	3314      	adds	r3, #20
    24f2:	d002      	beq.n	24fa <DAC_Handler+0x96>
    24f4:	7c23      	ldrb	r3, [r4, #16]
    24f6:	2b00      	cmp	r3, #0
    24f8:	d100      	bne.n	24fc <DAC_Handler+0x98>
    24fa:	bd70      	pop	{r4, r5, r6, pc}
    24fc:	6963      	ldr	r3, [r4, #20]
    24fe:	2000      	movs	r0, #0
    2500:	4798      	blx	r3
    2502:	e7fa      	b.n	24fa <DAC_Handler+0x96>
    2504:	20001d70 	.word	0x20001d70
    2508:	e000e100 	.word	0xe000e100

0000250c <long_division>:
    250c:	b5f0      	push	{r4, r5, r6, r7, lr}
    250e:	46de      	mov	lr, fp
    2510:	4657      	mov	r7, sl
    2512:	464e      	mov	r6, r9
    2514:	4645      	mov	r5, r8
    2516:	b5e0      	push	{r5, r6, r7, lr}
    2518:	b087      	sub	sp, #28
    251a:	4680      	mov	r8, r0
    251c:	9104      	str	r1, [sp, #16]
    251e:	0016      	movs	r6, r2
    2520:	001f      	movs	r7, r3
    2522:	2200      	movs	r2, #0
    2524:	2300      	movs	r3, #0
    2526:	2100      	movs	r1, #0
    2528:	468b      	mov	fp, r1
    252a:	243f      	movs	r4, #63	; 0x3f
    252c:	2001      	movs	r0, #1
    252e:	0021      	movs	r1, r4
    2530:	9600      	str	r6, [sp, #0]
    2532:	9701      	str	r7, [sp, #4]
    2534:	465c      	mov	r4, fp
    2536:	9403      	str	r4, [sp, #12]
    2538:	4644      	mov	r4, r8
    253a:	9405      	str	r4, [sp, #20]
    253c:	e013      	b.n	2566 <long_division+0x5a>
    253e:	2420      	movs	r4, #32
    2540:	1a64      	subs	r4, r4, r1
    2542:	0005      	movs	r5, r0
    2544:	40e5      	lsrs	r5, r4
    2546:	46a8      	mov	r8, r5
    2548:	e014      	b.n	2574 <long_division+0x68>
    254a:	9c00      	ldr	r4, [sp, #0]
    254c:	9d01      	ldr	r5, [sp, #4]
    254e:	1b12      	subs	r2, r2, r4
    2550:	41ab      	sbcs	r3, r5
    2552:	465c      	mov	r4, fp
    2554:	464d      	mov	r5, r9
    2556:	432c      	orrs	r4, r5
    2558:	46a3      	mov	fp, r4
    255a:	9c03      	ldr	r4, [sp, #12]
    255c:	4645      	mov	r5, r8
    255e:	432c      	orrs	r4, r5
    2560:	9403      	str	r4, [sp, #12]
    2562:	3901      	subs	r1, #1
    2564:	d325      	bcc.n	25b2 <long_division+0xa6>
    2566:	2420      	movs	r4, #32
    2568:	4264      	negs	r4, r4
    256a:	190c      	adds	r4, r1, r4
    256c:	d4e7      	bmi.n	253e <long_division+0x32>
    256e:	0005      	movs	r5, r0
    2570:	40a5      	lsls	r5, r4
    2572:	46a8      	mov	r8, r5
    2574:	0004      	movs	r4, r0
    2576:	408c      	lsls	r4, r1
    2578:	46a1      	mov	r9, r4
    257a:	1892      	adds	r2, r2, r2
    257c:	415b      	adcs	r3, r3
    257e:	0014      	movs	r4, r2
    2580:	001d      	movs	r5, r3
    2582:	9e05      	ldr	r6, [sp, #20]
    2584:	464f      	mov	r7, r9
    2586:	403e      	ands	r6, r7
    2588:	46b4      	mov	ip, r6
    258a:	9e04      	ldr	r6, [sp, #16]
    258c:	4647      	mov	r7, r8
    258e:	403e      	ands	r6, r7
    2590:	46b2      	mov	sl, r6
    2592:	4666      	mov	r6, ip
    2594:	4657      	mov	r7, sl
    2596:	433e      	orrs	r6, r7
    2598:	d003      	beq.n	25a2 <long_division+0x96>
    259a:	0006      	movs	r6, r0
    259c:	4326      	orrs	r6, r4
    259e:	0032      	movs	r2, r6
    25a0:	002b      	movs	r3, r5
    25a2:	9c00      	ldr	r4, [sp, #0]
    25a4:	9d01      	ldr	r5, [sp, #4]
    25a6:	429d      	cmp	r5, r3
    25a8:	d8db      	bhi.n	2562 <long_division+0x56>
    25aa:	d1ce      	bne.n	254a <long_division+0x3e>
    25ac:	4294      	cmp	r4, r2
    25ae:	d8d8      	bhi.n	2562 <long_division+0x56>
    25b0:	e7cb      	b.n	254a <long_division+0x3e>
    25b2:	9b03      	ldr	r3, [sp, #12]
    25b4:	4658      	mov	r0, fp
    25b6:	0019      	movs	r1, r3
    25b8:	b007      	add	sp, #28
    25ba:	bc3c      	pop	{r2, r3, r4, r5}
    25bc:	4690      	mov	r8, r2
    25be:	4699      	mov	r9, r3
    25c0:	46a2      	mov	sl, r4
    25c2:	46ab      	mov	fp, r5
    25c4:	bdf0      	pop	{r4, r5, r6, r7, pc}

000025c6 <_sercom_get_sync_baud_val>:
    25c6:	b510      	push	{r4, lr}
    25c8:	0849      	lsrs	r1, r1, #1
    25ca:	2340      	movs	r3, #64	; 0x40
    25cc:	2400      	movs	r4, #0
    25ce:	4281      	cmp	r1, r0
    25d0:	d202      	bcs.n	25d8 <_sercom_get_sync_baud_val+0x12>
    25d2:	0018      	movs	r0, r3
    25d4:	bd10      	pop	{r4, pc}
    25d6:	001c      	movs	r4, r3
    25d8:	1a09      	subs	r1, r1, r0
    25da:	1c63      	adds	r3, r4, #1
    25dc:	b29b      	uxth	r3, r3
    25de:	4288      	cmp	r0, r1
    25e0:	d9f9      	bls.n	25d6 <_sercom_get_sync_baud_val+0x10>
    25e2:	2340      	movs	r3, #64	; 0x40
    25e4:	2cff      	cmp	r4, #255	; 0xff
    25e6:	d8f4      	bhi.n	25d2 <_sercom_get_sync_baud_val+0xc>
    25e8:	8014      	strh	r4, [r2, #0]
    25ea:	2300      	movs	r3, #0
    25ec:	e7f1      	b.n	25d2 <_sercom_get_sync_baud_val+0xc>
	...

000025f0 <_sercom_get_async_baud_val>:
    25f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    25f2:	b083      	sub	sp, #12
    25f4:	000f      	movs	r7, r1
    25f6:	0016      	movs	r6, r2
    25f8:	aa08      	add	r2, sp, #32
    25fa:	7811      	ldrb	r1, [r2, #0]
    25fc:	0004      	movs	r4, r0
    25fe:	434c      	muls	r4, r1
    2600:	2240      	movs	r2, #64	; 0x40
    2602:	42bc      	cmp	r4, r7
    2604:	d902      	bls.n	260c <_sercom_get_async_baud_val+0x1c>
    2606:	0010      	movs	r0, r2
    2608:	b003      	add	sp, #12
    260a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    260c:	2b00      	cmp	r3, #0
    260e:	d114      	bne.n	263a <_sercom_get_async_baud_val+0x4a>
    2610:	0002      	movs	r2, r0
    2612:	0008      	movs	r0, r1
    2614:	2100      	movs	r1, #0
    2616:	4c19      	ldr	r4, [pc, #100]	; (267c <_sercom_get_async_baud_val+0x8c>)
    2618:	47a0      	blx	r4
    261a:	0001      	movs	r1, r0
    261c:	003a      	movs	r2, r7
    261e:	2300      	movs	r3, #0
    2620:	2000      	movs	r0, #0
    2622:	4c17      	ldr	r4, [pc, #92]	; (2680 <_sercom_get_async_baud_val+0x90>)
    2624:	47a0      	blx	r4
    2626:	2200      	movs	r2, #0
    2628:	2301      	movs	r3, #1
    262a:	1a12      	subs	r2, r2, r0
    262c:	418b      	sbcs	r3, r1
    262e:	0c12      	lsrs	r2, r2, #16
    2630:	041b      	lsls	r3, r3, #16
    2632:	431a      	orrs	r2, r3
    2634:	8032      	strh	r2, [r6, #0]
    2636:	2200      	movs	r2, #0
    2638:	e7e5      	b.n	2606 <_sercom_get_async_baud_val+0x16>
    263a:	2200      	movs	r2, #0
    263c:	2b01      	cmp	r3, #1
    263e:	d1f9      	bne.n	2634 <_sercom_get_async_baud_val+0x44>
    2640:	000a      	movs	r2, r1
    2642:	2300      	movs	r3, #0
    2644:	2100      	movs	r1, #0
    2646:	4c0d      	ldr	r4, [pc, #52]	; (267c <_sercom_get_async_baud_val+0x8c>)
    2648:	47a0      	blx	r4
    264a:	0002      	movs	r2, r0
    264c:	000b      	movs	r3, r1
    264e:	9200      	str	r2, [sp, #0]
    2650:	9301      	str	r3, [sp, #4]
    2652:	0038      	movs	r0, r7
    2654:	2100      	movs	r1, #0
    2656:	4c0a      	ldr	r4, [pc, #40]	; (2680 <_sercom_get_async_baud_val+0x90>)
    2658:	47a0      	blx	r4
    265a:	0005      	movs	r5, r0
    265c:	2380      	movs	r3, #128	; 0x80
    265e:	019b      	lsls	r3, r3, #6
    2660:	2240      	movs	r2, #64	; 0x40
    2662:	4298      	cmp	r0, r3
    2664:	d8cf      	bhi.n	2606 <_sercom_get_async_baud_val+0x16>
    2666:	0f79      	lsrs	r1, r7, #29
    2668:	00f8      	lsls	r0, r7, #3
    266a:	9a00      	ldr	r2, [sp, #0]
    266c:	9b01      	ldr	r3, [sp, #4]
    266e:	47a0      	blx	r4
    2670:	00ea      	lsls	r2, r5, #3
    2672:	1a82      	subs	r2, r0, r2
    2674:	b2d2      	uxtb	r2, r2
    2676:	0352      	lsls	r2, r2, #13
    2678:	432a      	orrs	r2, r5
    267a:	e7db      	b.n	2634 <_sercom_get_async_baud_val+0x44>
    267c:	00006435 	.word	0x00006435
    2680:	0000250d 	.word	0x0000250d

00002684 <sercom_set_gclk_generator>:
    2684:	b510      	push	{r4, lr}
    2686:	b082      	sub	sp, #8
    2688:	0004      	movs	r4, r0
    268a:	4b0e      	ldr	r3, [pc, #56]	; (26c4 <sercom_set_gclk_generator+0x40>)
    268c:	781b      	ldrb	r3, [r3, #0]
    268e:	2b00      	cmp	r3, #0
    2690:	d007      	beq.n	26a2 <sercom_set_gclk_generator+0x1e>
    2692:	2900      	cmp	r1, #0
    2694:	d105      	bne.n	26a2 <sercom_set_gclk_generator+0x1e>
    2696:	4b0b      	ldr	r3, [pc, #44]	; (26c4 <sercom_set_gclk_generator+0x40>)
    2698:	785b      	ldrb	r3, [r3, #1]
    269a:	4283      	cmp	r3, r0
    269c:	d010      	beq.n	26c0 <sercom_set_gclk_generator+0x3c>
    269e:	201d      	movs	r0, #29
    26a0:	e00c      	b.n	26bc <sercom_set_gclk_generator+0x38>
    26a2:	a901      	add	r1, sp, #4
    26a4:	700c      	strb	r4, [r1, #0]
    26a6:	2012      	movs	r0, #18
    26a8:	4b07      	ldr	r3, [pc, #28]	; (26c8 <sercom_set_gclk_generator+0x44>)
    26aa:	4798      	blx	r3
    26ac:	2012      	movs	r0, #18
    26ae:	4b07      	ldr	r3, [pc, #28]	; (26cc <sercom_set_gclk_generator+0x48>)
    26b0:	4798      	blx	r3
    26b2:	4b04      	ldr	r3, [pc, #16]	; (26c4 <sercom_set_gclk_generator+0x40>)
    26b4:	705c      	strb	r4, [r3, #1]
    26b6:	2201      	movs	r2, #1
    26b8:	701a      	strb	r2, [r3, #0]
    26ba:	2000      	movs	r0, #0
    26bc:	b002      	add	sp, #8
    26be:	bd10      	pop	{r4, pc}
    26c0:	2000      	movs	r0, #0
    26c2:	e7fb      	b.n	26bc <sercom_set_gclk_generator+0x38>
    26c4:	200000c4 	.word	0x200000c4
    26c8:	00004f39 	.word	0x00004f39
    26cc:	00004ec9 	.word	0x00004ec9

000026d0 <_sercom_get_default_pad>:
    26d0:	4b40      	ldr	r3, [pc, #256]	; (27d4 <_sercom_get_default_pad+0x104>)
    26d2:	4298      	cmp	r0, r3
    26d4:	d031      	beq.n	273a <_sercom_get_default_pad+0x6a>
    26d6:	d90a      	bls.n	26ee <_sercom_get_default_pad+0x1e>
    26d8:	4b3f      	ldr	r3, [pc, #252]	; (27d8 <_sercom_get_default_pad+0x108>)
    26da:	4298      	cmp	r0, r3
    26dc:	d04d      	beq.n	277a <_sercom_get_default_pad+0xaa>
    26de:	4b3f      	ldr	r3, [pc, #252]	; (27dc <_sercom_get_default_pad+0x10c>)
    26e0:	4298      	cmp	r0, r3
    26e2:	d05a      	beq.n	279a <_sercom_get_default_pad+0xca>
    26e4:	4b3e      	ldr	r3, [pc, #248]	; (27e0 <_sercom_get_default_pad+0x110>)
    26e6:	4298      	cmp	r0, r3
    26e8:	d037      	beq.n	275a <_sercom_get_default_pad+0x8a>
    26ea:	2000      	movs	r0, #0
    26ec:	4770      	bx	lr
    26ee:	4b3d      	ldr	r3, [pc, #244]	; (27e4 <_sercom_get_default_pad+0x114>)
    26f0:	4298      	cmp	r0, r3
    26f2:	d00c      	beq.n	270e <_sercom_get_default_pad+0x3e>
    26f4:	4b3c      	ldr	r3, [pc, #240]	; (27e8 <_sercom_get_default_pad+0x118>)
    26f6:	4298      	cmp	r0, r3
    26f8:	d1f7      	bne.n	26ea <_sercom_get_default_pad+0x1a>
    26fa:	2901      	cmp	r1, #1
    26fc:	d017      	beq.n	272e <_sercom_get_default_pad+0x5e>
    26fe:	2900      	cmp	r1, #0
    2700:	d05d      	beq.n	27be <_sercom_get_default_pad+0xee>
    2702:	2902      	cmp	r1, #2
    2704:	d015      	beq.n	2732 <_sercom_get_default_pad+0x62>
    2706:	2903      	cmp	r1, #3
    2708:	d015      	beq.n	2736 <_sercom_get_default_pad+0x66>
    270a:	2000      	movs	r0, #0
    270c:	e7ee      	b.n	26ec <_sercom_get_default_pad+0x1c>
    270e:	2901      	cmp	r1, #1
    2710:	d007      	beq.n	2722 <_sercom_get_default_pad+0x52>
    2712:	2900      	cmp	r1, #0
    2714:	d051      	beq.n	27ba <_sercom_get_default_pad+0xea>
    2716:	2902      	cmp	r1, #2
    2718:	d005      	beq.n	2726 <_sercom_get_default_pad+0x56>
    271a:	2903      	cmp	r1, #3
    271c:	d005      	beq.n	272a <_sercom_get_default_pad+0x5a>
    271e:	2000      	movs	r0, #0
    2720:	e7e4      	b.n	26ec <_sercom_get_default_pad+0x1c>
    2722:	4832      	ldr	r0, [pc, #200]	; (27ec <_sercom_get_default_pad+0x11c>)
    2724:	e7e2      	b.n	26ec <_sercom_get_default_pad+0x1c>
    2726:	4832      	ldr	r0, [pc, #200]	; (27f0 <_sercom_get_default_pad+0x120>)
    2728:	e7e0      	b.n	26ec <_sercom_get_default_pad+0x1c>
    272a:	4832      	ldr	r0, [pc, #200]	; (27f4 <_sercom_get_default_pad+0x124>)
    272c:	e7de      	b.n	26ec <_sercom_get_default_pad+0x1c>
    272e:	4832      	ldr	r0, [pc, #200]	; (27f8 <_sercom_get_default_pad+0x128>)
    2730:	e7dc      	b.n	26ec <_sercom_get_default_pad+0x1c>
    2732:	4832      	ldr	r0, [pc, #200]	; (27fc <_sercom_get_default_pad+0x12c>)
    2734:	e7da      	b.n	26ec <_sercom_get_default_pad+0x1c>
    2736:	4832      	ldr	r0, [pc, #200]	; (2800 <_sercom_get_default_pad+0x130>)
    2738:	e7d8      	b.n	26ec <_sercom_get_default_pad+0x1c>
    273a:	2901      	cmp	r1, #1
    273c:	d007      	beq.n	274e <_sercom_get_default_pad+0x7e>
    273e:	2900      	cmp	r1, #0
    2740:	d03f      	beq.n	27c2 <_sercom_get_default_pad+0xf2>
    2742:	2902      	cmp	r1, #2
    2744:	d005      	beq.n	2752 <_sercom_get_default_pad+0x82>
    2746:	2903      	cmp	r1, #3
    2748:	d005      	beq.n	2756 <_sercom_get_default_pad+0x86>
    274a:	2000      	movs	r0, #0
    274c:	e7ce      	b.n	26ec <_sercom_get_default_pad+0x1c>
    274e:	482d      	ldr	r0, [pc, #180]	; (2804 <_sercom_get_default_pad+0x134>)
    2750:	e7cc      	b.n	26ec <_sercom_get_default_pad+0x1c>
    2752:	482d      	ldr	r0, [pc, #180]	; (2808 <_sercom_get_default_pad+0x138>)
    2754:	e7ca      	b.n	26ec <_sercom_get_default_pad+0x1c>
    2756:	482d      	ldr	r0, [pc, #180]	; (280c <_sercom_get_default_pad+0x13c>)
    2758:	e7c8      	b.n	26ec <_sercom_get_default_pad+0x1c>
    275a:	2901      	cmp	r1, #1
    275c:	d007      	beq.n	276e <_sercom_get_default_pad+0x9e>
    275e:	2900      	cmp	r1, #0
    2760:	d031      	beq.n	27c6 <_sercom_get_default_pad+0xf6>
    2762:	2902      	cmp	r1, #2
    2764:	d005      	beq.n	2772 <_sercom_get_default_pad+0xa2>
    2766:	2903      	cmp	r1, #3
    2768:	d005      	beq.n	2776 <_sercom_get_default_pad+0xa6>
    276a:	2000      	movs	r0, #0
    276c:	e7be      	b.n	26ec <_sercom_get_default_pad+0x1c>
    276e:	4828      	ldr	r0, [pc, #160]	; (2810 <_sercom_get_default_pad+0x140>)
    2770:	e7bc      	b.n	26ec <_sercom_get_default_pad+0x1c>
    2772:	4828      	ldr	r0, [pc, #160]	; (2814 <_sercom_get_default_pad+0x144>)
    2774:	e7ba      	b.n	26ec <_sercom_get_default_pad+0x1c>
    2776:	4828      	ldr	r0, [pc, #160]	; (2818 <_sercom_get_default_pad+0x148>)
    2778:	e7b8      	b.n	26ec <_sercom_get_default_pad+0x1c>
    277a:	2901      	cmp	r1, #1
    277c:	d007      	beq.n	278e <_sercom_get_default_pad+0xbe>
    277e:	2900      	cmp	r1, #0
    2780:	d023      	beq.n	27ca <_sercom_get_default_pad+0xfa>
    2782:	2902      	cmp	r1, #2
    2784:	d005      	beq.n	2792 <_sercom_get_default_pad+0xc2>
    2786:	2903      	cmp	r1, #3
    2788:	d005      	beq.n	2796 <_sercom_get_default_pad+0xc6>
    278a:	2000      	movs	r0, #0
    278c:	e7ae      	b.n	26ec <_sercom_get_default_pad+0x1c>
    278e:	4823      	ldr	r0, [pc, #140]	; (281c <_sercom_get_default_pad+0x14c>)
    2790:	e7ac      	b.n	26ec <_sercom_get_default_pad+0x1c>
    2792:	4823      	ldr	r0, [pc, #140]	; (2820 <_sercom_get_default_pad+0x150>)
    2794:	e7aa      	b.n	26ec <_sercom_get_default_pad+0x1c>
    2796:	4823      	ldr	r0, [pc, #140]	; (2824 <_sercom_get_default_pad+0x154>)
    2798:	e7a8      	b.n	26ec <_sercom_get_default_pad+0x1c>
    279a:	2901      	cmp	r1, #1
    279c:	d007      	beq.n	27ae <_sercom_get_default_pad+0xde>
    279e:	2900      	cmp	r1, #0
    27a0:	d015      	beq.n	27ce <_sercom_get_default_pad+0xfe>
    27a2:	2902      	cmp	r1, #2
    27a4:	d005      	beq.n	27b2 <_sercom_get_default_pad+0xe2>
    27a6:	2903      	cmp	r1, #3
    27a8:	d005      	beq.n	27b6 <_sercom_get_default_pad+0xe6>
    27aa:	2000      	movs	r0, #0
    27ac:	e79e      	b.n	26ec <_sercom_get_default_pad+0x1c>
    27ae:	481e      	ldr	r0, [pc, #120]	; (2828 <_sercom_get_default_pad+0x158>)
    27b0:	e79c      	b.n	26ec <_sercom_get_default_pad+0x1c>
    27b2:	481e      	ldr	r0, [pc, #120]	; (282c <_sercom_get_default_pad+0x15c>)
    27b4:	e79a      	b.n	26ec <_sercom_get_default_pad+0x1c>
    27b6:	481e      	ldr	r0, [pc, #120]	; (2830 <_sercom_get_default_pad+0x160>)
    27b8:	e798      	b.n	26ec <_sercom_get_default_pad+0x1c>
    27ba:	481e      	ldr	r0, [pc, #120]	; (2834 <_sercom_get_default_pad+0x164>)
    27bc:	e796      	b.n	26ec <_sercom_get_default_pad+0x1c>
    27be:	481e      	ldr	r0, [pc, #120]	; (2838 <_sercom_get_default_pad+0x168>)
    27c0:	e794      	b.n	26ec <_sercom_get_default_pad+0x1c>
    27c2:	481e      	ldr	r0, [pc, #120]	; (283c <_sercom_get_default_pad+0x16c>)
    27c4:	e792      	b.n	26ec <_sercom_get_default_pad+0x1c>
    27c6:	481e      	ldr	r0, [pc, #120]	; (2840 <_sercom_get_default_pad+0x170>)
    27c8:	e790      	b.n	26ec <_sercom_get_default_pad+0x1c>
    27ca:	481e      	ldr	r0, [pc, #120]	; (2844 <_sercom_get_default_pad+0x174>)
    27cc:	e78e      	b.n	26ec <_sercom_get_default_pad+0x1c>
    27ce:	481e      	ldr	r0, [pc, #120]	; (2848 <_sercom_get_default_pad+0x178>)
    27d0:	e78c      	b.n	26ec <_sercom_get_default_pad+0x1c>
    27d2:	46c0      	nop			; (mov r8, r8)
    27d4:	42000c00 	.word	0x42000c00
    27d8:	42001400 	.word	0x42001400
    27dc:	42001800 	.word	0x42001800
    27e0:	42001000 	.word	0x42001000
    27e4:	42000400 	.word	0x42000400
    27e8:	42000800 	.word	0x42000800
    27ec:	00050003 	.word	0x00050003
    27f0:	00060003 	.word	0x00060003
    27f4:	00070003 	.word	0x00070003
    27f8:	00110002 	.word	0x00110002
    27fc:	00120002 	.word	0x00120002
    2800:	00130002 	.word	0x00130002
    2804:	000d0002 	.word	0x000d0002
    2808:	000e0002 	.word	0x000e0002
    280c:	000f0002 	.word	0x000f0002
    2810:	00170002 	.word	0x00170002
    2814:	00180002 	.word	0x00180002
    2818:	00190002 	.word	0x00190002
    281c:	00290003 	.word	0x00290003
    2820:	002a0003 	.word	0x002a0003
    2824:	002b0003 	.word	0x002b0003
    2828:	00230003 	.word	0x00230003
    282c:	00200003 	.word	0x00200003
    2830:	00210003 	.word	0x00210003
    2834:	00040003 	.word	0x00040003
    2838:	00100002 	.word	0x00100002
    283c:	000c0002 	.word	0x000c0002
    2840:	00160002 	.word	0x00160002
    2844:	00280003 	.word	0x00280003
    2848:	00220003 	.word	0x00220003

0000284c <_sercom_get_sercom_inst_index>:
    284c:	b530      	push	{r4, r5, lr}
    284e:	b087      	sub	sp, #28
    2850:	4b0b      	ldr	r3, [pc, #44]	; (2880 <_sercom_get_sercom_inst_index+0x34>)
    2852:	466a      	mov	r2, sp
    2854:	cb32      	ldmia	r3!, {r1, r4, r5}
    2856:	c232      	stmia	r2!, {r1, r4, r5}
    2858:	cb32      	ldmia	r3!, {r1, r4, r5}
    285a:	c232      	stmia	r2!, {r1, r4, r5}
    285c:	9b00      	ldr	r3, [sp, #0]
    285e:	4283      	cmp	r3, r0
    2860:	d00b      	beq.n	287a <_sercom_get_sercom_inst_index+0x2e>
    2862:	2301      	movs	r3, #1
    2864:	009a      	lsls	r2, r3, #2
    2866:	4669      	mov	r1, sp
    2868:	5852      	ldr	r2, [r2, r1]
    286a:	4282      	cmp	r2, r0
    286c:	d006      	beq.n	287c <_sercom_get_sercom_inst_index+0x30>
    286e:	3301      	adds	r3, #1
    2870:	2b06      	cmp	r3, #6
    2872:	d1f7      	bne.n	2864 <_sercom_get_sercom_inst_index+0x18>
    2874:	2000      	movs	r0, #0
    2876:	b007      	add	sp, #28
    2878:	bd30      	pop	{r4, r5, pc}
    287a:	2300      	movs	r3, #0
    287c:	b2d8      	uxtb	r0, r3
    287e:	e7fa      	b.n	2876 <_sercom_get_sercom_inst_index+0x2a>
    2880:	000093ac 	.word	0x000093ac

00002884 <_tcc_get_inst_index>:
    2884:	4b09      	ldr	r3, [pc, #36]	; (28ac <_tcc_get_inst_index+0x28>)
    2886:	4298      	cmp	r0, r3
    2888:	d00c      	beq.n	28a4 <_tcc_get_inst_index+0x20>
    288a:	4b09      	ldr	r3, [pc, #36]	; (28b0 <_tcc_get_inst_index+0x2c>)
    288c:	4298      	cmp	r0, r3
    288e:	d007      	beq.n	28a0 <_tcc_get_inst_index+0x1c>
    2890:	4a08      	ldr	r2, [pc, #32]	; (28b4 <_tcc_get_inst_index+0x30>)
    2892:	2300      	movs	r3, #0
    2894:	4290      	cmp	r0, r2
    2896:	d001      	beq.n	289c <_tcc_get_inst_index+0x18>
    2898:	0018      	movs	r0, r3
    289a:	4770      	bx	lr
    289c:	3302      	adds	r3, #2
    289e:	e002      	b.n	28a6 <_tcc_get_inst_index+0x22>
    28a0:	2301      	movs	r3, #1
    28a2:	e000      	b.n	28a6 <_tcc_get_inst_index+0x22>
    28a4:	2300      	movs	r3, #0
    28a6:	b2db      	uxtb	r3, r3
    28a8:	e7f6      	b.n	2898 <_tcc_get_inst_index+0x14>
    28aa:	46c0      	nop			; (mov r8, r8)
    28ac:	42002400 	.word	0x42002400
    28b0:	42002800 	.word	0x42002800
    28b4:	42002c00 	.word	0x42002c00

000028b8 <tcc_get_config_defaults>:
    28b8:	b510      	push	{r4, lr}
    28ba:	0004      	movs	r4, r0
    28bc:	0008      	movs	r0, r1
    28be:	4b4f      	ldr	r3, [pc, #316]	; (29fc <tcc_get_config_defaults+0x144>)
    28c0:	4798      	blx	r3
    28c2:	2300      	movs	r3, #0
    28c4:	6023      	str	r3, [r4, #0]
    28c6:	0080      	lsls	r0, r0, #2
    28c8:	4a4d      	ldr	r2, [pc, #308]	; (2a00 <tcc_get_config_defaults+0x148>)
    28ca:	5882      	ldr	r2, [r0, r2]
    28cc:	6062      	str	r2, [r4, #4]
    28ce:	72a3      	strb	r3, [r4, #10]
    28d0:	72e3      	strb	r3, [r4, #11]
    28d2:	7323      	strb	r3, [r4, #12]
    28d4:	7263      	strb	r3, [r4, #9]
    28d6:	7223      	strb	r3, [r4, #8]
    28d8:	61e3      	str	r3, [r4, #28]
    28da:	6223      	str	r3, [r4, #32]
    28dc:	6263      	str	r3, [r4, #36]	; 0x24
    28de:	62a3      	str	r3, [r4, #40]	; 0x28
    28e0:	7523      	strb	r3, [r4, #20]
    28e2:	7563      	strb	r3, [r4, #21]
    28e4:	75a3      	strb	r3, [r4, #22]
    28e6:	75e3      	strb	r3, [r4, #23]
    28e8:	7623      	strb	r3, [r4, #24]
    28ea:	7663      	strb	r3, [r4, #25]
    28ec:	7423      	strb	r3, [r4, #16]
    28ee:	7463      	strb	r3, [r4, #17]
    28f0:	74a3      	strb	r3, [r4, #18]
    28f2:	74e3      	strb	r3, [r4, #19]
    28f4:	222c      	movs	r2, #44	; 0x2c
    28f6:	54a3      	strb	r3, [r4, r2]
    28f8:	3201      	adds	r2, #1
    28fa:	54a3      	strb	r3, [r4, r2]
    28fc:	3201      	adds	r2, #1
    28fe:	54a3      	strb	r3, [r4, r2]
    2900:	3201      	adds	r2, #1
    2902:	54a3      	strb	r3, [r4, r2]
    2904:	3201      	adds	r2, #1
    2906:	54a3      	strb	r3, [r4, r2]
    2908:	3201      	adds	r2, #1
    290a:	54a3      	strb	r3, [r4, r2]
    290c:	3201      	adds	r2, #1
    290e:	54a3      	strb	r3, [r4, r2]
    2910:	3201      	adds	r2, #1
    2912:	54a3      	strb	r3, [r4, r2]
    2914:	3201      	adds	r2, #1
    2916:	54a3      	strb	r3, [r4, r2]
    2918:	3201      	adds	r2, #1
    291a:	54a3      	strb	r3, [r4, r2]
    291c:	3201      	adds	r2, #1
    291e:	54a3      	strb	r3, [r4, r2]
    2920:	3201      	adds	r2, #1
    2922:	54a3      	strb	r3, [r4, r2]
    2924:	3201      	adds	r2, #1
    2926:	54a3      	strb	r3, [r4, r2]
    2928:	3201      	adds	r2, #1
    292a:	54a3      	strb	r3, [r4, r2]
    292c:	3201      	adds	r2, #1
    292e:	54a3      	strb	r3, [r4, r2]
    2930:	3201      	adds	r2, #1
    2932:	54a3      	strb	r3, [r4, r2]
    2934:	3201      	adds	r2, #1
    2936:	54a3      	strb	r3, [r4, r2]
    2938:	3201      	adds	r2, #1
    293a:	54a3      	strb	r3, [r4, r2]
    293c:	3201      	adds	r2, #1
    293e:	54a3      	strb	r3, [r4, r2]
    2940:	3201      	adds	r2, #1
    2942:	54a3      	strb	r3, [r4, r2]
    2944:	3201      	adds	r2, #1
    2946:	54a3      	strb	r3, [r4, r2]
    2948:	3201      	adds	r2, #1
    294a:	54a3      	strb	r3, [r4, r2]
    294c:	3201      	adds	r2, #1
    294e:	54a3      	strb	r3, [r4, r2]
    2950:	3201      	adds	r2, #1
    2952:	54a3      	strb	r3, [r4, r2]
    2954:	3201      	adds	r2, #1
    2956:	54a3      	strb	r3, [r4, r2]
    2958:	3201      	adds	r2, #1
    295a:	54a3      	strb	r3, [r4, r2]
    295c:	3201      	adds	r2, #1
    295e:	54a3      	strb	r3, [r4, r2]
    2960:	3201      	adds	r2, #1
    2962:	54a3      	strb	r3, [r4, r2]
    2964:	3201      	adds	r2, #1
    2966:	54a3      	strb	r3, [r4, r2]
    2968:	3201      	adds	r2, #1
    296a:	54a3      	strb	r3, [r4, r2]
    296c:	3201      	adds	r2, #1
    296e:	54a3      	strb	r3, [r4, r2]
    2970:	3201      	adds	r2, #1
    2972:	54a3      	strb	r3, [r4, r2]
    2974:	3201      	adds	r2, #1
    2976:	54a3      	strb	r3, [r4, r2]
    2978:	3201      	adds	r2, #1
    297a:	54a3      	strb	r3, [r4, r2]
    297c:	3201      	adds	r2, #1
    297e:	54a3      	strb	r3, [r4, r2]
    2980:	3201      	adds	r2, #1
    2982:	54a3      	strb	r3, [r4, r2]
    2984:	3201      	adds	r2, #1
    2986:	54a3      	strb	r3, [r4, r2]
    2988:	3201      	adds	r2, #1
    298a:	54a3      	strb	r3, [r4, r2]
    298c:	3201      	adds	r2, #1
    298e:	54a3      	strb	r3, [r4, r2]
    2990:	3201      	adds	r2, #1
    2992:	54a3      	strb	r3, [r4, r2]
    2994:	3201      	adds	r2, #1
    2996:	54a3      	strb	r3, [r4, r2]
    2998:	3201      	adds	r2, #1
    299a:	54a3      	strb	r3, [r4, r2]
    299c:	3201      	adds	r2, #1
    299e:	54a3      	strb	r3, [r4, r2]
    29a0:	3201      	adds	r2, #1
    29a2:	54a3      	strb	r3, [r4, r2]
    29a4:	3241      	adds	r2, #65	; 0x41
    29a6:	54a3      	strb	r3, [r4, r2]
    29a8:	65a3      	str	r3, [r4, #88]	; 0x58
    29aa:	67a3      	str	r3, [r4, #120]	; 0x78
    29ac:	3201      	adds	r2, #1
    29ae:	54a3      	strb	r3, [r4, r2]
    29b0:	65e3      	str	r3, [r4, #92]	; 0x5c
    29b2:	67e3      	str	r3, [r4, #124]	; 0x7c
    29b4:	3201      	adds	r2, #1
    29b6:	54a3      	strb	r3, [r4, r2]
    29b8:	6623      	str	r3, [r4, #96]	; 0x60
    29ba:	3a1a      	subs	r2, #26
    29bc:	50a3      	str	r3, [r4, r2]
    29be:	321b      	adds	r2, #27
    29c0:	54a3      	strb	r3, [r4, r2]
    29c2:	6663      	str	r3, [r4, #100]	; 0x64
    29c4:	3a17      	subs	r2, #23
    29c6:	50a3      	str	r3, [r4, r2]
    29c8:	3218      	adds	r2, #24
    29ca:	54a3      	strb	r3, [r4, r2]
    29cc:	66a3      	str	r3, [r4, #104]	; 0x68
    29ce:	3a14      	subs	r2, #20
    29d0:	50a3      	str	r3, [r4, r2]
    29d2:	3215      	adds	r2, #21
    29d4:	54a3      	strb	r3, [r4, r2]
    29d6:	66e3      	str	r3, [r4, #108]	; 0x6c
    29d8:	3a11      	subs	r2, #17
    29da:	50a3      	str	r3, [r4, r2]
    29dc:	3212      	adds	r2, #18
    29de:	54a3      	strb	r3, [r4, r2]
    29e0:	6723      	str	r3, [r4, #112]	; 0x70
    29e2:	3a0e      	subs	r2, #14
    29e4:	50a3      	str	r3, [r4, r2]
    29e6:	320f      	adds	r2, #15
    29e8:	54a3      	strb	r3, [r4, r2]
    29ea:	6763      	str	r3, [r4, #116]	; 0x74
    29ec:	3a0b      	subs	r2, #11
    29ee:	50a3      	str	r3, [r4, r2]
    29f0:	2101      	movs	r1, #1
    29f2:	320c      	adds	r2, #12
    29f4:	54a1      	strb	r1, [r4, r2]
    29f6:	3201      	adds	r2, #1
    29f8:	54a3      	strb	r3, [r4, r2]
    29fa:	bd10      	pop	{r4, pc}
    29fc:	00002885 	.word	0x00002885
    2a00:	000093d8 	.word	0x000093d8

00002a04 <tcc_init>:
    2a04:	b5f0      	push	{r4, r5, r6, r7, lr}
    2a06:	46de      	mov	lr, fp
    2a08:	4657      	mov	r7, sl
    2a0a:	464e      	mov	r6, r9
    2a0c:	4645      	mov	r5, r8
    2a0e:	b5e0      	push	{r5, r6, r7, lr}
    2a10:	b091      	sub	sp, #68	; 0x44
    2a12:	9001      	str	r0, [sp, #4]
    2a14:	000c      	movs	r4, r1
    2a16:	0015      	movs	r5, r2
    2a18:	0008      	movs	r0, r1
    2a1a:	4bc3      	ldr	r3, [pc, #780]	; (2d28 <tcc_init+0x324>)
    2a1c:	4798      	blx	r3
    2a1e:	0003      	movs	r3, r0
    2a20:	0001      	movs	r1, r0
    2a22:	48c2      	ldr	r0, [pc, #776]	; (2d2c <tcc_init+0x328>)
    2a24:	69c2      	ldr	r2, [r0, #28]
    2a26:	009e      	lsls	r6, r3, #2
    2a28:	4fc1      	ldr	r7, [pc, #772]	; (2d30 <tcc_init+0x32c>)
    2a2a:	59f7      	ldr	r7, [r6, r7]
    2a2c:	433a      	orrs	r2, r7
    2a2e:	61c2      	str	r2, [r0, #28]
    2a30:	6822      	ldr	r2, [r4, #0]
    2a32:	201c      	movs	r0, #28
    2a34:	0792      	lsls	r2, r2, #30
    2a36:	d506      	bpl.n	2a46 <tcc_init+0x42>
    2a38:	b011      	add	sp, #68	; 0x44
    2a3a:	bc3c      	pop	{r2, r3, r4, r5}
    2a3c:	4690      	mov	r8, r2
    2a3e:	4699      	mov	r9, r3
    2a40:	46a2      	mov	sl, r4
    2a42:	46ab      	mov	fp, r5
    2a44:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2a46:	6822      	ldr	r2, [r4, #0]
    2a48:	2701      	movs	r7, #1
    2a4a:	4017      	ands	r7, r2
    2a4c:	d1f4      	bne.n	2a38 <tcc_init+0x34>
    2a4e:	48b9      	ldr	r0, [pc, #740]	; (2d34 <tcc_init+0x330>)
    2a50:	5832      	ldr	r2, [r6, r0]
    2a52:	2017      	movs	r0, #23
    2a54:	682e      	ldr	r6, [r5, #0]
    2a56:	42b2      	cmp	r2, r6
    2a58:	d3ee      	bcc.n	2a38 <tcc_init+0x34>
    2a5a:	686e      	ldr	r6, [r5, #4]
    2a5c:	42b2      	cmp	r2, r6
    2a5e:	d3eb      	bcc.n	2a38 <tcc_init+0x34>
    2a60:	69e8      	ldr	r0, [r5, #28]
    2a62:	4282      	cmp	r2, r0
    2a64:	d200      	bcs.n	2a68 <tcc_init+0x64>
    2a66:	e1ab      	b.n	2dc0 <tcc_init+0x3bc>
    2a68:	6a28      	ldr	r0, [r5, #32]
    2a6a:	4282      	cmp	r2, r0
    2a6c:	d200      	bcs.n	2a70 <tcc_init+0x6c>
    2a6e:	e1a9      	b.n	2dc4 <tcc_init+0x3c0>
    2a70:	6a68      	ldr	r0, [r5, #36]	; 0x24
    2a72:	4282      	cmp	r2, r0
    2a74:	d200      	bcs.n	2a78 <tcc_init+0x74>
    2a76:	e1a7      	b.n	2dc8 <tcc_init+0x3c4>
    2a78:	6aa8      	ldr	r0, [r5, #40]	; 0x28
    2a7a:	4282      	cmp	r2, r0
    2a7c:	d200      	bcs.n	2a80 <tcc_init+0x7c>
    2a7e:	e1a5      	b.n	2dcc <tcc_init+0x3c8>
    2a80:	2298      	movs	r2, #152	; 0x98
    2a82:	4694      	mov	ip, r2
    2a84:	44ac      	add	ip, r5
    2a86:	4662      	mov	r2, ip
    2a88:	9208      	str	r2, [sp, #32]
    2a8a:	2000      	movs	r0, #0
    2a8c:	e003      	b.n	2a96 <tcc_init+0x92>
    2a8e:	3001      	adds	r0, #1
    2a90:	3201      	adds	r2, #1
    2a92:	2808      	cmp	r0, #8
    2a94:	d008      	beq.n	2aa8 <tcc_init+0xa4>
    2a96:	7816      	ldrb	r6, [r2, #0]
    2a98:	2e00      	cmp	r6, #0
    2a9a:	d0f8      	beq.n	2a8e <tcc_init+0x8a>
    2a9c:	4ea6      	ldr	r6, [pc, #664]	; (2d38 <tcc_init+0x334>)
    2a9e:	5c76      	ldrb	r6, [r6, r1]
    2aa0:	4286      	cmp	r6, r0
    2aa2:	dcf4      	bgt.n	2a8e <tcc_init+0x8a>
    2aa4:	2017      	movs	r0, #23
    2aa6:	e7c7      	b.n	2a38 <tcc_init+0x34>
    2aa8:	2200      	movs	r2, #0
    2aaa:	9202      	str	r2, [sp, #8]
    2aac:	2080      	movs	r0, #128	; 0x80
    2aae:	0440      	lsls	r0, r0, #17
    2ab0:	4684      	mov	ip, r0
    2ab2:	e002      	b.n	2aba <tcc_init+0xb6>
    2ab4:	3201      	adds	r2, #1
    2ab6:	2a04      	cmp	r2, #4
    2ab8:	d00e      	beq.n	2ad8 <tcc_init+0xd4>
    2aba:	18a8      	adds	r0, r5, r2
    2abc:	7c00      	ldrb	r0, [r0, #16]
    2abe:	2801      	cmp	r0, #1
    2ac0:	d1f8      	bne.n	2ab4 <tcc_init+0xb0>
    2ac2:	489e      	ldr	r0, [pc, #632]	; (2d3c <tcc_init+0x338>)
    2ac4:	5c40      	ldrb	r0, [r0, r1]
    2ac6:	4290      	cmp	r0, r2
    2ac8:	da00      	bge.n	2acc <tcc_init+0xc8>
    2aca:	e181      	b.n	2dd0 <tcc_init+0x3cc>
    2acc:	4660      	mov	r0, ip
    2ace:	4090      	lsls	r0, r2
    2ad0:	9e02      	ldr	r6, [sp, #8]
    2ad2:	4306      	orrs	r6, r0
    2ad4:	9602      	str	r6, [sp, #8]
    2ad6:	e7ed      	b.n	2ab4 <tcc_init+0xb0>
    2ad8:	329d      	adds	r2, #157	; 0x9d
    2ada:	5caa      	ldrb	r2, [r5, r2]
    2adc:	2a00      	cmp	r2, #0
    2ade:	d004      	beq.n	2aea <tcc_init+0xe6>
    2ae0:	2280      	movs	r2, #128	; 0x80
    2ae2:	0112      	lsls	r2, r2, #4
    2ae4:	9902      	ldr	r1, [sp, #8]
    2ae6:	4311      	orrs	r1, r2
    2ae8:	9102      	str	r1, [sp, #8]
    2aea:	7a2a      	ldrb	r2, [r5, #8]
    2aec:	1e51      	subs	r1, r2, #1
    2aee:	418a      	sbcs	r2, r1
    2af0:	0092      	lsls	r2, r2, #2
    2af2:	9206      	str	r2, [sp, #24]
    2af4:	7a6a      	ldrb	r2, [r5, #9]
    2af6:	2a01      	cmp	r2, #1
    2af8:	d022      	beq.n	2b40 <tcc_init+0x13c>
    2afa:	4a90      	ldr	r2, [pc, #576]	; (2d3c <tcc_init+0x338>)
    2afc:	5cd2      	ldrb	r2, [r2, r3]
    2afe:	0011      	movs	r1, r2
    2b00:	9205      	str	r2, [sp, #20]
    2b02:	2235      	movs	r2, #53	; 0x35
    2b04:	5caa      	ldrb	r2, [r5, r2]
    2b06:	428a      	cmp	r2, r1
    2b08:	d300      	bcc.n	2b0c <tcc_init+0x108>
    2b0a:	e16b      	b.n	2de4 <tcc_init+0x3e0>
    2b0c:	212c      	movs	r1, #44	; 0x2c
    2b0e:	5c69      	ldrb	r1, [r5, r1]
    2b10:	290f      	cmp	r1, #15
    2b12:	d900      	bls.n	2b16 <tcc_init+0x112>
    2b14:	e166      	b.n	2de4 <tcc_init+0x3e0>
    2b16:	7b28      	ldrb	r0, [r5, #12]
    2b18:	900a      	str	r0, [sp, #40]	; 0x28
    2b1a:	7ae8      	ldrb	r0, [r5, #11]
    2b1c:	900b      	str	r0, [sp, #44]	; 0x2c
    2b1e:	202d      	movs	r0, #45	; 0x2d
    2b20:	4682      	mov	sl, r0
    2b22:	44aa      	add	sl, r5
    2b24:	2000      	movs	r0, #0
    2b26:	9704      	str	r7, [sp, #16]
    2b28:	ae0e      	add	r6, sp, #56	; 0x38
    2b2a:	9607      	str	r6, [sp, #28]
    2b2c:	26c0      	movs	r6, #192	; 0xc0
    2b2e:	0136      	lsls	r6, r6, #4
    2b30:	46b1      	mov	r9, r6
    2b32:	4684      	mov	ip, r0
    2b34:	46a0      	mov	r8, r4
    2b36:	0028      	movs	r0, r5
    2b38:	4655      	mov	r5, sl
    2b3a:	9309      	str	r3, [sp, #36]	; 0x24
    2b3c:	4682      	mov	sl, r0
    2b3e:	e035      	b.n	2bac <tcc_init+0x1a8>
    2b40:	9906      	ldr	r1, [sp, #24]
    2b42:	4311      	orrs	r1, r2
    2b44:	9106      	str	r1, [sp, #24]
    2b46:	e7d8      	b.n	2afa <tcc_init+0xf6>
    2b48:	0292      	lsls	r2, r2, #10
    2b4a:	464f      	mov	r7, r9
    2b4c:	403a      	ands	r2, r7
    2b4e:	430a      	orrs	r2, r1
    2b50:	7919      	ldrb	r1, [r3, #4]
    2b52:	468b      	mov	fp, r1
    2b54:	2103      	movs	r1, #3
    2b56:	465f      	mov	r7, fp
    2b58:	4039      	ands	r1, r7
    2b5a:	430a      	orrs	r2, r1
    2b5c:	4316      	orrs	r6, r2
    2b5e:	795a      	ldrb	r2, [r3, #5]
    2b60:	0152      	lsls	r2, r2, #5
    2b62:	2160      	movs	r1, #96	; 0x60
    2b64:	400a      	ands	r2, r1
    2b66:	4332      	orrs	r2, r6
    2b68:	7999      	ldrb	r1, [r3, #6]
    2b6a:	0209      	lsls	r1, r1, #8
    2b6c:	26c0      	movs	r6, #192	; 0xc0
    2b6e:	00b6      	lsls	r6, r6, #2
    2b70:	400e      	ands	r6, r1
    2b72:	4316      	orrs	r6, r2
    2b74:	79da      	ldrb	r2, [r3, #7]
    2b76:	0312      	lsls	r2, r2, #12
    2b78:	21e0      	movs	r1, #224	; 0xe0
    2b7a:	01c9      	lsls	r1, r1, #7
    2b7c:	400a      	ands	r2, r1
    2b7e:	4316      	orrs	r6, r2
    2b80:	4334      	orrs	r4, r6
    2b82:	9a03      	ldr	r2, [sp, #12]
    2b84:	4314      	orrs	r4, r2
    2b86:	4320      	orrs	r0, r4
    2b88:	4662      	mov	r2, ip
    2b8a:	9907      	ldr	r1, [sp, #28]
    2b8c:	5050      	str	r0, [r2, r1]
    2b8e:	2a04      	cmp	r2, #4
    2b90:	d02a      	beq.n	2be8 <tcc_init+0x1e4>
    2b92:	7c9a      	ldrb	r2, [r3, #18]
    2b94:	9905      	ldr	r1, [sp, #20]
    2b96:	4291      	cmp	r1, r2
    2b98:	d800      	bhi.n	2b9c <tcc_init+0x198>
    2b9a:	e123      	b.n	2de4 <tcc_init+0x3e0>
    2b9c:	7a59      	ldrb	r1, [r3, #9]
    2b9e:	350a      	adds	r5, #10
    2ba0:	2304      	movs	r3, #4
    2ba2:	469b      	mov	fp, r3
    2ba4:	44dc      	add	ip, fp
    2ba6:	290f      	cmp	r1, #15
    2ba8:	d900      	bls.n	2bac <tcc_init+0x1a8>
    2baa:	e11b      	b.n	2de4 <tcc_init+0x3e0>
    2bac:	0609      	lsls	r1, r1, #24
    2bae:	23f0      	movs	r3, #240	; 0xf0
    2bb0:	051b      	lsls	r3, r3, #20
    2bb2:	4019      	ands	r1, r3
    2bb4:	002b      	movs	r3, r5
    2bb6:	782e      	ldrb	r6, [r5, #0]
    2bb8:	0436      	lsls	r6, r6, #16
    2bba:	20ff      	movs	r0, #255	; 0xff
    2bbc:	0400      	lsls	r0, r0, #16
    2bbe:	4006      	ands	r6, r0
    2bc0:	7868      	ldrb	r0, [r5, #1]
    2bc2:	2480      	movs	r4, #128	; 0x80
    2bc4:	2800      	cmp	r0, #0
    2bc6:	d100      	bne.n	2bca <tcc_init+0x1c6>
    2bc8:	9c04      	ldr	r4, [sp, #16]
    2bca:	7898      	ldrb	r0, [r3, #2]
    2bcc:	2708      	movs	r7, #8
    2bce:	9703      	str	r7, [sp, #12]
    2bd0:	2800      	cmp	r0, #0
    2bd2:	d101      	bne.n	2bd8 <tcc_init+0x1d4>
    2bd4:	9804      	ldr	r0, [sp, #16]
    2bd6:	9003      	str	r0, [sp, #12]
    2bd8:	78d8      	ldrb	r0, [r3, #3]
    2bda:	4683      	mov	fp, r0
    2bdc:	2010      	movs	r0, #16
    2bde:	465f      	mov	r7, fp
    2be0:	2f00      	cmp	r7, #0
    2be2:	d1b1      	bne.n	2b48 <tcc_init+0x144>
    2be4:	9804      	ldr	r0, [sp, #16]
    2be6:	e7af      	b.n	2b48 <tcc_init+0x144>
    2be8:	4644      	mov	r4, r8
    2bea:	4655      	mov	r5, sl
    2bec:	9b09      	ldr	r3, [sp, #36]	; 0x24
    2bee:	4a52      	ldr	r2, [pc, #328]	; (2d38 <tcc_init+0x334>)
    2bf0:	5cd2      	ldrb	r2, [r2, r3]
    2bf2:	4691      	mov	r9, r2
    2bf4:	4651      	mov	r1, sl
    2bf6:	3150      	adds	r1, #80	; 0x50
    2bf8:	4650      	mov	r0, sl
    2bfa:	3041      	adds	r0, #65	; 0x41
    2bfc:	2700      	movs	r7, #0
    2bfe:	2200      	movs	r2, #0
    2c00:	2601      	movs	r6, #1
    2c02:	46b2      	mov	sl, r6
    2c04:	2602      	movs	r6, #2
    2c06:	36ff      	adds	r6, #255	; 0xff
    2c08:	46b3      	mov	fp, r6
    2c0a:	2680      	movs	r6, #128	; 0x80
    2c0c:	0276      	lsls	r6, r6, #9
    2c0e:	46b0      	mov	r8, r6
    2c10:	46a4      	mov	ip, r4
    2c12:	001c      	movs	r4, r3
    2c14:	464b      	mov	r3, r9
    2c16:	e00f      	b.n	2c38 <tcc_init+0x234>
    2c18:	7806      	ldrb	r6, [r0, #0]
    2c1a:	2e00      	cmp	r6, #0
    2c1c:	d007      	beq.n	2c2e <tcc_init+0x22a>
    2c1e:	4293      	cmp	r3, r2
    2c20:	d800      	bhi.n	2c24 <tcc_init+0x220>
    2c22:	e0d9      	b.n	2dd8 <tcc_init+0x3d4>
    2c24:	2e02      	cmp	r6, #2
    2c26:	d014      	beq.n	2c52 <tcc_init+0x24e>
    2c28:	4656      	mov	r6, sl
    2c2a:	4096      	lsls	r6, r2
    2c2c:	4337      	orrs	r7, r6
    2c2e:	3201      	adds	r2, #1
    2c30:	3101      	adds	r1, #1
    2c32:	3002      	adds	r0, #2
    2c34:	2a08      	cmp	r2, #8
    2c36:	d010      	beq.n	2c5a <tcc_init+0x256>
    2c38:	780e      	ldrb	r6, [r1, #0]
    2c3a:	2e00      	cmp	r6, #0
    2c3c:	d0ec      	beq.n	2c18 <tcc_init+0x214>
    2c3e:	4293      	cmp	r3, r2
    2c40:	d800      	bhi.n	2c44 <tcc_init+0x240>
    2c42:	e0c7      	b.n	2dd4 <tcc_init+0x3d0>
    2c44:	4646      	mov	r6, r8
    2c46:	4096      	lsls	r6, r2
    2c48:	4337      	orrs	r7, r6
    2c4a:	7806      	ldrb	r6, [r0, #0]
    2c4c:	2e00      	cmp	r6, #0
    2c4e:	d1e9      	bne.n	2c24 <tcc_init+0x220>
    2c50:	e7ed      	b.n	2c2e <tcc_init+0x22a>
    2c52:	465e      	mov	r6, fp
    2c54:	4096      	lsls	r6, r2
    2c56:	4337      	orrs	r7, r6
    2c58:	e7e9      	b.n	2c2e <tcc_init+0x22a>
    2c5a:	4699      	mov	r9, r3
    2c5c:	0023      	movs	r3, r4
    2c5e:	4664      	mov	r4, ip
    2c60:	7e6a      	ldrb	r2, [r5, #25]
    2c62:	0112      	lsls	r2, r2, #4
    2c64:	2130      	movs	r1, #48	; 0x30
    2c66:	4011      	ands	r1, r2
    2c68:	7e28      	ldrb	r0, [r5, #24]
    2c6a:	2207      	movs	r2, #7
    2c6c:	4002      	ands	r2, r0
    2c6e:	4311      	orrs	r1, r2
    2c70:	2200      	movs	r2, #0
    2c72:	2080      	movs	r0, #128	; 0x80
    2c74:	0240      	lsls	r0, r0, #9
    2c76:	000e      	movs	r6, r1
    2c78:	e002      	b.n	2c80 <tcc_init+0x27c>
    2c7a:	3201      	adds	r2, #1
    2c7c:	2a04      	cmp	r2, #4
    2c7e:	d00b      	beq.n	2c98 <tcc_init+0x294>
    2c80:	18a9      	adds	r1, r5, r2
    2c82:	7d09      	ldrb	r1, [r1, #20]
    2c84:	2900      	cmp	r1, #0
    2c86:	d0f8      	beq.n	2c7a <tcc_init+0x276>
    2c88:	9905      	ldr	r1, [sp, #20]
    2c8a:	4291      	cmp	r1, r2
    2c8c:	dc00      	bgt.n	2c90 <tcc_init+0x28c>
    2c8e:	e0a5      	b.n	2ddc <tcc_init+0x3d8>
    2c90:	0001      	movs	r1, r0
    2c92:	4091      	lsls	r1, r2
    2c94:	430e      	orrs	r6, r1
    2c96:	e7f0      	b.n	2c7a <tcc_init+0x276>
    2c98:	46b2      	mov	sl, r6
    2c9a:	9801      	ldr	r0, [sp, #4]
    2c9c:	0002      	movs	r2, r0
    2c9e:	3204      	adds	r2, #4
    2ca0:	3034      	adds	r0, #52	; 0x34
    2ca2:	2100      	movs	r1, #0
    2ca4:	c202      	stmia	r2!, {r1}
    2ca6:	4282      	cmp	r2, r0
    2ca8:	d1fc      	bne.n	2ca4 <tcc_init+0x2a0>
    2caa:	2200      	movs	r2, #0
    2cac:	9801      	ldr	r0, [sp, #4]
    2cae:	6342      	str	r2, [r0, #52]	; 0x34
    2cb0:	6382      	str	r2, [r0, #56]	; 0x38
    2cb2:	0099      	lsls	r1, r3, #2
    2cb4:	4a22      	ldr	r2, [pc, #136]	; (2d40 <tcc_init+0x33c>)
    2cb6:	5088      	str	r0, [r1, r2]
    2cb8:	6004      	str	r4, [r0, #0]
    2cba:	22a0      	movs	r2, #160	; 0xa0
    2cbc:	5ca9      	ldrb	r1, [r5, r2]
    2cbe:	3a64      	subs	r2, #100	; 0x64
    2cc0:	5481      	strb	r1, [r0, r2]
    2cc2:	a90d      	add	r1, sp, #52	; 0x34
    2cc4:	7aaa      	ldrb	r2, [r5, #10]
    2cc6:	700a      	strb	r2, [r1, #0]
    2cc8:	4a1e      	ldr	r2, [pc, #120]	; (2d44 <tcc_init+0x340>)
    2cca:	5cd6      	ldrb	r6, [r2, r3]
    2ccc:	0030      	movs	r0, r6
    2cce:	4b1e      	ldr	r3, [pc, #120]	; (2d48 <tcc_init+0x344>)
    2cd0:	4798      	blx	r3
    2cd2:	0030      	movs	r0, r6
    2cd4:	4b1d      	ldr	r3, [pc, #116]	; (2d4c <tcc_init+0x348>)
    2cd6:	4798      	blx	r3
    2cd8:	464b      	mov	r3, r9
    2cda:	2b00      	cmp	r3, #0
    2cdc:	dd3c      	ble.n	2d58 <tcc_init+0x354>
    2cde:	002e      	movs	r6, r5
    2ce0:	3658      	adds	r6, #88	; 0x58
    2ce2:	3398      	adds	r3, #152	; 0x98
    2ce4:	4698      	mov	r8, r3
    2ce6:	44a8      	add	r8, r5
    2ce8:	2301      	movs	r3, #1
    2cea:	4699      	mov	r9, r3
    2cec:	46ab      	mov	fp, r5
    2cee:	4645      	mov	r5, r8
    2cf0:	46a0      	mov	r8, r4
    2cf2:	9c08      	ldr	r4, [sp, #32]
    2cf4:	e003      	b.n	2cfe <tcc_init+0x2fa>
    2cf6:	3401      	adds	r4, #1
    2cf8:	3604      	adds	r6, #4
    2cfa:	42ac      	cmp	r4, r5
    2cfc:	d02a      	beq.n	2d54 <tcc_init+0x350>
    2cfe:	7823      	ldrb	r3, [r4, #0]
    2d00:	2b00      	cmp	r3, #0
    2d02:	d0f8      	beq.n	2cf6 <tcc_init+0x2f2>
    2d04:	ab0c      	add	r3, sp, #48	; 0x30
    2d06:	464a      	mov	r2, r9
    2d08:	709a      	strb	r2, [r3, #2]
    2d0a:	2300      	movs	r3, #0
    2d0c:	aa0c      	add	r2, sp, #48	; 0x30
    2d0e:	70d3      	strb	r3, [r2, #3]
    2d10:	0013      	movs	r3, r2
    2d12:	2220      	movs	r2, #32
    2d14:	18b2      	adds	r2, r6, r2
    2d16:	7812      	ldrb	r2, [r2, #0]
    2d18:	701a      	strb	r2, [r3, #0]
    2d1a:	464a      	mov	r2, r9
    2d1c:	705a      	strb	r2, [r3, #1]
    2d1e:	7830      	ldrb	r0, [r6, #0]
    2d20:	0019      	movs	r1, r3
    2d22:	4b0b      	ldr	r3, [pc, #44]	; (2d50 <tcc_init+0x34c>)
    2d24:	4798      	blx	r3
    2d26:	e7e6      	b.n	2cf6 <tcc_init+0x2f2>
    2d28:	00002885 	.word	0x00002885
    2d2c:	40000800 	.word	0x40000800
    2d30:	000093c4 	.word	0x000093c4
    2d34:	000093d8 	.word	0x000093d8
    2d38:	000093e4 	.word	0x000093e4
    2d3c:	000093d0 	.word	0x000093d0
    2d40:	20001d74 	.word	0x20001d74
    2d44:	000093d4 	.word	0x000093d4
    2d48:	00004f39 	.word	0x00004f39
    2d4c:	00004ec9 	.word	0x00004ec9
    2d50:	00005035 	.word	0x00005035
    2d54:	4644      	mov	r4, r8
    2d56:	465d      	mov	r5, fp
    2d58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    2d5a:	031b      	lsls	r3, r3, #12
    2d5c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    2d5e:	0212      	lsls	r2, r2, #8
    2d60:	4313      	orrs	r3, r2
    2d62:	9a02      	ldr	r2, [sp, #8]
    2d64:	4313      	orrs	r3, r2
    2d66:	6023      	str	r3, [r4, #0]
    2d68:	2204      	movs	r2, #4
    2d6a:	68a3      	ldr	r3, [r4, #8]
    2d6c:	421a      	tst	r2, r3
    2d6e:	d1fc      	bne.n	2d6a <tcc_init+0x366>
    2d70:	23ff      	movs	r3, #255	; 0xff
    2d72:	7123      	strb	r3, [r4, #4]
    2d74:	2204      	movs	r2, #4
    2d76:	68a3      	ldr	r3, [r4, #8]
    2d78:	421a      	tst	r2, r3
    2d7a:	d1fc      	bne.n	2d76 <tcc_init+0x372>
    2d7c:	466b      	mov	r3, sp
    2d7e:	7e1b      	ldrb	r3, [r3, #24]
    2d80:	7163      	strb	r3, [r4, #5]
    2d82:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    2d84:	60e3      	str	r3, [r4, #12]
    2d86:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    2d88:	6123      	str	r3, [r4, #16]
    2d8a:	61a7      	str	r7, [r4, #24]
    2d8c:	4653      	mov	r3, sl
    2d8e:	63e3      	str	r3, [r4, #60]	; 0x3c
    2d90:	2210      	movs	r2, #16
    2d92:	68a3      	ldr	r3, [r4, #8]
    2d94:	421a      	tst	r2, r3
    2d96:	d1fc      	bne.n	2d92 <tcc_init+0x38e>
    2d98:	682b      	ldr	r3, [r5, #0]
    2d9a:	6363      	str	r3, [r4, #52]	; 0x34
    2d9c:	686b      	ldr	r3, [r5, #4]
    2d9e:	6423      	str	r3, [r4, #64]	; 0x40
    2da0:	9805      	ldr	r0, [sp, #20]
    2da2:	2800      	cmp	r0, #0
    2da4:	dd1c      	ble.n	2de0 <tcc_init+0x3dc>
    2da6:	351c      	adds	r5, #28
    2da8:	2200      	movs	r2, #0
    2daa:	cd02      	ldmia	r5!, {r1}
    2dac:	0013      	movs	r3, r2
    2dae:	3310      	adds	r3, #16
    2db0:	009b      	lsls	r3, r3, #2
    2db2:	18e3      	adds	r3, r4, r3
    2db4:	6059      	str	r1, [r3, #4]
    2db6:	3201      	adds	r2, #1
    2db8:	4290      	cmp	r0, r2
    2dba:	dcf6      	bgt.n	2daa <tcc_init+0x3a6>
    2dbc:	2000      	movs	r0, #0
    2dbe:	e63b      	b.n	2a38 <tcc_init+0x34>
    2dc0:	2017      	movs	r0, #23
    2dc2:	e639      	b.n	2a38 <tcc_init+0x34>
    2dc4:	2017      	movs	r0, #23
    2dc6:	e637      	b.n	2a38 <tcc_init+0x34>
    2dc8:	2017      	movs	r0, #23
    2dca:	e635      	b.n	2a38 <tcc_init+0x34>
    2dcc:	2017      	movs	r0, #23
    2dce:	e633      	b.n	2a38 <tcc_init+0x34>
    2dd0:	2017      	movs	r0, #23
    2dd2:	e631      	b.n	2a38 <tcc_init+0x34>
    2dd4:	2017      	movs	r0, #23
    2dd6:	e62f      	b.n	2a38 <tcc_init+0x34>
    2dd8:	2017      	movs	r0, #23
    2dda:	e62d      	b.n	2a38 <tcc_init+0x34>
    2ddc:	2017      	movs	r0, #23
    2dde:	e62b      	b.n	2a38 <tcc_init+0x34>
    2de0:	2000      	movs	r0, #0
    2de2:	e629      	b.n	2a38 <tcc_init+0x34>
    2de4:	2017      	movs	r0, #23
    2de6:	e627      	b.n	2a38 <tcc_init+0x34>

00002de8 <tcc_register_callback>:
    2de8:	0092      	lsls	r2, r2, #2
    2dea:	1883      	adds	r3, r0, r2
    2dec:	6059      	str	r1, [r3, #4]
    2dee:	4b03      	ldr	r3, [pc, #12]	; (2dfc <tcc_register_callback+0x14>)
    2df0:	58d3      	ldr	r3, [r2, r3]
    2df2:	6b42      	ldr	r2, [r0, #52]	; 0x34
    2df4:	4313      	orrs	r3, r2
    2df6:	6343      	str	r3, [r0, #52]	; 0x34
    2df8:	2000      	movs	r0, #0
    2dfa:	4770      	bx	lr
    2dfc:	000093e8 	.word	0x000093e8

00002e00 <tcc_enable_callback>:
    2e00:	b570      	push	{r4, r5, r6, lr}
    2e02:	0004      	movs	r4, r0
    2e04:	000d      	movs	r5, r1
    2e06:	6800      	ldr	r0, [r0, #0]
    2e08:	4b09      	ldr	r3, [pc, #36]	; (2e30 <tcc_enable_callback+0x30>)
    2e0a:	4798      	blx	r3
    2e0c:	4b09      	ldr	r3, [pc, #36]	; (2e34 <tcc_enable_callback+0x34>)
    2e0e:	5c1b      	ldrb	r3, [r3, r0]
    2e10:	221f      	movs	r2, #31
    2e12:	401a      	ands	r2, r3
    2e14:	2301      	movs	r3, #1
    2e16:	4093      	lsls	r3, r2
    2e18:	4a07      	ldr	r2, [pc, #28]	; (2e38 <tcc_enable_callback+0x38>)
    2e1a:	6013      	str	r3, [r2, #0]
    2e1c:	00ad      	lsls	r5, r5, #2
    2e1e:	4b07      	ldr	r3, [pc, #28]	; (2e3c <tcc_enable_callback+0x3c>)
    2e20:	58ea      	ldr	r2, [r5, r3]
    2e22:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    2e24:	4313      	orrs	r3, r2
    2e26:	63a3      	str	r3, [r4, #56]	; 0x38
    2e28:	6823      	ldr	r3, [r4, #0]
    2e2a:	629a      	str	r2, [r3, #40]	; 0x28
    2e2c:	bd70      	pop	{r4, r5, r6, pc}
    2e2e:	46c0      	nop			; (mov r8, r8)
    2e30:	00002885 	.word	0x00002885
    2e34:	00009418 	.word	0x00009418
    2e38:	e000e100 	.word	0xe000e100
    2e3c:	000093e8 	.word	0x000093e8

00002e40 <_tcc_interrupt_handler>:
    2e40:	b5f0      	push	{r4, r5, r6, r7, lr}
    2e42:	46c6      	mov	lr, r8
    2e44:	b500      	push	{lr}
    2e46:	0080      	lsls	r0, r0, #2
    2e48:	4b0e      	ldr	r3, [pc, #56]	; (2e84 <_tcc_interrupt_handler+0x44>)
    2e4a:	58c7      	ldr	r7, [r0, r3]
    2e4c:	683b      	ldr	r3, [r7, #0]
    2e4e:	6ade      	ldr	r6, [r3, #44]	; 0x2c
    2e50:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    2e52:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    2e54:	4013      	ands	r3, r2
    2e56:	401e      	ands	r6, r3
    2e58:	2400      	movs	r4, #0
    2e5a:	4b0b      	ldr	r3, [pc, #44]	; (2e88 <_tcc_interrupt_handler+0x48>)
    2e5c:	4698      	mov	r8, r3
    2e5e:	e002      	b.n	2e66 <_tcc_interrupt_handler+0x26>
    2e60:	3404      	adds	r4, #4
    2e62:	2c30      	cmp	r4, #48	; 0x30
    2e64:	d00a      	beq.n	2e7c <_tcc_interrupt_handler+0x3c>
    2e66:	4643      	mov	r3, r8
    2e68:	58e5      	ldr	r5, [r4, r3]
    2e6a:	4235      	tst	r5, r6
    2e6c:	d0f8      	beq.n	2e60 <_tcc_interrupt_handler+0x20>
    2e6e:	193b      	adds	r3, r7, r4
    2e70:	685b      	ldr	r3, [r3, #4]
    2e72:	0038      	movs	r0, r7
    2e74:	4798      	blx	r3
    2e76:	683b      	ldr	r3, [r7, #0]
    2e78:	62dd      	str	r5, [r3, #44]	; 0x2c
    2e7a:	e7f1      	b.n	2e60 <_tcc_interrupt_handler+0x20>
    2e7c:	bc04      	pop	{r2}
    2e7e:	4690      	mov	r8, r2
    2e80:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2e82:	46c0      	nop			; (mov r8, r8)
    2e84:	20001d74 	.word	0x20001d74
    2e88:	000093e8 	.word	0x000093e8

00002e8c <TCC0_Handler>:
    2e8c:	b510      	push	{r4, lr}
    2e8e:	2000      	movs	r0, #0
    2e90:	4b01      	ldr	r3, [pc, #4]	; (2e98 <TCC0_Handler+0xc>)
    2e92:	4798      	blx	r3
    2e94:	bd10      	pop	{r4, pc}
    2e96:	46c0      	nop			; (mov r8, r8)
    2e98:	00002e41 	.word	0x00002e41

00002e9c <TCC1_Handler>:
    2e9c:	b510      	push	{r4, lr}
    2e9e:	2001      	movs	r0, #1
    2ea0:	4b01      	ldr	r3, [pc, #4]	; (2ea8 <TCC1_Handler+0xc>)
    2ea2:	4798      	blx	r3
    2ea4:	bd10      	pop	{r4, pc}
    2ea6:	46c0      	nop			; (mov r8, r8)
    2ea8:	00002e41 	.word	0x00002e41

00002eac <TCC2_Handler>:
    2eac:	b510      	push	{r4, lr}
    2eae:	2002      	movs	r0, #2
    2eb0:	4b01      	ldr	r3, [pc, #4]	; (2eb8 <TCC2_Handler+0xc>)
    2eb2:	4798      	blx	r3
    2eb4:	bd10      	pop	{r4, pc}
    2eb6:	46c0      	nop			; (mov r8, r8)
    2eb8:	00002e41 	.word	0x00002e41

00002ebc <usart_init>:
    2ebc:	b5f0      	push	{r4, r5, r6, r7, lr}
    2ebe:	46de      	mov	lr, fp
    2ec0:	4657      	mov	r7, sl
    2ec2:	464e      	mov	r6, r9
    2ec4:	4645      	mov	r5, r8
    2ec6:	b5e0      	push	{r5, r6, r7, lr}
    2ec8:	b091      	sub	sp, #68	; 0x44
    2eca:	0005      	movs	r5, r0
    2ecc:	000c      	movs	r4, r1
    2ece:	0016      	movs	r6, r2
    2ed0:	6029      	str	r1, [r5, #0]
    2ed2:	0008      	movs	r0, r1
    2ed4:	4bd2      	ldr	r3, [pc, #840]	; (3220 <usart_init+0x364>)
    2ed6:	4798      	blx	r3
    2ed8:	2805      	cmp	r0, #5
    2eda:	d00d      	beq.n	2ef8 <usart_init+0x3c>
    2edc:	0007      	movs	r7, r0
    2ede:	3713      	adds	r7, #19
    2ee0:	6822      	ldr	r2, [r4, #0]
    2ee2:	2305      	movs	r3, #5
    2ee4:	07d2      	lsls	r2, r2, #31
    2ee6:	d509      	bpl.n	2efc <usart_init+0x40>
    2ee8:	0018      	movs	r0, r3
    2eea:	b011      	add	sp, #68	; 0x44
    2eec:	bc3c      	pop	{r2, r3, r4, r5}
    2eee:	4690      	mov	r8, r2
    2ef0:	4699      	mov	r9, r3
    2ef2:	46a2      	mov	sl, r4
    2ef4:	46ab      	mov	fp, r5
    2ef6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2ef8:	2719      	movs	r7, #25
    2efa:	e7f1      	b.n	2ee0 <usart_init+0x24>
    2efc:	6822      	ldr	r2, [r4, #0]
    2efe:	3317      	adds	r3, #23
    2f00:	0792      	lsls	r2, r2, #30
    2f02:	d4f1      	bmi.n	2ee8 <usart_init+0x2c>
    2f04:	4ac7      	ldr	r2, [pc, #796]	; (3224 <usart_init+0x368>)
    2f06:	69d1      	ldr	r1, [r2, #28]
    2f08:	3001      	adds	r0, #1
    2f0a:	3b1b      	subs	r3, #27
    2f0c:	4083      	lsls	r3, r0
    2f0e:	430b      	orrs	r3, r1
    2f10:	61d3      	str	r3, [r2, #28]
    2f12:	a90f      	add	r1, sp, #60	; 0x3c
    2f14:	2335      	movs	r3, #53	; 0x35
    2f16:	4698      	mov	r8, r3
    2f18:	5cf3      	ldrb	r3, [r6, r3]
    2f1a:	700b      	strb	r3, [r1, #0]
    2f1c:	b2ff      	uxtb	r7, r7
    2f1e:	0038      	movs	r0, r7
    2f20:	4bc1      	ldr	r3, [pc, #772]	; (3228 <usart_init+0x36c>)
    2f22:	4798      	blx	r3
    2f24:	0038      	movs	r0, r7
    2f26:	4bc1      	ldr	r3, [pc, #772]	; (322c <usart_init+0x370>)
    2f28:	4798      	blx	r3
    2f2a:	4643      	mov	r3, r8
    2f2c:	5cf0      	ldrb	r0, [r6, r3]
    2f2e:	2100      	movs	r1, #0
    2f30:	4bbf      	ldr	r3, [pc, #764]	; (3230 <usart_init+0x374>)
    2f32:	4798      	blx	r3
    2f34:	7af3      	ldrb	r3, [r6, #11]
    2f36:	716b      	strb	r3, [r5, #5]
    2f38:	232c      	movs	r3, #44	; 0x2c
    2f3a:	5cf3      	ldrb	r3, [r6, r3]
    2f3c:	71ab      	strb	r3, [r5, #6]
    2f3e:	232d      	movs	r3, #45	; 0x2d
    2f40:	5cf3      	ldrb	r3, [r6, r3]
    2f42:	71eb      	strb	r3, [r5, #7]
    2f44:	7ef3      	ldrb	r3, [r6, #27]
    2f46:	722b      	strb	r3, [r5, #8]
    2f48:	2324      	movs	r3, #36	; 0x24
    2f4a:	5cf3      	ldrb	r3, [r6, r3]
    2f4c:	726b      	strb	r3, [r5, #9]
    2f4e:	682b      	ldr	r3, [r5, #0]
    2f50:	9302      	str	r3, [sp, #8]
    2f52:	0018      	movs	r0, r3
    2f54:	4bb2      	ldr	r3, [pc, #712]	; (3220 <usart_init+0x364>)
    2f56:	4798      	blx	r3
    2f58:	2805      	cmp	r0, #5
    2f5a:	d01d      	beq.n	2f98 <usart_init+0xdc>
    2f5c:	3013      	adds	r0, #19
    2f5e:	2200      	movs	r2, #0
    2f60:	230e      	movs	r3, #14
    2f62:	a906      	add	r1, sp, #24
    2f64:	468c      	mov	ip, r1
    2f66:	4463      	add	r3, ip
    2f68:	801a      	strh	r2, [r3, #0]
    2f6a:	8a33      	ldrh	r3, [r6, #16]
    2f6c:	4698      	mov	r8, r3
    2f6e:	2380      	movs	r3, #128	; 0x80
    2f70:	01db      	lsls	r3, r3, #7
    2f72:	4598      	cmp	r8, r3
    2f74:	d100      	bne.n	2f78 <usart_init+0xbc>
    2f76:	e0c3      	b.n	3100 <usart_init+0x244>
    2f78:	d910      	bls.n	2f9c <usart_init+0xe0>
    2f7a:	23c0      	movs	r3, #192	; 0xc0
    2f7c:	01db      	lsls	r3, r3, #7
    2f7e:	4598      	cmp	r8, r3
    2f80:	d100      	bne.n	2f84 <usart_init+0xc8>
    2f82:	e0b8      	b.n	30f6 <usart_init+0x23a>
    2f84:	2380      	movs	r3, #128	; 0x80
    2f86:	021b      	lsls	r3, r3, #8
    2f88:	4598      	cmp	r8, r3
    2f8a:	d000      	beq.n	2f8e <usart_init+0xd2>
    2f8c:	e166      	b.n	325c <usart_init+0x3a0>
    2f8e:	2303      	movs	r3, #3
    2f90:	9306      	str	r3, [sp, #24]
    2f92:	2300      	movs	r3, #0
    2f94:	9307      	str	r3, [sp, #28]
    2f96:	e00a      	b.n	2fae <usart_init+0xf2>
    2f98:	2019      	movs	r0, #25
    2f9a:	e7e0      	b.n	2f5e <usart_init+0xa2>
    2f9c:	2380      	movs	r3, #128	; 0x80
    2f9e:	019b      	lsls	r3, r3, #6
    2fa0:	4598      	cmp	r8, r3
    2fa2:	d000      	beq.n	2fa6 <usart_init+0xea>
    2fa4:	e15a      	b.n	325c <usart_init+0x3a0>
    2fa6:	2310      	movs	r3, #16
    2fa8:	9306      	str	r3, [sp, #24]
    2faa:	3b0f      	subs	r3, #15
    2fac:	9307      	str	r3, [sp, #28]
    2fae:	6833      	ldr	r3, [r6, #0]
    2fb0:	9305      	str	r3, [sp, #20]
    2fb2:	68f3      	ldr	r3, [r6, #12]
    2fb4:	469b      	mov	fp, r3
    2fb6:	6973      	ldr	r3, [r6, #20]
    2fb8:	9303      	str	r3, [sp, #12]
    2fba:	7e33      	ldrb	r3, [r6, #24]
    2fbc:	9304      	str	r3, [sp, #16]
    2fbe:	232e      	movs	r3, #46	; 0x2e
    2fc0:	5cf3      	ldrb	r3, [r6, r3]
    2fc2:	469a      	mov	sl, r3
    2fc4:	6873      	ldr	r3, [r6, #4]
    2fc6:	4699      	mov	r9, r3
    2fc8:	2b00      	cmp	r3, #0
    2fca:	d100      	bne.n	2fce <usart_init+0x112>
    2fcc:	e0c5      	b.n	315a <usart_init+0x29e>
    2fce:	2380      	movs	r3, #128	; 0x80
    2fd0:	055b      	lsls	r3, r3, #21
    2fd2:	4599      	cmp	r9, r3
    2fd4:	d100      	bne.n	2fd8 <usart_init+0x11c>
    2fd6:	e0a8      	b.n	312a <usart_init+0x26e>
    2fd8:	7e73      	ldrb	r3, [r6, #25]
    2fda:	2b00      	cmp	r3, #0
    2fdc:	d002      	beq.n	2fe4 <usart_init+0x128>
    2fde:	7eb3      	ldrb	r3, [r6, #26]
    2fe0:	9a02      	ldr	r2, [sp, #8]
    2fe2:	7393      	strb	r3, [r2, #14]
    2fe4:	230e      	movs	r3, #14
    2fe6:	aa06      	add	r2, sp, #24
    2fe8:	4694      	mov	ip, r2
    2fea:	4463      	add	r3, ip
    2fec:	881b      	ldrh	r3, [r3, #0]
    2fee:	9a02      	ldr	r2, [sp, #8]
    2ff0:	8193      	strh	r3, [r2, #12]
    2ff2:	9a05      	ldr	r2, [sp, #20]
    2ff4:	465b      	mov	r3, fp
    2ff6:	431a      	orrs	r2, r3
    2ff8:	9b03      	ldr	r3, [sp, #12]
    2ffa:	431a      	orrs	r2, r3
    2ffc:	464b      	mov	r3, r9
    2ffe:	431a      	orrs	r2, r3
    3000:	4643      	mov	r3, r8
    3002:	431a      	orrs	r2, r3
    3004:	9b04      	ldr	r3, [sp, #16]
    3006:	021b      	lsls	r3, r3, #8
    3008:	431a      	orrs	r2, r3
    300a:	4653      	mov	r3, sl
    300c:	075b      	lsls	r3, r3, #29
    300e:	431a      	orrs	r2, r3
    3010:	232f      	movs	r3, #47	; 0x2f
    3012:	5cf3      	ldrb	r3, [r6, r3]
    3014:	2b00      	cmp	r3, #0
    3016:	d101      	bne.n	301c <usart_init+0x160>
    3018:	3304      	adds	r3, #4
    301a:	431a      	orrs	r2, r3
    301c:	7e73      	ldrb	r3, [r6, #25]
    301e:	029b      	lsls	r3, r3, #10
    3020:	2124      	movs	r1, #36	; 0x24
    3022:	5c71      	ldrb	r1, [r6, r1]
    3024:	0249      	lsls	r1, r1, #9
    3026:	430b      	orrs	r3, r1
    3028:	2126      	movs	r1, #38	; 0x26
    302a:	5c71      	ldrb	r1, [r6, r1]
    302c:	0209      	lsls	r1, r1, #8
    302e:	430b      	orrs	r3, r1
    3030:	212c      	movs	r1, #44	; 0x2c
    3032:	5c71      	ldrb	r1, [r6, r1]
    3034:	0449      	lsls	r1, r1, #17
    3036:	430b      	orrs	r3, r1
    3038:	212d      	movs	r1, #45	; 0x2d
    303a:	5c71      	ldrb	r1, [r6, r1]
    303c:	0409      	lsls	r1, r1, #16
    303e:	430b      	orrs	r3, r1
    3040:	7ab0      	ldrb	r0, [r6, #10]
    3042:	7af1      	ldrb	r1, [r6, #11]
    3044:	4308      	orrs	r0, r1
    3046:	4318      	orrs	r0, r3
    3048:	8933      	ldrh	r3, [r6, #8]
    304a:	2bff      	cmp	r3, #255	; 0xff
    304c:	d100      	bne.n	3050 <usart_init+0x194>
    304e:	e0aa      	b.n	31a6 <usart_init+0x2ea>
    3050:	2180      	movs	r1, #128	; 0x80
    3052:	0449      	lsls	r1, r1, #17
    3054:	430a      	orrs	r2, r1
    3056:	4318      	orrs	r0, r3
    3058:	9902      	ldr	r1, [sp, #8]
    305a:	688b      	ldr	r3, [r1, #8]
    305c:	469c      	mov	ip, r3
    305e:	8c33      	ldrh	r3, [r6, #32]
    3060:	8c71      	ldrh	r1, [r6, #34]	; 0x22
    3062:	430b      	orrs	r3, r1
    3064:	001f      	movs	r7, r3
    3066:	2107      	movs	r1, #7
    3068:	4663      	mov	r3, ip
    306a:	4019      	ands	r1, r3
    306c:	003b      	movs	r3, r7
    306e:	430b      	orrs	r3, r1
    3070:	9902      	ldr	r1, [sp, #8]
    3072:	608b      	str	r3, [r1, #8]
    3074:	69f3      	ldr	r3, [r6, #28]
    3076:	2b00      	cmp	r3, #0
    3078:	d002      	beq.n	3080 <usart_init+0x1c4>
    307a:	496e      	ldr	r1, [pc, #440]	; (3234 <usart_init+0x378>)
    307c:	400a      	ands	r2, r1
    307e:	431a      	orrs	r2, r3
    3080:	2334      	movs	r3, #52	; 0x34
    3082:	5cf3      	ldrb	r3, [r6, r3]
    3084:	2b00      	cmp	r3, #0
    3086:	d103      	bne.n	3090 <usart_init+0x1d4>
    3088:	4b6b      	ldr	r3, [pc, #428]	; (3238 <usart_init+0x37c>)
    308a:	789b      	ldrb	r3, [r3, #2]
    308c:	079b      	lsls	r3, r3, #30
    308e:	d501      	bpl.n	3094 <usart_init+0x1d8>
    3090:	2380      	movs	r3, #128	; 0x80
    3092:	431a      	orrs	r2, r3
    3094:	6829      	ldr	r1, [r5, #0]
    3096:	9f02      	ldr	r7, [sp, #8]
    3098:	69cb      	ldr	r3, [r1, #28]
    309a:	2b00      	cmp	r3, #0
    309c:	d1fc      	bne.n	3098 <usart_init+0x1dc>
    309e:	6078      	str	r0, [r7, #4]
    30a0:	6829      	ldr	r1, [r5, #0]
    30a2:	69cb      	ldr	r3, [r1, #28]
    30a4:	2b00      	cmp	r3, #0
    30a6:	d1fc      	bne.n	30a2 <usart_init+0x1e6>
    30a8:	603a      	str	r2, [r7, #0]
    30aa:	683b      	ldr	r3, [r7, #0]
    30ac:	22f0      	movs	r2, #240	; 0xf0
    30ae:	0512      	lsls	r2, r2, #20
    30b0:	4013      	ands	r3, r2
    30b2:	22e0      	movs	r2, #224	; 0xe0
    30b4:	04d2      	lsls	r2, r2, #19
    30b6:	4293      	cmp	r3, r2
    30b8:	d00a      	beq.n	30d0 <usart_init+0x214>
    30ba:	68bb      	ldr	r3, [r7, #8]
    30bc:	2207      	movs	r2, #7
    30be:	4393      	bics	r3, r2
    30c0:	60bb      	str	r3, [r7, #8]
    30c2:	68ba      	ldr	r2, [r7, #8]
    30c4:	2325      	movs	r3, #37	; 0x25
    30c6:	5cf1      	ldrb	r1, [r6, r3]
    30c8:	3b1e      	subs	r3, #30
    30ca:	400b      	ands	r3, r1
    30cc:	4313      	orrs	r3, r2
    30ce:	60bb      	str	r3, [r7, #8]
    30d0:	ab0e      	add	r3, sp, #56	; 0x38
    30d2:	2280      	movs	r2, #128	; 0x80
    30d4:	701a      	strb	r2, [r3, #0]
    30d6:	2200      	movs	r2, #0
    30d8:	705a      	strb	r2, [r3, #1]
    30da:	70da      	strb	r2, [r3, #3]
    30dc:	709a      	strb	r2, [r3, #2]
    30de:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    30e0:	930a      	str	r3, [sp, #40]	; 0x28
    30e2:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
    30e4:	930b      	str	r3, [sp, #44]	; 0x2c
    30e6:	6c33      	ldr	r3, [r6, #64]	; 0x40
    30e8:	930c      	str	r3, [sp, #48]	; 0x30
    30ea:	6c73      	ldr	r3, [r6, #68]	; 0x44
    30ec:	9302      	str	r3, [sp, #8]
    30ee:	930d      	str	r3, [sp, #52]	; 0x34
    30f0:	2700      	movs	r7, #0
    30f2:	ae0a      	add	r6, sp, #40	; 0x28
    30f4:	e066      	b.n	31c4 <usart_init+0x308>
    30f6:	2308      	movs	r3, #8
    30f8:	9306      	str	r3, [sp, #24]
    30fa:	3b07      	subs	r3, #7
    30fc:	9307      	str	r3, [sp, #28]
    30fe:	e756      	b.n	2fae <usart_init+0xf2>
    3100:	6833      	ldr	r3, [r6, #0]
    3102:	9305      	str	r3, [sp, #20]
    3104:	68f3      	ldr	r3, [r6, #12]
    3106:	469b      	mov	fp, r3
    3108:	6973      	ldr	r3, [r6, #20]
    310a:	9303      	str	r3, [sp, #12]
    310c:	7e33      	ldrb	r3, [r6, #24]
    310e:	9304      	str	r3, [sp, #16]
    3110:	232e      	movs	r3, #46	; 0x2e
    3112:	5cf3      	ldrb	r3, [r6, r3]
    3114:	469a      	mov	sl, r3
    3116:	6873      	ldr	r3, [r6, #4]
    3118:	4699      	mov	r9, r3
    311a:	2b00      	cmp	r3, #0
    311c:	d019      	beq.n	3152 <usart_init+0x296>
    311e:	2380      	movs	r3, #128	; 0x80
    3120:	055b      	lsls	r3, r3, #21
    3122:	4599      	cmp	r9, r3
    3124:	d001      	beq.n	312a <usart_init+0x26e>
    3126:	2300      	movs	r3, #0
    3128:	e027      	b.n	317a <usart_init+0x2be>
    312a:	232f      	movs	r3, #47	; 0x2f
    312c:	5cf3      	ldrb	r3, [r6, r3]
    312e:	2b00      	cmp	r3, #0
    3130:	d000      	beq.n	3134 <usart_init+0x278>
    3132:	e751      	b.n	2fd8 <usart_init+0x11c>
    3134:	6ab3      	ldr	r3, [r6, #40]	; 0x28
    3136:	001f      	movs	r7, r3
    3138:	b2c0      	uxtb	r0, r0
    313a:	4b40      	ldr	r3, [pc, #256]	; (323c <usart_init+0x380>)
    313c:	4798      	blx	r3
    313e:	0001      	movs	r1, r0
    3140:	220e      	movs	r2, #14
    3142:	ab06      	add	r3, sp, #24
    3144:	469c      	mov	ip, r3
    3146:	4462      	add	r2, ip
    3148:	0038      	movs	r0, r7
    314a:	4b3d      	ldr	r3, [pc, #244]	; (3240 <usart_init+0x384>)
    314c:	4798      	blx	r3
    314e:	0003      	movs	r3, r0
    3150:	e013      	b.n	317a <usart_init+0x2be>
    3152:	2308      	movs	r3, #8
    3154:	9306      	str	r3, [sp, #24]
    3156:	2300      	movs	r3, #0
    3158:	9307      	str	r3, [sp, #28]
    315a:	232f      	movs	r3, #47	; 0x2f
    315c:	5cf3      	ldrb	r3, [r6, r3]
    315e:	2b00      	cmp	r3, #0
    3160:	d00f      	beq.n	3182 <usart_init+0x2c6>
    3162:	9b06      	ldr	r3, [sp, #24]
    3164:	9300      	str	r3, [sp, #0]
    3166:	9b07      	ldr	r3, [sp, #28]
    3168:	220e      	movs	r2, #14
    316a:	a906      	add	r1, sp, #24
    316c:	468c      	mov	ip, r1
    316e:	4462      	add	r2, ip
    3170:	6b31      	ldr	r1, [r6, #48]	; 0x30
    3172:	6ab0      	ldr	r0, [r6, #40]	; 0x28
    3174:	4f33      	ldr	r7, [pc, #204]	; (3244 <usart_init+0x388>)
    3176:	47b8      	blx	r7
    3178:	0003      	movs	r3, r0
    317a:	2b00      	cmp	r3, #0
    317c:	d000      	beq.n	3180 <usart_init+0x2c4>
    317e:	e6b3      	b.n	2ee8 <usart_init+0x2c>
    3180:	e72a      	b.n	2fd8 <usart_init+0x11c>
    3182:	6ab3      	ldr	r3, [r6, #40]	; 0x28
    3184:	001f      	movs	r7, r3
    3186:	b2c0      	uxtb	r0, r0
    3188:	4b2c      	ldr	r3, [pc, #176]	; (323c <usart_init+0x380>)
    318a:	4798      	blx	r3
    318c:	0001      	movs	r1, r0
    318e:	9b06      	ldr	r3, [sp, #24]
    3190:	9300      	str	r3, [sp, #0]
    3192:	9b07      	ldr	r3, [sp, #28]
    3194:	220e      	movs	r2, #14
    3196:	a806      	add	r0, sp, #24
    3198:	4684      	mov	ip, r0
    319a:	4462      	add	r2, ip
    319c:	0038      	movs	r0, r7
    319e:	4f29      	ldr	r7, [pc, #164]	; (3244 <usart_init+0x388>)
    31a0:	47b8      	blx	r7
    31a2:	0003      	movs	r3, r0
    31a4:	e7e9      	b.n	317a <usart_init+0x2be>
    31a6:	7ef3      	ldrb	r3, [r6, #27]
    31a8:	2b00      	cmp	r3, #0
    31aa:	d100      	bne.n	31ae <usart_init+0x2f2>
    31ac:	e754      	b.n	3058 <usart_init+0x19c>
    31ae:	2380      	movs	r3, #128	; 0x80
    31b0:	04db      	lsls	r3, r3, #19
    31b2:	431a      	orrs	r2, r3
    31b4:	e750      	b.n	3058 <usart_init+0x19c>
    31b6:	0020      	movs	r0, r4
    31b8:	4b23      	ldr	r3, [pc, #140]	; (3248 <usart_init+0x38c>)
    31ba:	4798      	blx	r3
    31bc:	e007      	b.n	31ce <usart_init+0x312>
    31be:	3701      	adds	r7, #1
    31c0:	2f04      	cmp	r7, #4
    31c2:	d00d      	beq.n	31e0 <usart_init+0x324>
    31c4:	b2f9      	uxtb	r1, r7
    31c6:	00bb      	lsls	r3, r7, #2
    31c8:	5998      	ldr	r0, [r3, r6]
    31ca:	2800      	cmp	r0, #0
    31cc:	d0f3      	beq.n	31b6 <usart_init+0x2fa>
    31ce:	1c43      	adds	r3, r0, #1
    31d0:	d0f5      	beq.n	31be <usart_init+0x302>
    31d2:	a90e      	add	r1, sp, #56	; 0x38
    31d4:	7008      	strb	r0, [r1, #0]
    31d6:	0c00      	lsrs	r0, r0, #16
    31d8:	b2c0      	uxtb	r0, r0
    31da:	4b1c      	ldr	r3, [pc, #112]	; (324c <usart_init+0x390>)
    31dc:	4798      	blx	r3
    31de:	e7ee      	b.n	31be <usart_init+0x302>
    31e0:	2300      	movs	r3, #0
    31e2:	60eb      	str	r3, [r5, #12]
    31e4:	612b      	str	r3, [r5, #16]
    31e6:	616b      	str	r3, [r5, #20]
    31e8:	61ab      	str	r3, [r5, #24]
    31ea:	61eb      	str	r3, [r5, #28]
    31ec:	622b      	str	r3, [r5, #32]
    31ee:	62ab      	str	r3, [r5, #40]	; 0x28
    31f0:	626b      	str	r3, [r5, #36]	; 0x24
    31f2:	2200      	movs	r2, #0
    31f4:	85eb      	strh	r3, [r5, #46]	; 0x2e
    31f6:	85ab      	strh	r3, [r5, #44]	; 0x2c
    31f8:	3330      	adds	r3, #48	; 0x30
    31fa:	54ea      	strb	r2, [r5, r3]
    31fc:	3301      	adds	r3, #1
    31fe:	54ea      	strb	r2, [r5, r3]
    3200:	3301      	adds	r3, #1
    3202:	54ea      	strb	r2, [r5, r3]
    3204:	3301      	adds	r3, #1
    3206:	54ea      	strb	r2, [r5, r3]
    3208:	6828      	ldr	r0, [r5, #0]
    320a:	4b05      	ldr	r3, [pc, #20]	; (3220 <usart_init+0x364>)
    320c:	4798      	blx	r3
    320e:	0004      	movs	r4, r0
    3210:	490f      	ldr	r1, [pc, #60]	; (3250 <usart_init+0x394>)
    3212:	4b10      	ldr	r3, [pc, #64]	; (3254 <usart_init+0x398>)
    3214:	4798      	blx	r3
    3216:	00a4      	lsls	r4, r4, #2
    3218:	4b0f      	ldr	r3, [pc, #60]	; (3258 <usart_init+0x39c>)
    321a:	50e5      	str	r5, [r4, r3]
    321c:	2300      	movs	r3, #0
    321e:	e663      	b.n	2ee8 <usart_init+0x2c>
    3220:	0000284d 	.word	0x0000284d
    3224:	40000800 	.word	0x40000800
    3228:	00004f39 	.word	0x00004f39
    322c:	00004ec9 	.word	0x00004ec9
    3230:	00002685 	.word	0x00002685
    3234:	f0ffffff 	.word	0xf0ffffff
    3238:	41002000 	.word	0x41002000
    323c:	00004f5d 	.word	0x00004f5d
    3240:	000025c7 	.word	0x000025c7
    3244:	000025f1 	.word	0x000025f1
    3248:	000026d1 	.word	0x000026d1
    324c:	00005035 	.word	0x00005035
    3250:	00003359 	.word	0x00003359
    3254:	000034f9 	.word	0x000034f9
    3258:	20001d80 	.word	0x20001d80
    325c:	2310      	movs	r3, #16
    325e:	9306      	str	r3, [sp, #24]
    3260:	2300      	movs	r3, #0
    3262:	9307      	str	r3, [sp, #28]
    3264:	e6a3      	b.n	2fae <usart_init+0xf2>
    3266:	46c0      	nop			; (mov r8, r8)

00003268 <_usart_write_buffer>:
    3268:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    326a:	0006      	movs	r6, r0
    326c:	000c      	movs	r4, r1
    326e:	0015      	movs	r5, r2
    3270:	6807      	ldr	r7, [r0, #0]
    3272:	4b0a      	ldr	r3, [pc, #40]	; (329c <_usart_write_buffer+0x34>)
    3274:	4798      	blx	r3
    3276:	8df3      	ldrh	r3, [r6, #46]	; 0x2e
    3278:	b29b      	uxth	r3, r3
    327a:	2b00      	cmp	r3, #0
    327c:	d003      	beq.n	3286 <_usart_write_buffer+0x1e>
    327e:	4b08      	ldr	r3, [pc, #32]	; (32a0 <_usart_write_buffer+0x38>)
    3280:	4798      	blx	r3
    3282:	2005      	movs	r0, #5
    3284:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3286:	85f5      	strh	r5, [r6, #46]	; 0x2e
    3288:	4b05      	ldr	r3, [pc, #20]	; (32a0 <_usart_write_buffer+0x38>)
    328a:	4798      	blx	r3
    328c:	62b4      	str	r4, [r6, #40]	; 0x28
    328e:	2205      	movs	r2, #5
    3290:	2333      	movs	r3, #51	; 0x33
    3292:	54f2      	strb	r2, [r6, r3]
    3294:	3b32      	subs	r3, #50	; 0x32
    3296:	75bb      	strb	r3, [r7, #22]
    3298:	2000      	movs	r0, #0
    329a:	e7f3      	b.n	3284 <_usart_write_buffer+0x1c>
    329c:	00004869 	.word	0x00004869
    32a0:	000048a9 	.word	0x000048a9

000032a4 <_usart_read_buffer>:
    32a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    32a6:	0004      	movs	r4, r0
    32a8:	000d      	movs	r5, r1
    32aa:	0016      	movs	r6, r2
    32ac:	6807      	ldr	r7, [r0, #0]
    32ae:	4b0f      	ldr	r3, [pc, #60]	; (32ec <_usart_read_buffer+0x48>)
    32b0:	4798      	blx	r3
    32b2:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
    32b4:	b29b      	uxth	r3, r3
    32b6:	2b00      	cmp	r3, #0
    32b8:	d003      	beq.n	32c2 <_usart_read_buffer+0x1e>
    32ba:	4b0d      	ldr	r3, [pc, #52]	; (32f0 <_usart_read_buffer+0x4c>)
    32bc:	4798      	blx	r3
    32be:	2005      	movs	r0, #5
    32c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    32c2:	85a6      	strh	r6, [r4, #44]	; 0x2c
    32c4:	4b0a      	ldr	r3, [pc, #40]	; (32f0 <_usart_read_buffer+0x4c>)
    32c6:	4798      	blx	r3
    32c8:	6265      	str	r5, [r4, #36]	; 0x24
    32ca:	2205      	movs	r2, #5
    32cc:	2332      	movs	r3, #50	; 0x32
    32ce:	54e2      	strb	r2, [r4, r3]
    32d0:	3b2e      	subs	r3, #46	; 0x2e
    32d2:	75bb      	strb	r3, [r7, #22]
    32d4:	7a23      	ldrb	r3, [r4, #8]
    32d6:	2b00      	cmp	r3, #0
    32d8:	d001      	beq.n	32de <_usart_read_buffer+0x3a>
    32da:	2320      	movs	r3, #32
    32dc:	75bb      	strb	r3, [r7, #22]
    32de:	7a63      	ldrb	r3, [r4, #9]
    32e0:	2000      	movs	r0, #0
    32e2:	2b00      	cmp	r3, #0
    32e4:	d0ec      	beq.n	32c0 <_usart_read_buffer+0x1c>
    32e6:	2308      	movs	r3, #8
    32e8:	75bb      	strb	r3, [r7, #22]
    32ea:	e7e9      	b.n	32c0 <_usart_read_buffer+0x1c>
    32ec:	00004869 	.word	0x00004869
    32f0:	000048a9 	.word	0x000048a9

000032f4 <usart_register_callback>:
    32f4:	1c93      	adds	r3, r2, #2
    32f6:	009b      	lsls	r3, r3, #2
    32f8:	18c3      	adds	r3, r0, r3
    32fa:	6059      	str	r1, [r3, #4]
    32fc:	2130      	movs	r1, #48	; 0x30
    32fe:	2301      	movs	r3, #1
    3300:	4093      	lsls	r3, r2
    3302:	001a      	movs	r2, r3
    3304:	5c43      	ldrb	r3, [r0, r1]
    3306:	4313      	orrs	r3, r2
    3308:	5443      	strb	r3, [r0, r1]
    330a:	4770      	bx	lr

0000330c <usart_read_job>:
    330c:	b510      	push	{r4, lr}
    330e:	2201      	movs	r2, #1
    3310:	4b01      	ldr	r3, [pc, #4]	; (3318 <usart_read_job+0xc>)
    3312:	4798      	blx	r3
    3314:	bd10      	pop	{r4, pc}
    3316:	46c0      	nop			; (mov r8, r8)
    3318:	000032a5 	.word	0x000032a5

0000331c <usart_write_buffer_job>:
    331c:	b510      	push	{r4, lr}
    331e:	2317      	movs	r3, #23
    3320:	2a00      	cmp	r2, #0
    3322:	d101      	bne.n	3328 <usart_write_buffer_job+0xc>
    3324:	0018      	movs	r0, r3
    3326:	bd10      	pop	{r4, pc}
    3328:	79c4      	ldrb	r4, [r0, #7]
    332a:	3305      	adds	r3, #5
    332c:	2c00      	cmp	r4, #0
    332e:	d0f9      	beq.n	3324 <usart_write_buffer_job+0x8>
    3330:	4b01      	ldr	r3, [pc, #4]	; (3338 <usart_write_buffer_job+0x1c>)
    3332:	4798      	blx	r3
    3334:	0003      	movs	r3, r0
    3336:	e7f5      	b.n	3324 <usart_write_buffer_job+0x8>
    3338:	00003269 	.word	0x00003269

0000333c <usart_get_job_status>:
    333c:	2900      	cmp	r1, #0
    333e:	d003      	beq.n	3348 <usart_get_job_status+0xc>
    3340:	2901      	cmp	r1, #1
    3342:	d005      	beq.n	3350 <usart_get_job_status+0x14>
    3344:	2017      	movs	r0, #23
    3346:	e002      	b.n	334e <usart_get_job_status+0x12>
    3348:	2332      	movs	r3, #50	; 0x32
    334a:	5cc0      	ldrb	r0, [r0, r3]
    334c:	b2c0      	uxtb	r0, r0
    334e:	4770      	bx	lr
    3350:	2333      	movs	r3, #51	; 0x33
    3352:	5cc0      	ldrb	r0, [r0, r3]
    3354:	b2c0      	uxtb	r0, r0
    3356:	e7fa      	b.n	334e <usart_get_job_status+0x12>

00003358 <_usart_interrupt_handler>:
    3358:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    335a:	0080      	lsls	r0, r0, #2
    335c:	4b64      	ldr	r3, [pc, #400]	; (34f0 <_usart_interrupt_handler+0x198>)
    335e:	58c5      	ldr	r5, [r0, r3]
    3360:	682c      	ldr	r4, [r5, #0]
    3362:	69e3      	ldr	r3, [r4, #28]
    3364:	2b00      	cmp	r3, #0
    3366:	d1fc      	bne.n	3362 <_usart_interrupt_handler+0xa>
    3368:	7e23      	ldrb	r3, [r4, #24]
    336a:	7da6      	ldrb	r6, [r4, #22]
    336c:	401e      	ands	r6, r3
    336e:	2330      	movs	r3, #48	; 0x30
    3370:	5ceb      	ldrb	r3, [r5, r3]
    3372:	2231      	movs	r2, #49	; 0x31
    3374:	5caf      	ldrb	r7, [r5, r2]
    3376:	401f      	ands	r7, r3
    3378:	07f3      	lsls	r3, r6, #31
    337a:	d522      	bpl.n	33c2 <_usart_interrupt_handler+0x6a>
    337c:	8deb      	ldrh	r3, [r5, #46]	; 0x2e
    337e:	b29b      	uxth	r3, r3
    3380:	2b00      	cmp	r3, #0
    3382:	d01c      	beq.n	33be <_usart_interrupt_handler+0x66>
    3384:	6aaa      	ldr	r2, [r5, #40]	; 0x28
    3386:	7813      	ldrb	r3, [r2, #0]
    3388:	b2db      	uxtb	r3, r3
    338a:	1c51      	adds	r1, r2, #1
    338c:	62a9      	str	r1, [r5, #40]	; 0x28
    338e:	7969      	ldrb	r1, [r5, #5]
    3390:	2901      	cmp	r1, #1
    3392:	d00e      	beq.n	33b2 <_usart_interrupt_handler+0x5a>
    3394:	b29b      	uxth	r3, r3
    3396:	05db      	lsls	r3, r3, #23
    3398:	0ddb      	lsrs	r3, r3, #23
    339a:	8523      	strh	r3, [r4, #40]	; 0x28
    339c:	8deb      	ldrh	r3, [r5, #46]	; 0x2e
    339e:	3b01      	subs	r3, #1
    33a0:	b29b      	uxth	r3, r3
    33a2:	85eb      	strh	r3, [r5, #46]	; 0x2e
    33a4:	2b00      	cmp	r3, #0
    33a6:	d10c      	bne.n	33c2 <_usart_interrupt_handler+0x6a>
    33a8:	3301      	adds	r3, #1
    33aa:	7523      	strb	r3, [r4, #20]
    33ac:	3301      	adds	r3, #1
    33ae:	75a3      	strb	r3, [r4, #22]
    33b0:	e007      	b.n	33c2 <_usart_interrupt_handler+0x6a>
    33b2:	7851      	ldrb	r1, [r2, #1]
    33b4:	0209      	lsls	r1, r1, #8
    33b6:	430b      	orrs	r3, r1
    33b8:	3202      	adds	r2, #2
    33ba:	62aa      	str	r2, [r5, #40]	; 0x28
    33bc:	e7eb      	b.n	3396 <_usart_interrupt_handler+0x3e>
    33be:	2301      	movs	r3, #1
    33c0:	7523      	strb	r3, [r4, #20]
    33c2:	07b3      	lsls	r3, r6, #30
    33c4:	d506      	bpl.n	33d4 <_usart_interrupt_handler+0x7c>
    33c6:	2302      	movs	r3, #2
    33c8:	7523      	strb	r3, [r4, #20]
    33ca:	2200      	movs	r2, #0
    33cc:	3331      	adds	r3, #49	; 0x31
    33ce:	54ea      	strb	r2, [r5, r3]
    33d0:	07fb      	lsls	r3, r7, #31
    33d2:	d41e      	bmi.n	3412 <_usart_interrupt_handler+0xba>
    33d4:	0773      	lsls	r3, r6, #29
    33d6:	d568      	bpl.n	34aa <_usart_interrupt_handler+0x152>
    33d8:	8dab      	ldrh	r3, [r5, #44]	; 0x2c
    33da:	b29b      	uxth	r3, r3
    33dc:	2b00      	cmp	r3, #0
    33de:	d062      	beq.n	34a6 <_usart_interrupt_handler+0x14e>
    33e0:	8b63      	ldrh	r3, [r4, #26]
    33e2:	b2db      	uxtb	r3, r3
    33e4:	071a      	lsls	r2, r3, #28
    33e6:	d418      	bmi.n	341a <_usart_interrupt_handler+0xc2>
    33e8:	227f      	movs	r2, #127	; 0x7f
    33ea:	4013      	ands	r3, r2
    33ec:	065a      	lsls	r2, r3, #25
    33ee:	d501      	bpl.n	33f4 <_usart_interrupt_handler+0x9c>
    33f0:	2240      	movs	r2, #64	; 0x40
    33f2:	4393      	bics	r3, r2
    33f4:	2b00      	cmp	r3, #0
    33f6:	d033      	beq.n	3460 <_usart_interrupt_handler+0x108>
    33f8:	079a      	lsls	r2, r3, #30
    33fa:	d511      	bpl.n	3420 <_usart_interrupt_handler+0xc8>
    33fc:	221a      	movs	r2, #26
    33fe:	2332      	movs	r3, #50	; 0x32
    3400:	54ea      	strb	r2, [r5, r3]
    3402:	3b30      	subs	r3, #48	; 0x30
    3404:	8363      	strh	r3, [r4, #26]
    3406:	077b      	lsls	r3, r7, #29
    3408:	d54f      	bpl.n	34aa <_usart_interrupt_handler+0x152>
    340a:	0028      	movs	r0, r5
    340c:	696b      	ldr	r3, [r5, #20]
    340e:	4798      	blx	r3
    3410:	e04b      	b.n	34aa <_usart_interrupt_handler+0x152>
    3412:	0028      	movs	r0, r5
    3414:	68eb      	ldr	r3, [r5, #12]
    3416:	4798      	blx	r3
    3418:	e7dc      	b.n	33d4 <_usart_interrupt_handler+0x7c>
    341a:	2277      	movs	r2, #119	; 0x77
    341c:	4013      	ands	r3, r2
    341e:	e7e5      	b.n	33ec <_usart_interrupt_handler+0x94>
    3420:	075a      	lsls	r2, r3, #29
    3422:	d505      	bpl.n	3430 <_usart_interrupt_handler+0xd8>
    3424:	221e      	movs	r2, #30
    3426:	2332      	movs	r3, #50	; 0x32
    3428:	54ea      	strb	r2, [r5, r3]
    342a:	3b2e      	subs	r3, #46	; 0x2e
    342c:	8363      	strh	r3, [r4, #26]
    342e:	e7ea      	b.n	3406 <_usart_interrupt_handler+0xae>
    3430:	07da      	lsls	r2, r3, #31
    3432:	d505      	bpl.n	3440 <_usart_interrupt_handler+0xe8>
    3434:	2213      	movs	r2, #19
    3436:	2332      	movs	r3, #50	; 0x32
    3438:	54ea      	strb	r2, [r5, r3]
    343a:	3b31      	subs	r3, #49	; 0x31
    343c:	8363      	strh	r3, [r4, #26]
    343e:	e7e2      	b.n	3406 <_usart_interrupt_handler+0xae>
    3440:	06da      	lsls	r2, r3, #27
    3442:	d505      	bpl.n	3450 <_usart_interrupt_handler+0xf8>
    3444:	2242      	movs	r2, #66	; 0x42
    3446:	2332      	movs	r3, #50	; 0x32
    3448:	54ea      	strb	r2, [r5, r3]
    344a:	3b22      	subs	r3, #34	; 0x22
    344c:	8363      	strh	r3, [r4, #26]
    344e:	e7da      	b.n	3406 <_usart_interrupt_handler+0xae>
    3450:	069b      	lsls	r3, r3, #26
    3452:	d5d8      	bpl.n	3406 <_usart_interrupt_handler+0xae>
    3454:	2241      	movs	r2, #65	; 0x41
    3456:	2332      	movs	r3, #50	; 0x32
    3458:	54ea      	strb	r2, [r5, r3]
    345a:	3b12      	subs	r3, #18
    345c:	8363      	strh	r3, [r4, #26]
    345e:	e7d2      	b.n	3406 <_usart_interrupt_handler+0xae>
    3460:	8d23      	ldrh	r3, [r4, #40]	; 0x28
    3462:	05db      	lsls	r3, r3, #23
    3464:	0ddb      	lsrs	r3, r3, #23
    3466:	b2da      	uxtb	r2, r3
    3468:	6a69      	ldr	r1, [r5, #36]	; 0x24
    346a:	700a      	strb	r2, [r1, #0]
    346c:	6a6a      	ldr	r2, [r5, #36]	; 0x24
    346e:	1c51      	adds	r1, r2, #1
    3470:	6269      	str	r1, [r5, #36]	; 0x24
    3472:	7969      	ldrb	r1, [r5, #5]
    3474:	2901      	cmp	r1, #1
    3476:	d010      	beq.n	349a <_usart_interrupt_handler+0x142>
    3478:	8dab      	ldrh	r3, [r5, #44]	; 0x2c
    347a:	3b01      	subs	r3, #1
    347c:	b29b      	uxth	r3, r3
    347e:	85ab      	strh	r3, [r5, #44]	; 0x2c
    3480:	2b00      	cmp	r3, #0
    3482:	d112      	bne.n	34aa <_usart_interrupt_handler+0x152>
    3484:	3304      	adds	r3, #4
    3486:	7523      	strb	r3, [r4, #20]
    3488:	2200      	movs	r2, #0
    348a:	332e      	adds	r3, #46	; 0x2e
    348c:	54ea      	strb	r2, [r5, r3]
    348e:	07bb      	lsls	r3, r7, #30
    3490:	d50b      	bpl.n	34aa <_usart_interrupt_handler+0x152>
    3492:	0028      	movs	r0, r5
    3494:	692b      	ldr	r3, [r5, #16]
    3496:	4798      	blx	r3
    3498:	e007      	b.n	34aa <_usart_interrupt_handler+0x152>
    349a:	0a1b      	lsrs	r3, r3, #8
    349c:	7053      	strb	r3, [r2, #1]
    349e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    34a0:	3301      	adds	r3, #1
    34a2:	626b      	str	r3, [r5, #36]	; 0x24
    34a4:	e7e8      	b.n	3478 <_usart_interrupt_handler+0x120>
    34a6:	2304      	movs	r3, #4
    34a8:	7523      	strb	r3, [r4, #20]
    34aa:	06f3      	lsls	r3, r6, #27
    34ac:	d504      	bpl.n	34b8 <_usart_interrupt_handler+0x160>
    34ae:	2310      	movs	r3, #16
    34b0:	7523      	strb	r3, [r4, #20]
    34b2:	7623      	strb	r3, [r4, #24]
    34b4:	06fb      	lsls	r3, r7, #27
    34b6:	d40e      	bmi.n	34d6 <_usart_interrupt_handler+0x17e>
    34b8:	06b3      	lsls	r3, r6, #26
    34ba:	d504      	bpl.n	34c6 <_usart_interrupt_handler+0x16e>
    34bc:	2320      	movs	r3, #32
    34be:	7523      	strb	r3, [r4, #20]
    34c0:	7623      	strb	r3, [r4, #24]
    34c2:	073b      	lsls	r3, r7, #28
    34c4:	d40b      	bmi.n	34de <_usart_interrupt_handler+0x186>
    34c6:	0733      	lsls	r3, r6, #28
    34c8:	d504      	bpl.n	34d4 <_usart_interrupt_handler+0x17c>
    34ca:	2308      	movs	r3, #8
    34cc:	7523      	strb	r3, [r4, #20]
    34ce:	7623      	strb	r3, [r4, #24]
    34d0:	06bb      	lsls	r3, r7, #26
    34d2:	d408      	bmi.n	34e6 <_usart_interrupt_handler+0x18e>
    34d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    34d6:	0028      	movs	r0, r5
    34d8:	69eb      	ldr	r3, [r5, #28]
    34da:	4798      	blx	r3
    34dc:	e7ec      	b.n	34b8 <_usart_interrupt_handler+0x160>
    34de:	0028      	movs	r0, r5
    34e0:	69ab      	ldr	r3, [r5, #24]
    34e2:	4798      	blx	r3
    34e4:	e7ef      	b.n	34c6 <_usart_interrupt_handler+0x16e>
    34e6:	6a2b      	ldr	r3, [r5, #32]
    34e8:	0028      	movs	r0, r5
    34ea:	4798      	blx	r3
    34ec:	e7f2      	b.n	34d4 <_usart_interrupt_handler+0x17c>
    34ee:	46c0      	nop			; (mov r8, r8)
    34f0:	20001d80 	.word	0x20001d80

000034f4 <_sercom_default_handler>:
    34f4:	4770      	bx	lr
	...

000034f8 <_sercom_set_handler>:
    34f8:	b5f0      	push	{r4, r5, r6, r7, lr}
    34fa:	4b0a      	ldr	r3, [pc, #40]	; (3524 <_sercom_set_handler+0x2c>)
    34fc:	781b      	ldrb	r3, [r3, #0]
    34fe:	2b00      	cmp	r3, #0
    3500:	d10c      	bne.n	351c <_sercom_set_handler+0x24>
    3502:	4f09      	ldr	r7, [pc, #36]	; (3528 <_sercom_set_handler+0x30>)
    3504:	4e09      	ldr	r6, [pc, #36]	; (352c <_sercom_set_handler+0x34>)
    3506:	4d0a      	ldr	r5, [pc, #40]	; (3530 <_sercom_set_handler+0x38>)
    3508:	2400      	movs	r4, #0
    350a:	51de      	str	r6, [r3, r7]
    350c:	195a      	adds	r2, r3, r5
    350e:	6014      	str	r4, [r2, #0]
    3510:	3304      	adds	r3, #4
    3512:	2b18      	cmp	r3, #24
    3514:	d1f9      	bne.n	350a <_sercom_set_handler+0x12>
    3516:	2201      	movs	r2, #1
    3518:	4b02      	ldr	r3, [pc, #8]	; (3524 <_sercom_set_handler+0x2c>)
    351a:	701a      	strb	r2, [r3, #0]
    351c:	0080      	lsls	r0, r0, #2
    351e:	4b02      	ldr	r3, [pc, #8]	; (3528 <_sercom_set_handler+0x30>)
    3520:	50c1      	str	r1, [r0, r3]
    3522:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3524:	200000c6 	.word	0x200000c6
    3528:	200000c8 	.word	0x200000c8
    352c:	000034f5 	.word	0x000034f5
    3530:	20001d80 	.word	0x20001d80

00003534 <_sercom_get_interrupt_vector>:
    3534:	b500      	push	{lr}
    3536:	b083      	sub	sp, #12
    3538:	2309      	movs	r3, #9
    353a:	466a      	mov	r2, sp
    353c:	7013      	strb	r3, [r2, #0]
    353e:	3301      	adds	r3, #1
    3540:	7053      	strb	r3, [r2, #1]
    3542:	3301      	adds	r3, #1
    3544:	7093      	strb	r3, [r2, #2]
    3546:	3301      	adds	r3, #1
    3548:	70d3      	strb	r3, [r2, #3]
    354a:	3301      	adds	r3, #1
    354c:	7113      	strb	r3, [r2, #4]
    354e:	3301      	adds	r3, #1
    3550:	7153      	strb	r3, [r2, #5]
    3552:	4b03      	ldr	r3, [pc, #12]	; (3560 <_sercom_get_interrupt_vector+0x2c>)
    3554:	4798      	blx	r3
    3556:	466b      	mov	r3, sp
    3558:	5618      	ldrsb	r0, [r3, r0]
    355a:	b003      	add	sp, #12
    355c:	bd00      	pop	{pc}
    355e:	46c0      	nop			; (mov r8, r8)
    3560:	0000284d 	.word	0x0000284d

00003564 <SERCOM0_Handler>:
    3564:	b510      	push	{r4, lr}
    3566:	4b02      	ldr	r3, [pc, #8]	; (3570 <SERCOM0_Handler+0xc>)
    3568:	681b      	ldr	r3, [r3, #0]
    356a:	2000      	movs	r0, #0
    356c:	4798      	blx	r3
    356e:	bd10      	pop	{r4, pc}
    3570:	200000c8 	.word	0x200000c8

00003574 <SERCOM1_Handler>:
    3574:	b510      	push	{r4, lr}
    3576:	4b02      	ldr	r3, [pc, #8]	; (3580 <SERCOM1_Handler+0xc>)
    3578:	685b      	ldr	r3, [r3, #4]
    357a:	2001      	movs	r0, #1
    357c:	4798      	blx	r3
    357e:	bd10      	pop	{r4, pc}
    3580:	200000c8 	.word	0x200000c8

00003584 <SERCOM2_Handler>:
    3584:	b510      	push	{r4, lr}
    3586:	4b02      	ldr	r3, [pc, #8]	; (3590 <SERCOM2_Handler+0xc>)
    3588:	689b      	ldr	r3, [r3, #8]
    358a:	2002      	movs	r0, #2
    358c:	4798      	blx	r3
    358e:	bd10      	pop	{r4, pc}
    3590:	200000c8 	.word	0x200000c8

00003594 <SERCOM3_Handler>:
    3594:	b510      	push	{r4, lr}
    3596:	4b02      	ldr	r3, [pc, #8]	; (35a0 <SERCOM3_Handler+0xc>)
    3598:	68db      	ldr	r3, [r3, #12]
    359a:	2003      	movs	r0, #3
    359c:	4798      	blx	r3
    359e:	bd10      	pop	{r4, pc}
    35a0:	200000c8 	.word	0x200000c8

000035a4 <SERCOM4_Handler>:
    35a4:	b510      	push	{r4, lr}
    35a6:	4b02      	ldr	r3, [pc, #8]	; (35b0 <SERCOM4_Handler+0xc>)
    35a8:	691b      	ldr	r3, [r3, #16]
    35aa:	2004      	movs	r0, #4
    35ac:	4798      	blx	r3
    35ae:	bd10      	pop	{r4, pc}
    35b0:	200000c8 	.word	0x200000c8

000035b4 <SERCOM5_Handler>:
    35b4:	b510      	push	{r4, lr}
    35b6:	4b02      	ldr	r3, [pc, #8]	; (35c0 <SERCOM5_Handler+0xc>)
    35b8:	695b      	ldr	r3, [r3, #20]
    35ba:	2005      	movs	r0, #5
    35bc:	4798      	blx	r3
    35be:	bd10      	pop	{r4, pc}
    35c0:	200000c8 	.word	0x200000c8

000035c4 <ac_register_callback>:
	/* Sanity check arguments */
	Assert(module);
	Assert(callback_func);

	/* Register callback function */
	module->callback[callback_type] = callback_func;
    35c4:	0093      	lsls	r3, r2, #2
    35c6:	18c3      	adds	r3, r0, r3
    35c8:	6059      	str	r1, [r3, #4]

	/* Set software flag for callback */
	module->register_callback_mask |= (1 << callback_type);
    35ca:	2301      	movs	r3, #1
    35cc:	4093      	lsls	r3, r2
    35ce:	001a      	movs	r2, r3
    35d0:	7f03      	ldrb	r3, [r0, #28]
    35d2:	4313      	orrs	r3, r2
    35d4:	7703      	strb	r3, [r0, #28]

	return STATUS_OK;
}
    35d6:	2000      	movs	r0, #0
    35d8:	4770      	bx	lr
	...

000035dc <_ac_interrupt_handler>:
 * that are registered and enabled.
 *
 * \param [in] instance_index  Default value 0
 */
void _ac_interrupt_handler(const uint32_t instance_index)
{
    35dc:	b570      	push	{r4, r5, r6, lr}
	/* Temporary variable */
	uint8_t interrupt_and_callback_status_mask;

	/* Get device instance from the look-up table */

	struct ac_module *module = _ac_instance[instance_index];
    35de:	0080      	lsls	r0, r0, #2
    35e0:	4b1f      	ldr	r3, [pc, #124]	; (3660 <_ac_interrupt_handler+0x84>)
    35e2:	58c4      	ldr	r4, [r0, r3]

	/* Read and mask interrupt flag register */
	interrupt_and_callback_status_mask =
			_ac_instance[instance_index]->hw->INTFLAG.reg &
    35e4:	6823      	ldr	r3, [r4, #0]
    35e6:	799d      	ldrb	r5, [r3, #6]
	interrupt_and_callback_status_mask =
    35e8:	7f22      	ldrb	r2, [r4, #28]
    35ea:	7f63      	ldrb	r3, [r4, #29]
    35ec:	4013      	ands	r3, r2
    35ee:	401d      	ands	r5, r3
			(module->register_callback_mask & module->enable_callback_mask);

	/* Check if comparator channel 0 needs to be serviced */
	if (interrupt_and_callback_status_mask & AC_INTFLAG_COMP0) {
    35f0:	07eb      	lsls	r3, r5, #31
    35f2:	d40a      	bmi.n	360a <_ac_interrupt_handler+0x2e>
		/* Clear interrupt flag */
		module->hw->INTFLAG.reg = AC_INTFLAG_COMP0;
	}

	/* Check if comparator channel 1 needs to be serviced */
	if (interrupt_and_callback_status_mask & AC_INTFLAG_COMP1) {
    35f4:	07ab      	lsls	r3, r5, #30
    35f6:	d40f      	bmi.n	3618 <_ac_interrupt_handler+0x3c>
		/* Clear interrupt flag */
		module->hw->INTFLAG.reg = AC_INTFLAG_COMP1;
	}

	/* Check if window 0 needs to be serviced */
	if (interrupt_and_callback_status_mask & AC_INTFLAG_WIN0) {
    35f8:	06eb      	lsls	r3, r5, #27
    35fa:	d414      	bmi.n	3626 <_ac_interrupt_handler+0x4a>
		module->hw->INTFLAG.reg = AC_INTFLAG_WIN0;
	}

#if (AC_NUM_CMP > 2)
		/* Check if comparator channel 2 needs to be serviced */
	if (interrupt_and_callback_status_mask & AC_INTFLAG_COMP2) {
    35fc:	076b      	lsls	r3, r5, #29
    35fe:	d419      	bmi.n	3634 <_ac_interrupt_handler+0x58>
		/* Clear interrupt flag */
		module->hw->INTFLAG.reg = AC_INTFLAG_COMP2;
	}

	/* Check if comparator channel 3 needs to be serviced */
	if (interrupt_and_callback_status_mask & AC_INTFLAG_COMP3) {
    3600:	072b      	lsls	r3, r5, #28
    3602:	d41e      	bmi.n	3642 <_ac_interrupt_handler+0x66>
		module->hw->INTFLAG.reg = AC_INTFLAG_COMP3;
	}

#  if !(SAMC20)
		/* Check if window 1 needs to be serviced */
	if (interrupt_and_callback_status_mask & AC_INTFLAG_WIN1) {
    3604:	06ab      	lsls	r3, r5, #26
    3606:	d423      	bmi.n	3650 <_ac_interrupt_handler+0x74>
		/* Clear interrupt flag */
		module->hw->INTFLAG.reg = AC_INTFLAG_WIN1;
	}
#  endif
#endif /* (AC_NUM_CMP > 2) */
}
    3608:	bd70      	pop	{r4, r5, r6, pc}
		(module->callback[AC_CALLBACK_COMPARATOR_0])(module);
    360a:	0020      	movs	r0, r4
    360c:	6863      	ldr	r3, [r4, #4]
    360e:	4798      	blx	r3
		module->hw->INTFLAG.reg = AC_INTFLAG_COMP0;
    3610:	2301      	movs	r3, #1
    3612:	6822      	ldr	r2, [r4, #0]
    3614:	7193      	strb	r3, [r2, #6]
    3616:	e7ed      	b.n	35f4 <_ac_interrupt_handler+0x18>
		(module->callback[AC_CALLBACK_COMPARATOR_1])(module);
    3618:	0020      	movs	r0, r4
    361a:	68a3      	ldr	r3, [r4, #8]
    361c:	4798      	blx	r3
		module->hw->INTFLAG.reg = AC_INTFLAG_COMP1;
    361e:	2302      	movs	r3, #2
    3620:	6822      	ldr	r2, [r4, #0]
    3622:	7193      	strb	r3, [r2, #6]
    3624:	e7e8      	b.n	35f8 <_ac_interrupt_handler+0x1c>
		(module->callback[AC_CALLBACK_WINDOW_0])(module);
    3626:	0020      	movs	r0, r4
    3628:	6963      	ldr	r3, [r4, #20]
    362a:	4798      	blx	r3
		module->hw->INTFLAG.reg = AC_INTFLAG_WIN0;
    362c:	2310      	movs	r3, #16
    362e:	6822      	ldr	r2, [r4, #0]
    3630:	7193      	strb	r3, [r2, #6]
    3632:	e7e3      	b.n	35fc <_ac_interrupt_handler+0x20>
		(module->callback[AC_CALLBACK_COMPARATOR_2])(module);
    3634:	0020      	movs	r0, r4
    3636:	68e3      	ldr	r3, [r4, #12]
    3638:	4798      	blx	r3
		module->hw->INTFLAG.reg = AC_INTFLAG_COMP2;
    363a:	2304      	movs	r3, #4
    363c:	6822      	ldr	r2, [r4, #0]
    363e:	7193      	strb	r3, [r2, #6]
    3640:	e7de      	b.n	3600 <_ac_interrupt_handler+0x24>
		(module->callback[AC_CALLBACK_COMPARATOR_3])(module);
    3642:	0020      	movs	r0, r4
    3644:	6923      	ldr	r3, [r4, #16]
    3646:	4798      	blx	r3
		module->hw->INTFLAG.reg = AC_INTFLAG_COMP3;
    3648:	2308      	movs	r3, #8
    364a:	6822      	ldr	r2, [r4, #0]
    364c:	7193      	strb	r3, [r2, #6]
    364e:	e7d9      	b.n	3604 <_ac_interrupt_handler+0x28>
		(module->callback[AC_CALLBACK_WINDOW_1])(module);
    3650:	0020      	movs	r0, r4
    3652:	69a3      	ldr	r3, [r4, #24]
    3654:	4798      	blx	r3
		module->hw->INTFLAG.reg = AC_INTFLAG_WIN1;
    3656:	6823      	ldr	r3, [r4, #0]
    3658:	2220      	movs	r2, #32
    365a:	719a      	strb	r2, [r3, #6]
}
    365c:	e7d4      	b.n	3608 <_ac_interrupt_handler+0x2c>
    365e:	46c0      	nop			; (mov r8, r8)
    3660:	20001d98 	.word	0x20001d98

00003664 <AC_Handler>:
{
    3664:	b510      	push	{r4, lr}
	_ac_interrupt_handler(0);
    3666:	2000      	movs	r0, #0
    3668:	4b01      	ldr	r3, [pc, #4]	; (3670 <AC_Handler+0xc>)
    366a:	4798      	blx	r3
}
    366c:	bd10      	pop	{r4, pc}
    366e:	46c0      	nop			; (mov r8, r8)
    3670:	000035dd 	.word	0x000035dd

00003674 <port_pin_set_config>:
    3674:	b500      	push	{lr}
    3676:	b083      	sub	sp, #12
    3678:	ab01      	add	r3, sp, #4
    367a:	2280      	movs	r2, #128	; 0x80
    367c:	701a      	strb	r2, [r3, #0]
    367e:	780a      	ldrb	r2, [r1, #0]
    3680:	705a      	strb	r2, [r3, #1]
    3682:	784a      	ldrb	r2, [r1, #1]
    3684:	709a      	strb	r2, [r3, #2]
    3686:	788a      	ldrb	r2, [r1, #2]
    3688:	70da      	strb	r2, [r3, #3]
    368a:	0019      	movs	r1, r3
    368c:	4b01      	ldr	r3, [pc, #4]	; (3694 <port_pin_set_config+0x20>)
    368e:	4798      	blx	r3
    3690:	b003      	add	sp, #12
    3692:	bd00      	pop	{pc}
    3694:	00005035 	.word	0x00005035

00003698 <configure_adc0_callbacks>:
    configure_adc0_callbacks();
    adc_read_buffer_job(&adc0_instance, &result, 1);

}

void configure_adc0_callbacks(void) {
    3698:	b570      	push	{r4, r5, r6, lr}
    adc_register_callback(&adc0_instance, adc0_window_callback, ADC_CALLBACK_WINDOW);
    369a:	4c0b      	ldr	r4, [pc, #44]	; (36c8 <configure_adc0_callbacks+0x30>)
    369c:	2201      	movs	r2, #1
    369e:	490b      	ldr	r1, [pc, #44]	; (36cc <configure_adc0_callbacks+0x34>)
    36a0:	0020      	movs	r0, r4
    36a2:	4d0b      	ldr	r5, [pc, #44]	; (36d0 <configure_adc0_callbacks+0x38>)
    36a4:	47a8      	blx	r5
{
	/* Sanity check arguments */
	Assert(module);

	/* Enable callback */
	module->enabled_callback_mask |= (1 << callback_type);
    36a6:	7ee3      	ldrb	r3, [r4, #27]
    36a8:	2202      	movs	r2, #2
    36aa:	4313      	orrs	r3, r2
    36ac:	76e3      	strb	r3, [r4, #27]
	Assert(module_inst);
	Assert(module_inst->hw);

	Adc *const adc_module = module_inst->hw;
	/* Enable interrupt */
	adc_module->INTENSET.reg = interrupt;
    36ae:	2304      	movs	r3, #4
    36b0:	6822      	ldr	r2, [r4, #0]
    36b2:	7153      	strb	r3, [r2, #5]
    adc_enable_callback(&adc0_instance, ADC_CALLBACK_WINDOW);
    adc_register_callback(&adc0_instance, adc0_read_callback, ADC_CALLBACK_READ_BUFFER);
    36b4:	2200      	movs	r2, #0
    36b6:	4907      	ldr	r1, [pc, #28]	; (36d4 <configure_adc0_callbacks+0x3c>)
    36b8:	0020      	movs	r0, r4
    36ba:	47a8      	blx	r5
    36bc:	7ee3      	ldrb	r3, [r4, #27]
    36be:	2201      	movs	r2, #1
    36c0:	4313      	orrs	r3, r2
    36c2:	76e3      	strb	r3, [r4, #27]
    adc_enable_callback(&adc0_instance, ADC_CALLBACK_READ_BUFFER);
}
    36c4:	bd70      	pop	{r4, r5, r6, pc}
    36c6:	46c0      	nop			; (mov r8, r8)
    36c8:	20001da4 	.word	0x20001da4
    36cc:	00003b3d 	.word	0x00003b3d
    36d0:	00001389 	.word	0x00001389
    36d4:	00003845 	.word	0x00003845

000036d8 <adc0_set_compare_value>:
    }
    if(result[1] > ch4->level << 5) {
        trigger_channel(4);
    }
}
void adc0_set_compare_value(uint16_t value) {
    36d8:	b510      	push	{r4, lr}
    adc_set_window_mode(&adc0_instance, ADC_WINDOW_MODE_ABOVE_LOWER, value, 1023);
    36da:	b202      	sxth	r2, r0
    36dc:	4b03      	ldr	r3, [pc, #12]	; (36ec <adc0_set_compare_value+0x14>)
    36de:	2180      	movs	r1, #128	; 0x80
    36e0:	0049      	lsls	r1, r1, #1
    36e2:	4803      	ldr	r0, [pc, #12]	; (36f0 <adc0_set_compare_value+0x18>)
    36e4:	4c03      	ldr	r4, [pc, #12]	; (36f4 <adc0_set_compare_value+0x1c>)
    36e6:	47a0      	blx	r4
}
    36e8:	bd10      	pop	{r4, pc}
    36ea:	46c0      	nop			; (mov r8, r8)
    36ec:	000003ff 	.word	0x000003ff
    36f0:	20001da4 	.word	0x20001da4
    36f4:	00000d69 	.word	0x00000d69

000036f8 <adc0_change_channel>:
void adc0_change_channel(uint8_t channel) {
    36f8:	b510      	push	{r4, lr}
    36fa:	b082      	sub	sp, #8
    36fc:	0004      	movs	r4, r0
    if(channel > 1)
    36fe:	2801      	cmp	r0, #1
    3700:	d901      	bls.n	3706 <adc0_change_channel+0xe>
        return;
    const enum adc_positive_input adc_pin[5] = {ADC_POSITIVE_INPUT_PIN6,
                                                ADC_POSITIVE_INPUT_PIN7,
                                               };
    adc_set_positive_input(&adc0_instance, adc_pin[channel]);
}
    3702:	b002      	add	sp, #8
    3704:	bd10      	pop	{r4, pc}
    const enum adc_positive_input adc_pin[5] = {ADC_POSITIVE_INPUT_PIN6,
    3706:	2205      	movs	r2, #5
    3708:	2100      	movs	r1, #0
    370a:	4668      	mov	r0, sp
    370c:	4b0b      	ldr	r3, [pc, #44]	; (373c <adc0_change_channel+0x44>)
    370e:	4798      	blx	r3
    3710:	2306      	movs	r3, #6
    3712:	466a      	mov	r2, sp
    3714:	7013      	strb	r3, [r2, #0]
    3716:	3301      	adds	r3, #1
    3718:	7053      	strb	r3, [r2, #1]
    adc_set_positive_input(&adc0_instance, adc_pin[channel]);
    371a:	5d11      	ldrb	r1, [r2, r4]
	Adc *const adc_module = module_inst->hw;
    371c:	4b08      	ldr	r3, [pc, #32]	; (3740 <adc0_change_channel+0x48>)
    371e:	681a      	ldr	r2, [r3, #0]
	/* Sanity check arguments */
	Assert(module_inst);

	Adc *const adc_module = module_inst->hw;

	if (adc_module->SYNCBUSY.reg) {
    3720:	8c13      	ldrh	r3, [r2, #32]
    3722:	b29b      	uxth	r3, r3
	while (adc_is_syncing(module_inst)) {
    3724:	2b00      	cmp	r3, #0
    3726:	d1fb      	bne.n	3720 <adc0_change_channel+0x28>
			(adc_module->INPUTCTRL.reg & ~ADC_INPUTCTRL_MUXPOS_Msk) |
    3728:	8913      	ldrh	r3, [r2, #8]
    372a:	201f      	movs	r0, #31
    372c:	4383      	bics	r3, r0
    372e:	430b      	orrs	r3, r1
	adc_module->INPUTCTRL.reg =
    3730:	8113      	strh	r3, [r2, #8]
    3732:	8c13      	ldrh	r3, [r2, #32]
    3734:	b29b      	uxth	r3, r3
	while (adc_is_syncing(module_inst)) {
    3736:	2b00      	cmp	r3, #0
    3738:	d1fb      	bne.n	3732 <adc0_change_channel+0x3a>
    373a:	e7e2      	b.n	3702 <adc0_change_channel+0xa>
    373c:	00008973 	.word	0x00008973
    3740:	20001da4 	.word	0x20001da4

00003744 <configure_adc0>:
void configure_adc0(channel *p_to_ch) {
    3744:	b530      	push	{r4, r5, lr}
    3746:	b08d      	sub	sp, #52	; 0x34
    ch0 = p_to_ch + 0;
    3748:	4b2c      	ldr	r3, [pc, #176]	; (37fc <configure_adc0+0xb8>)
    374a:	6018      	str	r0, [r3, #0]
    ch1 = p_to_ch + 1;
    374c:	0002      	movs	r2, r0
    374e:	3210      	adds	r2, #16
    3750:	4b2b      	ldr	r3, [pc, #172]	; (3800 <configure_adc0+0xbc>)
    3752:	601a      	str	r2, [r3, #0]
    ch2 = p_to_ch + 2;
    3754:	3210      	adds	r2, #16
    3756:	4b2b      	ldr	r3, [pc, #172]	; (3804 <configure_adc0+0xc0>)
    3758:	601a      	str	r2, [r3, #0]
    ch3 = p_to_ch + 3;
    375a:	3210      	adds	r2, #16
    375c:	4b2a      	ldr	r3, [pc, #168]	; (3808 <configure_adc0+0xc4>)
    375e:	601a      	str	r2, [r3, #0]
    ch4 = p_to_ch + 4;
    3760:	3040      	adds	r0, #64	; 0x40
    3762:	4b2a      	ldr	r3, [pc, #168]	; (380c <configure_adc0+0xc8>)
    3764:	6018      	str	r0, [r3, #0]
    adc_get_config_defaults(&config_adc);
    3766:	ac01      	add	r4, sp, #4
    3768:	0020      	movs	r0, r4
    376a:	4b29      	ldr	r3, [pc, #164]	; (3810 <configure_adc0+0xcc>)
    376c:	4798      	blx	r3
    config_adc.clock_source                  = GCLK_GENERATOR_7;
    376e:	2307      	movs	r3, #7
    3770:	7023      	strb	r3, [r4, #0]
    config_adc.reference                     = ADC_REFERENCE_INTVCC2;
    3772:	3b02      	subs	r3, #2
    3774:	7063      	strb	r3, [r4, #1]
    config_adc.clock_prescaler               = ADC_CLOCK_PRESCALER_DIV8;
    3776:	3b03      	subs	r3, #3
    3778:	70a3      	strb	r3, [r4, #2]
    config_adc.resolution                    = ADC_RESOLUTION_10BIT;
    377a:	331e      	adds	r3, #30
    377c:	70e3      	strb	r3, [r4, #3]
    config_adc.window.window_mode            = ADC_WINDOW_MODE_ABOVE_LOWER;
    377e:	33e0      	adds	r3, #224	; 0xe0
    3780:	8323      	strh	r3, [r4, #24]
    config_adc.window.window_upper_value     = 0;
    3782:	2300      	movs	r3, #0
    3784:	6223      	str	r3, [r4, #32]
    config_adc.window.window_lower_value     = 1023;
    3786:	4a23      	ldr	r2, [pc, #140]	; (3814 <configure_adc0+0xd0>)
    3788:	61e2      	str	r2, [r4, #28]
    config_adc.positive_input                = ADC_POSITIVE_INPUT_PIN6;
    378a:	2206      	movs	r2, #6
    378c:	7122      	strb	r2, [r4, #4]
    config_adc.negative_input                = ADC_NEGATIVE_INPUT_GND;
    378e:	22c0      	movs	r2, #192	; 0xc0
    3790:	0152      	lsls	r2, r2, #5
    3792:	80e2      	strh	r2, [r4, #6]
    config_adc.left_adjust                   = false;
    3794:	72a3      	strb	r3, [r4, #10]
    config_adc.freerunning                   = true;
    3796:	2201      	movs	r2, #1
    3798:	7322      	strb	r2, [r4, #12]
    config_adc.positive_input_sequence_mask_enable = 0;
    379a:	6123      	str	r3, [r4, #16]
    adc_init(&adc0_instance, ADC0, &config_adc);
    379c:	4d1e      	ldr	r5, [pc, #120]	; (3818 <configure_adc0+0xd4>)
    379e:	0022      	movs	r2, r4
    37a0:	491e      	ldr	r1, [pc, #120]	; (381c <configure_adc0+0xd8>)
    37a2:	0028      	movs	r0, r5
    37a4:	4b1e      	ldr	r3, [pc, #120]	; (3820 <configure_adc0+0xdc>)
    37a6:	4798      	blx	r3
	Adc *const adc_module = module_inst->hw;
    37a8:	682c      	ldr	r4, [r5, #0]
    37aa:	8c23      	ldrh	r3, [r4, #32]
    37ac:	b29b      	uxth	r3, r3
	while (adc_is_syncing(module_inst)) {
    37ae:	2b00      	cmp	r3, #0
    37b0:	d1fb      	bne.n	37aa <configure_adc0+0x66>
			_adc_get_inst_index(adc_module)));
    37b2:	0020      	movs	r0, r4
    37b4:	4b1b      	ldr	r3, [pc, #108]	; (3824 <configure_adc0+0xe0>)
    37b6:	4798      	blx	r3
	return (enum system_interrupt_vector)adc_interrupt_vectors[inst_num];
    37b8:	4b1b      	ldr	r3, [pc, #108]	; (3828 <configure_adc0+0xe4>)
    37ba:	5c1b      	ldrb	r3, [r3, r0]
    37bc:	221f      	movs	r2, #31
    37be:	401a      	ands	r2, r3
    37c0:	2301      	movs	r3, #1
    37c2:	4093      	lsls	r3, r2
    37c4:	4a19      	ldr	r2, [pc, #100]	; (382c <configure_adc0+0xe8>)
    37c6:	6013      	str	r3, [r2, #0]
	adc_module->INTENCLR.reg = ADC_INTENCLR_MASK;
    37c8:	2307      	movs	r3, #7
    37ca:	7123      	strb	r3, [r4, #4]
	adc_module->INTFLAG.reg = ADC_INTFLAG_MASK;
    37cc:	71a3      	strb	r3, [r4, #6]
	adc_module->CTRLA.reg |= ADC_CTRLA_ENABLE;
    37ce:	7823      	ldrb	r3, [r4, #0]
    37d0:	2202      	movs	r2, #2
    37d2:	4313      	orrs	r3, r2
    37d4:	7023      	strb	r3, [r4, #0]
	Adc *const adc_module = module_inst->hw;
    37d6:	4b10      	ldr	r3, [pc, #64]	; (3818 <configure_adc0+0xd4>)
    37d8:	681a      	ldr	r2, [r3, #0]
	if (adc_module->SYNCBUSY.reg) {
    37da:	8c13      	ldrh	r3, [r2, #32]
    37dc:	b29b      	uxth	r3, r3
	while (adc_is_syncing(module_inst)) {
    37de:	2b00      	cmp	r3, #0
    37e0:	d1fb      	bne.n	37da <configure_adc0+0x96>
    adc0_change_channel(adc_ch);
    37e2:	4b13      	ldr	r3, [pc, #76]	; (3830 <configure_adc0+0xec>)
    37e4:	7818      	ldrb	r0, [r3, #0]
    37e6:	4b13      	ldr	r3, [pc, #76]	; (3834 <configure_adc0+0xf0>)
    37e8:	4798      	blx	r3
    configure_adc0_callbacks();
    37ea:	4b13      	ldr	r3, [pc, #76]	; (3838 <configure_adc0+0xf4>)
    37ec:	4798      	blx	r3
    adc_read_buffer_job(&adc0_instance, &result, 1);
    37ee:	2201      	movs	r2, #1
    37f0:	4912      	ldr	r1, [pc, #72]	; (383c <configure_adc0+0xf8>)
    37f2:	4809      	ldr	r0, [pc, #36]	; (3818 <configure_adc0+0xd4>)
    37f4:	4b12      	ldr	r3, [pc, #72]	; (3840 <configure_adc0+0xfc>)
    37f6:	4798      	blx	r3
}
    37f8:	b00d      	add	sp, #52	; 0x34
    37fa:	bd30      	pop	{r4, r5, pc}
    37fc:	20001dd4 	.word	0x20001dd4
    3800:	20001dd8 	.word	0x20001dd8
    3804:	20001da0 	.word	0x20001da0
    3808:	20001d9c 	.word	0x20001d9c
    380c:	20001dc4 	.word	0x20001dc4
    3810:	00000d25 	.word	0x00000d25
    3814:	000003ff 	.word	0x000003ff
    3818:	20001da4 	.word	0x20001da4
    381c:	42004400 	.word	0x42004400
    3820:	00000dad 	.word	0x00000dad
    3824:	00000d01 	.word	0x00000d01
    3828:	0000941c 	.word	0x0000941c
    382c:	e000e100 	.word	0xe000e100
    3830:	20000100 	.word	0x20000100
    3834:	000036f9 	.word	0x000036f9
    3838:	00003699 	.word	0x00003699
    383c:	20001dc8 	.word	0x20001dc8
    3840:	0000139d 	.word	0x0000139d

00003844 <adc0_read_callback>:
void adc0_read_callback(void) {
    3844:	b510      	push	{r4, lr}
    adc0_read_done_flag = 1;
    3846:	2201      	movs	r2, #1
    3848:	4b18      	ldr	r3, [pc, #96]	; (38ac <adc0_read_callback+0x68>)
    384a:	701a      	strb	r2, [r3, #0]
    if(++adc_ch == 2)adc_ch = 0;
    384c:	4b18      	ldr	r3, [pc, #96]	; (38b0 <adc0_read_callback+0x6c>)
    384e:	781b      	ldrb	r3, [r3, #0]
    3850:	3301      	adds	r3, #1
    3852:	b2db      	uxtb	r3, r3
    3854:	2b02      	cmp	r3, #2
    3856:	d016      	beq.n	3886 <adc0_read_callback+0x42>
    3858:	4a15      	ldr	r2, [pc, #84]	; (38b0 <adc0_read_callback+0x6c>)
    385a:	7013      	strb	r3, [r2, #0]
    adc0_change_channel(adc_ch);
    385c:	4c14      	ldr	r4, [pc, #80]	; (38b0 <adc0_read_callback+0x6c>)
    385e:	7820      	ldrb	r0, [r4, #0]
    3860:	4b14      	ldr	r3, [pc, #80]	; (38b4 <adc0_read_callback+0x70>)
    3862:	4798      	blx	r3
    if(adc_ch == 0)
    3864:	7823      	ldrb	r3, [r4, #0]
    3866:	2b00      	cmp	r3, #0
    3868:	d011      	beq.n	388e <adc0_read_callback+0x4a>
    if(adc_ch == 1)
    386a:	4b11      	ldr	r3, [pc, #68]	; (38b0 <adc0_read_callback+0x6c>)
    386c:	781b      	ldrb	r3, [r3, #0]
    386e:	2b01      	cmp	r3, #1
    3870:	d014      	beq.n	389c <adc0_read_callback+0x58>
    adc_read_buffer_job(&adc0_instance, result + adc_ch, 1);
    3872:	4b0f      	ldr	r3, [pc, #60]	; (38b0 <adc0_read_callback+0x6c>)
    3874:	7819      	ldrb	r1, [r3, #0]
    3876:	0049      	lsls	r1, r1, #1
    3878:	4b0f      	ldr	r3, [pc, #60]	; (38b8 <adc0_read_callback+0x74>)
    387a:	18c9      	adds	r1, r1, r3
    387c:	2201      	movs	r2, #1
    387e:	480f      	ldr	r0, [pc, #60]	; (38bc <adc0_read_callback+0x78>)
    3880:	4b0f      	ldr	r3, [pc, #60]	; (38c0 <adc0_read_callback+0x7c>)
    3882:	4798      	blx	r3
}
    3884:	bd10      	pop	{r4, pc}
    if(++adc_ch == 2)adc_ch = 0;
    3886:	2200      	movs	r2, #0
    3888:	4b09      	ldr	r3, [pc, #36]	; (38b0 <adc0_read_callback+0x6c>)
    388a:	701a      	strb	r2, [r3, #0]
    388c:	e7e6      	b.n	385c <adc0_read_callback+0x18>
        adc0_set_compare_value(ch3->level << 5);
    388e:	4b0d      	ldr	r3, [pc, #52]	; (38c4 <adc0_read_callback+0x80>)
    3890:	681b      	ldr	r3, [r3, #0]
    3892:	7818      	ldrb	r0, [r3, #0]
    3894:	0140      	lsls	r0, r0, #5
    3896:	4b0c      	ldr	r3, [pc, #48]	; (38c8 <adc0_read_callback+0x84>)
    3898:	4798      	blx	r3
    389a:	e7e6      	b.n	386a <adc0_read_callback+0x26>
        adc0_set_compare_value(ch4->level << 5);
    389c:	4b0b      	ldr	r3, [pc, #44]	; (38cc <adc0_read_callback+0x88>)
    389e:	681b      	ldr	r3, [r3, #0]
    38a0:	7818      	ldrb	r0, [r3, #0]
    38a2:	0140      	lsls	r0, r0, #5
    38a4:	4b08      	ldr	r3, [pc, #32]	; (38c8 <adc0_read_callback+0x84>)
    38a6:	4798      	blx	r3
    38a8:	e7e3      	b.n	3872 <adc0_read_callback+0x2e>
    38aa:	46c0      	nop			; (mov r8, r8)
    38ac:	20001ddc 	.word	0x20001ddc
    38b0:	20000100 	.word	0x20000100
    38b4:	000036f9 	.word	0x000036f9
    38b8:	20001dc8 	.word	0x20001dc8
    38bc:	20001da4 	.word	0x20001da4
    38c0:	0000139d 	.word	0x0000139d
    38c4:	20001d9c 	.word	0x20001d9c
    38c8:	000036d9 	.word	0x000036d9
    38cc:	20001dc4 	.word	0x20001dc4

000038d0 <configure_ac_channel0>:
    configure_ac_callback();
    ac_enable(&ac_instance);

}

void configure_ac_channel0(void) {
    38d0:	b510      	push	{r4, lr}
    38d2:	b086      	sub	sp, #24
    struct ac_chan_config *const config) {
    /* Sanity check arguments */
    Assert(config);

    /* Default configuration values */
    config->sample_mode         = AC_CHAN_MODE_CONTINUOUS;
    38d4:	2300      	movs	r3, #0
    38d6:	466a      	mov	r2, sp
    38d8:	7013      	strb	r3, [r2, #0]
    config->filter              = AC_CHAN_FILTER_MAJORITY_5;
    config->enable_hysteresis   = true;
#ifdef FEATURE_AC_RUN_IN_STANDY_EACH_COMPARATOR
    config->run_in_standby      = false;
    38da:	7253      	strb	r3, [r2, #9]
#endif
#ifdef FEATURE_AC_HYSTERESIS_LEVEL
    config->hysteresis_level    = AC_HYSTERESIS_LEVEL_50;
    38dc:	7293      	strb	r3, [r2, #10]
#endif
    config->output_mode         = AC_CHAN_OUTPUT_INTERNAL;
    38de:	9303      	str	r3, [sp, #12]
    config->positive_input      = AC_CHAN_POS_MUX_PIN0;
    config->negative_input      = AC_CHAN_NEG_MUX_SCALED_VCC;
    38e0:	22a0      	movs	r2, #160	; 0xa0
    38e2:	00d2      	lsls	r2, r2, #3
    38e4:	4669      	mov	r1, sp
    38e6:	824a      	strh	r2, [r1, #18]
    config->vcc_scale_factor    = 32;
    38e8:	2220      	movs	r2, #32
    38ea:	750a      	strb	r2, [r1, #20]
    config->interrupt_selection = AC_CHAN_INTERRUPT_SELECTION_TOGGLE;
    38ec:	466a      	mov	r2, sp
    38ee:	754b      	strb	r3, [r1, #21]

    struct ac_chan_config config_ac_chan;

    ac_chan_get_config_defaults(&config_ac_chan);
    config_ac_chan.sample_mode         = AC_CHAN_MODE_CONTINUOUS;
    config_ac_chan.filter              = AC_CHAN_FILTER_NONE;
    38f0:	9301      	str	r3, [sp, #4]
    config_ac_chan.enable_hysteresis   = false;
    38f2:	720b      	strb	r3, [r1, #8]
    config_ac_chan.output_mode         = AC_CHAN_OUTPUT_INTERNAL;
    config_ac_chan.positive_input      = AC_CHAN_POS_MUX_PIN1;
    38f4:	2380      	movs	r3, #128	; 0x80
    38f6:	015b      	lsls	r3, r3, #5
    38f8:	820b      	strh	r3, [r1, #16]
    config_ac_chan.negative_input      = AC_CHAN_NEG_MUX_SCALED_VCC;
    config_ac_chan.vcc_scale_factor    = 32;

    config_ac_chan.interrupt_selection = AC_CHAN_INTERRUPT_SELECTION_TOGGLE;

    ac_chan_set_config(&ac_instance, AC_CHAN_CHANNEL_2, &config_ac_chan);
    38fa:	4c08      	ldr	r4, [pc, #32]	; (391c <configure_ac_channel0+0x4c>)
    38fc:	2102      	movs	r1, #2
    38fe:	0020      	movs	r0, r4
    3900:	4b07      	ldr	r3, [pc, #28]	; (3920 <configure_ac_channel0+0x50>)
    3902:	4798      	blx	r3
    const enum ac_chan_channel channel) {
    /* Sanity check arguments */
    Assert(module_inst);
    Assert(module_inst->hw);

    Ac *const ac_module = module_inst->hw;
    3904:	6823      	ldr	r3, [r4, #0]
    if (ac_module->SYNCBUSY.reg & AC_SYNCBUSY_MASK) {
    3906:	217f      	movs	r1, #127	; 0x7f
    3908:	6a1a      	ldr	r2, [r3, #32]

    while (ac_is_syncing(module_inst)) {
    390a:	4211      	tst	r1, r2
    390c:	d1fc      	bne.n	3908 <configure_ac_channel0+0x38>
        /* Wait until synchronization is complete */
    }

    /* Write the new comparator module control configuration */
    ac_module->COMPCTRL[(uint8_t)channel].reg |= AC_COMPCTRL_ENABLE;
    390e:	699a      	ldr	r2, [r3, #24]
    3910:	2102      	movs	r1, #2
    3912:	430a      	orrs	r2, r1
    3914:	619a      	str	r2, [r3, #24]

    ac_chan_enable(&ac_instance, AC_CHAN_CHANNEL_2);
}
    3916:	b006      	add	sp, #24
    3918:	bd10      	pop	{r4, pc}
    391a:	46c0      	nop			; (mov r8, r8)
    391c:	200000e0 	.word	0x200000e0
    3920:	00000cbd 	.word	0x00000cbd

00003924 <configure_ac_channel1>:
void configure_ac_channel1(void) {
    3924:	b510      	push	{r4, lr}
    3926:	b086      	sub	sp, #24
    config->sample_mode         = AC_CHAN_MODE_CONTINUOUS;
    3928:	2300      	movs	r3, #0
    392a:	466a      	mov	r2, sp
    392c:	7013      	strb	r3, [r2, #0]
    config->run_in_standby      = false;
    392e:	7253      	strb	r3, [r2, #9]
    config->hysteresis_level    = AC_HYSTERESIS_LEVEL_50;
    3930:	7293      	strb	r3, [r2, #10]
    config->output_mode         = AC_CHAN_OUTPUT_INTERNAL;
    3932:	9303      	str	r3, [sp, #12]
    config->positive_input      = AC_CHAN_POS_MUX_PIN0;
    3934:	8213      	strh	r3, [r2, #16]
    config->negative_input      = AC_CHAN_NEG_MUX_SCALED_VCC;
    3936:	22a0      	movs	r2, #160	; 0xa0
    3938:	00d2      	lsls	r2, r2, #3
    393a:	4669      	mov	r1, sp
    393c:	824a      	strh	r2, [r1, #18]
    config->vcc_scale_factor    = 32;
    393e:	2220      	movs	r2, #32
    3940:	750a      	strb	r2, [r1, #20]
    config->interrupt_selection = AC_CHAN_INTERRUPT_SELECTION_TOGGLE;
    3942:	2200      	movs	r2, #0
    3944:	754a      	strb	r2, [r1, #21]

    struct ac_chan_config config_ac_chan;

    ac_chan_get_config_defaults(&config_ac_chan);
    config_ac_chan.sample_mode         = AC_CHAN_MODE_CONTINUOUS;
    config_ac_chan.filter              = AC_CHAN_FILTER_NONE;
    3946:	9301      	str	r3, [sp, #4]
    config_ac_chan.enable_hysteresis   = false;
    3948:	466a      	mov	r2, sp
    394a:	720b      	strb	r3, [r1, #8]
    config_ac_chan.negative_input      = AC_CHAN_NEG_MUX_SCALED_VCC;
    config_ac_chan.vcc_scale_factor    = 32;

    config_ac_chan.interrupt_selection = AC_CHAN_INTERRUPT_SELECTION_TOGGLE;

    ac_chan_set_config(&ac_instance, AC_CHAN_CHANNEL_0, &config_ac_chan);
    394c:	4c07      	ldr	r4, [pc, #28]	; (396c <configure_ac_channel1+0x48>)
    394e:	2100      	movs	r1, #0
    3950:	0020      	movs	r0, r4
    3952:	4b07      	ldr	r3, [pc, #28]	; (3970 <configure_ac_channel1+0x4c>)
    3954:	4798      	blx	r3
    Ac *const ac_module = module_inst->hw;
    3956:	6823      	ldr	r3, [r4, #0]
    if (ac_module->SYNCBUSY.reg & AC_SYNCBUSY_MASK) {
    3958:	217f      	movs	r1, #127	; 0x7f
    395a:	6a1a      	ldr	r2, [r3, #32]
    while (ac_is_syncing(module_inst)) {
    395c:	4211      	tst	r1, r2
    395e:	d1fc      	bne.n	395a <configure_ac_channel1+0x36>
    ac_module->COMPCTRL[(uint8_t)channel].reg |= AC_COMPCTRL_ENABLE;
    3960:	691a      	ldr	r2, [r3, #16]
    3962:	2102      	movs	r1, #2
    3964:	430a      	orrs	r2, r1
    3966:	611a      	str	r2, [r3, #16]

    ac_chan_enable(&ac_instance, AC_CHAN_CHANNEL_0);
}
    3968:	b006      	add	sp, #24
    396a:	bd10      	pop	{r4, pc}
    396c:	200000e0 	.word	0x200000e0
    3970:	00000cbd 	.word	0x00000cbd

00003974 <configure_ac_channel2>:
void configure_ac_channel2(void) {
    3974:	b510      	push	{r4, lr}
    3976:	b086      	sub	sp, #24
    config->sample_mode         = AC_CHAN_MODE_CONTINUOUS;
    3978:	2300      	movs	r3, #0
    397a:	466a      	mov	r2, sp
    397c:	7013      	strb	r3, [r2, #0]
    config->run_in_standby      = false;
    397e:	7253      	strb	r3, [r2, #9]
    config->hysteresis_level    = AC_HYSTERESIS_LEVEL_50;
    3980:	7293      	strb	r3, [r2, #10]
    config->output_mode         = AC_CHAN_OUTPUT_INTERNAL;
    3982:	9303      	str	r3, [sp, #12]
    config->negative_input      = AC_CHAN_NEG_MUX_SCALED_VCC;
    3984:	22a0      	movs	r2, #160	; 0xa0
    3986:	00d2      	lsls	r2, r2, #3
    3988:	4669      	mov	r1, sp
    398a:	824a      	strh	r2, [r1, #18]
    config->vcc_scale_factor    = 32;
    398c:	2220      	movs	r2, #32
    398e:	750a      	strb	r2, [r1, #20]
    config->interrupt_selection = AC_CHAN_INTERRUPT_SELECTION_TOGGLE;
    3990:	466a      	mov	r2, sp
    3992:	754b      	strb	r3, [r1, #21]

    struct ac_chan_config config_ac_chan;

    ac_chan_get_config_defaults(&config_ac_chan);
    config_ac_chan.sample_mode         = AC_CHAN_MODE_CONTINUOUS;
    config_ac_chan.filter              = AC_CHAN_FILTER_NONE;
    3994:	9301      	str	r3, [sp, #4]
    config_ac_chan.enable_hysteresis   = false;
    3996:	720b      	strb	r3, [r1, #8]
    config_ac_chan.output_mode         = AC_CHAN_OUTPUT_INTERNAL;
    config_ac_chan.positive_input      = AC_CHAN_POS_MUX_PIN1;
    3998:	2380      	movs	r3, #128	; 0x80
    399a:	015b      	lsls	r3, r3, #5
    399c:	820b      	strh	r3, [r1, #16]
    config_ac_chan.negative_input      = AC_CHAN_NEG_MUX_SCALED_VCC;
    config_ac_chan.vcc_scale_factor    = 32;

    config_ac_chan.interrupt_selection = AC_CHAN_INTERRUPT_SELECTION_TOGGLE;

    ac_chan_set_config(&ac_instance, AC_CHAN_CHANNEL_1, &config_ac_chan);
    399e:	4c08      	ldr	r4, [pc, #32]	; (39c0 <configure_ac_channel2+0x4c>)
    39a0:	2101      	movs	r1, #1
    39a2:	0020      	movs	r0, r4
    39a4:	4b07      	ldr	r3, [pc, #28]	; (39c4 <configure_ac_channel2+0x50>)
    39a6:	4798      	blx	r3
    Ac *const ac_module = module_inst->hw;
    39a8:	6823      	ldr	r3, [r4, #0]
    if (ac_module->SYNCBUSY.reg & AC_SYNCBUSY_MASK) {
    39aa:	217f      	movs	r1, #127	; 0x7f
    39ac:	6a1a      	ldr	r2, [r3, #32]
    while (ac_is_syncing(module_inst)) {
    39ae:	4211      	tst	r1, r2
    39b0:	d1fc      	bne.n	39ac <configure_ac_channel2+0x38>
    ac_module->COMPCTRL[(uint8_t)channel].reg |= AC_COMPCTRL_ENABLE;
    39b2:	695a      	ldr	r2, [r3, #20]
    39b4:	2102      	movs	r1, #2
    39b6:	430a      	orrs	r2, r1
    39b8:	615a      	str	r2, [r3, #20]

    ac_chan_enable(&ac_instance, AC_CHAN_CHANNEL_1);
}
    39ba:	b006      	add	sp, #24
    39bc:	bd10      	pop	{r4, pc}
    39be:	46c0      	nop			; (mov r8, r8)
    39c0:	200000e0 	.word	0x200000e0
    39c4:	00000cbd 	.word	0x00000cbd

000039c8 <configure_ac_callback>:
}
void callback_function_ac2(struct ac_module *const module_inst) {
    trigger_channel(2);
}

void configure_ac_callback(void) {
    39c8:	b570      	push	{r4, r5, r6, lr}
    ac_register_callback(&ac_instance, callback_function_ac0, AC_CALLBACK_COMPARATOR_2);
    39ca:	4c15      	ldr	r4, [pc, #84]	; (3a20 <configure_ac_callback+0x58>)
    39cc:	2202      	movs	r2, #2
    39ce:	4915      	ldr	r1, [pc, #84]	; (3a24 <configure_ac_callback+0x5c>)
    39d0:	0020      	movs	r0, r4
    39d2:	4d15      	ldr	r5, [pc, #84]	; (3a28 <configure_ac_callback+0x60>)
    39d4:	47a8      	blx	r5
    ac_register_callback(&ac_instance, callback_function_ac1, AC_CALLBACK_COMPARATOR_0);
    39d6:	2200      	movs	r2, #0
    39d8:	4914      	ldr	r1, [pc, #80]	; (3a2c <configure_ac_callback+0x64>)
    39da:	0020      	movs	r0, r4
    39dc:	47a8      	blx	r5
    ac_register_callback(&ac_instance, callback_function_ac2, AC_CALLBACK_COMPARATOR_1);
    39de:	2201      	movs	r2, #1
    39e0:	4913      	ldr	r1, [pc, #76]	; (3a30 <configure_ac_callback+0x68>)
    39e2:	0020      	movs	r0, r4
    39e4:	47a8      	blx	r5
{
	/* Sanity check arguments */
	Assert(module);

	/* Set software flag for the callback */
	module->enable_callback_mask |= (1 << callback_type);
    39e6:	7f63      	ldrb	r3, [r4, #29]
    39e8:	2201      	movs	r2, #1
    39ea:	4313      	orrs	r3, r2
    39ec:	7763      	strb	r3, [r4, #29]
		default:
			break;
	}

	/* Enable the interrupt for the callback */
	module->hw->INTENSET.reg = inenset_temp;
    39ee:	2301      	movs	r3, #1
    39f0:	6822      	ldr	r2, [r4, #0]
    39f2:	7153      	strb	r3, [r2, #5]
    39f4:	4b0f      	ldr	r3, [pc, #60]	; (3a34 <configure_ac_callback+0x6c>)
    39f6:	2280      	movs	r2, #128	; 0x80
    39f8:	0512      	lsls	r2, r2, #20
    39fa:	601a      	str	r2, [r3, #0]
	module->enable_callback_mask |= (1 << callback_type);
    39fc:	7f61      	ldrb	r1, [r4, #29]
    39fe:	2002      	movs	r0, #2
    3a00:	4301      	orrs	r1, r0
    3a02:	7761      	strb	r1, [r4, #29]
	module->hw->INTENSET.reg = inenset_temp;
    3a04:	2102      	movs	r1, #2
    3a06:	6820      	ldr	r0, [r4, #0]
    3a08:	7141      	strb	r1, [r0, #5]
    3a0a:	601a      	str	r2, [r3, #0]
	module->enable_callback_mask |= (1 << callback_type);
    3a0c:	7f61      	ldrb	r1, [r4, #29]
    3a0e:	2004      	movs	r0, #4
    3a10:	4301      	orrs	r1, r0
    3a12:	7761      	strb	r1, [r4, #29]
	module->hw->INTENSET.reg = inenset_temp;
    3a14:	6821      	ldr	r1, [r4, #0]
    3a16:	2004      	movs	r0, #4
    3a18:	7148      	strb	r0, [r1, #5]
    3a1a:	601a      	str	r2, [r3, #0]
    ac_enable_callback(&ac_instance, AC_CALLBACK_COMPARATOR_0);
    ac_enable_callback(&ac_instance, AC_CALLBACK_COMPARATOR_1);
    ac_enable_callback(&ac_instance, AC_CALLBACK_COMPARATOR_2);
}
    3a1c:	bd70      	pop	{r4, r5, r6, pc}
    3a1e:	46c0      	nop			; (mov r8, r8)
    3a20:	200000e0 	.word	0x200000e0
    3a24:	00003b85 	.word	0x00003b85
    3a28:	000035c5 	.word	0x000035c5
    3a2c:	00003b95 	.word	0x00003b95
    3a30:	00003ba5 	.word	0x00003ba5
    3a34:	e000e100 	.word	0xe000e100

00003a38 <configure_ac>:
void configure_ac(channel *p_to_ch) {
    3a38:	b510      	push	{r4, lr}
    3a3a:	b082      	sub	sp, #8
    ch0 = p_to_ch + 0;
    3a3c:	4b14      	ldr	r3, [pc, #80]	; (3a90 <configure_ac+0x58>)
    3a3e:	6018      	str	r0, [r3, #0]
    ch1 = p_to_ch + 1;
    3a40:	0002      	movs	r2, r0
    3a42:	3210      	adds	r2, #16
    3a44:	4b13      	ldr	r3, [pc, #76]	; (3a94 <configure_ac+0x5c>)
    3a46:	601a      	str	r2, [r3, #0]
    ch2 = p_to_ch + 2;
    3a48:	3210      	adds	r2, #16
    3a4a:	4b13      	ldr	r3, [pc, #76]	; (3a98 <configure_ac+0x60>)
    3a4c:	601a      	str	r2, [r3, #0]
    ch3 = p_to_ch + 3;
    3a4e:	3210      	adds	r2, #16
    3a50:	4b12      	ldr	r3, [pc, #72]	; (3a9c <configure_ac+0x64>)
    3a52:	601a      	str	r2, [r3, #0]
    ch4 = p_to_ch + 4;
    3a54:	3040      	adds	r0, #64	; 0x40
    3a56:	4b12      	ldr	r3, [pc, #72]	; (3aa0 <configure_ac+0x68>)
    3a58:	6018      	str	r0, [r3, #0]
    config_ac.source_generator = GCLK_GENERATOR_5;
    3a5a:	aa01      	add	r2, sp, #4
    3a5c:	2305      	movs	r3, #5
    3a5e:	7013      	strb	r3, [r2, #0]
    ac_init(&ac_instance, AC, &config_ac);
    3a60:	4c10      	ldr	r4, [pc, #64]	; (3aa4 <configure_ac+0x6c>)
    3a62:	4911      	ldr	r1, [pc, #68]	; (3aa8 <configure_ac+0x70>)
    3a64:	0020      	movs	r0, r4
    3a66:	4b11      	ldr	r3, [pc, #68]	; (3aac <configure_ac+0x74>)
    3a68:	4798      	blx	r3
    configure_ac_channel0();
    3a6a:	4b11      	ldr	r3, [pc, #68]	; (3ab0 <configure_ac+0x78>)
    3a6c:	4798      	blx	r3
    configure_ac_channel1();
    3a6e:	4b11      	ldr	r3, [pc, #68]	; (3ab4 <configure_ac+0x7c>)
    3a70:	4798      	blx	r3
    configure_ac_channel2();
    3a72:	4b11      	ldr	r3, [pc, #68]	; (3ab8 <configure_ac+0x80>)
    3a74:	4798      	blx	r3
    configure_ac_callback();
    3a76:	4b11      	ldr	r3, [pc, #68]	; (3abc <configure_ac+0x84>)
    3a78:	4798      	blx	r3
    Ac *const ac_module = module_inst->hw;
    3a7a:	6823      	ldr	r3, [r4, #0]
    if (ac_module->SYNCBUSY.reg & AC_SYNCBUSY_MASK) {
    3a7c:	217f      	movs	r1, #127	; 0x7f
    3a7e:	6a1a      	ldr	r2, [r3, #32]
    while (ac_is_syncing(module_inst)) {
    3a80:	4211      	tst	r1, r2
    3a82:	d1fc      	bne.n	3a7e <configure_ac+0x46>
    ac_module->CTRLA.reg |= AC_CTRLA_ENABLE;
    3a84:	781a      	ldrb	r2, [r3, #0]
    3a86:	2102      	movs	r1, #2
    3a88:	430a      	orrs	r2, r1
    3a8a:	701a      	strb	r2, [r3, #0]
}
    3a8c:	b002      	add	sp, #8
    3a8e:	bd10      	pop	{r4, pc}
    3a90:	20001dd4 	.word	0x20001dd4
    3a94:	20001dd8 	.word	0x20001dd8
    3a98:	20001da0 	.word	0x20001da0
    3a9c:	20001d9c 	.word	0x20001d9c
    3aa0:	20001dc4 	.word	0x20001dc4
    3aa4:	200000e0 	.word	0x200000e0
    3aa8:	42005000 	.word	0x42005000
    3aac:	00000c6d 	.word	0x00000c6d
    3ab0:	000038d1 	.word	0x000038d1
    3ab4:	00003925 	.word	0x00003925
    3ab8:	00003975 	.word	0x00003975
    3abc:	000039c9 	.word	0x000039c9

00003ac0 <trigger_channel>:

void trigger_channel(uint8_t ch) {
    3ac0:	b510      	push	{r4, lr}
    ch++;
    3ac2:	3001      	adds	r0, #1
    3ac4:	b2c4      	uxtb	r4, r0
    if(ch0->input_channel == ch)
    3ac6:	4b17      	ldr	r3, [pc, #92]	; (3b24 <trigger_channel+0x64>)
    3ac8:	681b      	ldr	r3, [r3, #0]
    3aca:	78da      	ldrb	r2, [r3, #3]
    3acc:	42a2      	cmp	r2, r4
    3ace:	d014      	beq.n	3afa <trigger_channel+0x3a>
        adsr_trigger(ch0->adsr);
    if(ch1->input_channel == ch)
    3ad0:	4b15      	ldr	r3, [pc, #84]	; (3b28 <trigger_channel+0x68>)
    3ad2:	681b      	ldr	r3, [r3, #0]
    3ad4:	78da      	ldrb	r2, [r3, #3]
    3ad6:	42a2      	cmp	r2, r4
    3ad8:	d013      	beq.n	3b02 <trigger_channel+0x42>
        adsr_trigger(ch1->adsr);
    if(ch2->input_channel == ch)
    3ada:	4b14      	ldr	r3, [pc, #80]	; (3b2c <trigger_channel+0x6c>)
    3adc:	681b      	ldr	r3, [r3, #0]
    3ade:	78da      	ldrb	r2, [r3, #3]
    3ae0:	42a2      	cmp	r2, r4
    3ae2:	d012      	beq.n	3b0a <trigger_channel+0x4a>
        adsr_trigger(ch2->adsr);
    if(ch3->input_channel == ch)
    3ae4:	4b12      	ldr	r3, [pc, #72]	; (3b30 <trigger_channel+0x70>)
    3ae6:	681b      	ldr	r3, [r3, #0]
    3ae8:	78da      	ldrb	r2, [r3, #3]
    3aea:	42a2      	cmp	r2, r4
    3aec:	d011      	beq.n	3b12 <trigger_channel+0x52>
        adsr_trigger(ch3->adsr);
    if(ch4->input_channel == ch)
    3aee:	4b11      	ldr	r3, [pc, #68]	; (3b34 <trigger_channel+0x74>)
    3af0:	681b      	ldr	r3, [r3, #0]
    3af2:	78da      	ldrb	r2, [r3, #3]
    3af4:	42a2      	cmp	r2, r4
    3af6:	d010      	beq.n	3b1a <trigger_channel+0x5a>
        adsr_trigger(ch4->adsr);
}
    3af8:	bd10      	pop	{r4, pc}
        adsr_trigger(ch0->adsr);
    3afa:	6898      	ldr	r0, [r3, #8]
    3afc:	4b0e      	ldr	r3, [pc, #56]	; (3b38 <trigger_channel+0x78>)
    3afe:	4798      	blx	r3
    3b00:	e7e6      	b.n	3ad0 <trigger_channel+0x10>
        adsr_trigger(ch1->adsr);
    3b02:	6898      	ldr	r0, [r3, #8]
    3b04:	4b0c      	ldr	r3, [pc, #48]	; (3b38 <trigger_channel+0x78>)
    3b06:	4798      	blx	r3
    3b08:	e7e7      	b.n	3ada <trigger_channel+0x1a>
        adsr_trigger(ch2->adsr);
    3b0a:	6898      	ldr	r0, [r3, #8]
    3b0c:	4b0a      	ldr	r3, [pc, #40]	; (3b38 <trigger_channel+0x78>)
    3b0e:	4798      	blx	r3
    3b10:	e7e8      	b.n	3ae4 <trigger_channel+0x24>
        adsr_trigger(ch3->adsr);
    3b12:	6898      	ldr	r0, [r3, #8]
    3b14:	4b08      	ldr	r3, [pc, #32]	; (3b38 <trigger_channel+0x78>)
    3b16:	4798      	blx	r3
    3b18:	e7e9      	b.n	3aee <trigger_channel+0x2e>
        adsr_trigger(ch4->adsr);
    3b1a:	6898      	ldr	r0, [r3, #8]
    3b1c:	4b06      	ldr	r3, [pc, #24]	; (3b38 <trigger_channel+0x78>)
    3b1e:	4798      	blx	r3
}
    3b20:	e7ea      	b.n	3af8 <trigger_channel+0x38>
    3b22:	46c0      	nop			; (mov r8, r8)
    3b24:	20001dd4 	.word	0x20001dd4
    3b28:	20001dd8 	.word	0x20001dd8
    3b2c:	20001da0 	.word	0x20001da0
    3b30:	20001d9c 	.word	0x20001d9c
    3b34:	20001dc4 	.word	0x20001dc4
    3b38:	000006c5 	.word	0x000006c5

00003b3c <adc0_window_callback>:
void adc0_window_callback(void) {
    3b3c:	b510      	push	{r4, lr}
    if(result[0] > ch3->level << 5) {
    3b3e:	4b0d      	ldr	r3, [pc, #52]	; (3b74 <adc0_window_callback+0x38>)
    3b40:	2200      	movs	r2, #0
    3b42:	5e9a      	ldrsh	r2, [r3, r2]
    3b44:	4b0c      	ldr	r3, [pc, #48]	; (3b78 <adc0_window_callback+0x3c>)
    3b46:	681b      	ldr	r3, [r3, #0]
    3b48:	781b      	ldrb	r3, [r3, #0]
    3b4a:	015b      	lsls	r3, r3, #5
    3b4c:	429a      	cmp	r2, r3
    3b4e:	dc09      	bgt.n	3b64 <adc0_window_callback+0x28>
    if(result[1] > ch4->level << 5) {
    3b50:	4b08      	ldr	r3, [pc, #32]	; (3b74 <adc0_window_callback+0x38>)
    3b52:	2202      	movs	r2, #2
    3b54:	5e9a      	ldrsh	r2, [r3, r2]
    3b56:	4b09      	ldr	r3, [pc, #36]	; (3b7c <adc0_window_callback+0x40>)
    3b58:	681b      	ldr	r3, [r3, #0]
    3b5a:	781b      	ldrb	r3, [r3, #0]
    3b5c:	015b      	lsls	r3, r3, #5
    3b5e:	429a      	cmp	r2, r3
    3b60:	dc04      	bgt.n	3b6c <adc0_window_callback+0x30>
}
    3b62:	bd10      	pop	{r4, pc}
        trigger_channel(3);
    3b64:	2003      	movs	r0, #3
    3b66:	4b06      	ldr	r3, [pc, #24]	; (3b80 <adc0_window_callback+0x44>)
    3b68:	4798      	blx	r3
    3b6a:	e7f1      	b.n	3b50 <adc0_window_callback+0x14>
        trigger_channel(4);
    3b6c:	2004      	movs	r0, #4
    3b6e:	4b04      	ldr	r3, [pc, #16]	; (3b80 <adc0_window_callback+0x44>)
    3b70:	4798      	blx	r3
}
    3b72:	e7f6      	b.n	3b62 <adc0_window_callback+0x26>
    3b74:	20001dc8 	.word	0x20001dc8
    3b78:	20001d9c 	.word	0x20001d9c
    3b7c:	20001dc4 	.word	0x20001dc4
    3b80:	00003ac1 	.word	0x00003ac1

00003b84 <callback_function_ac0>:
void callback_function_ac0(struct ac_module *const module_inst) {
    3b84:	b510      	push	{r4, lr}
    trigger_channel(0);
    3b86:	2000      	movs	r0, #0
    3b88:	4b01      	ldr	r3, [pc, #4]	; (3b90 <callback_function_ac0+0xc>)
    3b8a:	4798      	blx	r3
}
    3b8c:	bd10      	pop	{r4, pc}
    3b8e:	46c0      	nop			; (mov r8, r8)
    3b90:	00003ac1 	.word	0x00003ac1

00003b94 <callback_function_ac1>:
void callback_function_ac1(struct ac_module *const module_inst) {
    3b94:	b510      	push	{r4, lr}
    trigger_channel(1);
    3b96:	2001      	movs	r0, #1
    3b98:	4b01      	ldr	r3, [pc, #4]	; (3ba0 <callback_function_ac1+0xc>)
    3b9a:	4798      	blx	r3
}
    3b9c:	bd10      	pop	{r4, pc}
    3b9e:	46c0      	nop			; (mov r8, r8)
    3ba0:	00003ac1 	.word	0x00003ac1

00003ba4 <callback_function_ac2>:
void callback_function_ac2(struct ac_module *const module_inst) {
    3ba4:	b510      	push	{r4, lr}
    trigger_channel(2);
    3ba6:	2002      	movs	r0, #2
    3ba8:	4b01      	ldr	r3, [pc, #4]	; (3bb0 <callback_function_ac2+0xc>)
    3baa:	4798      	blx	r3
}
    3bac:	bd10      	pop	{r4, pc}
    3bae:	46c0      	nop			; (mov r8, r8)
    3bb0:	00003ac1 	.word	0x00003ac1

00003bb4 <ac_set_scaler>:

void ac_set_scaler(uint8_t ac_channel, uint8_t value) {
    if(ac_channel > 2)
    3bb4:	2802      	cmp	r0, #2
    3bb6:	d805      	bhi.n	3bc4 <ac_set_scaler+0x10>
        return;
    AC->SCALER[ac_channel].reg = value << 1;
    3bb8:	0049      	lsls	r1, r1, #1
    3bba:	b2c9      	uxtb	r1, r1
    3bbc:	4b02      	ldr	r3, [pc, #8]	; (3bc8 <ac_set_scaler+0x14>)
    3bbe:	469c      	mov	ip, r3
    3bc0:	4460      	add	r0, ip
    3bc2:	7301      	strb	r1, [r0, #12]
    3bc4:	4770      	bx	lr
    3bc6:	46c0      	nop			; (mov r8, r8)
    3bc8:	42005000 	.word	0x42005000

00003bcc <i2c_write_complete_callback>:

struct i2c_master_packet rd_packet, wr_packet;
struct i2c_master_module i2c_master_instance;

void i2c_write_complete_callback(struct i2c_master_module *const module) {
    i2c_write_is_complete = 1;
    3bcc:	2201      	movs	r2, #1
    3bce:	4b01      	ldr	r3, [pc, #4]	; (3bd4 <i2c_write_complete_callback+0x8>)
    3bd0:	701a      	strb	r2, [r3, #0]
}
    3bd2:	4770      	bx	lr
    3bd4:	20000102 	.word	0x20000102

00003bd8 <i2c_read_complete_callback>:

void i2c_read_complete_callback(struct i2c_master_module *const module) {
    i2c_read_is_complete = 1;
    3bd8:	2201      	movs	r2, #1
    3bda:	4b01      	ldr	r3, [pc, #4]	; (3be0 <i2c_read_complete_callback+0x8>)
    3bdc:	701a      	strb	r2, [r3, #0]
}
    3bde:	4770      	bx	lr
    3be0:	20000101 	.word	0x20000101

00003be4 <configure_i2c_callbacks>:

void configure_i2c_callbacks(void) {
    3be4:	b570      	push	{r4, r5, r6, lr}
    /* Register callback function. */

    i2c_master_register_callback(&i2c_master_instance, i2c_write_complete_callback, I2C_MASTER_CALLBACK_WRITE_COMPLETE);
    3be6:	4c09      	ldr	r4, [pc, #36]	; (3c0c <configure_i2c_callbacks+0x28>)
    3be8:	2200      	movs	r2, #0
    3bea:	4909      	ldr	r1, [pc, #36]	; (3c10 <configure_i2c_callbacks+0x2c>)
    3bec:	0020      	movs	r0, r4
    3bee:	4d09      	ldr	r5, [pc, #36]	; (3c14 <configure_i2c_callbacks+0x30>)
    3bf0:	47a8      	blx	r5
	/* Sanity check */
	Assert(module);
	Assert(module->hw);

	/* Mark callback as enabled */
	module->enabled_callback |= (1 << callback_type);
    3bf2:	7e63      	ldrb	r3, [r4, #25]
    3bf4:	2201      	movs	r2, #1
    3bf6:	4313      	orrs	r3, r2
    3bf8:	7663      	strb	r3, [r4, #25]
    i2c_master_enable_callback(&i2c_master_instance, I2C_MASTER_CALLBACK_WRITE_COMPLETE);

    i2c_master_register_callback(&i2c_master_instance, i2c_read_complete_callback, I2C_MASTER_CALLBACK_READ_COMPLETE);
    3bfa:	4907      	ldr	r1, [pc, #28]	; (3c18 <configure_i2c_callbacks+0x34>)
    3bfc:	0020      	movs	r0, r4
    3bfe:	47a8      	blx	r5
    3c00:	7e63      	ldrb	r3, [r4, #25]
    3c02:	2202      	movs	r2, #2
    3c04:	4313      	orrs	r3, r2
    3c06:	7663      	strb	r3, [r4, #25]
    i2c_master_enable_callback(&i2c_master_instance, I2C_MASTER_CALLBACK_READ_COMPLETE);
}
    3c08:	bd70      	pop	{r4, r5, r6, pc}
    3c0a:	46c0      	nop			; (mov r8, r8)
    3c0c:	20001fc8 	.word	0x20001fc8
    3c10:	00003bcd 	.word	0x00003bcd
    3c14:	00001a59 	.word	0x00001a59
    3c18:	00003bd9 	.word	0x00003bd9

00003c1c <configure_i2c>:

void configure_i2c(void) {
    3c1c:	b530      	push	{r4, r5, lr}
    3c1e:	b08f      	sub	sp, #60	; 0x3c
{
	/*Sanity check argument */
	Assert(config);
	config->baud_rate        = I2C_MASTER_BAUD_RATE_100KHZ;
#ifdef FEATURE_I2C_FAST_MODE_PLUS_AND_HIGH_SPEED
	config->baud_rate_high_speed = I2C_MASTER_BAUD_RATE_3400KHZ;
    3c20:	ab01      	add	r3, sp, #4
    3c22:	4a25      	ldr	r2, [pc, #148]	; (3cb8 <configure_i2c+0x9c>)
    3c24:	9202      	str	r2, [sp, #8]
	config->transfer_speed       = I2C_MASTER_SPEED_STANDARD_AND_FAST;
    3c26:	2200      	movs	r2, #0
    3c28:	9203      	str	r2, [sp, #12]
#endif
	config->generator_source = GCLK_GENERATOR_0;
	config->run_in_standby   = false;
    3c2a:	761a      	strb	r2, [r3, #24]
	config->start_hold_time  = I2C_MASTER_START_HOLD_TIME_300NS_600NS;
	config->buffer_timeout   = 65535;
	config->unknown_bus_state_timeout = 65535;
    3c2c:	2101      	movs	r1, #1
    3c2e:	4249      	negs	r1, r1
    3c30:	8299      	strh	r1, [r3, #20]
	config->pinmux_pad0      = PINMUX_DEFAULT;
	config->pinmux_pad1      = PINMUX_DEFAULT;
	config->scl_low_timeout  = false;
    3c32:	3125      	adds	r1, #37	; 0x25
    3c34:	545a      	strb	r2, [r3, r1]
	config->inactive_timeout = I2C_MASTER_INACTIVE_TIMEOUT_DISABLED;
    3c36:	920b      	str	r2, [sp, #44]	; 0x2c
#ifdef FEATURE_I2C_SCL_STRETCH_MODE
	config->scl_stretch_only_after_ack_bit = false;
    3c38:	3108      	adds	r1, #8
    3c3a:	545a      	strb	r2, [r3, r1]
#endif
#ifdef FEATURE_I2C_SCL_EXTEND_TIMEOUT
	config->slave_scl_low_extend_timeout   = false;
    3c3c:	3101      	adds	r1, #1
    3c3e:	545a      	strb	r2, [r3, r1]
	config->master_scl_low_extend_timeout  = false;
    3c40:	3101      	adds	r1, #1
    3c42:	545a      	strb	r2, [r3, r1]
#endif
	/* The typical value is 215ns */
	config->sda_scl_rise_time_ns = 215;
    3c44:	31a9      	adds	r1, #169	; 0xa9
    3c46:	8619      	strh	r1, [r3, #48]	; 0x30
    /* Initialize config structure and software module */
    struct i2c_master_config config_i2c_master;
    i2c_master_get_config_defaults(&config_i2c_master);

    /* Change buffer timeout to something longer */
    config_i2c_master.buffer_timeout	= 10000;
    3c48:	491c      	ldr	r1, [pc, #112]	; (3cbc <configure_i2c+0xa0>)
    3c4a:	82d9      	strh	r1, [r3, #22]
    config_i2c_master.pinmux_pad0		= PINMUX_PA22C_SERCOM3_PAD0;
    3c4c:	491c      	ldr	r1, [pc, #112]	; (3cc0 <configure_i2c+0xa4>)
    3c4e:	9108      	str	r1, [sp, #32]
    config_i2c_master.pinmux_pad1		= PINMUX_PA23C_SERCOM3_PAD1;
    3c50:	491c      	ldr	r1, [pc, #112]	; (3cc4 <configure_i2c+0xa8>)
    3c52:	9109      	str	r1, [sp, #36]	; 0x24
    config_i2c_master.generator_source	= GCLK_GENERATOR_2;
    3c54:	2102      	movs	r1, #2
    3c56:	7319      	strb	r1, [r3, #12]
    config_i2c_master.start_hold_time	= I2C_MASTER_START_HOLD_TIME_DISABLED;
    3c58:	9205      	str	r2, [sp, #20]
    config_i2c_master.baud_rate			= I2C_BAUDRATE;
    3c5a:	23c8      	movs	r3, #200	; 0xc8
    3c5c:	005b      	lsls	r3, r3, #1
    3c5e:	9301      	str	r3, [sp, #4]
    /* Initialize and enable device with config */
    while(i2c_master_init(&i2c_master_instance, I2C_MODULE, &config_i2c_master) != STATUS_OK);
    3c60:	4d19      	ldr	r5, [pc, #100]	; (3cc8 <configure_i2c+0xac>)
    3c62:	4c1a      	ldr	r4, [pc, #104]	; (3ccc <configure_i2c+0xb0>)
    3c64:	aa01      	add	r2, sp, #4
    3c66:	491a      	ldr	r1, [pc, #104]	; (3cd0 <configure_i2c+0xb4>)
    3c68:	0028      	movs	r0, r5
    3c6a:	47a0      	blx	r4
    3c6c:	2800      	cmp	r0, #0
    3c6e:	d1f9      	bne.n	3c64 <configure_i2c+0x48>
{
	/* Sanity check of arguments */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
    3c70:	4b15      	ldr	r3, [pc, #84]	; (3cc8 <configure_i2c+0xac>)
    3c72:	681c      	ldr	r4, [r3, #0]
	return (i2c_hw->SYNCBUSY.reg & SERCOM_I2CM_SYNCBUSY_MASK);
    3c74:	2207      	movs	r2, #7
    3c76:	69e3      	ldr	r3, [r4, #28]
	while (i2c_master_is_syncing(module)) {
    3c78:	421a      	tst	r2, r3
    3c7a:	d1fc      	bne.n	3c76 <configure_i2c+0x5a>

	/* Wait for module to sync */
	_i2c_master_wait_for_sync(module);

	/* Enable module */
	i2c_module->CTRLA.reg |= SERCOM_I2CM_CTRLA_ENABLE;
    3c7c:	6823      	ldr	r3, [r4, #0]
    3c7e:	2202      	movs	r2, #2
    3c80:	4313      	orrs	r3, r2
    3c82:	6023      	str	r3, [r4, #0]

#if I2C_MASTER_CALLBACK_MODE == true
	/* Enable module interrupts */
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    3c84:	4d10      	ldr	r5, [pc, #64]	; (3cc8 <configure_i2c+0xac>)
    3c86:	6828      	ldr	r0, [r5, #0]
    3c88:	4b12      	ldr	r3, [pc, #72]	; (3cd4 <configure_i2c+0xb8>)
    3c8a:	4798      	blx	r3
    3c8c:	231f      	movs	r3, #31
    3c8e:	4018      	ands	r0, r3
    3c90:	3b1e      	subs	r3, #30
    3c92:	4083      	lsls	r3, r0
    3c94:	4a10      	ldr	r2, [pc, #64]	; (3cd8 <configure_i2c+0xbc>)
    3c96:	6013      	str	r3, [r2, #0]
#endif
	/* Start timeout if bus state is unknown */
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
		timeout_counter++;
		if(timeout_counter >= (module->unknown_bus_state_timeout)) {
    3c98:	88e8      	ldrh	r0, [r5, #6]
	uint32_t timeout_counter = 0;
    3c9a:	2300      	movs	r3, #0
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
    3c9c:	2110      	movs	r1, #16
    3c9e:	8b62      	ldrh	r2, [r4, #26]
    3ca0:	420a      	tst	r2, r1
    3ca2:	d104      	bne.n	3cae <configure_i2c+0x92>
		timeout_counter++;
    3ca4:	3301      	adds	r3, #1
		if(timeout_counter >= (module->unknown_bus_state_timeout)) {
    3ca6:	4283      	cmp	r3, r0
    3ca8:	d3f9      	bcc.n	3c9e <configure_i2c+0x82>
			/* Timeout, force bus state to idle */
			i2c_module->STATUS.reg = SERCOM_I2CM_STATUS_BUSSTATE(1);
    3caa:	2310      	movs	r3, #16
    3cac:	8363      	strh	r3, [r4, #26]

    i2c_master_enable(&i2c_master_instance);
    configure_i2c_callbacks();
    3cae:	4b0b      	ldr	r3, [pc, #44]	; (3cdc <configure_i2c+0xc0>)
    3cb0:	4798      	blx	r3
}
    3cb2:	b00f      	add	sp, #60	; 0x3c
    3cb4:	bd30      	pop	{r4, r5, pc}
    3cb6:	46c0      	nop			; (mov r8, r8)
    3cb8:	00000d48 	.word	0x00000d48
    3cbc:	00002710 	.word	0x00002710
    3cc0:	00160002 	.word	0x00160002
    3cc4:	00170002 	.word	0x00170002
    3cc8:	20001fc8 	.word	0x20001fc8
    3ccc:	000014dd 	.word	0x000014dd
    3cd0:	42001000 	.word	0x42001000
    3cd4:	00003535 	.word	0x00003535
    3cd8:	e000e100 	.word	0xe000e100
    3cdc:	00003be5 	.word	0x00003be5

00003ce0 <i2c_write>:

void i2c_write(uint8_t address, uint8_t *p_data, uint8_t data_length) {
    3ce0:	b570      	push	{r4, r5, r6, lr}
    wr_packet.address = address;
    3ce2:	4b13      	ldr	r3, [pc, #76]	; (3d30 <i2c_write+0x50>)
    3ce4:	8018      	strh	r0, [r3, #0]
    wr_packet.data_length = data_length;
    3ce6:	805a      	strh	r2, [r3, #2]
    wr_packet.data = p_data;
    3ce8:	6059      	str	r1, [r3, #4]
    i2c_write_is_complete = 0;
    3cea:	2200      	movs	r2, #0
    3cec:	4b11      	ldr	r3, [pc, #68]	; (3d34 <i2c_write+0x54>)
    3cee:	701a      	strb	r2, [r3, #0]


    while(i2c_master_write_packet_job(&i2c_master_instance, &wr_packet) != STATUS_OK);
    3cf0:	4e0f      	ldr	r6, [pc, #60]	; (3d30 <i2c_write+0x50>)
    3cf2:	4d11      	ldr	r5, [pc, #68]	; (3d38 <i2c_write+0x58>)
    3cf4:	4c11      	ldr	r4, [pc, #68]	; (3d3c <i2c_write+0x5c>)
    3cf6:	0031      	movs	r1, r6
    3cf8:	0028      	movs	r0, r5
    3cfa:	47a0      	blx	r4
    3cfc:	2800      	cmp	r0, #0
    3cfe:	d1fa      	bne.n	3cf6 <i2c_write+0x16>
    while(!i2c_write_is_complete);
    3d00:	4a0c      	ldr	r2, [pc, #48]	; (3d34 <i2c_write+0x54>)
    3d02:	7813      	ldrb	r3, [r2, #0]
    3d04:	2b00      	cmp	r3, #0
    3d06:	d0fc      	beq.n	3d02 <i2c_write+0x22>
    delay_ms(5); // Required for pagewrite refresh
    3d08:	2000      	movs	r0, #0
    3d0a:	4b0d      	ldr	r3, [pc, #52]	; (3d40 <i2c_write+0x60>)
    3d0c:	4798      	blx	r3
    3d0e:	0002      	movs	r2, r0
    3d10:	2300      	movs	r3, #0
    3d12:	0f91      	lsrs	r1, r2, #30
    3d14:	0090      	lsls	r0, r2, #2
    3d16:	1880      	adds	r0, r0, r2
    3d18:	4159      	adcs	r1, r3
    3d1a:	4a0a      	ldr	r2, [pc, #40]	; (3d44 <i2c_write+0x64>)
    3d1c:	2300      	movs	r3, #0
    3d1e:	1880      	adds	r0, r0, r2
    3d20:	4159      	adcs	r1, r3
    3d22:	4a09      	ldr	r2, [pc, #36]	; (3d48 <i2c_write+0x68>)
    3d24:	2300      	movs	r3, #0
    3d26:	4c09      	ldr	r4, [pc, #36]	; (3d4c <i2c_write+0x6c>)
    3d28:	47a0      	blx	r4
    3d2a:	4b09      	ldr	r3, [pc, #36]	; (3d50 <i2c_write+0x70>)
    3d2c:	4798      	blx	r3
}
    3d2e:	bd70      	pop	{r4, r5, r6, pc}
    3d30:	20001fbc 	.word	0x20001fbc
    3d34:	20000102 	.word	0x20000102
    3d38:	20001fc8 	.word	0x20001fc8
    3d3c:	00001a95 	.word	0x00001a95
    3d40:	00004e5d 	.word	0x00004e5d
    3d44:	00001b57 	.word	0x00001b57
    3d48:	00001b58 	.word	0x00001b58
    3d4c:	000063f5 	.word	0x000063f5
    3d50:	20000001 	.word	0x20000001

00003d54 <i2c_read>:

void i2c_read(uint16_t address, uint8_t *p_data, uint16_t recieveBytes) {
    3d54:	b570      	push	{r4, r5, r6, lr}
    3d56:	0004      	movs	r4, r0
    3d58:	0015      	movs	r5, r2

    i2c_write(address, p_data, 2);
    3d5a:	b2c0      	uxtb	r0, r0
    3d5c:	2202      	movs	r2, #2
    3d5e:	4b0b      	ldr	r3, [pc, #44]	; (3d8c <i2c_read+0x38>)
    3d60:	4798      	blx	r3

    rd_packet.address = address;
    3d62:	4b0b      	ldr	r3, [pc, #44]	; (3d90 <i2c_read+0x3c>)
    3d64:	801c      	strh	r4, [r3, #0]
    rd_packet.data_length = recieveBytes;
    3d66:	805d      	strh	r5, [r3, #2]
    rd_packet.data = i2c_rx_buffer;
    3d68:	4a0a      	ldr	r2, [pc, #40]	; (3d94 <i2c_read+0x40>)
    3d6a:	605a      	str	r2, [r3, #4]

    i2c_read_is_complete = 0;
    3d6c:	2200      	movs	r2, #0
    3d6e:	4b0a      	ldr	r3, [pc, #40]	; (3d98 <i2c_read+0x44>)
    3d70:	701a      	strb	r2, [r3, #0]
    while(i2c_master_read_packet_job(&i2c_master_instance, &rd_packet) != STATUS_OK);
    3d72:	4e07      	ldr	r6, [pc, #28]	; (3d90 <i2c_read+0x3c>)
    3d74:	4d09      	ldr	r5, [pc, #36]	; (3d9c <i2c_read+0x48>)
    3d76:	4c0a      	ldr	r4, [pc, #40]	; (3da0 <i2c_read+0x4c>)
    3d78:	0031      	movs	r1, r6
    3d7a:	0028      	movs	r0, r5
    3d7c:	47a0      	blx	r4
    3d7e:	2800      	cmp	r0, #0
    3d80:	d1fa      	bne.n	3d78 <i2c_read+0x24>
    while(!i2c_read_is_complete);
    3d82:	4a05      	ldr	r2, [pc, #20]	; (3d98 <i2c_read+0x44>)
    3d84:	7813      	ldrb	r3, [r2, #0]
    3d86:	2b00      	cmp	r3, #0
    3d88:	d0fc      	beq.n	3d84 <i2c_read+0x30>
    return;
}
    3d8a:	bd70      	pop	{r4, r5, r6, pc}
    3d8c:	00003ce1 	.word	0x00003ce1
    3d90:	20001ff0 	.word	0x20001ff0
    3d94:	20001e20 	.word	0x20001e20
    3d98:	20000101 	.word	0x20000101
    3d9c:	20001fc8 	.word	0x20001fc8
    3da0:	00001a71 	.word	0x00001a71

00003da4 <i2c_get_rx_Buffer>:
    return i2c_tx_buffer;
}

uint8_t *i2c_get_rx_Buffer(void) {
    return i2c_rx_buffer;
    3da4:	4800      	ldr	r0, [pc, #0]	; (3da8 <i2c_get_rx_Buffer+0x4>)
    3da6:	4770      	bx	lr
    3da8:	20001e20 	.word	0x20001e20

00003dac <menu_add_item>:
#include "my_menu.h"
//#include "functions.h"

extern uint8_t dmx_values[256];

void menu_add_item(MENU *m, menu_item item) {
    3dac:	b084      	sub	sp, #16
    3dae:	b570      	push	{r4, r5, r6, lr}
    3db0:	9105      	str	r1, [sp, #20]
    3db2:	9206      	str	r2, [sp, #24]
    3db4:	9307      	str	r3, [sp, #28]
    if(m->num_of_items == MENU_MAX_ITEMS)
    3db6:	23bb      	movs	r3, #187	; 0xbb
    3db8:	009b      	lsls	r3, r3, #2
    3dba:	5cc1      	ldrb	r1, [r0, r3]
    3dbc:	2911      	cmp	r1, #17
    3dbe:	d014      	beq.n	3dea <menu_add_item+0x3e>
        return;
    m->items[m->num_of_items] = item;
    3dc0:	232c      	movs	r3, #44	; 0x2c
    3dc2:	434b      	muls	r3, r1
    3dc4:	aa05      	add	r2, sp, #20
    3dc6:	18c3      	adds	r3, r0, r3
    3dc8:	ca70      	ldmia	r2!, {r4, r5, r6}
    3dca:	c370      	stmia	r3!, {r4, r5, r6}
    3dcc:	ca70      	ldmia	r2!, {r4, r5, r6}
    3dce:	c370      	stmia	r3!, {r4, r5, r6}
    3dd0:	ca70      	ldmia	r2!, {r4, r5, r6}
    3dd2:	c370      	stmia	r3!, {r4, r5, r6}
    3dd4:	ca30      	ldmia	r2!, {r4, r5}
    3dd6:	c330      	stmia	r3!, {r4, r5}
    m->num_of_items++;
    3dd8:	3101      	adds	r1, #1
    3dda:	23bb      	movs	r3, #187	; 0xbb
    3ddc:	009b      	lsls	r3, r3, #2
    3dde:	54c1      	strb	r1, [r0, r3]
    m->curr_pos = 0;
    3de0:	2300      	movs	r3, #0
    3de2:	4a04      	ldr	r2, [pc, #16]	; (3df4 <menu_add_item+0x48>)
    3de4:	5483      	strb	r3, [r0, r2]
    m->curr_window_pos = 0;
    3de6:	4a04      	ldr	r2, [pc, #16]	; (3df8 <menu_add_item+0x4c>)
    3de8:	5483      	strb	r3, [r0, r2]
}
    3dea:	bc70      	pop	{r4, r5, r6}
    3dec:	bc08      	pop	{r3}
    3dee:	b004      	add	sp, #16
    3df0:	4718      	bx	r3
    3df2:	46c0      	nop			; (mov r8, r8)
    3df4:	000002ed 	.word	0x000002ed
    3df8:	000002ee 	.word	0x000002ee

00003dfc <increment_menu_position>:

void increment_menu_position(MENU *m) {
    if(m->curr_pos < m->num_of_items - 1)
    3dfc:	4b0a      	ldr	r3, [pc, #40]	; (3e28 <increment_menu_position+0x2c>)
    3dfe:	5cc2      	ldrb	r2, [r0, r3]
    3e00:	3b01      	subs	r3, #1
    3e02:	5cc3      	ldrb	r3, [r0, r3]
    3e04:	3b01      	subs	r3, #1
    3e06:	429a      	cmp	r2, r3
    3e08:	da02      	bge.n	3e10 <increment_menu_position+0x14>
        m->curr_pos++;
    3e0a:	3201      	adds	r2, #1
    3e0c:	4b06      	ldr	r3, [pc, #24]	; (3e28 <increment_menu_position+0x2c>)
    3e0e:	54c2      	strb	r2, [r0, r3]
    if((m->curr_pos - m->curr_window_pos) == 4)
    3e10:	4b06      	ldr	r3, [pc, #24]	; (3e2c <increment_menu_position+0x30>)
    3e12:	5cc2      	ldrb	r2, [r0, r3]
    3e14:	4b04      	ldr	r3, [pc, #16]	; (3e28 <increment_menu_position+0x2c>)
    3e16:	5cc3      	ldrb	r3, [r0, r3]
    3e18:	1a9b      	subs	r3, r3, r2
    3e1a:	2b04      	cmp	r3, #4
    3e1c:	d000      	beq.n	3e20 <increment_menu_position+0x24>
        m->curr_window_pos++;
}
    3e1e:	4770      	bx	lr
        m->curr_window_pos++;
    3e20:	3201      	adds	r2, #1
    3e22:	4b02      	ldr	r3, [pc, #8]	; (3e2c <increment_menu_position+0x30>)
    3e24:	54c2      	strb	r2, [r0, r3]
}
    3e26:	e7fa      	b.n	3e1e <increment_menu_position+0x22>
    3e28:	000002ed 	.word	0x000002ed
    3e2c:	000002ee 	.word	0x000002ee

00003e30 <decrement_menu_position>:

void decrement_menu_position(MENU *m) {
    if(m->curr_pos > 0)
    3e30:	4b08      	ldr	r3, [pc, #32]	; (3e54 <decrement_menu_position+0x24>)
    3e32:	5cc3      	ldrb	r3, [r0, r3]
    3e34:	2b00      	cmp	r3, #0
    3e36:	d002      	beq.n	3e3e <decrement_menu_position+0xe>
        m->curr_pos--;
    3e38:	3b01      	subs	r3, #1
    3e3a:	4a06      	ldr	r2, [pc, #24]	; (3e54 <decrement_menu_position+0x24>)
    3e3c:	5483      	strb	r3, [r0, r2]
    if(m->curr_pos < m->curr_window_pos)
    3e3e:	4b06      	ldr	r3, [pc, #24]	; (3e58 <decrement_menu_position+0x28>)
    3e40:	5cc3      	ldrb	r3, [r0, r3]
    3e42:	4a04      	ldr	r2, [pc, #16]	; (3e54 <decrement_menu_position+0x24>)
    3e44:	5c82      	ldrb	r2, [r0, r2]
    3e46:	429a      	cmp	r2, r3
    3e48:	d202      	bcs.n	3e50 <decrement_menu_position+0x20>
        m->curr_window_pos--;
    3e4a:	3b01      	subs	r3, #1
    3e4c:	4a02      	ldr	r2, [pc, #8]	; (3e58 <decrement_menu_position+0x28>)
    3e4e:	5483      	strb	r3, [r0, r2]
}
    3e50:	4770      	bx	lr
    3e52:	46c0      	nop			; (mov r8, r8)
    3e54:	000002ed 	.word	0x000002ed
    3e58:	000002ee 	.word	0x000002ee

00003e5c <get_p_to_item>:
uint8_t get_menu_position(MENU *m) {
    return m->curr_pos;
}

menu_item *get_p_to_item(MENU *m) {
    return &(m->items[m->curr_pos]);
    3e5c:	4b02      	ldr	r3, [pc, #8]	; (3e68 <get_p_to_item+0xc>)
    3e5e:	5cc2      	ldrb	r2, [r0, r3]
    3e60:	232c      	movs	r3, #44	; 0x2c
    3e62:	4353      	muls	r3, r2
    3e64:	18c0      	adds	r0, r0, r3
}
    3e66:	4770      	bx	lr
    3e68:	000002ed 	.word	0x000002ed

00003e6c <ftoe>:

void ftoe(char *s, float val) {
    3e6c:	b570      	push	{r4, r5, r6, lr}
    3e6e:	0006      	movs	r6, r0
    3e70:	1c0d      	adds	r5, r1, #0
    uint32_t whole = (int) val;
    3e72:	1c08      	adds	r0, r1, #0
    3e74:	4b0a      	ldr	r3, [pc, #40]	; (3ea0 <ftoe+0x34>)
    3e76:	4798      	blx	r3
    3e78:	0004      	movs	r4, r0
    float fract = val - whole;
    3e7a:	4b0a      	ldr	r3, [pc, #40]	; (3ea4 <ftoe+0x38>)
    3e7c:	4798      	blx	r3
    3e7e:	1c01      	adds	r1, r0, #0
    3e80:	1c28      	adds	r0, r5, #0
    3e82:	4b09      	ldr	r3, [pc, #36]	; (3ea8 <ftoe+0x3c>)
    3e84:	4798      	blx	r3
    uint32_t whole_fract = fract * 1000;
    3e86:	4909      	ldr	r1, [pc, #36]	; (3eac <ftoe+0x40>)
    3e88:	4b09      	ldr	r3, [pc, #36]	; (3eb0 <ftoe+0x44>)
    3e8a:	4798      	blx	r3
    3e8c:	4b09      	ldr	r3, [pc, #36]	; (3eb4 <ftoe+0x48>)
    3e8e:	4798      	blx	r3
    3e90:	0003      	movs	r3, r0
    //ne dela v primeru 4.05
    sprintf(s, "%lu.%03lu", whole, whole_fract);
    3e92:	0022      	movs	r2, r4
    3e94:	4908      	ldr	r1, [pc, #32]	; (3eb8 <ftoe+0x4c>)
    3e96:	0030      	movs	r0, r6
    3e98:	4c08      	ldr	r4, [pc, #32]	; (3ebc <ftoe+0x50>)
    3e9a:	47a0      	blx	r4
}
    3e9c:	bd70      	pop	{r4, r5, r6, pc}
    3e9e:	46c0      	nop			; (mov r8, r8)
    3ea0:	00006d01 	.word	0x00006d01
    3ea4:	00006de1 	.word	0x00006de1
    3ea8:	000069c9 	.word	0x000069c9
    3eac:	447a0000 	.word	0x447a0000
    3eb0:	00006789 	.word	0x00006789
    3eb4:	00006489 	.word	0x00006489
    3eb8:	000094a4 	.word	0x000094a4
    3ebc:	00008af9 	.word	0x00008af9

00003ec0 <menu_get_item_string>:

void menu_get_item_string(MENU *m, char *str, uint8_t n) {
    3ec0:	b5f0      	push	{r4, r5, r6, r7, lr}
    3ec2:	b089      	sub	sp, #36	; 0x24
    3ec4:	0007      	movs	r7, r0
    3ec6:	000d      	movs	r5, r1
    3ec8:	0016      	movs	r6, r2
    if(n >= m->num_of_items)
    3eca:	23bb      	movs	r3, #187	; 0xbb
    3ecc:	009b      	lsls	r3, r3, #2
    3ece:	5cc3      	ldrb	r3, [r0, r3]
    3ed0:	4293      	cmp	r3, r2
    3ed2:	d927      	bls.n	3f24 <menu_get_item_string+0x64>
        return;
    menu_item *tmp = m->items + n;
    3ed4:	242c      	movs	r4, #44	; 0x2c
    3ed6:	4354      	muls	r4, r2
    3ed8:	1904      	adds	r4, r0, r4
    switch(tmp->type) {
    3eda:	7823      	ldrb	r3, [r4, #0]
    3edc:	2b0a      	cmp	r3, #10
    3ede:	d85e      	bhi.n	3f9e <menu_get_item_string+0xde>
    3ee0:	009b      	lsls	r3, r3, #2
    3ee2:	4a45      	ldr	r2, [pc, #276]	; (3ff8 <menu_get_item_string+0x138>)
    3ee4:	58d3      	ldr	r3, [r2, r3]
    3ee6:	469f      	mov	pc, r3
        case  TYPE_UINT8:
            sprintf(tmp->val_str, "%d", *(uint8_t *)tmp->variable);
    3ee8:	6923      	ldr	r3, [r4, #16]
    3eea:	781a      	ldrb	r2, [r3, #0]
    3eec:	0020      	movs	r0, r4
    3eee:	3014      	adds	r0, #20
    3ef0:	4942      	ldr	r1, [pc, #264]	; (3ffc <menu_get_item_string+0x13c>)
    3ef2:	4b43      	ldr	r3, [pc, #268]	; (4000 <menu_get_item_string+0x140>)
    3ef4:	4798      	blx	r3
            break;
        default:
            sprintf(tmp->val_str, "%s", "ERROR99");
            break;
    }
    *(tmp->val_str + 8) = 0;
    3ef6:	2300      	movs	r3, #0
    3ef8:	7723      	strb	r3, [r4, #28]
    char item_str[21];
    if(strcmp(tmp->units, "") == 0) {
    3efa:	7b23      	ldrb	r3, [r4, #12]
    3efc:	2b00      	cmp	r3, #0
    3efe:	d161      	bne.n	3fc4 <menu_get_item_string+0x104>
        if(n == m->curr_pos) {
    3f00:	4b40      	ldr	r3, [pc, #256]	; (4004 <menu_get_item_string+0x144>)
    3f02:	5cfb      	ldrb	r3, [r7, r3]
    3f04:	42b3      	cmp	r3, r6
    3f06:	d051      	beq.n	3fac <menu_get_item_string+0xec>
            sprintf(item_str, "%c%-10s%9s", '~', tmp->name, tmp->val_str, tmp->units);
        }
        else
            sprintf(item_str, "%-10s%10s", tmp->name, tmp->val_str, tmp->units);
    3f08:	0023      	movs	r3, r4
    3f0a:	3314      	adds	r3, #20
    3f0c:	1c62      	adds	r2, r4, #1
    3f0e:	340c      	adds	r4, #12
    3f10:	9400      	str	r4, [sp, #0]
    3f12:	493d      	ldr	r1, [pc, #244]	; (4008 <menu_get_item_string+0x148>)
    3f14:	a802      	add	r0, sp, #8
    3f16:	4c3a      	ldr	r4, [pc, #232]	; (4000 <menu_get_item_string+0x140>)
    3f18:	47a0      	blx	r4
        }
        else
            sprintf(item_str, "%-10s%8s%2s", tmp->name, tmp->val_str, tmp->units);
    }

    memcpy(str, item_str, 20);
    3f1a:	2214      	movs	r2, #20
    3f1c:	a902      	add	r1, sp, #8
    3f1e:	0028      	movs	r0, r5
    3f20:	4b3a      	ldr	r3, [pc, #232]	; (400c <menu_get_item_string+0x14c>)
    3f22:	4798      	blx	r3

}
    3f24:	b009      	add	sp, #36	; 0x24
    3f26:	bdf0      	pop	{r4, r5, r6, r7, pc}
            sprintf(tmp->val_str, "%d", *(uint16_t *)tmp->variable);
    3f28:	6923      	ldr	r3, [r4, #16]
    3f2a:	881a      	ldrh	r2, [r3, #0]
    3f2c:	0020      	movs	r0, r4
    3f2e:	3014      	adds	r0, #20
    3f30:	4932      	ldr	r1, [pc, #200]	; (3ffc <menu_get_item_string+0x13c>)
    3f32:	4b33      	ldr	r3, [pc, #204]	; (4000 <menu_get_item_string+0x140>)
    3f34:	4798      	blx	r3
            break;
    3f36:	e7de      	b.n	3ef6 <menu_get_item_string+0x36>
            sprintf(tmp->val_str, "%lu", *(uint32_t *)tmp->variable);
    3f38:	6923      	ldr	r3, [r4, #16]
    3f3a:	681a      	ldr	r2, [r3, #0]
    3f3c:	0020      	movs	r0, r4
    3f3e:	3014      	adds	r0, #20
    3f40:	4933      	ldr	r1, [pc, #204]	; (4010 <menu_get_item_string+0x150>)
    3f42:	4b2f      	ldr	r3, [pc, #188]	; (4000 <menu_get_item_string+0x140>)
    3f44:	4798      	blx	r3
            break;
    3f46:	e7d6      	b.n	3ef6 <menu_get_item_string+0x36>
            sprintf(tmp->val_str, "%s", "");
    3f48:	2300      	movs	r3, #0
    3f4a:	7523      	strb	r3, [r4, #20]
            break;
    3f4c:	e7d3      	b.n	3ef6 <menu_get_item_string+0x36>
            ftoe(tmp->val_str, *(float *)tmp->variable);
    3f4e:	6923      	ldr	r3, [r4, #16]
    3f50:	6819      	ldr	r1, [r3, #0]
    3f52:	0020      	movs	r0, r4
    3f54:	3014      	adds	r0, #20
    3f56:	4b2f      	ldr	r3, [pc, #188]	; (4014 <menu_get_item_string+0x154>)
    3f58:	4798      	blx	r3
            break;
    3f5a:	e7cc      	b.n	3ef6 <menu_get_item_string+0x36>
            sprintf(tmp->val_str, "%s", "");
    3f5c:	2300      	movs	r3, #0
    3f5e:	7523      	strb	r3, [r4, #20]
            break;
    3f60:	e7c9      	b.n	3ef6 <menu_get_item_string+0x36>
            tmp->getter(tmp->val_str, *(uint8_t *)tmp->variable);
    3f62:	6923      	ldr	r3, [r4, #16]
    3f64:	7819      	ldrb	r1, [r3, #0]
    3f66:	0020      	movs	r0, r4
    3f68:	3014      	adds	r0, #20
    3f6a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    3f6c:	4798      	blx	r3
            break;
    3f6e:	e7c2      	b.n	3ef6 <menu_get_item_string+0x36>
            tmp->getter(tmp->val_str, *(uint8_t *)tmp->variable);
    3f70:	6923      	ldr	r3, [r4, #16]
    3f72:	7819      	ldrb	r1, [r3, #0]
    3f74:	0020      	movs	r0, r4
    3f76:	3014      	adds	r0, #20
    3f78:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    3f7a:	4798      	blx	r3
            break;
    3f7c:	e7bb      	b.n	3ef6 <menu_get_item_string+0x36>
            tmp->getter(tmp->val_str, (uint8_t *)tmp->variable - dmx_values);
    3f7e:	4926      	ldr	r1, [pc, #152]	; (4018 <menu_get_item_string+0x158>)
    3f80:	6923      	ldr	r3, [r4, #16]
    3f82:	1a59      	subs	r1, r3, r1
    3f84:	b2c9      	uxtb	r1, r1
    3f86:	0020      	movs	r0, r4
    3f88:	3014      	adds	r0, #20
    3f8a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    3f8c:	4798      	blx	r3
            break;
    3f8e:	e7b2      	b.n	3ef6 <menu_get_item_string+0x36>
            tmp->getter(tmp->val_str, *(uint8_t *)tmp->variable);
    3f90:	6923      	ldr	r3, [r4, #16]
    3f92:	7819      	ldrb	r1, [r3, #0]
    3f94:	0020      	movs	r0, r4
    3f96:	3014      	adds	r0, #20
    3f98:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    3f9a:	4798      	blx	r3
            break;
    3f9c:	e7ab      	b.n	3ef6 <menu_get_item_string+0x36>
            sprintf(tmp->val_str, "%s", "ERROR99");
    3f9e:	0020      	movs	r0, r4
    3fa0:	3014      	adds	r0, #20
    3fa2:	2208      	movs	r2, #8
    3fa4:	491d      	ldr	r1, [pc, #116]	; (401c <menu_get_item_string+0x15c>)
    3fa6:	4b19      	ldr	r3, [pc, #100]	; (400c <menu_get_item_string+0x14c>)
    3fa8:	4798      	blx	r3
            break;
    3faa:	e7a4      	b.n	3ef6 <menu_get_item_string+0x36>
            sprintf(item_str, "%c%-10s%9s", '~', tmp->name, tmp->val_str, tmp->units);
    3fac:	1c63      	adds	r3, r4, #1
    3fae:	0022      	movs	r2, r4
    3fb0:	320c      	adds	r2, #12
    3fb2:	9201      	str	r2, [sp, #4]
    3fb4:	3414      	adds	r4, #20
    3fb6:	9400      	str	r4, [sp, #0]
    3fb8:	227e      	movs	r2, #126	; 0x7e
    3fba:	4919      	ldr	r1, [pc, #100]	; (4020 <menu_get_item_string+0x160>)
    3fbc:	a802      	add	r0, sp, #8
    3fbe:	4c10      	ldr	r4, [pc, #64]	; (4000 <menu_get_item_string+0x140>)
    3fc0:	47a0      	blx	r4
    3fc2:	e7aa      	b.n	3f1a <menu_get_item_string+0x5a>
        if(n == m->curr_pos) {
    3fc4:	4b0f      	ldr	r3, [pc, #60]	; (4004 <menu_get_item_string+0x144>)
    3fc6:	5cfb      	ldrb	r3, [r7, r3]
    3fc8:	42b3      	cmp	r3, r6
    3fca:	d009      	beq.n	3fe0 <menu_get_item_string+0x120>
            sprintf(item_str, "%-10s%8s%2s", tmp->name, tmp->val_str, tmp->units);
    3fcc:	0023      	movs	r3, r4
    3fce:	3314      	adds	r3, #20
    3fd0:	1c62      	adds	r2, r4, #1
    3fd2:	340c      	adds	r4, #12
    3fd4:	9400      	str	r4, [sp, #0]
    3fd6:	4913      	ldr	r1, [pc, #76]	; (4024 <menu_get_item_string+0x164>)
    3fd8:	a802      	add	r0, sp, #8
    3fda:	4c09      	ldr	r4, [pc, #36]	; (4000 <menu_get_item_string+0x140>)
    3fdc:	47a0      	blx	r4
    3fde:	e79c      	b.n	3f1a <menu_get_item_string+0x5a>
            sprintf(item_str, "%c%-10s%7s%2s", '~', tmp->name, tmp->val_str, tmp->units);
    3fe0:	1c63      	adds	r3, r4, #1
    3fe2:	0022      	movs	r2, r4
    3fe4:	320c      	adds	r2, #12
    3fe6:	9201      	str	r2, [sp, #4]
    3fe8:	3414      	adds	r4, #20
    3fea:	9400      	str	r4, [sp, #0]
    3fec:	227e      	movs	r2, #126	; 0x7e
    3fee:	490e      	ldr	r1, [pc, #56]	; (4028 <menu_get_item_string+0x168>)
    3ff0:	a802      	add	r0, sp, #8
    3ff2:	4c03      	ldr	r4, [pc, #12]	; (4000 <menu_get_item_string+0x140>)
    3ff4:	47a0      	blx	r4
    3ff6:	e790      	b.n	3f1a <menu_get_item_string+0x5a>
    3ff8:	00009420 	.word	0x00009420
    3ffc:	000094b0 	.word	0x000094b0
    4000:	00008af9 	.word	0x00008af9
    4004:	000002ed 	.word	0x000002ed
    4008:	000094cc 	.word	0x000094cc
    400c:	00008961 	.word	0x00008961
    4010:	000094b4 	.word	0x000094b4
    4014:	00003e6d 	.word	0x00003e6d
    4018:	200025ac 	.word	0x200025ac
    401c:	000094b8 	.word	0x000094b8
    4020:	000094c0 	.word	0x000094c0
    4024:	000094e8 	.word	0x000094e8
    4028:	000094d8 	.word	0x000094d8

0000402c <menu_whole_solo_string>:

void menu_whole_solo_string(MENU *m, char *s) {
    402c:	b5f0      	push	{r4, r5, r6, r7, lr}
    402e:	46de      	mov	lr, fp
    4030:	4657      	mov	r7, sl
    4032:	464e      	mov	r6, r9
    4034:	4645      	mov	r5, r8
    4036:	b5e0      	push	{r5, r6, r7, lr}
    4038:	b08b      	sub	sp, #44	; 0x2c
    403a:	0007      	movs	r7, r0
    403c:	000e      	movs	r6, r1
    return &(m->items[m->curr_pos]);
    403e:	4b2d      	ldr	r3, [pc, #180]	; (40f4 <menu_whole_solo_string+0xc8>)
    4040:	5cc3      	ldrb	r3, [r0, r3]
    4042:	469b      	mov	fp, r3
    char tmp_string[21];
    menu_item *p_to_item = get_p_to_item(m);
    menu_get_item_string(m, tmp_string, m->curr_pos);
    4044:	001a      	movs	r2, r3
    4046:	a904      	add	r1, sp, #16
    4048:	4b2b      	ldr	r3, [pc, #172]	; (40f8 <menu_whole_solo_string+0xcc>)
    404a:	4798      	blx	r3
    404c:	252c      	movs	r5, #44	; 0x2c
    404e:	465b      	mov	r3, fp
    4050:	435d      	muls	r5, r3

    uint8_t string_length = strlen(p_to_item->name);
    4052:	1c6b      	adds	r3, r5, #1
    4054:	18fb      	adds	r3, r7, r3
    4056:	9301      	str	r3, [sp, #4]
    4058:	0018      	movs	r0, r3
    405a:	4c28      	ldr	r4, [pc, #160]	; (40fc <menu_whole_solo_string+0xd0>)
    405c:	47a0      	blx	r4
    405e:	4682      	mov	sl, r0
    uint8_t value_length = strlen(p_to_item->val_str);
    4060:	002b      	movs	r3, r5
    4062:	3314      	adds	r3, #20
    4064:	18fb      	adds	r3, r7, r3
    4066:	9302      	str	r3, [sp, #8]
    4068:	0018      	movs	r0, r3
    406a:	47a0      	blx	r4
    406c:	9003      	str	r0, [sp, #12]
    406e:	ab04      	add	r3, sp, #16
    4070:	a909      	add	r1, sp, #36	; 0x24

    p_to_item->name[sizeof(p_to_item->name) - 1] = 0;
    for(uint8_t i = 0; i < 20; i++)
        tmp_string[i] = ' ';
    4072:	2220      	movs	r2, #32
    4074:	701a      	strb	r2, [r3, #0]
    4076:	3301      	adds	r3, #1
    for(uint8_t i = 0; i < 20; i++)
    4078:	428b      	cmp	r3, r1
    407a:	d1fb      	bne.n	4074 <menu_whole_solo_string+0x48>
    tmp_string[20] = 0;
    407c:	2300      	movs	r3, #0
    407e:	aa04      	add	r2, sp, #16
    4080:	7513      	strb	r3, [r2, #20]
    4082:	0034      	movs	r4, r6
    4084:	3354      	adds	r3, #84	; 0x54
    4086:	4699      	mov	r9, r3
    4088:	44b1      	add	r9, r6
    for(uint8_t i = 0; i < 4; i++)
        memcpy(s + 21 * i, tmp_string, 20);
    408a:	4b1d      	ldr	r3, [pc, #116]	; (4100 <menu_whole_solo_string+0xd4>)
    408c:	4698      	mov	r8, r3
    408e:	464b      	mov	r3, r9
    4090:	46a9      	mov	r9, r5
    4092:	001d      	movs	r5, r3
    4094:	2214      	movs	r2, #20
    4096:	a904      	add	r1, sp, #16
    4098:	0020      	movs	r0, r4
    409a:	47c0      	blx	r8
    409c:	3415      	adds	r4, #21
    for(uint8_t i = 0; i < 4; i++)
    409e:	42ac      	cmp	r4, r5
    40a0:	d1f8      	bne.n	4094 <menu_whole_solo_string+0x68>
    40a2:	464d      	mov	r5, r9

    p_to_item->name[sizeof(p_to_item->name) - 1] = 0;
    40a4:	232c      	movs	r3, #44	; 0x2c
    40a6:	465a      	mov	r2, fp
    40a8:	4353      	muls	r3, r2
    40aa:	18fb      	adds	r3, r7, r3
    40ac:	2200      	movs	r2, #0
    40ae:	72da      	strb	r2, [r3, #11]
    p_to_item->val_str[sizeof(p_to_item->val_str) - 1] = 0;
    40b0:	771a      	strb	r2, [r3, #28]

    memcpy(s + 21, p_to_item->name, string_length);
    40b2:	0030      	movs	r0, r6
    40b4:	3015      	adds	r0, #21
    40b6:	24ff      	movs	r4, #255	; 0xff
    40b8:	4652      	mov	r2, sl
    40ba:	4022      	ands	r2, r4
    40bc:	9901      	ldr	r1, [sp, #4]
    40be:	4b10      	ldr	r3, [pc, #64]	; (4100 <menu_whole_solo_string+0xd4>)
    40c0:	4698      	mov	r8, r3
    40c2:	4798      	blx	r3
    40c4:	9b03      	ldr	r3, [sp, #12]
    40c6:	401c      	ands	r4, r3
    memcpy(s + 42, p_to_item->val_str, value_length);
    40c8:	0030      	movs	r0, r6
    40ca:	302a      	adds	r0, #42	; 0x2a
    40cc:	0022      	movs	r2, r4
    40ce:	9902      	ldr	r1, [sp, #8]
    40d0:	47c0      	blx	r8
    memcpy(s + 42 + value_length + 1, p_to_item->units, strlen(p_to_item->units));
    40d2:	350c      	adds	r5, #12
    40d4:	197f      	adds	r7, r7, r5
    40d6:	0038      	movs	r0, r7
    40d8:	4b08      	ldr	r3, [pc, #32]	; (40fc <menu_whole_solo_string+0xd0>)
    40da:	4798      	blx	r3
    40dc:	0002      	movs	r2, r0
    40de:	342b      	adds	r4, #43	; 0x2b
    40e0:	1930      	adds	r0, r6, r4
    40e2:	0039      	movs	r1, r7
    40e4:	47c0      	blx	r8
}
    40e6:	b00b      	add	sp, #44	; 0x2c
    40e8:	bc3c      	pop	{r2, r3, r4, r5}
    40ea:	4690      	mov	r8, r2
    40ec:	4699      	mov	r9, r3
    40ee:	46a2      	mov	sl, r4
    40f0:	46ab      	mov	fp, r5
    40f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    40f4:	000002ed 	.word	0x000002ed
    40f8:	00003ec1 	.word	0x00003ec1
    40fc:	00008b4d 	.word	0x00008b4d
    4100:	00008961 	.word	0x00008961

00004104 <menu_whole_string>:

void menu_whole_string(MENU *m, char *s, STATE state) {
    4104:	b5f0      	push	{r4, r5, r6, r7, lr}
    4106:	46d6      	mov	lr, sl
    4108:	464f      	mov	r7, r9
    410a:	4646      	mov	r6, r8
    410c:	b5c0      	push	{r6, r7, lr}
    410e:	0006      	movs	r6, r0
    4110:	000f      	movs	r7, r1
    if(state == EDIT) {
    4112:	2a01      	cmp	r2, #1
    4114:	d03e      	beq.n	4194 <menu_whole_string+0x90>
        menu_whole_solo_string(m, s);
    }
    else {
        uint8_t j = 0;
        for(uint8_t i = (m->curr_window_pos); i < (4 + m->curr_window_pos) && i < m->num_of_items; i++) {
    4116:	4b23      	ldr	r3, [pc, #140]	; (41a4 <menu_whole_string+0xa0>)
    4118:	5cc5      	ldrb	r5, [r0, r3]
    411a:	1d2b      	adds	r3, r5, #4
    411c:	429d      	cmp	r5, r3
    411e:	da3c      	bge.n	419a <menu_whole_string+0x96>
    4120:	23bb      	movs	r3, #187	; 0xbb
    4122:	009b      	lsls	r3, r3, #2
    4124:	5cc3      	ldrb	r3, [r0, r3]
    4126:	42ab      	cmp	r3, r5
    4128:	d939      	bls.n	419e <menu_whole_string+0x9a>
    412a:	2300      	movs	r3, #0
            menu_get_item_string(m, s + 21 * (j++), i);
    412c:	4a1e      	ldr	r2, [pc, #120]	; (41a8 <menu_whole_string+0xa4>)
    412e:	4691      	mov	r9, r2
        for(uint8_t i = (m->curr_window_pos); i < (4 + m->curr_window_pos) && i < m->num_of_items; i++) {
    4130:	4a1c      	ldr	r2, [pc, #112]	; (41a4 <menu_whole_string+0xa0>)
    4132:	4690      	mov	r8, r2
    4134:	3a02      	subs	r2, #2
    4136:	4692      	mov	sl, r2
            menu_get_item_string(m, s + 21 * (j++), i);
    4138:	1c5c      	adds	r4, r3, #1
    413a:	b2e4      	uxtb	r4, r4
    413c:	0059      	lsls	r1, r3, #1
    413e:	18cb      	adds	r3, r1, r3
    4140:	00d9      	lsls	r1, r3, #3
    4142:	1ac9      	subs	r1, r1, r3
    4144:	1879      	adds	r1, r7, r1
    4146:	002a      	movs	r2, r5
    4148:	0030      	movs	r0, r6
    414a:	47c8      	blx	r9
        for(uint8_t i = (m->curr_window_pos); i < (4 + m->curr_window_pos) && i < m->num_of_items; i++) {
    414c:	3501      	adds	r5, #1
    414e:	b2ed      	uxtb	r5, r5
    4150:	4643      	mov	r3, r8
    4152:	5cf3      	ldrb	r3, [r6, r3]
    4154:	3304      	adds	r3, #4
    4156:	429d      	cmp	r5, r3
    4158:	da04      	bge.n	4164 <menu_whole_string+0x60>
            menu_get_item_string(m, s + 21 * (j++), i);
    415a:	0023      	movs	r3, r4
        for(uint8_t i = (m->curr_window_pos); i < (4 + m->curr_window_pos) && i < m->num_of_items; i++) {
    415c:	4652      	mov	r2, sl
    415e:	5cb2      	ldrb	r2, [r6, r2]
    4160:	42aa      	cmp	r2, r5
    4162:	d8e9      	bhi.n	4138 <menu_whole_string+0x34>
        }
        for(; j < 4; j++)
    4164:	2c03      	cmp	r4, #3
    4166:	d810      	bhi.n	418a <menu_whole_string+0x86>
            for(uint8_t i = 0; i < 20; i++)
                *(s + 21 * j) = ' ';
    4168:	2114      	movs	r1, #20
    416a:	2020      	movs	r0, #32
    416c:	0062      	lsls	r2, r4, #1
    416e:	1912      	adds	r2, r2, r4
    4170:	00d3      	lsls	r3, r2, #3
    4172:	1a9a      	subs	r2, r3, r2
    4174:	18ba      	adds	r2, r7, r2
    4176:	000b      	movs	r3, r1
    4178:	3b01      	subs	r3, #1
    417a:	b2db      	uxtb	r3, r3
            for(uint8_t i = 0; i < 20; i++)
    417c:	2b00      	cmp	r3, #0
    417e:	d1fb      	bne.n	4178 <menu_whole_string+0x74>
    4180:	7010      	strb	r0, [r2, #0]
        for(; j < 4; j++)
    4182:	3401      	adds	r4, #1
    4184:	b2e4      	uxtb	r4, r4
    4186:	2c03      	cmp	r4, #3
    4188:	d9f0      	bls.n	416c <menu_whole_string+0x68>
    }

}
    418a:	bc1c      	pop	{r2, r3, r4}
    418c:	4690      	mov	r8, r2
    418e:	4699      	mov	r9, r3
    4190:	46a2      	mov	sl, r4
    4192:	bdf0      	pop	{r4, r5, r6, r7, pc}
        menu_whole_solo_string(m, s);
    4194:	4b05      	ldr	r3, [pc, #20]	; (41ac <menu_whole_string+0xa8>)
    4196:	4798      	blx	r3
    4198:	e7f7      	b.n	418a <menu_whole_string+0x86>
        for(uint8_t i = (m->curr_window_pos); i < (4 + m->curr_window_pos) && i < m->num_of_items; i++) {
    419a:	2400      	movs	r4, #0
    419c:	e7e4      	b.n	4168 <menu_whole_string+0x64>
    419e:	2400      	movs	r4, #0
    41a0:	e7e2      	b.n	4168 <menu_whole_string+0x64>
    41a2:	46c0      	nop			; (mov r8, r8)
    41a4:	000002ee 	.word	0x000002ee
    41a8:	00003ec1 	.word	0x00003ec1
    41ac:	0000402d 	.word	0x0000402d

000041b0 <menu_create_item>:

void menu_create_item(menu_item *item, const char *short_name, enum VAR_TYPE typ, const char *units, void *p_variable, float min_val, float max_val, void *getter) {
    41b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    41b2:	0004      	movs	r4, r0
    41b4:	0016      	movs	r6, r2
    41b6:	001f      	movs	r7, r3

    strcpy(item->name, short_name);
    41b8:	3001      	adds	r0, #1
    41ba:	4d08      	ldr	r5, [pc, #32]	; (41dc <menu_create_item+0x2c>)
    41bc:	47a8      	blx	r5
    strcpy(item->units, units);
    41be:	0020      	movs	r0, r4
    41c0:	300c      	adds	r0, #12
    41c2:	0039      	movs	r1, r7
    41c4:	47a8      	blx	r5
    item->type = typ;
    41c6:	7026      	strb	r6, [r4, #0]
    item->variable = p_variable;
    41c8:	9b06      	ldr	r3, [sp, #24]
    41ca:	6123      	str	r3, [r4, #16]
    item->val_max = max_val;
    41cc:	9b08      	ldr	r3, [sp, #32]
    41ce:	6263      	str	r3, [r4, #36]	; 0x24
    item->val_min = min_val;
    41d0:	9b07      	ldr	r3, [sp, #28]
    41d2:	6223      	str	r3, [r4, #32]
    item->getter = getter;
    41d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    41d6:	62a3      	str	r3, [r4, #40]	; 0x28
}
    41d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    41da:	46c0      	nop			; (mov r8, r8)
    41dc:	00008b3d 	.word	0x00008b3d

000041e0 <menu_increment_item>:

void menu_increment_item(MENU *m) {
    41e0:	b570      	push	{r4, r5, r6, lr}
    switch(m->items[m->curr_pos].type) {
    41e2:	4b28      	ldr	r3, [pc, #160]	; (4284 <menu_increment_item+0xa4>)
    41e4:	5cc2      	ldrb	r2, [r0, r3]
    41e6:	232c      	movs	r3, #44	; 0x2c
    41e8:	4353      	muls	r3, r2
    41ea:	5c19      	ldrb	r1, [r3, r0]
    41ec:	290a      	cmp	r1, #10
    41ee:	d848      	bhi.n	4282 <menu_increment_item+0xa2>
    41f0:	008b      	lsls	r3, r1, #2
    41f2:	4925      	ldr	r1, [pc, #148]	; (4288 <menu_increment_item+0xa8>)
    41f4:	58cb      	ldr	r3, [r1, r3]
    41f6:	469f      	mov	pc, r3
        case TYPE_BAR:
        case TYPE_CONFIRM:
        case TYPE_DMX_CH:
        case TYPE_ENUM:
        case TYPE_UINT8:
            if((*(uint8_t *)m->items[m->curr_pos].variable) < (m->items[m->curr_pos].val_max))
    41f8:	242c      	movs	r4, #44	; 0x2c
    41fa:	4354      	muls	r4, r2
    41fc:	1904      	adds	r4, r0, r4
    41fe:	6926      	ldr	r6, [r4, #16]
    4200:	7835      	ldrb	r5, [r6, #0]
    4202:	0028      	movs	r0, r5
    4204:	4b21      	ldr	r3, [pc, #132]	; (428c <menu_increment_item+0xac>)
    4206:	4798      	blx	r3
    4208:	6a61      	ldr	r1, [r4, #36]	; 0x24
    420a:	4b21      	ldr	r3, [pc, #132]	; (4290 <menu_increment_item+0xb0>)
    420c:	4798      	blx	r3
    420e:	2800      	cmp	r0, #0
    4210:	d037      	beq.n	4282 <menu_increment_item+0xa2>
                (*(uint8_t *)m->items[m->curr_pos].variable)++;
    4212:	3501      	adds	r5, #1
    4214:	7035      	strb	r5, [r6, #0]
    4216:	e034      	b.n	4282 <menu_increment_item+0xa2>
            break;
        case TYPE_UINT16:
            if((*(uint16_t *)m->items[m->curr_pos].variable) < (m->items[m->curr_pos].val_max))
    4218:	242c      	movs	r4, #44	; 0x2c
    421a:	4354      	muls	r4, r2
    421c:	1904      	adds	r4, r0, r4
    421e:	6926      	ldr	r6, [r4, #16]
    4220:	8835      	ldrh	r5, [r6, #0]
    4222:	0028      	movs	r0, r5
    4224:	4b19      	ldr	r3, [pc, #100]	; (428c <menu_increment_item+0xac>)
    4226:	4798      	blx	r3
    4228:	6a61      	ldr	r1, [r4, #36]	; 0x24
    422a:	4b19      	ldr	r3, [pc, #100]	; (4290 <menu_increment_item+0xb0>)
    422c:	4798      	blx	r3
    422e:	2800      	cmp	r0, #0
    4230:	d027      	beq.n	4282 <menu_increment_item+0xa2>
                (*(uint16_t *)m->items[m->curr_pos].variable)++;
    4232:	3501      	adds	r5, #1
    4234:	8035      	strh	r5, [r6, #0]
    4236:	e024      	b.n	4282 <menu_increment_item+0xa2>
            break;
        case TYPE_UINT32:
            if((*(uint32_t *)m->items[m->curr_pos].variable) < (m->items[m->curr_pos].val_max))
    4238:	242c      	movs	r4, #44	; 0x2c
    423a:	4354      	muls	r4, r2
    423c:	1904      	adds	r4, r0, r4
    423e:	6926      	ldr	r6, [r4, #16]
    4240:	6835      	ldr	r5, [r6, #0]
    4242:	0028      	movs	r0, r5
    4244:	4b13      	ldr	r3, [pc, #76]	; (4294 <menu_increment_item+0xb4>)
    4246:	4798      	blx	r3
    4248:	6a61      	ldr	r1, [r4, #36]	; 0x24
    424a:	4b11      	ldr	r3, [pc, #68]	; (4290 <menu_increment_item+0xb0>)
    424c:	4798      	blx	r3
    424e:	2800      	cmp	r0, #0
    4250:	d017      	beq.n	4282 <menu_increment_item+0xa2>
                (*(uint32_t *)m->items[m->curr_pos].variable) += 10;
    4252:	350a      	adds	r5, #10
    4254:	6035      	str	r5, [r6, #0]
    4256:	e014      	b.n	4282 <menu_increment_item+0xa2>
            break;
        case TYPE_FLOAT:
            if((*(float *)m->items[m->curr_pos].variable) < (m->items[m->curr_pos].val_max))
    4258:	232c      	movs	r3, #44	; 0x2c
    425a:	435a      	muls	r2, r3
    425c:	1880      	adds	r0, r0, r2
    425e:	6904      	ldr	r4, [r0, #16]
    4260:	6825      	ldr	r5, [r4, #0]
    4262:	6a41      	ldr	r1, [r0, #36]	; 0x24
    4264:	1c28      	adds	r0, r5, #0
    4266:	4b0a      	ldr	r3, [pc, #40]	; (4290 <menu_increment_item+0xb0>)
    4268:	4798      	blx	r3
    426a:	2800      	cmp	r0, #0
    426c:	d009      	beq.n	4282 <menu_increment_item+0xa2>
                (*(float *)m->items[m->curr_pos].variable) += 0.1;
    426e:	1c28      	adds	r0, r5, #0
    4270:	4b09      	ldr	r3, [pc, #36]	; (4298 <menu_increment_item+0xb8>)
    4272:	4798      	blx	r3
    4274:	4a09      	ldr	r2, [pc, #36]	; (429c <menu_increment_item+0xbc>)
    4276:	4b0a      	ldr	r3, [pc, #40]	; (42a0 <menu_increment_item+0xc0>)
    4278:	4d0a      	ldr	r5, [pc, #40]	; (42a4 <menu_increment_item+0xc4>)
    427a:	47a8      	blx	r5
    427c:	4b0a      	ldr	r3, [pc, #40]	; (42a8 <menu_increment_item+0xc8>)
    427e:	4798      	blx	r3
    4280:	6020      	str	r0, [r4, #0]
            break;
        default:
            break;
    }
}
    4282:	bd70      	pop	{r4, r5, r6, pc}
    4284:	000002ed 	.word	0x000002ed
    4288:	0000944c 	.word	0x0000944c
    428c:	00006d41 	.word	0x00006d41
    4290:	000063a5 	.word	0x000063a5
    4294:	00006de1 	.word	0x00006de1
    4298:	000086f9 	.word	0x000086f9
    429c:	9999999a 	.word	0x9999999a
    42a0:	3fb99999 	.word	0x3fb99999
    42a4:	00006e6d 	.word	0x00006e6d
    42a8:	0000879d 	.word	0x0000879d

000042ac <menu_decrement_item>:
void menu_decrement_item(MENU *m) {
    42ac:	b570      	push	{r4, r5, r6, lr}
    42ae:	0004      	movs	r4, r0
    switch(m->items[m->curr_pos].type) {
    42b0:	4b2f      	ldr	r3, [pc, #188]	; (4370 <menu_decrement_item+0xc4>)
    42b2:	5cc2      	ldrb	r2, [r0, r3]
    42b4:	232c      	movs	r3, #44	; 0x2c
    42b6:	4353      	muls	r3, r2
    42b8:	5c19      	ldrb	r1, [r3, r0]
    42ba:	290a      	cmp	r1, #10
    42bc:	d854      	bhi.n	4368 <menu_decrement_item+0xbc>
    42be:	008b      	lsls	r3, r1, #2
    42c0:	492c      	ldr	r1, [pc, #176]	; (4374 <menu_decrement_item+0xc8>)
    42c2:	58cb      	ldr	r3, [r1, r3]
    42c4:	469f      	mov	pc, r3
        case TYPE_CONFIRM:
        case TYPE_BAR:
        case TYPE_ENUM:
        case TYPE_DMX_CH:
        case TYPE_UINT8:
            if((*(uint8_t *)m->items[m->curr_pos].variable) > (m->items[m->curr_pos].val_min))
    42c6:	232c      	movs	r3, #44	; 0x2c
    42c8:	435a      	muls	r2, r3
    42ca:	1884      	adds	r4, r0, r2
    42cc:	6926      	ldr	r6, [r4, #16]
    42ce:	7835      	ldrb	r5, [r6, #0]
    42d0:	0028      	movs	r0, r5
    42d2:	4b29      	ldr	r3, [pc, #164]	; (4378 <menu_decrement_item+0xcc>)
    42d4:	4798      	blx	r3
    42d6:	6a21      	ldr	r1, [r4, #32]
    42d8:	4b28      	ldr	r3, [pc, #160]	; (437c <menu_decrement_item+0xd0>)
    42da:	4798      	blx	r3
    42dc:	2800      	cmp	r0, #0
    42de:	d043      	beq.n	4368 <menu_decrement_item+0xbc>
                (*(uint8_t *)m->items[m->curr_pos].variable)--;
    42e0:	3d01      	subs	r5, #1
    42e2:	7035      	strb	r5, [r6, #0]
    42e4:	e040      	b.n	4368 <menu_decrement_item+0xbc>
            break;
        case  TYPE_UINT16:
            if((*(uint16_t *)m->items[m->curr_pos].variable) > (m->items[m->curr_pos].val_min))
    42e6:	232c      	movs	r3, #44	; 0x2c
    42e8:	435a      	muls	r2, r3
    42ea:	1884      	adds	r4, r0, r2
    42ec:	6926      	ldr	r6, [r4, #16]
    42ee:	8835      	ldrh	r5, [r6, #0]
    42f0:	0028      	movs	r0, r5
    42f2:	4b21      	ldr	r3, [pc, #132]	; (4378 <menu_decrement_item+0xcc>)
    42f4:	4798      	blx	r3
    42f6:	6a21      	ldr	r1, [r4, #32]
    42f8:	4b20      	ldr	r3, [pc, #128]	; (437c <menu_decrement_item+0xd0>)
    42fa:	4798      	blx	r3
    42fc:	2800      	cmp	r0, #0
    42fe:	d033      	beq.n	4368 <menu_decrement_item+0xbc>
                (*(uint16_t *)m->items[m->curr_pos].variable)--;
    4300:	3d01      	subs	r5, #1
    4302:	8035      	strh	r5, [r6, #0]
    4304:	e030      	b.n	4368 <menu_decrement_item+0xbc>
            break;
        case  TYPE_UINT32:
            if((*(uint32_t *)m->items[m->curr_pos].variable) > (m->items[m->curr_pos].val_min))
    4306:	232c      	movs	r3, #44	; 0x2c
    4308:	435a      	muls	r2, r3
    430a:	1884      	adds	r4, r0, r2
    430c:	6926      	ldr	r6, [r4, #16]
    430e:	6835      	ldr	r5, [r6, #0]
    4310:	0028      	movs	r0, r5
    4312:	4b1b      	ldr	r3, [pc, #108]	; (4380 <menu_decrement_item+0xd4>)
    4314:	4798      	blx	r3
    4316:	6a21      	ldr	r1, [r4, #32]
    4318:	4b18      	ldr	r3, [pc, #96]	; (437c <menu_decrement_item+0xd0>)
    431a:	4798      	blx	r3
    431c:	2800      	cmp	r0, #0
    431e:	d023      	beq.n	4368 <menu_decrement_item+0xbc>
                (*(uint32_t *)m->items[m->curr_pos].variable) -= 10;
    4320:	3d0a      	subs	r5, #10
    4322:	6035      	str	r5, [r6, #0]
    4324:	e020      	b.n	4368 <menu_decrement_item+0xbc>
            break;
        case  TYPE_FLOAT:
            if((*(float *)m->items[m->curr_pos].variable) > (m->items[m->curr_pos].val_min))
    4326:	232c      	movs	r3, #44	; 0x2c
    4328:	435a      	muls	r2, r3
    432a:	1882      	adds	r2, r0, r2
    432c:	6915      	ldr	r5, [r2, #16]
    432e:	682e      	ldr	r6, [r5, #0]
    4330:	6a11      	ldr	r1, [r2, #32]
    4332:	1c30      	adds	r0, r6, #0
    4334:	4b11      	ldr	r3, [pc, #68]	; (437c <menu_decrement_item+0xd0>)
    4336:	4798      	blx	r3
    4338:	2800      	cmp	r0, #0
    433a:	d009      	beq.n	4350 <menu_decrement_item+0xa4>
                (*(float *)m->items[m->curr_pos].variable) -= 0.1;
    433c:	1c30      	adds	r0, r6, #0
    433e:	4b11      	ldr	r3, [pc, #68]	; (4384 <menu_decrement_item+0xd8>)
    4340:	4798      	blx	r3
    4342:	4a11      	ldr	r2, [pc, #68]	; (4388 <menu_decrement_item+0xdc>)
    4344:	4b11      	ldr	r3, [pc, #68]	; (438c <menu_decrement_item+0xe0>)
    4346:	4e12      	ldr	r6, [pc, #72]	; (4390 <menu_decrement_item+0xe4>)
    4348:	47b0      	blx	r6
    434a:	4b12      	ldr	r3, [pc, #72]	; (4394 <menu_decrement_item+0xe8>)
    434c:	4798      	blx	r3
    434e:	6028      	str	r0, [r5, #0]
            if(*(float *)m->items[m->curr_pos].variable < 0)
    4350:	4b07      	ldr	r3, [pc, #28]	; (4370 <menu_decrement_item+0xc4>)
    4352:	5ce2      	ldrb	r2, [r4, r3]
    4354:	232c      	movs	r3, #44	; 0x2c
    4356:	4353      	muls	r3, r2
    4358:	18e4      	adds	r4, r4, r3
    435a:	6924      	ldr	r4, [r4, #16]
    435c:	2100      	movs	r1, #0
    435e:	6820      	ldr	r0, [r4, #0]
    4360:	4b0d      	ldr	r3, [pc, #52]	; (4398 <menu_decrement_item+0xec>)
    4362:	4798      	blx	r3
    4364:	2800      	cmp	r0, #0
    4366:	d100      	bne.n	436a <menu_decrement_item+0xbe>
                *(float *)m->items[m->curr_pos].variable = 0;
            break;
        default:
            break;
    }
}
    4368:	bd70      	pop	{r4, r5, r6, pc}
                *(float *)m->items[m->curr_pos].variable = 0;
    436a:	2300      	movs	r3, #0
    436c:	6023      	str	r3, [r4, #0]
}
    436e:	e7fb      	b.n	4368 <menu_decrement_item+0xbc>
    4370:	000002ed 	.word	0x000002ed
    4374:	00009478 	.word	0x00009478
    4378:	00006d41 	.word	0x00006d41
    437c:	000063cd 	.word	0x000063cd
    4380:	00006de1 	.word	0x00006de1
    4384:	000086f9 	.word	0x000086f9
    4388:	9999999a 	.word	0x9999999a
    438c:	3fb99999 	.word	0x3fb99999
    4390:	00007ff5 	.word	0x00007ff5
    4394:	0000879d 	.word	0x0000879d
    4398:	000063a5 	.word	0x000063a5

0000439c <menu_swap>:
void menu_swap(MENU **dest, MENU *src) {
    *dest = src;
    439c:	6001      	str	r1, [r0, #0]
    439e:	4770      	bx	lr

000043a0 <USB_transmit_enable>:
void USB_recieve_disable(void) {
    USB_flags &= ~(1 << USB_RXR);
}

void USB_transmit_enable(void) {
    USB_flags |= (1 << USB_TXR);
    43a0:	4a02      	ldr	r2, [pc, #8]	; (43ac <USB_transmit_enable+0xc>)
    43a2:	7813      	ldrb	r3, [r2, #0]
    43a4:	2104      	movs	r1, #4
    43a6:	430b      	orrs	r3, r1
    43a8:	7013      	strb	r3, [r2, #0]
}
    43aa:	4770      	bx	lr
    43ac:	20002238 	.word	0x20002238

000043b0 <USB_transmit_callback>:
void USB_transmit_callback(struct usart_module *const usart_module) {
    43b0:	b510      	push	{r4, lr}
    USB_transmit_enable();
    43b2:	4b01      	ldr	r3, [pc, #4]	; (43b8 <USB_transmit_callback+0x8>)
    43b4:	4798      	blx	r3
}
    43b6:	bd10      	pop	{r4, pc}
    43b8:	000043a1 	.word	0x000043a1

000043bc <USB_transmit_disable>:

void USB_transmit_disable(void) {
    USB_flags &= ~(1 << USB_TXR);
    43bc:	4a02      	ldr	r2, [pc, #8]	; (43c8 <USB_transmit_disable+0xc>)
    43be:	7813      	ldrb	r3, [r2, #0]
    43c0:	2104      	movs	r1, #4
    43c2:	438b      	bics	r3, r1
    43c4:	7013      	strb	r3, [r2, #0]
}
    43c6:	4770      	bx	lr
    43c8:	20002238 	.word	0x20002238

000043cc <USB_SendMessage>:
void USB_SendMessage (uint8_t *p_string, uint16_t length) {
    43cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    43ce:	0004      	movs	r4, r0
    43d0:	000d      	movs	r5, r1
uint8_t USB_transmit_ready(void) {
    return USB_flags & (1 << USB_TXR);
    43d2:	490b      	ldr	r1, [pc, #44]	; (4400 <USB_SendMessage+0x34>)
    43d4:	2204      	movs	r2, #4
    43d6:	780b      	ldrb	r3, [r1, #0]
    while(!USB_transmit_ready());
    43d8:	4213      	tst	r3, r2
    43da:	d0fc      	beq.n	43d6 <USB_SendMessage+0xa>
    USB_transmit_disable();
    43dc:	4b09      	ldr	r3, [pc, #36]	; (4404 <USB_SendMessage+0x38>)
    43de:	4798      	blx	r3
    while(usart_write_buffer_job(&USB_instance, p_string, length) != STATUS_OK);
    43e0:	4e09      	ldr	r6, [pc, #36]	; (4408 <USB_SendMessage+0x3c>)
    43e2:	4f0a      	ldr	r7, [pc, #40]	; (440c <USB_SendMessage+0x40>)
    43e4:	002a      	movs	r2, r5
    43e6:	0021      	movs	r1, r4
    43e8:	0030      	movs	r0, r6
    43ea:	47b8      	blx	r7
    43ec:	2800      	cmp	r0, #0
    43ee:	d1f9      	bne.n	43e4 <USB_SendMessage+0x18>
    while(usart_get_job_status(&USB_instance, USART_TRANSCEIVER_TX) != STATUS_OK);
    43f0:	4d05      	ldr	r5, [pc, #20]	; (4408 <USB_SendMessage+0x3c>)
    43f2:	4c07      	ldr	r4, [pc, #28]	; (4410 <USB_SendMessage+0x44>)
    43f4:	2101      	movs	r1, #1
    43f6:	0028      	movs	r0, r5
    43f8:	47a0      	blx	r4
    43fa:	2800      	cmp	r0, #0
    43fc:	d1fa      	bne.n	43f4 <USB_SendMessage+0x28>
}
    43fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4400:	20002238 	.word	0x20002238
    4404:	000043bd 	.word	0x000043bd
    4408:	20002204 	.word	0x20002204
    440c:	0000331d 	.word	0x0000331d
    4410:	0000333d 	.word	0x0000333d

00004414 <configure_USB_callbacks>:

unsigned char *USB_get_rx_buf(void) {
    return USB_RxBuf;
}

void configure_USB_callbacks(void) {
    4414:	b510      	push	{r4, lr}
    usart_register_callback(&USB_instance, USB_transmit_callback, USART_CALLBACK_BUFFER_TRANSMITTED);
    4416:	4c08      	ldr	r4, [pc, #32]	; (4438 <configure_USB_callbacks+0x24>)
    4418:	2200      	movs	r2, #0
    441a:	4908      	ldr	r1, [pc, #32]	; (443c <configure_USB_callbacks+0x28>)
    441c:	0020      	movs	r0, r4
    441e:	4b08      	ldr	r3, [pc, #32]	; (4440 <configure_USB_callbacks+0x2c>)
    4420:	4798      	blx	r3
{
	/* Sanity check arguments */
	Assert(module);

	/* Enable callback */
	module->callback_enable_mask |= (1 << callback_type);
    4422:	2231      	movs	r2, #49	; 0x31
    4424:	5ca3      	ldrb	r3, [r4, r2]
    4426:	2101      	movs	r1, #1
    4428:	430b      	orrs	r3, r1
    442a:	54a3      	strb	r3, [r4, r2]
    //usart_register_callback(&USB_instance, usart_read_callback, USART_CALLBACK_BUFFER_RECEIVED);

    usart_enable_callback(&USB_instance, USART_CALLBACK_BUFFER_TRANSMITTED);
    //usart_enable_callback(&USB_instance, USART_CALLBACK_BUFFER_RECEIVED);
    usart_read_job(&USB_instance, &c);
    442c:	4905      	ldr	r1, [pc, #20]	; (4444 <configure_USB_callbacks+0x30>)
    442e:	0020      	movs	r0, r4
    4430:	4b05      	ldr	r3, [pc, #20]	; (4448 <configure_USB_callbacks+0x34>)
    4432:	4798      	blx	r3
}
    4434:	bd10      	pop	{r4, pc}
    4436:	46c0      	nop			; (mov r8, r8)
    4438:	20002204 	.word	0x20002204
    443c:	000043b1 	.word	0x000043b1
    4440:	000032f5 	.word	0x000032f5
    4444:	20001d2a 	.word	0x20001d2a
    4448:	0000330d 	.word	0x0000330d

0000444c <configure_USB>:
void configure_USB(void) {
    444c:	b530      	push	{r4, r5, lr}
    444e:	b093      	sub	sp, #76	; 0x4c
	config->data_order       = USART_DATAORDER_LSB;
    4450:	2380      	movs	r3, #128	; 0x80
    4452:	05db      	lsls	r3, r3, #23
    4454:	9300      	str	r3, [sp, #0]
	config->transfer_mode    = USART_TRANSFER_ASYNCHRONOUSLY;
    4456:	2300      	movs	r3, #0
    4458:	9301      	str	r3, [sp, #4]
	config->parity           = USART_PARITY_NONE;
    445a:	22ff      	movs	r2, #255	; 0xff
    445c:	4669      	mov	r1, sp
    445e:	810a      	strh	r2, [r1, #8]
	config->stopbits         = USART_STOPBITS_1;
    4460:	728b      	strb	r3, [r1, #10]
	config->character_size   = USART_CHARACTER_SIZE_8BIT;
    4462:	72cb      	strb	r3, [r1, #11]
	config->receiver_enable  = true;
    4464:	2101      	movs	r1, #1
    4466:	222c      	movs	r2, #44	; 0x2c
    4468:	4668      	mov	r0, sp
    446a:	5481      	strb	r1, [r0, r2]
	config->transmitter_enable = true;
    446c:	3201      	adds	r2, #1
    446e:	5481      	strb	r1, [r0, r2]
	config->clock_polarity_inverted = false;
    4470:	3201      	adds	r2, #1
    4472:	5483      	strb	r3, [r0, r2]
	config->use_external_clock = false;
    4474:	3201      	adds	r2, #1
    4476:	5483      	strb	r3, [r0, r2]
	config->ext_clock_freq   = 0;
    4478:	930c      	str	r3, [sp, #48]	; 0x30
	config->run_in_standby   = false;
    447a:	3205      	adds	r2, #5
    447c:	5483      	strb	r3, [r0, r2]
	config->sample_adjustment     = USART_SAMPLE_ADJUSTMENT_7_8_9;
    447e:	9305      	str	r3, [sp, #20]
	config->sample_rate           = USART_SAMPLE_RATE_16X_ARITHMETIC;
    4480:	2200      	movs	r2, #0
    4482:	8203      	strh	r3, [r0, #16]
	config->lin_slave_enable      = false;
    4484:	76c2      	strb	r2, [r0, #27]
	config->lin_node = LIN_INVALID_MODE;
    4486:	9307      	str	r3, [sp, #28]
	config->lin_header_delay = LIN_MASTER_HEADER_DELAY_0;
    4488:	8403      	strh	r3, [r0, #32]
	config->lin_break_length = LIN_MASTER_BREAK_LENGTH_13_BIT;
    448a:	8443      	strh	r3, [r0, #34]	; 0x22
	config->immediate_buffer_overflow_notification  = false;
    448c:	7602      	strb	r2, [r0, #24]
	config->encoding_format_enable                  = false;
    448e:	7642      	strb	r2, [r0, #25]
	config->receive_pulse_length                    = 19;
    4490:	2313      	movs	r3, #19
    4492:	7683      	strb	r3, [r0, #26]
	config->collision_detection_enable              = false;
    4494:	3313      	adds	r3, #19
    4496:	54c2      	strb	r2, [r0, r3]
	config->rs485_guard_time = RS485_GUARD_TIME_0_BIT;
    4498:	3b01      	subs	r3, #1
    449a:	54c2      	strb	r2, [r0, r3]
    config_usart.baudrate    =					250000;
    449c:	4b2f      	ldr	r3, [pc, #188]	; (455c <configure_USB+0x110>)
    449e:	930a      	str	r3, [sp, #40]	; 0x28
    config_usart.mux_setting =					USART_RX_1_TX_0_XCK_1;
    44a0:	2380      	movs	r3, #128	; 0x80
    44a2:	035b      	lsls	r3, r3, #13
    44a4:	9303      	str	r3, [sp, #12]
    config_usart.pinmux_pad0 =					PINMUX_PA16C_SERCOM1_PAD0;
    44a6:	4b2e      	ldr	r3, [pc, #184]	; (4560 <configure_USB+0x114>)
    44a8:	930e      	str	r3, [sp, #56]	; 0x38
    config_usart.pinmux_pad1 =					PINMUX_PA17C_SERCOM1_PAD1;
    44aa:	4b2e      	ldr	r3, [pc, #184]	; (4564 <configure_USB+0x118>)
    44ac:	930f      	str	r3, [sp, #60]	; 0x3c
    config_usart.pinmux_pad2 =					PINMUX_UNUSED;
    44ae:	2301      	movs	r3, #1
    44b0:	425b      	negs	r3, r3
    44b2:	9310      	str	r3, [sp, #64]	; 0x40
    config_usart.pinmux_pad3 =					PINMUX_UNUSED;
    44b4:	9311      	str	r3, [sp, #68]	; 0x44
    config_usart.generator_source =				GCLK_GENERATOR_3;
    44b6:	2203      	movs	r2, #3
    44b8:	3336      	adds	r3, #54	; 0x36
    44ba:	54c2      	strb	r2, [r0, r3]
    config_usart.start_frame_detection_enable = true;
    44bc:	3b11      	subs	r3, #17
    44be:	54c1      	strb	r1, [r0, r3]
    while (usart_init(&USB_instance, USB_MODULE, &config_usart) != STATUS_OK);
    44c0:	4d29      	ldr	r5, [pc, #164]	; (4568 <configure_USB+0x11c>)
    44c2:	4c2a      	ldr	r4, [pc, #168]	; (456c <configure_USB+0x120>)
    44c4:	466a      	mov	r2, sp
    44c6:	492a      	ldr	r1, [pc, #168]	; (4570 <configure_USB+0x124>)
    44c8:	0028      	movs	r0, r5
    44ca:	47a0      	blx	r4
    44cc:	2800      	cmp	r0, #0
    44ce:	d1f9      	bne.n	44c4 <configure_USB+0x78>
	SercomUsart *const usart_hw = &(module->hw->USART);
    44d0:	4d25      	ldr	r5, [pc, #148]	; (4568 <configure_USB+0x11c>)
    44d2:	682c      	ldr	r4, [r5, #0]
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    44d4:	0020      	movs	r0, r4
    44d6:	4b27      	ldr	r3, [pc, #156]	; (4574 <configure_USB+0x128>)
    44d8:	4798      	blx	r3
    44da:	231f      	movs	r3, #31
    44dc:	4018      	ands	r0, r3
    44de:	3b1e      	subs	r3, #30
    44e0:	4083      	lsls	r3, r0
    44e2:	4a25      	ldr	r2, [pc, #148]	; (4578 <configure_USB+0x12c>)
    44e4:	6013      	str	r3, [r2, #0]
	SercomUsart *const usart_hw = &(module->hw->USART);
    44e6:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
    44e8:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    44ea:	2b00      	cmp	r3, #0
    44ec:	d1fc      	bne.n	44e8 <configure_USB+0x9c>
	usart_hw->CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    44ee:	6823      	ldr	r3, [r4, #0]
    44f0:	2202      	movs	r2, #2
    44f2:	4313      	orrs	r3, r2
    44f4:	6023      	str	r3, [r4, #0]
	SercomUsart *const usart_hw = &(module->hw->USART);
    44f6:	4b1c      	ldr	r3, [pc, #112]	; (4568 <configure_USB+0x11c>)
    44f8:	681b      	ldr	r3, [r3, #0]
	return (usart_hw->SYNCBUSY.reg);
    44fa:	69da      	ldr	r2, [r3, #28]
	while (usart_is_syncing(module)) {
    44fc:	2a00      	cmp	r2, #0
    44fe:	d1fc      	bne.n	44fa <configure_USB+0xae>
			usart_hw->CTRLB.reg |= SERCOM_USART_CTRLB_TXEN;
    4500:	6859      	ldr	r1, [r3, #4]
    4502:	2280      	movs	r2, #128	; 0x80
    4504:	0252      	lsls	r2, r2, #9
    4506:	430a      	orrs	r2, r1
    4508:	605a      	str	r2, [r3, #4]
			module->transmitter_enabled = true;
    450a:	2101      	movs	r1, #1
    450c:	4a16      	ldr	r2, [pc, #88]	; (4568 <configure_USB+0x11c>)
    450e:	71d1      	strb	r1, [r2, #7]
	return (usart_hw->SYNCBUSY.reg);
    4510:	69da      	ldr	r2, [r3, #28]
	while (usart_is_syncing(module)) {
    4512:	2a00      	cmp	r2, #0
    4514:	d1fc      	bne.n	4510 <configure_USB+0xc4>
	return (usart_hw->SYNCBUSY.reg);
    4516:	69da      	ldr	r2, [r3, #28]
	while (usart_is_syncing(module)) {
    4518:	2a00      	cmp	r2, #0
    451a:	d1fc      	bne.n	4516 <configure_USB+0xca>
			usart_hw->CTRLB.reg |= SERCOM_USART_CTRLB_RXEN;
    451c:	6859      	ldr	r1, [r3, #4]
    451e:	2280      	movs	r2, #128	; 0x80
    4520:	0292      	lsls	r2, r2, #10
    4522:	430a      	orrs	r2, r1
    4524:	605a      	str	r2, [r3, #4]
			module->receiver_enabled = true;
    4526:	2101      	movs	r1, #1
    4528:	4a0f      	ldr	r2, [pc, #60]	; (4568 <configure_USB+0x11c>)
    452a:	7191      	strb	r1, [r2, #6]
	return (usart_hw->SYNCBUSY.reg);
    452c:	69da      	ldr	r2, [r3, #28]
	while (usart_is_syncing(module)) {
    452e:	2a00      	cmp	r2, #0
    4530:	d1fc      	bne.n	452c <configure_USB+0xe0>
    delay_ms(1);
    4532:	2000      	movs	r0, #0
    4534:	4b11      	ldr	r3, [pc, #68]	; (457c <configure_USB+0x130>)
    4536:	4798      	blx	r3
    4538:	0002      	movs	r2, r0
    453a:	2300      	movs	r3, #0
    453c:	4810      	ldr	r0, [pc, #64]	; (4580 <configure_USB+0x134>)
    453e:	2100      	movs	r1, #0
    4540:	1880      	adds	r0, r0, r2
    4542:	4159      	adcs	r1, r3
    4544:	4a0f      	ldr	r2, [pc, #60]	; (4584 <configure_USB+0x138>)
    4546:	2300      	movs	r3, #0
    4548:	4c0f      	ldr	r4, [pc, #60]	; (4588 <configure_USB+0x13c>)
    454a:	47a0      	blx	r4
    454c:	4b0f      	ldr	r3, [pc, #60]	; (458c <configure_USB+0x140>)
    454e:	4798      	blx	r3
    configure_USB_callbacks();
    4550:	4b0f      	ldr	r3, [pc, #60]	; (4590 <configure_USB+0x144>)
    4552:	4798      	blx	r3
    USB_transmit_enable();
    4554:	4b0f      	ldr	r3, [pc, #60]	; (4594 <configure_USB+0x148>)
    4556:	4798      	blx	r3
}
    4558:	b013      	add	sp, #76	; 0x4c
    455a:	bd30      	pop	{r4, r5, pc}
    455c:	0003d090 	.word	0x0003d090
    4560:	00100002 	.word	0x00100002
    4564:	00110002 	.word	0x00110002
    4568:	20002204 	.word	0x20002204
    456c:	00002ebd 	.word	0x00002ebd
    4570:	42000800 	.word	0x42000800
    4574:	00003535 	.word	0x00003535
    4578:	e000e100 	.word	0xe000e100
    457c:	00004e5d 	.word	0x00004e5d
    4580:	00001b57 	.word	0x00001b57
    4584:	00001b58 	.word	0x00001b58
    4588:	000063f5 	.word	0x000063f5
    458c:	20000001 	.word	0x20000001
    4590:	00004415 	.word	0x00004415
    4594:	000043a1 	.word	0x000043a1

00004598 <MIDI_send_message>:
    USB_MODULE->USART.CTRLA.reg |= (1 << SERCOM_USART_CTRLA_ENABLE_Pos);
    while(USB_MODULE->USART.SYNCBUSY.reg);

    USB_transmit_enable();
}
void MIDI_send_message(uint8_t midi_ch, uint8_t value, uint8_t velocity) {
    4598:	b500      	push	{lr}
    459a:	b083      	sub	sp, #12
    uint8_t midi_packet[3] = {midi_ch, value, velocity};
    459c:	ab01      	add	r3, sp, #4
    459e:	7018      	strb	r0, [r3, #0]
    45a0:	7059      	strb	r1, [r3, #1]
    45a2:	709a      	strb	r2, [r3, #2]
    USB_SendMessage(midi_packet, 3);
    45a4:	2103      	movs	r1, #3
    45a6:	0018      	movs	r0, r3
    45a8:	4b01      	ldr	r3, [pc, #4]	; (45b0 <MIDI_send_message+0x18>)
    45aa:	4798      	blx	r3
}
    45ac:	b003      	add	sp, #12
    45ae:	bd00      	pop	{pc}
    45b0:	000043cd 	.word	0x000043cd

000045b4 <MIDI_send_note_on>:
void MIDI_send_note_on(uint8_t midi_ch, uint8_t note, uint8_t velocity) {
    45b4:	b510      	push	{r4, lr}
    if(midi_ch > 15)return;
    45b6:	280f      	cmp	r0, #15
    45b8:	d900      	bls.n	45bc <MIDI_send_note_on+0x8>
    MIDI_send_message(MIDI_NOTE_ON_MASK | (midi_ch - 1), note, velocity >> 1);
}
    45ba:	bd10      	pop	{r4, pc}
    MIDI_send_message(MIDI_NOTE_ON_MASK | (midi_ch - 1), note, velocity >> 1);
    45bc:	0852      	lsrs	r2, r2, #1
    45be:	3801      	subs	r0, #1
    45c0:	2370      	movs	r3, #112	; 0x70
    45c2:	425b      	negs	r3, r3
    45c4:	4318      	orrs	r0, r3
    45c6:	b2c0      	uxtb	r0, r0
    45c8:	4b01      	ldr	r3, [pc, #4]	; (45d0 <MIDI_send_note_on+0x1c>)
    45ca:	4798      	blx	r3
    45cc:	e7f5      	b.n	45ba <MIDI_send_note_on+0x6>
    45ce:	46c0      	nop			; (mov r8, r8)
    45d0:	00004599 	.word	0x00004599

000045d4 <millis>:
volatile uint32_t encoder_timer = 0;
volatile uint32_t last_tick_time = 0;
ENCODER encoder;
ENCODER_POS encoder_pos;
uint32_t millis(void) {
    return proc_millis;
    45d4:	4b01      	ldr	r3, [pc, #4]	; (45dc <millis+0x8>)
    45d6:	6818      	ldr	r0, [r3, #0]
}
    45d8:	4770      	bx	lr
    45da:	46c0      	nop			; (mov r8, r8)
    45dc:	2000010c 	.word	0x2000010c

000045e0 <get_encoder_status>:

ENCODER get_encoder_status(void) {
    return encoder;
    45e0:	4b01      	ldr	r3, [pc, #4]	; (45e8 <get_encoder_status+0x8>)
    45e2:	7818      	ldrb	r0, [r3, #0]
    encoder_pos = POS_NONE;
    encoder = IDLE;
}
    45e4:	4770      	bx	lr
    45e6:	46c0      	nop			; (mov r8, r8)
    45e8:	20002448 	.word	0x20002448

000045ec <process_encoder>:
	return (port_base->IN.reg & pin_mask);
    45ec:	4b26      	ldr	r3, [pc, #152]	; (4688 <process_encoder+0x9c>)
    45ee:	6a1a      	ldr	r2, [r3, #32]
    45f0:	6a19      	ldr	r1, [r3, #32]

void process_encoder(void) {
    uint8_t status = 0;
    status |= (!port_pin_get_input_level(PIN_ENC_B)) << 0;
    status |= (!port_pin_get_input_level(PIN_ENC_A)) << 1;
    45f2:	0dc9      	lsrs	r1, r1, #23
    45f4:	2001      	movs	r0, #1
    45f6:	0003      	movs	r3, r0
    45f8:	438b      	bics	r3, r1
    45fa:	005b      	lsls	r3, r3, #1
    status |= (!port_pin_get_input_level(PIN_ENC_B)) << 0;
    45fc:	0d92      	lsrs	r2, r2, #22
    45fe:	4042      	eors	r2, r0
    4600:	2101      	movs	r1, #1
    4602:	400a      	ands	r2, r1
    status |= (!port_pin_get_input_level(PIN_ENC_A)) << 1;
    4604:	4313      	orrs	r3, r2

    switch(status) {
    4606:	2b01      	cmp	r3, #1
    4608:	d009      	beq.n	461e <process_encoder+0x32>
    460a:	2b02      	cmp	r3, #2
    460c:	d021      	beq.n	4652 <process_encoder+0x66>
    460e:	2b00      	cmp	r3, #0
    4610:	d000      	beq.n	4614 <process_encoder+0x28>
            break;
        default:
            break;
    }

}
    4612:	4770      	bx	lr
            encoder_pos = POS_NONE;
    4614:	4a1d      	ldr	r2, [pc, #116]	; (468c <process_encoder+0xa0>)
    4616:	7013      	strb	r3, [r2, #0]
            encoder = IDLE;
    4618:	4a1d      	ldr	r2, [pc, #116]	; (4690 <process_encoder+0xa4>)
    461a:	7013      	strb	r3, [r2, #0]
            break;
    461c:	e7f9      	b.n	4612 <process_encoder+0x26>
            if(encoder_pos == POS_NONE) {
    461e:	4b1b      	ldr	r3, [pc, #108]	; (468c <process_encoder+0xa0>)
    4620:	781b      	ldrb	r3, [r3, #0]
    4622:	2b00      	cmp	r3, #0
    4624:	d008      	beq.n	4638 <process_encoder+0x4c>
            if(encoder_pos == POS_B) {
    4626:	2b02      	cmp	r3, #2
    4628:	d1f3      	bne.n	4612 <process_encoder+0x26>
                encoder_pos = POS_NONE;
    462a:	2200      	movs	r2, #0
    462c:	4b17      	ldr	r3, [pc, #92]	; (468c <process_encoder+0xa0>)
    462e:	701a      	strb	r2, [r3, #0]
                encoder = FORWARD;
    4630:	3201      	adds	r2, #1
    4632:	4b17      	ldr	r3, [pc, #92]	; (4690 <process_encoder+0xa4>)
    4634:	701a      	strb	r2, [r3, #0]
    4636:	e7ec      	b.n	4612 <process_encoder+0x26>
                encoder_pos = POS_A;
    4638:	2201      	movs	r2, #1
    463a:	4b14      	ldr	r3, [pc, #80]	; (468c <process_encoder+0xa0>)
    463c:	701a      	strb	r2, [r3, #0]
    return proc_millis;
    463e:	4915      	ldr	r1, [pc, #84]	; (4694 <process_encoder+0xa8>)
    4640:	680b      	ldr	r3, [r1, #0]
                encoder_timer = millis() - last_tick_time;
    4642:	4a15      	ldr	r2, [pc, #84]	; (4698 <process_encoder+0xac>)
    4644:	6810      	ldr	r0, [r2, #0]
    4646:	1a1b      	subs	r3, r3, r0
    4648:	4814      	ldr	r0, [pc, #80]	; (469c <process_encoder+0xb0>)
    464a:	6003      	str	r3, [r0, #0]
    return proc_millis;
    464c:	680b      	ldr	r3, [r1, #0]
                last_tick_time = millis();
    464e:	6013      	str	r3, [r2, #0]
    4650:	e7df      	b.n	4612 <process_encoder+0x26>
            if(encoder_pos == POS_NONE) {
    4652:	4b0e      	ldr	r3, [pc, #56]	; (468c <process_encoder+0xa0>)
    4654:	781b      	ldrb	r3, [r3, #0]
    4656:	2b00      	cmp	r3, #0
    4658:	d008      	beq.n	466c <process_encoder+0x80>
            if(encoder_pos == POS_A) {
    465a:	2b01      	cmp	r3, #1
    465c:	d1d9      	bne.n	4612 <process_encoder+0x26>
                encoder_pos = POS_NONE;
    465e:	2200      	movs	r2, #0
    4660:	4b0a      	ldr	r3, [pc, #40]	; (468c <process_encoder+0xa0>)
    4662:	701a      	strb	r2, [r3, #0]
                encoder = BACKWARD;
    4664:	3202      	adds	r2, #2
    4666:	4b0a      	ldr	r3, [pc, #40]	; (4690 <process_encoder+0xa4>)
    4668:	701a      	strb	r2, [r3, #0]
}
    466a:	e7d2      	b.n	4612 <process_encoder+0x26>
                encoder_pos = POS_B;
    466c:	2202      	movs	r2, #2
    466e:	4b07      	ldr	r3, [pc, #28]	; (468c <process_encoder+0xa0>)
    4670:	701a      	strb	r2, [r3, #0]
    return proc_millis;
    4672:	4908      	ldr	r1, [pc, #32]	; (4694 <process_encoder+0xa8>)
    4674:	680b      	ldr	r3, [r1, #0]
                encoder_timer = millis() - last_tick_time;
    4676:	4a08      	ldr	r2, [pc, #32]	; (4698 <process_encoder+0xac>)
    4678:	6810      	ldr	r0, [r2, #0]
    467a:	1a1b      	subs	r3, r3, r0
    467c:	4807      	ldr	r0, [pc, #28]	; (469c <process_encoder+0xb0>)
    467e:	6003      	str	r3, [r0, #0]
    return proc_millis;
    4680:	680b      	ldr	r3, [r1, #0]
                last_tick_time = millis();
    4682:	6013      	str	r3, [r2, #0]
    4684:	e7c5      	b.n	4612 <process_encoder+0x26>
    4686:	46c0      	nop			; (mov r8, r8)
    4688:	41000080 	.word	0x41000080
    468c:	2000246c 	.word	0x2000246c
    4690:	20002448 	.word	0x20002448
    4694:	2000010c 	.word	0x2000010c
    4698:	20000108 	.word	0x20000108
    469c:	20000104 	.word	0x20000104

000046a0 <timer0_compare_callback>:
    a2 = adsr + 2;
    a3 = adsr + 3;
    a4 = adsr + 4;
}

void timer0_compare_callback(struct tcc_module *const module_inst) {
    46a0:	b510      	push	{r4, lr}
    adsr_process(a0);
    46a2:	4b0b      	ldr	r3, [pc, #44]	; (46d0 <timer0_compare_callback+0x30>)
    46a4:	6818      	ldr	r0, [r3, #0]
    46a6:	4c0b      	ldr	r4, [pc, #44]	; (46d4 <timer0_compare_callback+0x34>)
    46a8:	47a0      	blx	r4
    adsr_process(a1);
    46aa:	4b0b      	ldr	r3, [pc, #44]	; (46d8 <timer0_compare_callback+0x38>)
    46ac:	6818      	ldr	r0, [r3, #0]
    46ae:	47a0      	blx	r4
    adsr_process(a2);
    46b0:	4b0a      	ldr	r3, [pc, #40]	; (46dc <timer0_compare_callback+0x3c>)
    46b2:	6818      	ldr	r0, [r3, #0]
    46b4:	47a0      	blx	r4
    adsr_process(a3);
    46b6:	4b0a      	ldr	r3, [pc, #40]	; (46e0 <timer0_compare_callback+0x40>)
    46b8:	6818      	ldr	r0, [r3, #0]
    46ba:	47a0      	blx	r4
    adsr_process(a4);
    46bc:	4b09      	ldr	r3, [pc, #36]	; (46e4 <timer0_compare_callback+0x44>)
    46be:	6818      	ldr	r0, [r3, #0]
    46c0:	47a0      	blx	r4
    proc_millis++;
    46c2:	4a09      	ldr	r2, [pc, #36]	; (46e8 <timer0_compare_callback+0x48>)
    46c4:	6813      	ldr	r3, [r2, #0]
    46c6:	3301      	adds	r3, #1
    46c8:	6013      	str	r3, [r2, #0]
    process_encoder();
    46ca:	4b08      	ldr	r3, [pc, #32]	; (46ec <timer0_compare_callback+0x4c>)
    46cc:	4798      	blx	r3
}
    46ce:	bd10      	pop	{r4, pc}
    46d0:	200024b4 	.word	0x200024b4
    46d4:	00000585 	.word	0x00000585
    46d8:	20002444 	.word	0x20002444
    46dc:	20002470 	.word	0x20002470
    46e0:	2000244c 	.word	0x2000244c
    46e4:	200024b8 	.word	0x200024b8
    46e8:	2000010c 	.word	0x2000010c
    46ec:	000045ed 	.word	0x000045ed

000046f0 <configure_tcc0>:
void configure_tcc0(void) {
    46f0:	b570      	push	{r4, r5, r6, lr}
    46f2:	b0aa      	sub	sp, #168	; 0xa8
    tcc_get_config_defaults(&config_tcc, TCC0);
    46f4:	4e0e      	ldr	r6, [pc, #56]	; (4730 <configure_tcc0+0x40>)
    46f6:	ac01      	add	r4, sp, #4
    46f8:	0031      	movs	r1, r6
    46fa:	0020      	movs	r0, r4
    46fc:	4b0d      	ldr	r3, [pc, #52]	; (4734 <configure_tcc0+0x44>)
    46fe:	4798      	blx	r3
    config_tcc.counter.clock_source = GCLK_GENERATOR_6;
    4700:	2306      	movs	r3, #6
    4702:	72a3      	strb	r3, [r4, #10]
    config_tcc.counter.clock_prescaler = TCC_CLOCK_PRESCALER_DIV16;
    4704:	3b02      	subs	r3, #2
    4706:	72e3      	strb	r3, [r4, #11]
    config_tcc.counter.period = 250;
    4708:	33f6      	adds	r3, #246	; 0xf6
    470a:	6063      	str	r3, [r4, #4]
    tcc_init(&tcc0_instance, TCC0, &config_tcc);
    470c:	4d0a      	ldr	r5, [pc, #40]	; (4738 <configure_tcc0+0x48>)
    470e:	0022      	movs	r2, r4
    4710:	0031      	movs	r1, r6
    4712:	0028      	movs	r0, r5
    4714:	4b09      	ldr	r3, [pc, #36]	; (473c <configure_tcc0+0x4c>)
    4716:	4798      	blx	r3
	/* Sanity check arguments */
	Assert(module_inst);
	Assert(module_inst->hw);

	/* Get a pointer to the module's hardware instance */
	Tcc *const tcc_module = module_inst->hw;
    4718:	682a      	ldr	r2, [r5, #0]

	while (tcc_module->SYNCBUSY.reg & TCC_SYNCBUSY_ENABLE) {
    471a:	2102      	movs	r1, #2
    471c:	6893      	ldr	r3, [r2, #8]
    471e:	4219      	tst	r1, r3
    4720:	d1fc      	bne.n	471c <configure_tcc0+0x2c>
		/* Wait for sync */
	}

	/* Enable the TCC module */
	tcc_module->CTRLA.reg |= TCC_CTRLA_ENABLE;
    4722:	6813      	ldr	r3, [r2, #0]
    4724:	2102      	movs	r1, #2
    4726:	430b      	orrs	r3, r1
    4728:	6013      	str	r3, [r2, #0]
}
    472a:	b02a      	add	sp, #168	; 0xa8
    472c:	bd70      	pop	{r4, r5, r6, pc}
    472e:	46c0      	nop			; (mov r8, r8)
    4730:	42002400 	.word	0x42002400
    4734:	000028b9 	.word	0x000028b9
    4738:	20002474 	.word	0x20002474
    473c:	00002a05 	.word	0x00002a05

00004740 <configure_tcc0_callbacks>:
void configure_tcc0_callbacks(ADSR *adsr) {
    4740:	b570      	push	{r4, r5, r6, lr}
    4742:	0004      	movs	r4, r0
    tcc_register_callback(&tcc0_instance, timer0_compare_callback, TCC_CALLBACK_OVERFLOW);
    4744:	4d0c      	ldr	r5, [pc, #48]	; (4778 <configure_tcc0_callbacks+0x38>)
    4746:	2200      	movs	r2, #0
    4748:	490c      	ldr	r1, [pc, #48]	; (477c <configure_tcc0_callbacks+0x3c>)
    474a:	0028      	movs	r0, r5
    474c:	4b0c      	ldr	r3, [pc, #48]	; (4780 <configure_tcc0_callbacks+0x40>)
    474e:	4798      	blx	r3
    tcc_enable_callback(&tcc0_instance, TCC_CALLBACK_OVERFLOW);
    4750:	2100      	movs	r1, #0
    4752:	0028      	movs	r0, r5
    4754:	4b0b      	ldr	r3, [pc, #44]	; (4784 <configure_tcc0_callbacks+0x44>)
    4756:	4798      	blx	r3
    a0 = adsr + 0;
    4758:	4b0b      	ldr	r3, [pc, #44]	; (4788 <configure_tcc0_callbacks+0x48>)
    475a:	601c      	str	r4, [r3, #0]
    a1 = adsr + 1;
    475c:	0022      	movs	r2, r4
    475e:	3230      	adds	r2, #48	; 0x30
    4760:	4b0a      	ldr	r3, [pc, #40]	; (478c <configure_tcc0_callbacks+0x4c>)
    4762:	601a      	str	r2, [r3, #0]
    a2 = adsr + 2;
    4764:	3230      	adds	r2, #48	; 0x30
    4766:	4b0a      	ldr	r3, [pc, #40]	; (4790 <configure_tcc0_callbacks+0x50>)
    4768:	601a      	str	r2, [r3, #0]
    a3 = adsr + 3;
    476a:	3230      	adds	r2, #48	; 0x30
    476c:	4b09      	ldr	r3, [pc, #36]	; (4794 <configure_tcc0_callbacks+0x54>)
    476e:	601a      	str	r2, [r3, #0]
    a4 = adsr + 4;
    4770:	34c0      	adds	r4, #192	; 0xc0
    4772:	4b09      	ldr	r3, [pc, #36]	; (4798 <configure_tcc0_callbacks+0x58>)
    4774:	601c      	str	r4, [r3, #0]
}
    4776:	bd70      	pop	{r4, r5, r6, pc}
    4778:	20002474 	.word	0x20002474
    477c:	000046a1 	.word	0x000046a1
    4780:	00002de9 	.word	0x00002de9
    4784:	00002e01 	.word	0x00002e01
    4788:	200024b4 	.word	0x200024b4
    478c:	20002444 	.word	0x20002444
    4790:	20002470 	.word	0x20002470
    4794:	2000244c 	.word	0x2000244c
    4798:	200024b8 	.word	0x200024b8

0000479c <get_encoder_speed>:
uint8_t get_encoder_speed(void) {
    if(encoder_timer > 20)return 1;
    479c:	4b09      	ldr	r3, [pc, #36]	; (47c4 <get_encoder_speed+0x28>)
    479e:	681b      	ldr	r3, [r3, #0]
    47a0:	2001      	movs	r0, #1
    47a2:	2b14      	cmp	r3, #20
    47a4:	d804      	bhi.n	47b0 <get_encoder_speed+0x14>
    if(encoder_timer > 15)return 2;
    47a6:	4b07      	ldr	r3, [pc, #28]	; (47c4 <get_encoder_speed+0x28>)
    47a8:	681b      	ldr	r3, [r3, #0]
    47aa:	3001      	adds	r0, #1
    47ac:	2b0f      	cmp	r3, #15
    47ae:	d900      	bls.n	47b2 <get_encoder_speed+0x16>
    if(encoder_timer > 10)return 3;
    return 4;
}
    47b0:	4770      	bx	lr
    if(encoder_timer > 10)return 3;
    47b2:	4b04      	ldr	r3, [pc, #16]	; (47c4 <get_encoder_speed+0x28>)
    47b4:	681b      	ldr	r3, [r3, #0]
    return 4;
    47b6:	2000      	movs	r0, #0
    47b8:	220a      	movs	r2, #10
    47ba:	429a      	cmp	r2, r3
    47bc:	4140      	adcs	r0, r0
    47be:	3003      	adds	r0, #3
    47c0:	e7f6      	b.n	47b0 <get_encoder_speed+0x14>
    47c2:	46c0      	nop			; (mov r8, r8)
    47c4:	20000104 	.word	0x20000104

000047c8 <configure_tc0>:

void configure_tc0(void) {
    47c8:	b510      	push	{r4, lr}
    47ca:	b08e      	sub	sp, #56	; 0x38
	Assert(config);

	/* Write default config to config struct */
	config->clock_source               = GCLK_GENERATOR_0;
	config->counter_size               = TC_COUNTER_SIZE_16BIT;
	config->clock_prescaler            = TC_CLOCK_PRESCALER_DIV1;
    47cc:	2200      	movs	r2, #0
    47ce:	2100      	movs	r1, #0
    47d0:	466b      	mov	r3, sp
    47d2:	809a      	strh	r2, [r3, #4]
	config->wave_generation            = TC_WAVE_GENERATION_NORMAL_FREQ;
	config->reload_action              = TC_RELOAD_ACTION_GCLK;
    47d4:	2300      	movs	r3, #0
    47d6:	4668      	mov	r0, sp
    47d8:	71c1      	strb	r1, [r0, #7]
	config->run_in_standby             = false;
    47da:	7043      	strb	r3, [r0, #1]
#if (SAML21) || (SAML22) || (SAMC20) || (SAMC21) || (SAMR30) || (SAMR34) || (SAMR35)
	config->on_demand                  = false;
    47dc:	7083      	strb	r3, [r0, #2]
#endif
	config->waveform_invert_output     = TC_WAVEFORM_INVERT_OUTPUT_NONE;
    47de:	7203      	strb	r3, [r0, #8]
	config->enable_capture_on_channel[TC_COMPARE_CAPTURE_CHANNEL_0] = false;
    47e0:	7243      	strb	r3, [r0, #9]
	config->enable_capture_on_channel[TC_COMPARE_CAPTURE_CHANNEL_1] = false;
    47e2:	7283      	strb	r3, [r0, #10]
#ifdef 	FEATURE_TC_IO_CAPTURE
	config->enable_capture_on_IO[TC_COMPARE_CAPTURE_CHANNEL_0] = false;
    47e4:	72c3      	strb	r3, [r0, #11]
	config->enable_capture_on_IO[TC_COMPARE_CAPTURE_CHANNEL_1] = false;
    47e6:	7303      	strb	r3, [r0, #12]
#endif

	config->count_direction            = TC_COUNT_DIRECTION_UP;
    47e8:	7383      	strb	r3, [r0, #14]
	config->oneshot                    = false;
    47ea:	7343      	strb	r3, [r0, #13]

	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].enabled = false;
    47ec:	7403      	strb	r3, [r0, #16]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].pin_out = 0;
    47ee:	9205      	str	r2, [sp, #20]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].pin_mux = 0;
    47f0:	9206      	str	r2, [sp, #24]

	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].enabled = false;
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_out = 0;
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_mux = 0;

	config->counter_16_bit.value                   = 0x0000;
    47f2:	8502      	strh	r2, [r0, #40]	; 0x28
	config->counter_16_bit.compare_capture_channel\
		[TC_COMPARE_CAPTURE_CHANNEL_0]                        = 0x0000;
    47f4:	8542      	strh	r2, [r0, #42]	; 0x2a
	config->counter_16_bit.compare_capture_channel\
		[TC_COMPARE_CAPTURE_CHANNEL_1]                        = 0x0000;
    47f6:	8582      	strh	r2, [r0, #44]	; 0x2c
#ifdef FEATURE_TC_DOUBLE_BUFFERED
	config->double_buffering_enabled = false;
    47f8:	2334      	movs	r3, #52	; 0x34
    47fa:	54c1      	strb	r1, [r0, r3]
    struct tc_config config_tc;
    tc_get_config_defaults(&config_tc);

    config_tc.counter_size = TC_COUNTER_SIZE_8BIT;
    47fc:	3b30      	subs	r3, #48	; 0x30
    47fe:	70c3      	strb	r3, [r0, #3]
    config_tc.clock_source = GCLK_GENERATOR_7;
    4800:	2207      	movs	r2, #7
    4802:	7002      	strb	r2, [r0, #0]
    config_tc.clock_prescaler = TC_CLOCK_PRESCALER_DIV1;
    config_tc.wave_generation = TC_WAVE_GENERATION_NORMAL_PWM;
    4804:	3a05      	subs	r2, #5
    4806:	7182      	strb	r2, [r0, #6]
    config_tc.counter_8_bit.compare_capture_channel[1] = 0;
    config_tc.pwm_channel[1].enabled = true;
    4808:	3a01      	subs	r2, #1
    480a:	7702      	strb	r2, [r0, #28]
    config_tc.pwm_channel[1].pin_out = PIN_PB11E_TC1_WO1; //BUZZER_PIN;
    480c:	322a      	adds	r2, #42	; 0x2a
    480e:	9208      	str	r2, [sp, #32]
    config_tc.pwm_channel[1].pin_mux = MUX_PB11E_TC1_WO1; //BUZZER_MUX;
    4810:	9309      	str	r3, [sp, #36]	; 0x24

    tc_init(&tc1_instance, TC1, &config_tc);
    4812:	4c0a      	ldr	r4, [pc, #40]	; (483c <configure_tc0+0x74>)
    4814:	466a      	mov	r2, sp
    4816:	490a      	ldr	r1, [pc, #40]	; (4840 <configure_tc0+0x78>)
    4818:	0020      	movs	r0, r4
    481a:	4b0a      	ldr	r3, [pc, #40]	; (4844 <configure_tc0+0x7c>)
    481c:	4798      	blx	r3
    tc_set_top_value(&tc1_instance, 64);
    481e:	2140      	movs	r1, #64	; 0x40
    4820:	0020      	movs	r0, r4
    4822:	4b09      	ldr	r3, [pc, #36]	; (4848 <configure_tc0+0x80>)
    4824:	4798      	blx	r3
	/* Sanity check arguments */
	Assert(module_inst);
	Assert(module_inst->hw);

	/* Get a pointer to the module's hardware instance */
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);
    4826:	6822      	ldr	r2, [r4, #0]
	return (tc_module->SYNCBUSY.reg);
    4828:	6913      	ldr	r3, [r2, #16]

	while (tc_is_syncing(module_inst)) {
    482a:	2b00      	cmp	r3, #0
    482c:	d1fc      	bne.n	4828 <configure_tc0+0x60>
		/* Wait for sync */
	}

	/* Enable TC module */
	tc_module->CTRLA.reg |= TC_CTRLA_ENABLE;
    482e:	6813      	ldr	r3, [r2, #0]
    4830:	2102      	movs	r1, #2
    4832:	430b      	orrs	r3, r1
    4834:	6013      	str	r3, [r2, #0]
    tc_enable(&tc1_instance);
}
    4836:	b00e      	add	sp, #56	; 0x38
    4838:	bd10      	pop	{r4, pc}
    483a:	46c0      	nop			; (mov r8, r8)
    483c:	20002450 	.word	0x20002450
    4840:	42003400 	.word	0x42003400
    4844:	00000841 	.word	0x00000841
    4848:	00000b95 	.word	0x00000b95

0000484c <set_brightness>:

void set_brightness(uint8_t brightness) {
    484c:	b510      	push	{r4, lr}
    brightness *= 4;
    484e:	0080      	lsls	r0, r0, #2
    tc_set_compare_value(&tc1_instance, TC_COMPARE_CAPTURE_CHANNEL_1, brightness);
    4850:	b2c2      	uxtb	r2, r0
    4852:	2101      	movs	r1, #1
    4854:	4801      	ldr	r0, [pc, #4]	; (485c <set_brightness+0x10>)
    4856:	4b02      	ldr	r3, [pc, #8]	; (4860 <set_brightness+0x14>)
    4858:	4798      	blx	r3
    485a:	bd10      	pop	{r4, pc}
    485c:	20002450 	.word	0x20002450
    4860:	00000b0d 	.word	0x00000b0d

00004864 <system_board_init>:
{
	/* This function is meant to contain board-specific initialization code
	 * for, e.g., the I/O pins. The initialization can rely on application-
	 * specific board configuration, found in conf_board.h.
	 */
    4864:	4770      	bx	lr
	...

00004868 <cpu_irq_enter_critical>:
    4868:	4b0c      	ldr	r3, [pc, #48]	; (489c <cpu_irq_enter_critical+0x34>)
    486a:	681b      	ldr	r3, [r3, #0]
    486c:	2b00      	cmp	r3, #0
    486e:	d106      	bne.n	487e <cpu_irq_enter_critical+0x16>
    4870:	f3ef 8310 	mrs	r3, PRIMASK
    4874:	2b00      	cmp	r3, #0
    4876:	d007      	beq.n	4888 <cpu_irq_enter_critical+0x20>
    4878:	2200      	movs	r2, #0
    487a:	4b09      	ldr	r3, [pc, #36]	; (48a0 <cpu_irq_enter_critical+0x38>)
    487c:	701a      	strb	r2, [r3, #0]
    487e:	4a07      	ldr	r2, [pc, #28]	; (489c <cpu_irq_enter_critical+0x34>)
    4880:	6813      	ldr	r3, [r2, #0]
    4882:	3301      	adds	r3, #1
    4884:	6013      	str	r3, [r2, #0]
    4886:	4770      	bx	lr
    4888:	b672      	cpsid	i
    488a:	f3bf 8f5f 	dmb	sy
    488e:	2200      	movs	r2, #0
    4890:	4b04      	ldr	r3, [pc, #16]	; (48a4 <cpu_irq_enter_critical+0x3c>)
    4892:	701a      	strb	r2, [r3, #0]
    4894:	3201      	adds	r2, #1
    4896:	4b02      	ldr	r3, [pc, #8]	; (48a0 <cpu_irq_enter_critical+0x38>)
    4898:	701a      	strb	r2, [r3, #0]
    489a:	e7f0      	b.n	487e <cpu_irq_enter_critical+0x16>
    489c:	20000110 	.word	0x20000110
    48a0:	20000114 	.word	0x20000114
    48a4:	20000014 	.word	0x20000014

000048a8 <cpu_irq_leave_critical>:
    48a8:	4b08      	ldr	r3, [pc, #32]	; (48cc <cpu_irq_leave_critical+0x24>)
    48aa:	681a      	ldr	r2, [r3, #0]
    48ac:	3a01      	subs	r2, #1
    48ae:	601a      	str	r2, [r3, #0]
    48b0:	681b      	ldr	r3, [r3, #0]
    48b2:	2b00      	cmp	r3, #0
    48b4:	d109      	bne.n	48ca <cpu_irq_leave_critical+0x22>
    48b6:	4b06      	ldr	r3, [pc, #24]	; (48d0 <cpu_irq_leave_critical+0x28>)
    48b8:	781b      	ldrb	r3, [r3, #0]
    48ba:	2b00      	cmp	r3, #0
    48bc:	d005      	beq.n	48ca <cpu_irq_leave_critical+0x22>
    48be:	2201      	movs	r2, #1
    48c0:	4b04      	ldr	r3, [pc, #16]	; (48d4 <cpu_irq_leave_critical+0x2c>)
    48c2:	701a      	strb	r2, [r3, #0]
    48c4:	f3bf 8f5f 	dmb	sy
    48c8:	b662      	cpsie	i
    48ca:	4770      	bx	lr
    48cc:	20000110 	.word	0x20000110
    48d0:	20000114 	.word	0x20000114
    48d4:	20000014 	.word	0x20000014

000048d8 <system_clock_source_get_hz>:
 *
 * \returns Frequency of the given clock source, in Hz.
 */
uint32_t system_clock_source_get_hz(
		const enum system_clock_source clock_source)
{
    48d8:	b510      	push	{r4, lr}
	switch (clock_source) {
    48da:	2807      	cmp	r0, #7
    48dc:	d803      	bhi.n	48e6 <system_clock_source_get_hz+0xe>
    48de:	0080      	lsls	r0, r0, #2
    48e0:	4b0f      	ldr	r3, [pc, #60]	; (4920 <system_clock_source_get_hz+0x48>)
    48e2:	581b      	ldr	r3, [r3, r0]
    48e4:	469f      	mov	pc, r3
		}

		return _system_clock_inst.dpll.frequency;

	default:
		return 0;
    48e6:	2000      	movs	r0, #0
    48e8:	e018      	b.n	491c <system_clock_source_get_hz+0x44>
		return _system_clock_inst.xosc.frequency;
    48ea:	4b0e      	ldr	r3, [pc, #56]	; (4924 <system_clock_source_get_hz+0x4c>)
    48ec:	6858      	ldr	r0, [r3, #4]
    48ee:	e015      	b.n	491c <system_clock_source_get_hz+0x44>
		return 48000000UL / (OSCCTRL->OSC48MDIV.bit.DIV + 1);
    48f0:	4b0d      	ldr	r3, [pc, #52]	; (4928 <system_clock_source_get_hz+0x50>)
    48f2:	7d59      	ldrb	r1, [r3, #21]
    48f4:	0709      	lsls	r1, r1, #28
    48f6:	0f09      	lsrs	r1, r1, #28
    48f8:	3101      	adds	r1, #1
    48fa:	480c      	ldr	r0, [pc, #48]	; (492c <system_clock_source_get_hz+0x54>)
    48fc:	4b0c      	ldr	r3, [pc, #48]	; (4930 <system_clock_source_get_hz+0x58>)
    48fe:	4798      	blx	r3
    4900:	e00c      	b.n	491c <system_clock_source_get_hz+0x44>
		return _system_clock_inst.xosc32k.frequency;
    4902:	4b08      	ldr	r3, [pc, #32]	; (4924 <system_clock_source_get_hz+0x4c>)
    4904:	6898      	ldr	r0, [r3, #8]
    4906:	e009      	b.n	491c <system_clock_source_get_hz+0x44>
		if (!(OSCCTRL->DPLLCTRLA.reg & OSCCTRL_DPLLCTRLA_ENABLE)) {
    4908:	4b07      	ldr	r3, [pc, #28]	; (4928 <system_clock_source_get_hz+0x50>)
    490a:	7f1b      	ldrb	r3, [r3, #28]
			return 0;
    490c:	2000      	movs	r0, #0
		if (!(OSCCTRL->DPLLCTRLA.reg & OSCCTRL_DPLLCTRLA_ENABLE)) {
    490e:	079b      	lsls	r3, r3, #30
    4910:	d504      	bpl.n	491c <system_clock_source_get_hz+0x44>
		return _system_clock_inst.dpll.frequency;
    4912:	4b04      	ldr	r3, [pc, #16]	; (4924 <system_clock_source_get_hz+0x4c>)
    4914:	6818      	ldr	r0, [r3, #0]
    4916:	e001      	b.n	491c <system_clock_source_get_hz+0x44>
		return 32768UL;
    4918:	2080      	movs	r0, #128	; 0x80
    491a:	0200      	lsls	r0, r0, #8
	}
}
    491c:	bd10      	pop	{r4, pc}
    491e:	46c0      	nop			; (mov r8, r8)
    4920:	000094f4 	.word	0x000094f4
    4924:	20000118 	.word	0x20000118
    4928:	40001000 	.word	0x40001000
    492c:	02dc6c00 	.word	0x02dc6c00
    4930:	00006269 	.word	0x00006269

00004934 <system_clock_source_xosc_set_config>:
 * \param[in] config  External oscillator configuration structure containing
 *                    the new config
 */
void system_clock_source_xosc_set_config(
		struct system_clock_source_xosc_config *const config)
{
    4934:	b5f0      	push	{r4, r5, r6, r7, lr}
    4936:	46de      	mov	lr, fp
    4938:	4657      	mov	r7, sl
    493a:	464e      	mov	r6, r9
    493c:	4645      	mov	r5, r8
    493e:	b5e0      	push	{r5, r6, r7, lr}
	OSCCTRL_XOSCCTRL_Type temp = OSCCTRL->XOSCCTRL;
    4940:	4b38      	ldr	r3, [pc, #224]	; (4a24 <system_clock_source_xosc_set_config+0xf0>)
    4942:	8a1b      	ldrh	r3, [r3, #16]
    4944:	071a      	lsls	r2, r3, #28
    4946:	0fd2      	lsrs	r2, r2, #31
    4948:	4691      	mov	r9, r2
    494a:	055e      	lsls	r6, r3, #21
    494c:	0f76      	lsrs	r6, r6, #29

	temp.bit.STARTUP = config->startup_time;
    494e:	7842      	ldrb	r2, [r0, #1]
    4950:	240f      	movs	r4, #15
    4952:	4014      	ands	r4, r2
    4954:	46a3      	mov	fp, r4

	if (config->external_clock == SYSTEM_CLOCK_EXTERNAL_CRYSTAL) {
    4956:	7802      	ldrb	r2, [r0, #0]
    4958:	4251      	negs	r1, r2
    495a:	414a      	adcs	r2, r1
    495c:	b2d2      	uxtb	r2, r2
		temp.bit.XTALEN = 1;
	} else {
		temp.bit.XTALEN = 0;
	}

	temp.bit.AMPGC = config->auto_gain_control;
    495e:	7885      	ldrb	r5, [r0, #2]

	/* Set gain */
	if (config->frequency <= 2000000) {
    4960:	6841      	ldr	r1, [r0, #4]
    4962:	4f31      	ldr	r7, [pc, #196]	; (4a28 <system_clock_source_xosc_set_config+0xf4>)
    4964:	42b9      	cmp	r1, r7
    4966:	d90d      	bls.n	4984 <system_clock_source_xosc_set_config+0x50>
		temp.bit.GAIN = 0;
	} else if (config->frequency <= 4000000) {
    4968:	4f30      	ldr	r7, [pc, #192]	; (4a2c <system_clock_source_xosc_set_config+0xf8>)
    496a:	42b9      	cmp	r1, r7
    496c:	d953      	bls.n	4a16 <system_clock_source_xosc_set_config+0xe2>
		temp.bit.GAIN = 1;
	} else if (config->frequency <= 8000000) {
    496e:	4f30      	ldr	r7, [pc, #192]	; (4a30 <system_clock_source_xosc_set_config+0xfc>)
    4970:	42b9      	cmp	r1, r7
    4972:	d952      	bls.n	4a1a <system_clock_source_xosc_set_config+0xe6>
		temp.bit.GAIN = 2;
	} else if (config->frequency <= 16000000) {
    4974:	4f2f      	ldr	r7, [pc, #188]	; (4a34 <system_clock_source_xosc_set_config+0x100>)
    4976:	42b9      	cmp	r1, r7
    4978:	d951      	bls.n	4a1e <system_clock_source_xosc_set_config+0xea>
		temp.bit.GAIN = 3;
	} else if (config->frequency <= 32000000) {
    497a:	4f2f      	ldr	r7, [pc, #188]	; (4a38 <system_clock_source_xosc_set_config+0x104>)
    497c:	42b9      	cmp	r1, r7
    497e:	d802      	bhi.n	4986 <system_clock_source_xosc_set_config+0x52>
		temp.bit.GAIN = 4;
    4980:	2604      	movs	r6, #4
    4982:	e000      	b.n	4986 <system_clock_source_xosc_set_config+0x52>
		temp.bit.GAIN = 0;
    4984:	2600      	movs	r6, #0
	}

	temp.bit.ONDEMAND = config->on_demand;
    4986:	7a47      	ldrb	r7, [r0, #9]
	temp.bit.RUNSTDBY = config->run_in_standby;
    4988:	7a04      	ldrb	r4, [r0, #8]
    498a:	46a4      	mov	ip, r4
	temp.bit.SWBEN    = config->enable_clock_switch_back;
    498c:	7b44      	ldrb	r4, [r0, #13]
    498e:	46a0      	mov	r8, r4

	if (config->enable_clock_failure_detector) {
    4990:	7b04      	ldrb	r4, [r0, #12]
    4992:	2c00      	cmp	r4, #0
    4994:	d001      	beq.n	499a <system_clock_source_xosc_set_config+0x66>
		Assert(OSCCTRL->OSC48MCTRL.reg & OSCCTRL_OSC48MCTRL_ENABLE);
		temp.bit.CFDEN    = config->enable_clock_failure_detector;
    4996:	2401      	movs	r4, #1
    4998:	46a1      	mov	r9, r4
	}

	/* Store XOSC frequency for internal use */
	_system_clock_inst.xosc.frequency = config->frequency;
    499a:	4c28      	ldr	r4, [pc, #160]	; (4a3c <system_clock_source_xosc_set_config+0x108>)
    499c:	6061      	str	r1, [r4, #4]

	OSCCTRL->EVCTRL.reg =
			config->enable_clock_failure_detector_event_outut << OSCCTRL_EVCTRL_CFDEO_Pos;
    499e:	7ac1      	ldrb	r1, [r0, #11]
    49a0:	468a      	mov	sl, r1
	OSCCTRL->EVCTRL.reg =
    49a2:	4920      	ldr	r1, [pc, #128]	; (4a24 <system_clock_source_xosc_set_config+0xf0>)
    49a4:	4654      	mov	r4, sl
    49a6:	74cc      	strb	r4, [r1, #19]

	OSCCTRL->CFDPRESC.reg = OSCCTRL_CFDPRESC_CFDPRESC(config->clock_failure_detector_prescaler) ;
    49a8:	7a80      	ldrb	r0, [r0, #10]
    49aa:	4682      	mov	sl, r0
    49ac:	2007      	movs	r0, #7
    49ae:	4654      	mov	r4, sl
    49b0:	4020      	ands	r0, r4
    49b2:	7488      	strb	r0, [r1, #18]

	OSCCTRL->XOSCCTRL = temp;
    49b4:	0092      	lsls	r2, r2, #2
    49b6:	2004      	movs	r0, #4
    49b8:	4383      	bics	r3, r0
    49ba:	431a      	orrs	r2, r3
    49bc:	3803      	subs	r0, #3
    49be:	464b      	mov	r3, r9
    49c0:	00db      	lsls	r3, r3, #3
    49c2:	2408      	movs	r4, #8
    49c4:	43a2      	bics	r2, r4
    49c6:	431a      	orrs	r2, r3
    49c8:	4643      	mov	r3, r8
    49ca:	4003      	ands	r3, r0
    49cc:	011b      	lsls	r3, r3, #4
    49ce:	3408      	adds	r4, #8
    49d0:	43a2      	bics	r2, r4
    49d2:	431a      	orrs	r2, r3
    49d4:	4663      	mov	r3, ip
    49d6:	4003      	ands	r3, r0
    49d8:	019b      	lsls	r3, r3, #6
    49da:	3430      	adds	r4, #48	; 0x30
    49dc:	43a2      	bics	r2, r4
    49de:	431a      	orrs	r2, r3
    49e0:	4007      	ands	r7, r0
    49e2:	01ff      	lsls	r7, r7, #7
    49e4:	2380      	movs	r3, #128	; 0x80
    49e6:	439a      	bics	r2, r3
    49e8:	0013      	movs	r3, r2
    49ea:	433b      	orrs	r3, r7
    49ec:	0236      	lsls	r6, r6, #8
    49ee:	4a14      	ldr	r2, [pc, #80]	; (4a40 <system_clock_source_xosc_set_config+0x10c>)
    49f0:	4013      	ands	r3, r2
    49f2:	4333      	orrs	r3, r6
    49f4:	4028      	ands	r0, r5
    49f6:	02c0      	lsls	r0, r0, #11
    49f8:	4a12      	ldr	r2, [pc, #72]	; (4a44 <system_clock_source_xosc_set_config+0x110>)
    49fa:	4013      	ands	r3, r2
    49fc:	4303      	orrs	r3, r0
    49fe:	465a      	mov	r2, fp
    4a00:	0314      	lsls	r4, r2, #12
    4a02:	051b      	lsls	r3, r3, #20
    4a04:	0d1b      	lsrs	r3, r3, #20
    4a06:	4323      	orrs	r3, r4
    4a08:	820b      	strh	r3, [r1, #16]
}
    4a0a:	bc3c      	pop	{r2, r3, r4, r5}
    4a0c:	4690      	mov	r8, r2
    4a0e:	4699      	mov	r9, r3
    4a10:	46a2      	mov	sl, r4
    4a12:	46ab      	mov	fp, r5
    4a14:	bdf0      	pop	{r4, r5, r6, r7, pc}
		temp.bit.GAIN = 1;
    4a16:	2601      	movs	r6, #1
    4a18:	e7b5      	b.n	4986 <system_clock_source_xosc_set_config+0x52>
		temp.bit.GAIN = 2;
    4a1a:	2602      	movs	r6, #2
    4a1c:	e7b3      	b.n	4986 <system_clock_source_xosc_set_config+0x52>
		temp.bit.GAIN = 3;
    4a1e:	2603      	movs	r6, #3
    4a20:	e7b1      	b.n	4986 <system_clock_source_xosc_set_config+0x52>
    4a22:	46c0      	nop			; (mov r8, r8)
    4a24:	40001000 	.word	0x40001000
    4a28:	001e8480 	.word	0x001e8480
    4a2c:	003d0900 	.word	0x003d0900
    4a30:	007a1200 	.word	0x007a1200
    4a34:	00f42400 	.word	0x00f42400
    4a38:	01e84800 	.word	0x01e84800
    4a3c:	20000118 	.word	0x20000118
    4a40:	fffff8ff 	.word	0xfffff8ff
    4a44:	fffff7ff 	.word	0xfffff7ff

00004a48 <system_clock_source_dpll_set_config>:
 *
 * \param[in] config  DPLL configuration structure containing the new config
 */
void system_clock_source_dpll_set_config(
		struct system_clock_source_dpll_config *const config)
{
    4a48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4a4a:	0004      	movs	r4, r0

	uint32_t tmpldr;
	uint8_t  tmpldrfrac;
	uint32_t refclk;

	refclk = config->reference_frequency;
    4a4c:	68c5      	ldr	r5, [r0, #12]

	/* Only reference clock REF1 can be divided */
	if (config->reference_clock == SYSTEM_CLOCK_SOURCE_DPLL_REFERENCE_CLOCK_XOSC) {
    4a4e:	7d03      	ldrb	r3, [r0, #20]
    4a50:	2b01      	cmp	r3, #1
    4a52:	d04d      	beq.n	4af0 <system_clock_source_dpll_set_config+0xa8>
		refclk = refclk / (2 * (config->reference_divider + 1));
	}

	/* Calculate LDRFRAC and LDR */
	tmpldr = (config->output_frequency << 4) / refclk;
    4a54:	68a3      	ldr	r3, [r4, #8]
    4a56:	0118      	lsls	r0, r3, #4
    4a58:	0029      	movs	r1, r5
    4a5a:	4b29      	ldr	r3, [pc, #164]	; (4b00 <system_clock_source_dpll_set_config+0xb8>)
    4a5c:	4798      	blx	r3
	tmpldrfrac = tmpldr & 0x0f;
    4a5e:	220f      	movs	r2, #15
    4a60:	4002      	ands	r2, r0
	tmpldr = (tmpldr >> 4) - 1;
    4a62:	0903      	lsrs	r3, r0, #4

	OSCCTRL->DPLLCTRLA.reg =
			((uint32_t)config->on_demand << OSCCTRL_DPLLCTRLA_ONDEMAND_Pos) |
    4a64:	7821      	ldrb	r1, [r4, #0]
    4a66:	01c9      	lsls	r1, r1, #7
			((uint32_t)config->run_in_standby << OSCCTRL_DPLLCTRLA_RUNSTDBY_Pos);
    4a68:	7866      	ldrb	r6, [r4, #1]
    4a6a:	01b6      	lsls	r6, r6, #6
			((uint32_t)config->on_demand << OSCCTRL_DPLLCTRLA_ONDEMAND_Pos) |
    4a6c:	4331      	orrs	r1, r6
    4a6e:	b2c9      	uxtb	r1, r1
	OSCCTRL->DPLLCTRLA.reg =
    4a70:	4e24      	ldr	r6, [pc, #144]	; (4b04 <system_clock_source_dpll_set_config+0xbc>)
    4a72:	7731      	strb	r1, [r6, #28]

	OSCCTRL->DPLLRATIO.reg =
			OSCCTRL_DPLLRATIO_LDRFRAC(tmpldrfrac) |
    4a74:	0411      	lsls	r1, r2, #16
	tmpldr = (tmpldr >> 4) - 1;
    4a76:	3b01      	subs	r3, #1
			OSCCTRL_DPLLRATIO_LDR(tmpldr);
    4a78:	051b      	lsls	r3, r3, #20
    4a7a:	0d1b      	lsrs	r3, r3, #20
			OSCCTRL_DPLLRATIO_LDRFRAC(tmpldrfrac) |
    4a7c:	430b      	orrs	r3, r1
	OSCCTRL->DPLLRATIO.reg =
    4a7e:	6233      	str	r3, [r6, #32]

	while(OSCCTRL->DPLLSYNCBUSY.reg & OSCCTRL_DPLLSYNCBUSY_DPLLRATIO){
    4a80:	0037      	movs	r7, r6
    4a82:	262c      	movs	r6, #44	; 0x2c
    4a84:	2104      	movs	r1, #4
    4a86:	5dbb      	ldrb	r3, [r7, r6]
    4a88:	420b      	tst	r3, r1
    4a8a:	d1fc      	bne.n	4a86 <system_clock_source_dpll_set_config+0x3e>
		}

	OSCCTRL->DPLLCTRLB.reg =
			OSCCTRL_DPLLCTRLB_DIV(config->reference_divider) |
			((uint32_t)config->lock_bypass << OSCCTRL_DPLLCTRLB_LBYPASS_Pos) |
    4a8c:	78a3      	ldrb	r3, [r4, #2]
    4a8e:	031b      	lsls	r3, r3, #12
			OSCCTRL_DPLLCTRLB_LTIME(config->lock_time) |
			OSCCTRL_DPLLCTRLB_REFCLK(config->reference_clock) |
			((uint32_t)config->wake_up_fast << OSCCTRL_DPLLCTRLB_WUF_Pos) |
    4a90:	78e1      	ldrb	r1, [r4, #3]
    4a92:	00c9      	lsls	r1, r1, #3
			((uint32_t)config->low_power_enable << OSCCTRL_DPLLCTRLB_LPEN_Pos) |
    4a94:	430b      	orrs	r3, r1
    4a96:	7921      	ldrb	r1, [r4, #4]
    4a98:	0089      	lsls	r1, r1, #2
    4a9a:	430b      	orrs	r3, r1
			OSCCTRL_DPLLCTRLB_FILTER(config->filter);
    4a9c:	7ca1      	ldrb	r1, [r4, #18]
    4a9e:	2603      	movs	r6, #3
    4aa0:	4031      	ands	r1, r6
			((uint32_t)config->low_power_enable << OSCCTRL_DPLLCTRLB_LPEN_Pos) |
    4aa2:	430b      	orrs	r3, r1
			OSCCTRL_DPLLCTRLB_DIV(config->reference_divider) |
    4aa4:	8a21      	ldrh	r1, [r4, #16]
    4aa6:	0409      	lsls	r1, r1, #16
    4aa8:	4f17      	ldr	r7, [pc, #92]	; (4b08 <system_clock_source_dpll_set_config+0xc0>)
    4aaa:	4039      	ands	r1, r7
			((uint32_t)config->low_power_enable << OSCCTRL_DPLLCTRLB_LPEN_Pos) |
    4aac:	430b      	orrs	r3, r1
			OSCCTRL_DPLLCTRLB_LTIME(config->lock_time) |
    4aae:	7ce1      	ldrb	r1, [r4, #19]
    4ab0:	0209      	lsls	r1, r1, #8
    4ab2:	27e0      	movs	r7, #224	; 0xe0
    4ab4:	00ff      	lsls	r7, r7, #3
    4ab6:	4039      	ands	r1, r7
			((uint32_t)config->low_power_enable << OSCCTRL_DPLLCTRLB_LPEN_Pos) |
    4ab8:	430b      	orrs	r3, r1
			OSCCTRL_DPLLCTRLB_REFCLK(config->reference_clock) |
    4aba:	7d27      	ldrb	r7, [r4, #20]
    4abc:	013f      	lsls	r7, r7, #4
    4abe:	2130      	movs	r1, #48	; 0x30
    4ac0:	4039      	ands	r1, r7
			((uint32_t)config->low_power_enable << OSCCTRL_DPLLCTRLB_LPEN_Pos) |
    4ac2:	430b      	orrs	r3, r1
	OSCCTRL->DPLLCTRLB.reg =
    4ac4:	490f      	ldr	r1, [pc, #60]	; (4b04 <system_clock_source_dpll_set_config+0xbc>)
    4ac6:	624b      	str	r3, [r1, #36]	; 0x24

	OSCCTRL->DPLLPRESC.reg  = OSCCTRL_DPLLPRESC_PRESC(config->prescaler);
    4ac8:	7d63      	ldrb	r3, [r4, #21]
    4aca:	401e      	ands	r6, r3
    4acc:	2328      	movs	r3, #40	; 0x28
    4ace:	54ce      	strb	r6, [r1, r3]
	while(OSCCTRL->DPLLSYNCBUSY.reg & OSCCTRL_DPLLSYNCBUSY_DPLLPRESC){
    4ad0:	000f      	movs	r7, r1
    4ad2:	262c      	movs	r6, #44	; 0x2c
    4ad4:	2108      	movs	r1, #8
    4ad6:	5dbb      	ldrb	r3, [r7, r6]
    4ad8:	420b      	tst	r3, r1
    4ada:	d1fc      	bne.n	4ad6 <system_clock_source_dpll_set_config+0x8e>
	/*
	 * Fck = Fckrx * (LDR + 1 + LDRFRAC / 16) / (2^PRESC)
	 */
	_system_clock_inst.dpll.frequency =
			(refclk *
			 (((tmpldr + 1) << 4) + tmpldrfrac)
    4adc:	230f      	movs	r3, #15
    4ade:	4398      	bics	r0, r3
    4ae0:	1882      	adds	r2, r0, r2
			(refclk *
    4ae2:	436a      	muls	r2, r5
			) >> (4 + config->prescaler);
    4ae4:	7d63      	ldrb	r3, [r4, #21]
    4ae6:	3304      	adds	r3, #4
    4ae8:	40da      	lsrs	r2, r3
	_system_clock_inst.dpll.frequency =
    4aea:	4b08      	ldr	r3, [pc, #32]	; (4b0c <system_clock_source_dpll_set_config+0xc4>)
    4aec:	601a      	str	r2, [r3, #0]
}
    4aee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		refclk = refclk / (2 * (config->reference_divider + 1));
    4af0:	8a01      	ldrh	r1, [r0, #16]
    4af2:	3101      	adds	r1, #1
    4af4:	0049      	lsls	r1, r1, #1
    4af6:	0028      	movs	r0, r5
    4af8:	4b01      	ldr	r3, [pc, #4]	; (4b00 <system_clock_source_dpll_set_config+0xb8>)
    4afa:	4798      	blx	r3
    4afc:	0005      	movs	r5, r0
    4afe:	e7a9      	b.n	4a54 <system_clock_source_dpll_set_config+0xc>
    4b00:	00006269 	.word	0x00006269
    4b04:	40001000 	.word	0x40001000
    4b08:	07ff0000 	.word	0x07ff0000
    4b0c:	20000118 	.word	0x20000118

00004b10 <system_clock_source_enable>:
 *                                 device
 */
enum status_code system_clock_source_enable(
		const enum system_clock_source clock_source)
{
	switch (clock_source) {
    4b10:	2807      	cmp	r0, #7
    4b12:	d803      	bhi.n	4b1c <system_clock_source_enable+0xc>
    4b14:	0080      	lsls	r0, r0, #2
    4b16:	4b18      	ldr	r3, [pc, #96]	; (4b78 <system_clock_source_enable+0x68>)
    4b18:	581b      	ldr	r3, [r3, r0]
    4b1a:	469f      	mov	pc, r3
		/* Always enabled */
		return STATUS_OK;

	default:
		Assert(false);
		return STATUS_ERR_INVALID_ARG;
    4b1c:	2017      	movs	r0, #23
    4b1e:	e029      	b.n	4b74 <system_clock_source_enable+0x64>
		OSCCTRL->OSC48MCTRL.reg |= OSCCTRL_OSC48MCTRL_ENABLE;
    4b20:	4a16      	ldr	r2, [pc, #88]	; (4b7c <system_clock_source_enable+0x6c>)
    4b22:	7d13      	ldrb	r3, [r2, #20]
    4b24:	2102      	movs	r1, #2
    4b26:	430b      	orrs	r3, r1
    4b28:	7513      	strb	r3, [r2, #20]
		return STATUS_OK;
    4b2a:	2000      	movs	r0, #0
    4b2c:	e022      	b.n	4b74 <system_clock_source_enable+0x64>
		OSC32KCTRL->OSC32K.reg |= OSC32KCTRL_OSC32K_ENABLE;
    4b2e:	4a14      	ldr	r2, [pc, #80]	; (4b80 <system_clock_source_enable+0x70>)
    4b30:	6993      	ldr	r3, [r2, #24]
    4b32:	2102      	movs	r1, #2
    4b34:	430b      	orrs	r3, r1
    4b36:	6193      	str	r3, [r2, #24]
	}

	return STATUS_OK;
    4b38:	2000      	movs	r0, #0
		break;
    4b3a:	e01b      	b.n	4b74 <system_clock_source_enable+0x64>
		OSCCTRL->XOSCCTRL.reg |= OSCCTRL_XOSCCTRL_ENABLE;
    4b3c:	4a0f      	ldr	r2, [pc, #60]	; (4b7c <system_clock_source_enable+0x6c>)
    4b3e:	8a13      	ldrh	r3, [r2, #16]
    4b40:	2102      	movs	r1, #2
    4b42:	430b      	orrs	r3, r1
    4b44:	8213      	strh	r3, [r2, #16]
	return STATUS_OK;
    4b46:	2000      	movs	r0, #0
		break;
    4b48:	e014      	b.n	4b74 <system_clock_source_enable+0x64>
		OSC32KCTRL->XOSC32K.reg |= OSC32KCTRL_XOSC32K_ENABLE;
    4b4a:	4a0d      	ldr	r2, [pc, #52]	; (4b80 <system_clock_source_enable+0x70>)
    4b4c:	8a93      	ldrh	r3, [r2, #20]
    4b4e:	2102      	movs	r1, #2
    4b50:	430b      	orrs	r3, r1
    4b52:	8293      	strh	r3, [r2, #20]
	return STATUS_OK;
    4b54:	2000      	movs	r0, #0
		break;
    4b56:	e00d      	b.n	4b74 <system_clock_source_enable+0x64>
		OSCCTRL->DPLLCTRLA.reg |= OSCCTRL_DPLLCTRLA_ENABLE;
    4b58:	4a08      	ldr	r2, [pc, #32]	; (4b7c <system_clock_source_enable+0x6c>)
    4b5a:	7f13      	ldrb	r3, [r2, #28]
    4b5c:	2102      	movs	r1, #2
    4b5e:	430b      	orrs	r3, r1
    4b60:	7713      	strb	r3, [r2, #28]
		while(OSCCTRL->DPLLSYNCBUSY.reg & OSCCTRL_DPLLSYNCBUSY_ENABLE){
    4b62:	0010      	movs	r0, r2
    4b64:	312a      	adds	r1, #42	; 0x2a
    4b66:	2202      	movs	r2, #2
    4b68:	5c43      	ldrb	r3, [r0, r1]
    4b6a:	4213      	tst	r3, r2
    4b6c:	d1fc      	bne.n	4b68 <system_clock_source_enable+0x58>
	return STATUS_OK;
    4b6e:	2000      	movs	r0, #0
    4b70:	e000      	b.n	4b74 <system_clock_source_enable+0x64>
		return STATUS_OK;
    4b72:	2000      	movs	r0, #0
}
    4b74:	4770      	bx	lr
    4b76:	46c0      	nop			; (mov r8, r8)
    4b78:	00009514 	.word	0x00009514
    4b7c:	40001000 	.word	0x40001000
    4b80:	40001400 	.word	0x40001400

00004b84 <system_clock_init>:
 * \note OSC48M is always enabled and if the user selects other clocks for GCLK generators,
 * the OSC48M default enable can be disabled after system_clock_init. Make sure the
 * clock switches successfully before disabling OSC48M.
 */
void system_clock_init(void)
{
    4b84:	b5f0      	push	{r4, r5, r6, r7, lr}
    4b86:	46d6      	mov	lr, sl
    4b88:	464f      	mov	r7, r9
    4b8a:	4646      	mov	r6, r8
    4b8c:	b5c0      	push	{r6, r7, lr}
    4b8e:	b08e      	sub	sp, #56	; 0x38
	/* Various bits in the INTFLAG register can be set to one at startup.
	   This will ensure that these bits are cleared */
	SUPC->INTFLAG.reg = SUPC_INTFLAG_BODVDDRDY | SUPC_INTFLAG_BODVDDDET;
    4b90:	2203      	movs	r2, #3
    4b92:	4b62      	ldr	r3, [pc, #392]	; (4d1c <system_clock_init+0x198>)
    4b94:	609a      	str	r2, [r3, #8]
static inline void system_flash_set_waitstates(uint8_t wait_states)
{
	Assert(NVMCTRL_CTRLB_RWS((uint32_t)wait_states) ==
			((uint32_t)wait_states << NVMCTRL_CTRLB_RWS_Pos));

	NVMCTRL->CTRLB.bit.RWS = wait_states;
    4b96:	4a62      	ldr	r2, [pc, #392]	; (4d20 <system_clock_init+0x19c>)
    4b98:	6853      	ldr	r3, [r2, #4]
    4b9a:	211e      	movs	r1, #30
    4b9c:	438b      	bics	r3, r1
    4b9e:	3918      	subs	r1, #24
    4ba0:	430b      	orrs	r3, r1
    4ba2:	6053      	str	r3, [r2, #4]
	config->external_clock    = SYSTEM_CLOCK_EXTERNAL_CRYSTAL;
    4ba4:	a80a      	add	r0, sp, #40	; 0x28
    4ba6:	2300      	movs	r3, #0
    4ba8:	7003      	strb	r3, [r0, #0]
	config->auto_gain_control = false;
    4baa:	7083      	strb	r3, [r0, #2]
	config->frequency         = 12000000UL;
    4bac:	4a5d      	ldr	r2, [pc, #372]	; (4d24 <system_clock_init+0x1a0>)
    4bae:	6042      	str	r2, [r0, #4]
	config->run_in_standby    = false;
    4bb0:	7203      	strb	r3, [r0, #8]
	config->on_demand         = false;
    4bb2:	7243      	strb	r3, [r0, #9]
	config->clock_failure_detector_prescaler = SYSTEM_CLOCK_XOSC_FAILURE_DETECTOR_PRESCALER_1;
    4bb4:	7283      	strb	r3, [r0, #10]
	config->enable_clock_failure_detector_event_outut = false;
    4bb6:	72c3      	strb	r3, [r0, #11]
	config->enable_clock_failure_detector = false;
    4bb8:	7303      	strb	r3, [r0, #12]
	config->enable_clock_switch_back = false;
    4bba:	7343      	strb	r3, [r0, #13]
#if CONF_CLOCK_XOSC_ENABLE == true
	struct system_clock_source_xosc_config xosc_conf;
	system_clock_source_xosc_get_config_defaults(&xosc_conf);

	xosc_conf.external_clock    = CONF_CLOCK_XOSC_EXTERNAL_CRYSTAL;
	xosc_conf.startup_time      = CONF_CLOCK_XOSC_STARTUP_TIME;
    4bbc:	330f      	adds	r3, #15
    4bbe:	7043      	strb	r3, [r0, #1]
	xosc_conf.enable_clock_failure_detector    = CONF_CLOCK_XOSC_FAILURE_DETECTOR_ENABLE;
	xosc_conf.enable_clock_failure_detector_event_outut =
		CONF_CLOCK_XOSC_FAILURE_DETECTOR_EVENT_OUTPUT_ENABLE;
	xosc_conf.enable_clock_switch_back = CONF_CLOCK_XOSC_FAILURE_SWITCH_BACK_ENABLE;

	system_clock_source_xosc_set_config(&xosc_conf);
    4bc0:	4b59      	ldr	r3, [pc, #356]	; (4d28 <system_clock_init+0x1a4>)
    4bc2:	4798      	blx	r3
	system_clock_source_enable(SYSTEM_CLOCK_SOURCE_XOSC);
    4bc4:	2000      	movs	r0, #0
    4bc6:	4b59      	ldr	r3, [pc, #356]	; (4d2c <system_clock_init+0x1a8>)
    4bc8:	4798      	blx	r3
		return ((OSCCTRL->STATUS.reg & mask) == mask);
    4bca:	4959      	ldr	r1, [pc, #356]	; (4d30 <system_clock_init+0x1ac>)
    4bcc:	2201      	movs	r2, #1
    4bce:	68cb      	ldr	r3, [r1, #12]
	while(!system_clock_source_is_ready(SYSTEM_CLOCK_SOURCE_XOSC));
    4bd0:	421a      	tst	r2, r3
    4bd2:	d0fc      	beq.n	4bce <system_clock_init+0x4a>
	if (CONF_CLOCK_XOSC_ON_DEMAND || CONF_CLOCK_XOSC_AUTO_GAIN_CONTROL) {
		OSCCTRL->XOSCCTRL.reg |=
    4bd4:	4b56      	ldr	r3, [pc, #344]	; (4d30 <system_clock_init+0x1ac>)
    4bd6:	8a1a      	ldrh	r2, [r3, #16]
    4bd8:	2180      	movs	r1, #128	; 0x80
    4bda:	430a      	orrs	r2, r1
    4bdc:	821a      	strh	r2, [r3, #16]
	system_clock_source_osc32k_set_config(&osc32k_conf);
	system_clock_source_enable(SYSTEM_CLOCK_SOURCE_OSC32K);
#endif

	/* OSC48M */
	OSCCTRL->OSC48MCTRL.reg |= (CONF_CLOCK_OSC48M_ON_DEMAND << OSCCTRL_OSC48MCTRL_ONDEMAND_Pos)
    4bde:	7d1a      	ldrb	r2, [r3, #20]
    4be0:	3140      	adds	r1, #64	; 0x40
    4be2:	430a      	orrs	r2, r1
    4be4:	751a      	strb	r2, [r3, #20]
		while(OSCCTRL->OSC48MSYNCBUSY.reg) ;
	}

	/* GCLK */
#if CONF_CLOCK_CONFIGURE_GCLK == true
	system_gclk_init();
    4be6:	4b53      	ldr	r3, [pc, #332]	; (4d34 <system_clock_init+0x1b0>)
    4be8:	4798      	blx	r3
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->division_factor    = 1;
    4bea:	ac01      	add	r4, sp, #4
    4bec:	2601      	movs	r6, #1
    4bee:	6066      	str	r6, [r4, #4]
	config->high_when_disabled = false;
    4bf0:	2500      	movs	r5, #0
    4bf2:	7065      	strb	r5, [r4, #1]
#elif (SAMC20) || (SAMC21)
	config->source_clock       = GCLK_SOURCE_OSC48M;
#else
	config->source_clock       = GCLK_SOURCE_OSC8M;
#endif
	config->run_in_standby     = false;
    4bf4:	7225      	strb	r5, [r4, #8]
	config->output_enable      = false;
    4bf6:	7265      	strb	r5, [r4, #9]

	/* Configure all GCLK generators except for the main generator, which
	 * is configured later after all other clock systems are set up */
	MREPEAT(GCLK_GEN_NUM, _CONF_CLOCK_GCLK_CONFIG_NONMAIN, ~);
    4bf8:	7025      	strb	r5, [r4, #0]
    4bfa:	0021      	movs	r1, r4
    4bfc:	2001      	movs	r0, #1
    4bfe:	4b4e      	ldr	r3, [pc, #312]	; (4d38 <system_clock_init+0x1b4>)
    4c00:	4698      	mov	r8, r3
    4c02:	4798      	blx	r3
    4c04:	2001      	movs	r0, #1
    4c06:	4f4d      	ldr	r7, [pc, #308]	; (4d3c <system_clock_init+0x1b8>)
    4c08:	47b8      	blx	r7
	config->division_factor    = 1;
    4c0a:	6066      	str	r6, [r4, #4]
	config->high_when_disabled = false;
    4c0c:	7065      	strb	r5, [r4, #1]
	config->source_clock       = GCLK_SOURCE_OSC48M;
    4c0e:	2306      	movs	r3, #6
    4c10:	4699      	mov	r9, r3
    4c12:	7023      	strb	r3, [r4, #0]
	config->output_enable      = false;
    4c14:	7265      	strb	r5, [r4, #9]
    4c16:	7226      	strb	r6, [r4, #8]
    4c18:	0021      	movs	r1, r4
    4c1a:	2002      	movs	r0, #2
    4c1c:	47c0      	blx	r8
    4c1e:	2002      	movs	r0, #2
    4c20:	47b8      	blx	r7
	config->division_factor    = 1;
    4c22:	6066      	str	r6, [r4, #4]
	config->high_when_disabled = false;
    4c24:	7065      	strb	r5, [r4, #1]
	config->output_enable      = false;
    4c26:	7265      	strb	r5, [r4, #9]
    4c28:	2307      	movs	r3, #7
    4c2a:	469a      	mov	sl, r3
    4c2c:	7023      	strb	r3, [r4, #0]
    4c2e:	7226      	strb	r6, [r4, #8]
    4c30:	0021      	movs	r1, r4
    4c32:	2003      	movs	r0, #3
    4c34:	47c0      	blx	r8
    4c36:	2003      	movs	r0, #3
    4c38:	47b8      	blx	r7
	config->division_factor    = 1;
    4c3a:	6066      	str	r6, [r4, #4]
	config->high_when_disabled = false;
    4c3c:	7065      	strb	r5, [r4, #1]
	config->source_clock       = GCLK_SOURCE_OSC48M;
    4c3e:	464b      	mov	r3, r9
    4c40:	7023      	strb	r3, [r4, #0]
	config->run_in_standby     = false;
    4c42:	7225      	strb	r5, [r4, #8]
	config->output_enable      = false;
    4c44:	7265      	strb	r5, [r4, #9]
    4c46:	0021      	movs	r1, r4
    4c48:	2004      	movs	r0, #4
    4c4a:	47c0      	blx	r8
    4c4c:	2004      	movs	r0, #4
    4c4e:	47b8      	blx	r7
	config->high_when_disabled = false;
    4c50:	7065      	strb	r5, [r4, #1]
	config->source_clock       = GCLK_SOURCE_OSC48M;
    4c52:	464b      	mov	r3, r9
    4c54:	7023      	strb	r3, [r4, #0]
	config->run_in_standby     = false;
    4c56:	7225      	strb	r5, [r4, #8]
	config->output_enable      = false;
    4c58:	7265      	strb	r5, [r4, #9]
    4c5a:	2328      	movs	r3, #40	; 0x28
    4c5c:	6063      	str	r3, [r4, #4]
    4c5e:	0021      	movs	r1, r4
    4c60:	2005      	movs	r0, #5
    4c62:	47c0      	blx	r8
    4c64:	2005      	movs	r0, #5
    4c66:	47b8      	blx	r7
	config->division_factor    = 1;
    4c68:	6066      	str	r6, [r4, #4]
	config->high_when_disabled = false;
    4c6a:	7065      	strb	r5, [r4, #1]
	config->source_clock       = GCLK_SOURCE_OSC48M;
    4c6c:	464b      	mov	r3, r9
    4c6e:	7023      	strb	r3, [r4, #0]
	config->run_in_standby     = false;
    4c70:	7225      	strb	r5, [r4, #8]
	config->output_enable      = false;
    4c72:	7265      	strb	r5, [r4, #9]
    4c74:	0021      	movs	r1, r4
    4c76:	2006      	movs	r0, #6
    4c78:	47c0      	blx	r8
    4c7a:	2006      	movs	r0, #6
    4c7c:	47b8      	blx	r7
	config->division_factor    = 1;
    4c7e:	6066      	str	r6, [r4, #4]
	config->high_when_disabled = false;
    4c80:	7065      	strb	r5, [r4, #1]
	config->source_clock       = GCLK_SOURCE_OSC48M;
    4c82:	464b      	mov	r3, r9
    4c84:	7023      	strb	r3, [r4, #0]
	config->run_in_standby     = false;
    4c86:	7225      	strb	r5, [r4, #8]
	config->output_enable      = false;
    4c88:	7265      	strb	r5, [r4, #9]
    4c8a:	0021      	movs	r1, r4
    4c8c:	2007      	movs	r0, #7
    4c8e:	47c0      	blx	r8
    4c90:	2007      	movs	r0, #7
    4c92:	47b8      	blx	r7
	config->division_factor    = 1;
    4c94:	6066      	str	r6, [r4, #4]
	config->high_when_disabled = false;
    4c96:	7065      	strb	r5, [r4, #1]
	config->run_in_standby     = false;
    4c98:	7225      	strb	r5, [r4, #8]
	config->output_enable      = false;
    4c9a:	7265      	strb	r5, [r4, #9]
    4c9c:	4653      	mov	r3, sl
    4c9e:	7023      	strb	r3, [r4, #0]
    4ca0:	0021      	movs	r1, r4
    4ca2:	2008      	movs	r0, #8
    4ca4:	47c0      	blx	r8
    4ca6:	2008      	movs	r0, #8
    4ca8:	47b8      	blx	r7
	config->lock_bypass         = false;
    4caa:	a804      	add	r0, sp, #16
    4cac:	7085      	strb	r5, [r0, #2]
	config->wake_up_fast        = false;
    4cae:	70c5      	strb	r5, [r0, #3]
	config->low_power_enable    = false;
    4cb0:	7105      	strb	r5, [r0, #4]
	config->output_frequency    = 48000000;
    4cb2:	4b23      	ldr	r3, [pc, #140]	; (4d40 <system_clock_init+0x1bc>)
    4cb4:	6083      	str	r3, [r0, #8]
	config->prescaler           = SYSTEM_CLOCK_SOURCE_DPLL_DIV_1;
    4cb6:	7545      	strb	r5, [r0, #21]
	config->lock_time           = SYSTEM_CLOCK_SOURCE_DPLL_LOCK_TIME_DEFAULT;
    4cb8:	74c5      	strb	r5, [r0, #19]
	config->filter              = SYSTEM_CLOCK_SOURCE_DPLL_FILTER_DEFAULT;
    4cba:	7485      	strb	r5, [r0, #18]
		Assert(false);
	}
	struct system_clock_source_dpll_config dpll_config;
	system_clock_source_dpll_get_config_defaults(&dpll_config);

	dpll_config.on_demand        = false;
    4cbc:	7005      	strb	r5, [r0, #0]
	dpll_config.run_in_standby   = CONF_CLOCK_DPLL_RUN_IN_STANDBY;
    4cbe:	7046      	strb	r6, [r0, #1]
	dpll_config.wake_up_fast     = CONF_CLOCK_DPLL_WAKE_UP_FAST;
	dpll_config.low_power_enable = CONF_CLOCK_DPLL_LOW_POWER_ENABLE;

	dpll_config.filter           = CONF_CLOCK_DPLL_FILTER;

	dpll_config.reference_clock     = CONF_CLOCK_DPLL_REFERENCE_CLOCK;
    4cc0:	7506      	strb	r6, [r0, #20]
	dpll_config.reference_frequency = CONF_CLOCK_DPLL_REFERENCE_FREQUENCY;
    4cc2:	4b18      	ldr	r3, [pc, #96]	; (4d24 <system_clock_init+0x1a0>)
    4cc4:	60c3      	str	r3, [r0, #12]
	dpll_config.reference_divider   = CONF_CLOCK_DPLL_REFERENCE_DIVIDER;
    4cc6:	2378      	movs	r3, #120	; 0x78
    4cc8:	33ff      	adds	r3, #255	; 0xff
    4cca:	8203      	strh	r3, [r0, #16]
	dpll_config.output_frequency    = CONF_CLOCK_DPLL_OUTPUT_FREQUENCY;
	dpll_config.prescaler           = CONF_CLOCK_DPLL_PRESCALER;

	system_clock_source_dpll_set_config(&dpll_config);
    4ccc:	4b1d      	ldr	r3, [pc, #116]	; (4d44 <system_clock_init+0x1c0>)
    4cce:	4798      	blx	r3
	system_clock_source_enable(SYSTEM_CLOCK_SOURCE_DPLL);
    4cd0:	2007      	movs	r0, #7
    4cd2:	4b16      	ldr	r3, [pc, #88]	; (4d2c <system_clock_init+0x1a8>)
    4cd4:	4798      	blx	r3
		return ((OSCCTRL->DPLLSTATUS.reg &
    4cd6:	4816      	ldr	r0, [pc, #88]	; (4d30 <system_clock_init+0x1ac>)
    4cd8:	2130      	movs	r1, #48	; 0x30
	while(!system_clock_source_is_ready(SYSTEM_CLOCK_SOURCE_DPLL));
    4cda:	2203      	movs	r2, #3
		return ((OSCCTRL->DPLLSTATUS.reg &
    4cdc:	5c43      	ldrb	r3, [r0, r1]
	while(!system_clock_source_is_ready(SYSTEM_CLOCK_SOURCE_DPLL));
    4cde:	4013      	ands	r3, r2
    4ce0:	2b03      	cmp	r3, #3
    4ce2:	d1fb      	bne.n	4cdc <system_clock_init+0x158>
	if (CONF_CLOCK_DPLL_ON_DEMAND) {
		OSCCTRL->DPLLCTRLA.bit.ONDEMAND = 1;
    4ce4:	4a12      	ldr	r2, [pc, #72]	; (4d30 <system_clock_init+0x1ac>)
    4ce6:	7f11      	ldrb	r1, [r2, #28]
    4ce8:	3b83      	subs	r3, #131	; 0x83
    4cea:	430b      	orrs	r3, r1
    4cec:	7713      	strb	r3, [r2, #28]
	MCLK->CPUDIV.reg = MCLK_CPUDIV_CPUDIV(1 << divider);
    4cee:	2301      	movs	r3, #1
    4cf0:	4a15      	ldr	r2, [pc, #84]	; (4d48 <system_clock_init+0x1c4>)
    4cf2:	7113      	strb	r3, [r2, #4]
	config->division_factor    = 1;
    4cf4:	a901      	add	r1, sp, #4
    4cf6:	604b      	str	r3, [r1, #4]
	config->high_when_disabled = false;
    4cf8:	2300      	movs	r3, #0
    4cfa:	704b      	strb	r3, [r1, #1]
	config->run_in_standby     = false;
    4cfc:	720b      	strb	r3, [r1, #8]
	config->output_enable      = false;
    4cfe:	724b      	strb	r3, [r1, #9]
	system_cpu_clock_set_divider(CONF_CLOCK_CPU_DIVIDER);

	/* GCLK 0 */
#if CONF_CLOCK_CONFIGURE_GCLK == true
	/* Configure the main GCLK last as it might depend on other generators */
	_CONF_CLOCK_GCLK_CONFIG(0, ~);
    4d00:	3307      	adds	r3, #7
    4d02:	700b      	strb	r3, [r1, #0]
    4d04:	2000      	movs	r0, #0
    4d06:	4b0c      	ldr	r3, [pc, #48]	; (4d38 <system_clock_init+0x1b4>)
    4d08:	4798      	blx	r3
    4d0a:	2000      	movs	r0, #0
    4d0c:	4b0b      	ldr	r3, [pc, #44]	; (4d3c <system_clock_init+0x1b8>)
    4d0e:	4798      	blx	r3
#endif

}
    4d10:	b00e      	add	sp, #56	; 0x38
    4d12:	bc1c      	pop	{r2, r3, r4}
    4d14:	4690      	mov	r8, r2
    4d16:	4699      	mov	r9, r3
    4d18:	46a2      	mov	sl, r4
    4d1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4d1c:	40001800 	.word	0x40001800
    4d20:	41004000 	.word	0x41004000
    4d24:	00b71b00 	.word	0x00b71b00
    4d28:	00004935 	.word	0x00004935
    4d2c:	00004b11 	.word	0x00004b11
    4d30:	40001000 	.word	0x40001000
    4d34:	00004d4d 	.word	0x00004d4d
    4d38:	00004d71 	.word	0x00004d71
    4d3c:	00004e1d 	.word	0x00004e1d
    4d40:	02dc6c00 	.word	0x02dc6c00
    4d44:	00004a49 	.word	0x00004a49
    4d48:	40000800 	.word	0x40000800

00004d4c <system_gclk_init>:
    4d4c:	4a06      	ldr	r2, [pc, #24]	; (4d68 <system_gclk_init+0x1c>)
    4d4e:	6953      	ldr	r3, [r2, #20]
    4d50:	2180      	movs	r1, #128	; 0x80
    4d52:	430b      	orrs	r3, r1
    4d54:	6153      	str	r3, [r2, #20]
    4d56:	2201      	movs	r2, #1
    4d58:	4b04      	ldr	r3, [pc, #16]	; (4d6c <system_gclk_init+0x20>)
    4d5a:	701a      	strb	r2, [r3, #0]
    4d5c:	0019      	movs	r1, r3
    4d5e:	780b      	ldrb	r3, [r1, #0]
    4d60:	4213      	tst	r3, r2
    4d62:	d1fc      	bne.n	4d5e <system_gclk_init+0x12>
    4d64:	4770      	bx	lr
    4d66:	46c0      	nop			; (mov r8, r8)
    4d68:	40000800 	.word	0x40000800
    4d6c:	40001c00 	.word	0x40001c00

00004d70 <system_gclk_gen_set_config>:
    4d70:	b570      	push	{r4, r5, r6, lr}
    4d72:	0004      	movs	r4, r0
    4d74:	780d      	ldrb	r5, [r1, #0]
    4d76:	784b      	ldrb	r3, [r1, #1]
    4d78:	2b00      	cmp	r3, #0
    4d7a:	d002      	beq.n	4d82 <system_gclk_gen_set_config+0x12>
    4d7c:	2380      	movs	r3, #128	; 0x80
    4d7e:	00db      	lsls	r3, r3, #3
    4d80:	431d      	orrs	r5, r3
    4d82:	7a4b      	ldrb	r3, [r1, #9]
    4d84:	2b00      	cmp	r3, #0
    4d86:	d002      	beq.n	4d8e <system_gclk_gen_set_config+0x1e>
    4d88:	2380      	movs	r3, #128	; 0x80
    4d8a:	011b      	lsls	r3, r3, #4
    4d8c:	431d      	orrs	r5, r3
    4d8e:	6848      	ldr	r0, [r1, #4]
    4d90:	2801      	cmp	r0, #1
    4d92:	d90f      	bls.n	4db4 <system_gclk_gen_set_config+0x44>
    4d94:	1e43      	subs	r3, r0, #1
    4d96:	4218      	tst	r0, r3
    4d98:	d131      	bne.n	4dfe <system_gclk_gen_set_config+0x8e>
    4d9a:	2802      	cmp	r0, #2
    4d9c:	d92d      	bls.n	4dfa <system_gclk_gen_set_config+0x8a>
    4d9e:	2302      	movs	r3, #2
    4da0:	2200      	movs	r2, #0
    4da2:	3201      	adds	r2, #1
    4da4:	005b      	lsls	r3, r3, #1
    4da6:	4298      	cmp	r0, r3
    4da8:	d8fb      	bhi.n	4da2 <system_gclk_gen_set_config+0x32>
    4daa:	2380      	movs	r3, #128	; 0x80
    4dac:	015b      	lsls	r3, r3, #5
    4dae:	431d      	orrs	r5, r3
    4db0:	0412      	lsls	r2, r2, #16
    4db2:	4315      	orrs	r5, r2
    4db4:	7a0b      	ldrb	r3, [r1, #8]
    4db6:	2b00      	cmp	r3, #0
    4db8:	d002      	beq.n	4dc0 <system_gclk_gen_set_config+0x50>
    4dba:	2380      	movs	r3, #128	; 0x80
    4dbc:	019b      	lsls	r3, r3, #6
    4dbe:	431d      	orrs	r5, r3
    4dc0:	2604      	movs	r6, #4
    4dc2:	40a6      	lsls	r6, r4
    4dc4:	4911      	ldr	r1, [pc, #68]	; (4e0c <system_gclk_gen_set_config+0x9c>)
    4dc6:	4a12      	ldr	r2, [pc, #72]	; (4e10 <system_gclk_gen_set_config+0xa0>)
    4dc8:	684b      	ldr	r3, [r1, #4]
    4dca:	4013      	ands	r3, r2
    4dcc:	421e      	tst	r6, r3
    4dce:	d1fb      	bne.n	4dc8 <system_gclk_gen_set_config+0x58>
    4dd0:	4b10      	ldr	r3, [pc, #64]	; (4e14 <system_gclk_gen_set_config+0xa4>)
    4dd2:	4798      	blx	r3
    4dd4:	00a4      	lsls	r4, r4, #2
    4dd6:	4b0d      	ldr	r3, [pc, #52]	; (4e0c <system_gclk_gen_set_config+0x9c>)
    4dd8:	469c      	mov	ip, r3
    4dda:	4464      	add	r4, ip
    4ddc:	6a22      	ldr	r2, [r4, #32]
    4dde:	2380      	movs	r3, #128	; 0x80
    4de0:	005b      	lsls	r3, r3, #1
    4de2:	401a      	ands	r2, r3
    4de4:	432a      	orrs	r2, r5
    4de6:	6222      	str	r2, [r4, #32]
    4de8:	4661      	mov	r1, ip
    4dea:	4a09      	ldr	r2, [pc, #36]	; (4e10 <system_gclk_gen_set_config+0xa0>)
    4dec:	684b      	ldr	r3, [r1, #4]
    4dee:	4013      	ands	r3, r2
    4df0:	421e      	tst	r6, r3
    4df2:	d1fb      	bne.n	4dec <system_gclk_gen_set_config+0x7c>
    4df4:	4b08      	ldr	r3, [pc, #32]	; (4e18 <system_gclk_gen_set_config+0xa8>)
    4df6:	4798      	blx	r3
    4df8:	bd70      	pop	{r4, r5, r6, pc}
    4dfa:	2200      	movs	r2, #0
    4dfc:	e7d5      	b.n	4daa <system_gclk_gen_set_config+0x3a>
    4dfe:	0400      	lsls	r0, r0, #16
    4e00:	2380      	movs	r3, #128	; 0x80
    4e02:	009b      	lsls	r3, r3, #2
    4e04:	4318      	orrs	r0, r3
    4e06:	4305      	orrs	r5, r0
    4e08:	e7d4      	b.n	4db4 <system_gclk_gen_set_config+0x44>
    4e0a:	46c0      	nop			; (mov r8, r8)
    4e0c:	40001c00 	.word	0x40001c00
    4e10:	000007fc 	.word	0x000007fc
    4e14:	00004869 	.word	0x00004869
    4e18:	000048a9 	.word	0x000048a9

00004e1c <system_gclk_gen_enable>:
    4e1c:	b510      	push	{r4, lr}
    4e1e:	0004      	movs	r4, r0
    4e20:	2204      	movs	r2, #4
    4e22:	4082      	lsls	r2, r0
    4e24:	4809      	ldr	r0, [pc, #36]	; (4e4c <system_gclk_gen_enable+0x30>)
    4e26:	490a      	ldr	r1, [pc, #40]	; (4e50 <system_gclk_gen_enable+0x34>)
    4e28:	6843      	ldr	r3, [r0, #4]
    4e2a:	400b      	ands	r3, r1
    4e2c:	421a      	tst	r2, r3
    4e2e:	d1fb      	bne.n	4e28 <system_gclk_gen_enable+0xc>
    4e30:	4b08      	ldr	r3, [pc, #32]	; (4e54 <system_gclk_gen_enable+0x38>)
    4e32:	4798      	blx	r3
    4e34:	00a4      	lsls	r4, r4, #2
    4e36:	4b05      	ldr	r3, [pc, #20]	; (4e4c <system_gclk_gen_enable+0x30>)
    4e38:	469c      	mov	ip, r3
    4e3a:	4464      	add	r4, ip
    4e3c:	6a22      	ldr	r2, [r4, #32]
    4e3e:	2380      	movs	r3, #128	; 0x80
    4e40:	005b      	lsls	r3, r3, #1
    4e42:	4313      	orrs	r3, r2
    4e44:	6223      	str	r3, [r4, #32]
    4e46:	4b04      	ldr	r3, [pc, #16]	; (4e58 <system_gclk_gen_enable+0x3c>)
    4e48:	4798      	blx	r3
    4e4a:	bd10      	pop	{r4, pc}
    4e4c:	40001c00 	.word	0x40001c00
    4e50:	000007fc 	.word	0x000007fc
    4e54:	00004869 	.word	0x00004869
    4e58:	000048a9 	.word	0x000048a9

00004e5c <system_gclk_gen_get_hz>:
    4e5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4e5e:	0004      	movs	r4, r0
    4e60:	2204      	movs	r2, #4
    4e62:	4082      	lsls	r2, r0
    4e64:	4812      	ldr	r0, [pc, #72]	; (4eb0 <system_gclk_gen_get_hz+0x54>)
    4e66:	4913      	ldr	r1, [pc, #76]	; (4eb4 <system_gclk_gen_get_hz+0x58>)
    4e68:	6843      	ldr	r3, [r0, #4]
    4e6a:	400b      	ands	r3, r1
    4e6c:	421a      	tst	r2, r3
    4e6e:	d1fb      	bne.n	4e68 <system_gclk_gen_get_hz+0xc>
    4e70:	4b11      	ldr	r3, [pc, #68]	; (4eb8 <system_gclk_gen_get_hz+0x5c>)
    4e72:	4798      	blx	r3
    4e74:	4f0e      	ldr	r7, [pc, #56]	; (4eb0 <system_gclk_gen_get_hz+0x54>)
    4e76:	3408      	adds	r4, #8
    4e78:	00a4      	lsls	r4, r4, #2
    4e7a:	59e0      	ldr	r0, [r4, r7]
    4e7c:	0740      	lsls	r0, r0, #29
    4e7e:	0f40      	lsrs	r0, r0, #29
    4e80:	4b0e      	ldr	r3, [pc, #56]	; (4ebc <system_gclk_gen_get_hz+0x60>)
    4e82:	4798      	blx	r3
    4e84:	0006      	movs	r6, r0
    4e86:	59e5      	ldr	r5, [r4, r7]
    4e88:	04ed      	lsls	r5, r5, #19
    4e8a:	0fed      	lsrs	r5, r5, #31
    4e8c:	59e4      	ldr	r4, [r4, r7]
    4e8e:	0c24      	lsrs	r4, r4, #16
    4e90:	4b0b      	ldr	r3, [pc, #44]	; (4ec0 <system_gclk_gen_get_hz+0x64>)
    4e92:	4798      	blx	r3
    4e94:	2d00      	cmp	r5, #0
    4e96:	d107      	bne.n	4ea8 <system_gclk_gen_get_hz+0x4c>
    4e98:	2c01      	cmp	r4, #1
    4e9a:	d907      	bls.n	4eac <system_gclk_gen_get_hz+0x50>
    4e9c:	0021      	movs	r1, r4
    4e9e:	0030      	movs	r0, r6
    4ea0:	4b08      	ldr	r3, [pc, #32]	; (4ec4 <system_gclk_gen_get_hz+0x68>)
    4ea2:	4798      	blx	r3
    4ea4:	0006      	movs	r6, r0
    4ea6:	e001      	b.n	4eac <system_gclk_gen_get_hz+0x50>
    4ea8:	3401      	adds	r4, #1
    4eaa:	40e6      	lsrs	r6, r4
    4eac:	0030      	movs	r0, r6
    4eae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4eb0:	40001c00 	.word	0x40001c00
    4eb4:	000007fc 	.word	0x000007fc
    4eb8:	00004869 	.word	0x00004869
    4ebc:	000048d9 	.word	0x000048d9
    4ec0:	000048a9 	.word	0x000048a9
    4ec4:	00006269 	.word	0x00006269

00004ec8 <system_gclk_chan_enable>:
    4ec8:	b510      	push	{r4, lr}
    4eca:	0004      	movs	r4, r0
    4ecc:	4b09      	ldr	r3, [pc, #36]	; (4ef4 <system_gclk_chan_enable+0x2c>)
    4ece:	4798      	blx	r3
    4ed0:	00a0      	lsls	r0, r4, #2
    4ed2:	4b09      	ldr	r3, [pc, #36]	; (4ef8 <system_gclk_chan_enable+0x30>)
    4ed4:	469c      	mov	ip, r3
    4ed6:	4460      	add	r0, ip
    4ed8:	2280      	movs	r2, #128	; 0x80
    4eda:	5883      	ldr	r3, [r0, r2]
    4edc:	2140      	movs	r1, #64	; 0x40
    4ede:	430b      	orrs	r3, r1
    4ee0:	5083      	str	r3, [r0, r2]
    4ee2:	3140      	adds	r1, #64	; 0x40
    4ee4:	3a40      	subs	r2, #64	; 0x40
    4ee6:	5843      	ldr	r3, [r0, r1]
    4ee8:	421a      	tst	r2, r3
    4eea:	d0fc      	beq.n	4ee6 <system_gclk_chan_enable+0x1e>
    4eec:	4b03      	ldr	r3, [pc, #12]	; (4efc <system_gclk_chan_enable+0x34>)
    4eee:	4798      	blx	r3
    4ef0:	bd10      	pop	{r4, pc}
    4ef2:	46c0      	nop			; (mov r8, r8)
    4ef4:	00004869 	.word	0x00004869
    4ef8:	40001c00 	.word	0x40001c00
    4efc:	000048a9 	.word	0x000048a9

00004f00 <system_gclk_chan_disable>:
    4f00:	b510      	push	{r4, lr}
    4f02:	0004      	movs	r4, r0
    4f04:	4b09      	ldr	r3, [pc, #36]	; (4f2c <system_gclk_chan_disable+0x2c>)
    4f06:	4798      	blx	r3
    4f08:	00a0      	lsls	r0, r4, #2
    4f0a:	4b09      	ldr	r3, [pc, #36]	; (4f30 <system_gclk_chan_disable+0x30>)
    4f0c:	469c      	mov	ip, r3
    4f0e:	4460      	add	r0, ip
    4f10:	2280      	movs	r2, #128	; 0x80
    4f12:	5883      	ldr	r3, [r0, r2]
    4f14:	2140      	movs	r1, #64	; 0x40
    4f16:	438b      	bics	r3, r1
    4f18:	5083      	str	r3, [r0, r2]
    4f1a:	3140      	adds	r1, #64	; 0x40
    4f1c:	3a40      	subs	r2, #64	; 0x40
    4f1e:	5843      	ldr	r3, [r0, r1]
    4f20:	421a      	tst	r2, r3
    4f22:	d1fc      	bne.n	4f1e <system_gclk_chan_disable+0x1e>
    4f24:	4b03      	ldr	r3, [pc, #12]	; (4f34 <system_gclk_chan_disable+0x34>)
    4f26:	4798      	blx	r3
    4f28:	bd10      	pop	{r4, pc}
    4f2a:	46c0      	nop			; (mov r8, r8)
    4f2c:	00004869 	.word	0x00004869
    4f30:	40001c00 	.word	0x40001c00
    4f34:	000048a9 	.word	0x000048a9

00004f38 <system_gclk_chan_set_config>:
    4f38:	b570      	push	{r4, r5, r6, lr}
    4f3a:	0004      	movs	r4, r0
    4f3c:	000d      	movs	r5, r1
    4f3e:	4b05      	ldr	r3, [pc, #20]	; (4f54 <system_gclk_chan_set_config+0x1c>)
    4f40:	4798      	blx	r3
    4f42:	782a      	ldrb	r2, [r5, #0]
    4f44:	230f      	movs	r3, #15
    4f46:	4013      	ands	r3, r2
    4f48:	3420      	adds	r4, #32
    4f4a:	00a4      	lsls	r4, r4, #2
    4f4c:	4a02      	ldr	r2, [pc, #8]	; (4f58 <system_gclk_chan_set_config+0x20>)
    4f4e:	50a3      	str	r3, [r4, r2]
    4f50:	bd70      	pop	{r4, r5, r6, pc}
    4f52:	46c0      	nop			; (mov r8, r8)
    4f54:	00004f01 	.word	0x00004f01
    4f58:	40001c00 	.word	0x40001c00

00004f5c <system_gclk_chan_get_hz>:
    4f5c:	b510      	push	{r4, lr}
    4f5e:	0004      	movs	r4, r0
    4f60:	4b06      	ldr	r3, [pc, #24]	; (4f7c <system_gclk_chan_get_hz+0x20>)
    4f62:	4798      	blx	r3
    4f64:	3420      	adds	r4, #32
    4f66:	00a4      	lsls	r4, r4, #2
    4f68:	4b05      	ldr	r3, [pc, #20]	; (4f80 <system_gclk_chan_get_hz+0x24>)
    4f6a:	58e4      	ldr	r4, [r4, r3]
    4f6c:	0724      	lsls	r4, r4, #28
    4f6e:	0f24      	lsrs	r4, r4, #28
    4f70:	4b04      	ldr	r3, [pc, #16]	; (4f84 <system_gclk_chan_get_hz+0x28>)
    4f72:	4798      	blx	r3
    4f74:	0020      	movs	r0, r4
    4f76:	4b04      	ldr	r3, [pc, #16]	; (4f88 <system_gclk_chan_get_hz+0x2c>)
    4f78:	4798      	blx	r3
    4f7a:	bd10      	pop	{r4, pc}
    4f7c:	00004869 	.word	0x00004869
    4f80:	40001c00 	.word	0x40001c00
    4f84:	000048a9 	.word	0x000048a9
    4f88:	00004e5d 	.word	0x00004e5d

00004f8c <_system_pinmux_config>:
    4f8c:	b530      	push	{r4, r5, lr}
    4f8e:	78d3      	ldrb	r3, [r2, #3]
    4f90:	2b00      	cmp	r3, #0
    4f92:	d135      	bne.n	5000 <_system_pinmux_config+0x74>
    4f94:	7813      	ldrb	r3, [r2, #0]
    4f96:	2b80      	cmp	r3, #128	; 0x80
    4f98:	d029      	beq.n	4fee <_system_pinmux_config+0x62>
    4f9a:	061b      	lsls	r3, r3, #24
    4f9c:	2480      	movs	r4, #128	; 0x80
    4f9e:	0264      	lsls	r4, r4, #9
    4fa0:	4323      	orrs	r3, r4
    4fa2:	7854      	ldrb	r4, [r2, #1]
    4fa4:	2502      	movs	r5, #2
    4fa6:	43ac      	bics	r4, r5
    4fa8:	d106      	bne.n	4fb8 <_system_pinmux_config+0x2c>
    4faa:	7894      	ldrb	r4, [r2, #2]
    4fac:	2c00      	cmp	r4, #0
    4fae:	d120      	bne.n	4ff2 <_system_pinmux_config+0x66>
    4fb0:	2480      	movs	r4, #128	; 0x80
    4fb2:	02a4      	lsls	r4, r4, #10
    4fb4:	4323      	orrs	r3, r4
    4fb6:	6041      	str	r1, [r0, #4]
    4fb8:	7854      	ldrb	r4, [r2, #1]
    4fba:	3c01      	subs	r4, #1
    4fbc:	2c01      	cmp	r4, #1
    4fbe:	d91c      	bls.n	4ffa <_system_pinmux_config+0x6e>
    4fc0:	040d      	lsls	r5, r1, #16
    4fc2:	0c2d      	lsrs	r5, r5, #16
    4fc4:	24a0      	movs	r4, #160	; 0xa0
    4fc6:	05e4      	lsls	r4, r4, #23
    4fc8:	432c      	orrs	r4, r5
    4fca:	431c      	orrs	r4, r3
    4fcc:	6284      	str	r4, [r0, #40]	; 0x28
    4fce:	0c0d      	lsrs	r5, r1, #16
    4fd0:	24d0      	movs	r4, #208	; 0xd0
    4fd2:	0624      	lsls	r4, r4, #24
    4fd4:	432c      	orrs	r4, r5
    4fd6:	431c      	orrs	r4, r3
    4fd8:	6284      	str	r4, [r0, #40]	; 0x28
    4fda:	78d4      	ldrb	r4, [r2, #3]
    4fdc:	2c00      	cmp	r4, #0
    4fde:	d122      	bne.n	5026 <_system_pinmux_config+0x9a>
    4fe0:	035b      	lsls	r3, r3, #13
    4fe2:	d51c      	bpl.n	501e <_system_pinmux_config+0x92>
    4fe4:	7893      	ldrb	r3, [r2, #2]
    4fe6:	2b01      	cmp	r3, #1
    4fe8:	d01e      	beq.n	5028 <_system_pinmux_config+0x9c>
    4fea:	6141      	str	r1, [r0, #20]
    4fec:	e017      	b.n	501e <_system_pinmux_config+0x92>
    4fee:	2300      	movs	r3, #0
    4ff0:	e7d7      	b.n	4fa2 <_system_pinmux_config+0x16>
    4ff2:	24c0      	movs	r4, #192	; 0xc0
    4ff4:	02e4      	lsls	r4, r4, #11
    4ff6:	4323      	orrs	r3, r4
    4ff8:	e7dd      	b.n	4fb6 <_system_pinmux_config+0x2a>
    4ffa:	4c0d      	ldr	r4, [pc, #52]	; (5030 <_system_pinmux_config+0xa4>)
    4ffc:	4023      	ands	r3, r4
    4ffe:	e7df      	b.n	4fc0 <_system_pinmux_config+0x34>
    5000:	6041      	str	r1, [r0, #4]
    5002:	040c      	lsls	r4, r1, #16
    5004:	0c24      	lsrs	r4, r4, #16
    5006:	23a0      	movs	r3, #160	; 0xa0
    5008:	05db      	lsls	r3, r3, #23
    500a:	4323      	orrs	r3, r4
    500c:	6283      	str	r3, [r0, #40]	; 0x28
    500e:	0c0c      	lsrs	r4, r1, #16
    5010:	23d0      	movs	r3, #208	; 0xd0
    5012:	061b      	lsls	r3, r3, #24
    5014:	4323      	orrs	r3, r4
    5016:	6283      	str	r3, [r0, #40]	; 0x28
    5018:	78d3      	ldrb	r3, [r2, #3]
    501a:	2b00      	cmp	r3, #0
    501c:	d103      	bne.n	5026 <_system_pinmux_config+0x9a>
    501e:	7853      	ldrb	r3, [r2, #1]
    5020:	3b01      	subs	r3, #1
    5022:	2b01      	cmp	r3, #1
    5024:	d902      	bls.n	502c <_system_pinmux_config+0xa0>
    5026:	bd30      	pop	{r4, r5, pc}
    5028:	6181      	str	r1, [r0, #24]
    502a:	e7f8      	b.n	501e <_system_pinmux_config+0x92>
    502c:	6081      	str	r1, [r0, #8]
    502e:	e7fa      	b.n	5026 <_system_pinmux_config+0x9a>
    5030:	fffbffff 	.word	0xfffbffff

00005034 <system_pinmux_pin_set_config>:
    5034:	b510      	push	{r4, lr}
    5036:	000a      	movs	r2, r1
    5038:	09c1      	lsrs	r1, r0, #7
    503a:	2300      	movs	r3, #0
    503c:	2900      	cmp	r1, #0
    503e:	d105      	bne.n	504c <system_pinmux_pin_set_config+0x18>
    5040:	0943      	lsrs	r3, r0, #5
    5042:	01db      	lsls	r3, r3, #7
    5044:	2182      	movs	r1, #130	; 0x82
    5046:	05c9      	lsls	r1, r1, #23
    5048:	468c      	mov	ip, r1
    504a:	4463      	add	r3, ip
    504c:	241f      	movs	r4, #31
    504e:	4020      	ands	r0, r4
    5050:	2101      	movs	r1, #1
    5052:	4081      	lsls	r1, r0
    5054:	0018      	movs	r0, r3
    5056:	4b01      	ldr	r3, [pc, #4]	; (505c <system_pinmux_pin_set_config+0x28>)
    5058:	4798      	blx	r3
    505a:	bd10      	pop	{r4, pc}
    505c:	00004f8d 	.word	0x00004f8d

00005060 <_system_dummy_init>:
    5060:	4770      	bx	lr
	...

00005064 <system_init>:
    5064:	b510      	push	{r4, lr}
    5066:	4b05      	ldr	r3, [pc, #20]	; (507c <system_init+0x18>)
    5068:	4798      	blx	r3
    506a:	4b05      	ldr	r3, [pc, #20]	; (5080 <system_init+0x1c>)
    506c:	4798      	blx	r3
    506e:	4b05      	ldr	r3, [pc, #20]	; (5084 <system_init+0x20>)
    5070:	4798      	blx	r3
    5072:	4b05      	ldr	r3, [pc, #20]	; (5088 <system_init+0x24>)
    5074:	4798      	blx	r3
    5076:	4b05      	ldr	r3, [pc, #20]	; (508c <system_init+0x28>)
    5078:	4798      	blx	r3
    507a:	bd10      	pop	{r4, pc}
    507c:	00004b85 	.word	0x00004b85
    5080:	00004865 	.word	0x00004865
    5084:	00005061 	.word	0x00005061
    5088:	0000145d 	.word	0x0000145d
    508c:	00005061 	.word	0x00005061

00005090 <Dummy_Handler>:
    5090:	e7fe      	b.n	5090 <Dummy_Handler>
	...

00005094 <Reset_Handler>:
    5094:	b510      	push	{r4, lr}
    5096:	4a17      	ldr	r2, [pc, #92]	; (50f4 <Reset_Handler+0x60>)
    5098:	4b17      	ldr	r3, [pc, #92]	; (50f8 <Reset_Handler+0x64>)
    509a:	429a      	cmp	r2, r3
    509c:	d011      	beq.n	50c2 <Reset_Handler+0x2e>
    509e:	001a      	movs	r2, r3
    50a0:	4b16      	ldr	r3, [pc, #88]	; (50fc <Reset_Handler+0x68>)
    50a2:	429a      	cmp	r2, r3
    50a4:	d20d      	bcs.n	50c2 <Reset_Handler+0x2e>
    50a6:	4a16      	ldr	r2, [pc, #88]	; (5100 <Reset_Handler+0x6c>)
    50a8:	3303      	adds	r3, #3
    50aa:	1a9b      	subs	r3, r3, r2
    50ac:	089b      	lsrs	r3, r3, #2
    50ae:	3301      	adds	r3, #1
    50b0:	009b      	lsls	r3, r3, #2
    50b2:	2200      	movs	r2, #0
    50b4:	4810      	ldr	r0, [pc, #64]	; (50f8 <Reset_Handler+0x64>)
    50b6:	490f      	ldr	r1, [pc, #60]	; (50f4 <Reset_Handler+0x60>)
    50b8:	588c      	ldr	r4, [r1, r2]
    50ba:	5084      	str	r4, [r0, r2]
    50bc:	3204      	adds	r2, #4
    50be:	429a      	cmp	r2, r3
    50c0:	d1fa      	bne.n	50b8 <Reset_Handler+0x24>
    50c2:	4a10      	ldr	r2, [pc, #64]	; (5104 <Reset_Handler+0x70>)
    50c4:	4b10      	ldr	r3, [pc, #64]	; (5108 <Reset_Handler+0x74>)
    50c6:	429a      	cmp	r2, r3
    50c8:	d20a      	bcs.n	50e0 <Reset_Handler+0x4c>
    50ca:	43d3      	mvns	r3, r2
    50cc:	490e      	ldr	r1, [pc, #56]	; (5108 <Reset_Handler+0x74>)
    50ce:	185b      	adds	r3, r3, r1
    50d0:	2103      	movs	r1, #3
    50d2:	438b      	bics	r3, r1
    50d4:	3304      	adds	r3, #4
    50d6:	189b      	adds	r3, r3, r2
    50d8:	2100      	movs	r1, #0
    50da:	c202      	stmia	r2!, {r1}
    50dc:	4293      	cmp	r3, r2
    50de:	d1fc      	bne.n	50da <Reset_Handler+0x46>
    50e0:	4a0a      	ldr	r2, [pc, #40]	; (510c <Reset_Handler+0x78>)
    50e2:	21ff      	movs	r1, #255	; 0xff
    50e4:	4b0a      	ldr	r3, [pc, #40]	; (5110 <Reset_Handler+0x7c>)
    50e6:	438b      	bics	r3, r1
    50e8:	6093      	str	r3, [r2, #8]
    50ea:	4b0a      	ldr	r3, [pc, #40]	; (5114 <Reset_Handler+0x80>)
    50ec:	4798      	blx	r3
    50ee:	4b0a      	ldr	r3, [pc, #40]	; (5118 <Reset_Handler+0x84>)
    50f0:	4798      	blx	r3
    50f2:	e7fe      	b.n	50f2 <Reset_Handler+0x5e>
    50f4:	00009794 	.word	0x00009794
    50f8:	20000000 	.word	0x20000000
    50fc:	2000009c 	.word	0x2000009c
    5100:	20000004 	.word	0x20000004
    5104:	200000a0 	.word	0x200000a0
    5108:	2000273c 	.word	0x2000273c
    510c:	e000ed00 	.word	0xe000ed00
    5110:	00000000 	.word	0x00000000
    5114:	00008905 	.word	0x00008905
    5118:	00005571 	.word	0x00005571

0000511c <_sbrk>:
    511c:	0003      	movs	r3, r0
    511e:	4a06      	ldr	r2, [pc, #24]	; (5138 <_sbrk+0x1c>)
    5120:	6812      	ldr	r2, [r2, #0]
    5122:	2a00      	cmp	r2, #0
    5124:	d004      	beq.n	5130 <_sbrk+0x14>
    5126:	4a04      	ldr	r2, [pc, #16]	; (5138 <_sbrk+0x1c>)
    5128:	6810      	ldr	r0, [r2, #0]
    512a:	18c3      	adds	r3, r0, r3
    512c:	6013      	str	r3, [r2, #0]
    512e:	4770      	bx	lr
    5130:	4902      	ldr	r1, [pc, #8]	; (513c <_sbrk+0x20>)
    5132:	4a01      	ldr	r2, [pc, #4]	; (5138 <_sbrk+0x1c>)
    5134:	6011      	str	r1, [r2, #0]
    5136:	e7f6      	b.n	5126 <_sbrk+0xa>
    5138:	20000124 	.word	0x20000124
    513c:	20004740 	.word	0x20004740

00005140 <get_menu_mode_string>:
    for (uint8_t i = 0; i < 4; i++) {
        lcd_setCursor(0, i);
        lcd_printstr(menu_string_array[i]);
    }
}
void get_menu_mode_string(char *dest, uint8_t mode) {
    5140:	b510      	push	{r4, lr}
    switch(mode) {
    5142:	2901      	cmp	r1, #1
    5144:	d00d      	beq.n	5162 <get_menu_mode_string+0x22>
    5146:	2900      	cmp	r1, #0
    5148:	d006      	beq.n	5158 <get_menu_mode_string+0x18>
    514a:	2902      	cmp	r1, #2
    514c:	d00e      	beq.n	516c <get_menu_mode_string+0x2c>
            break;
        case 2:
            strcpy(dest, "BOTH");
            break;
        default:
            strcpy(dest, "ERR");
    514e:	2204      	movs	r2, #4
    5150:	4909      	ldr	r1, [pc, #36]	; (5178 <get_menu_mode_string+0x38>)
    5152:	4b0a      	ldr	r3, [pc, #40]	; (517c <get_menu_mode_string+0x3c>)
    5154:	4798      	blx	r3
            break;
    }
}
    5156:	e003      	b.n	5160 <get_menu_mode_string+0x20>
            strcpy(dest, "DMX");
    5158:	2204      	movs	r2, #4
    515a:	4909      	ldr	r1, [pc, #36]	; (5180 <get_menu_mode_string+0x40>)
    515c:	4b07      	ldr	r3, [pc, #28]	; (517c <get_menu_mode_string+0x3c>)
    515e:	4798      	blx	r3
}
    5160:	bd10      	pop	{r4, pc}
            strcpy(dest, "MIDI");
    5162:	2205      	movs	r2, #5
    5164:	4907      	ldr	r1, [pc, #28]	; (5184 <get_menu_mode_string+0x44>)
    5166:	4b05      	ldr	r3, [pc, #20]	; (517c <get_menu_mode_string+0x3c>)
    5168:	4798      	blx	r3
            break;
    516a:	e7f9      	b.n	5160 <get_menu_mode_string+0x20>
            strcpy(dest, "BOTH");
    516c:	2205      	movs	r2, #5
    516e:	4906      	ldr	r1, [pc, #24]	; (5188 <get_menu_mode_string+0x48>)
    5170:	4b02      	ldr	r3, [pc, #8]	; (517c <get_menu_mode_string+0x3c>)
    5172:	4798      	blx	r3
            break;
    5174:	e7f4      	b.n	5160 <get_menu_mode_string+0x20>
    5176:	46c0      	nop			; (mov r8, r8)
    5178:	00009558 	.word	0x00009558
    517c:	00008961 	.word	0x00008961
    5180:	00009544 	.word	0x00009544
    5184:	00009548 	.word	0x00009548
    5188:	00009550 	.word	0x00009550

0000518c <get_menu_enable_string>:
                * (tmp_string + i) = ' ';
    }
    sprintf(dest, "%s", tmp_string);
}

void get_menu_enable_string(char *dest, uint8_t mode) {
    518c:	b510      	push	{r4, lr}
    switch(mode) {
    518e:	2900      	cmp	r1, #0
    5190:	d002      	beq.n	5198 <get_menu_enable_string+0xc>
    5192:	2901      	cmp	r1, #1
    5194:	d005      	beq.n	51a2 <get_menu_enable_string+0x16>
            break;
        case 1:
            strcpy(dest, "ON");
            break;
    }
}
    5196:	bd10      	pop	{r4, pc}
            strcpy(dest, "OFF");
    5198:	2204      	movs	r2, #4
    519a:	4904      	ldr	r1, [pc, #16]	; (51ac <get_menu_enable_string+0x20>)
    519c:	4b04      	ldr	r3, [pc, #16]	; (51b0 <get_menu_enable_string+0x24>)
    519e:	4798      	blx	r3
            break;
    51a0:	e7f9      	b.n	5196 <get_menu_enable_string+0xa>
            strcpy(dest, "ON");
    51a2:	2203      	movs	r2, #3
    51a4:	4903      	ldr	r1, [pc, #12]	; (51b4 <get_menu_enable_string+0x28>)
    51a6:	4b02      	ldr	r3, [pc, #8]	; (51b0 <get_menu_enable_string+0x24>)
    51a8:	4798      	blx	r3
}
    51aa:	e7f4      	b.n	5196 <get_menu_enable_string+0xa>
    51ac:	0000953c 	.word	0x0000953c
    51b0:	00008961 	.word	0x00008961
    51b4:	00009540 	.word	0x00009540

000051b8 <get_menu_confirm_string>:
    if(i == 5)return;
    char input_string[] = "IN ";
    input_string[2] = '0' + p_to_channels[i]->input_channel;
    strcpy(dest, input_string);
}
void get_menu_confirm_string(char *dest, uint8_t num) {
    51b8:	b510      	push	{r4, lr}
    if(num)
    51ba:	2900      	cmp	r1, #0
    51bc:	d108      	bne.n	51d0 <get_menu_confirm_string+0x18>
        strcpy(dest, "YES");
    else
        if(state == SCROLL)
    51be:	4b08      	ldr	r3, [pc, #32]	; (51e0 <get_menu_confirm_string+0x28>)
    51c0:	781b      	ldrb	r3, [r3, #0]
    51c2:	2b00      	cmp	r3, #0
    51c4:	d009      	beq.n	51da <get_menu_confirm_string+0x22>
            strcpy(dest, "");
        else
            strcpy(dest, "NO");
    51c6:	2203      	movs	r2, #3
    51c8:	4906      	ldr	r1, [pc, #24]	; (51e4 <get_menu_confirm_string+0x2c>)
    51ca:	4b07      	ldr	r3, [pc, #28]	; (51e8 <get_menu_confirm_string+0x30>)
    51cc:	4798      	blx	r3

}
    51ce:	bd10      	pop	{r4, pc}
        strcpy(dest, "YES");
    51d0:	2204      	movs	r2, #4
    51d2:	4906      	ldr	r1, [pc, #24]	; (51ec <get_menu_confirm_string+0x34>)
    51d4:	4b04      	ldr	r3, [pc, #16]	; (51e8 <get_menu_confirm_string+0x30>)
    51d6:	4798      	blx	r3
    51d8:	e7f9      	b.n	51ce <get_menu_confirm_string+0x16>
            strcpy(dest, "");
    51da:	7003      	strb	r3, [r0, #0]
    51dc:	e7f7      	b.n	51ce <get_menu_confirm_string+0x16>
    51de:	46c0      	nop			; (mov r8, r8)
    51e0:	200015bd 	.word	0x200015bd
    51e4:	00009538 	.word	0x00009538
    51e8:	00008961 	.word	0x00008961
    51ec:	00009534 	.word	0x00009534

000051f0 <get_menu_bar_string>:
void get_menu_bar_string(char *dest, uint8_t value) {
    51f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    51f2:	b085      	sub	sp, #20
    51f4:	9001      	str	r0, [sp, #4]
    51f6:	000e      	movs	r6, r1
    tmp_string[7] = 0;
    51f8:	2300      	movs	r3, #0
    51fa:	aa02      	add	r2, sp, #8
    51fc:	71d3      	strb	r3, [r2, #7]
    uint32_t tmp_value = value * col_size * 5 / 16;
    51fe:	00cb      	lsls	r3, r1, #3
    5200:	1a5b      	subs	r3, r3, r1
    5202:	009c      	lsls	r4, r3, #2
    5204:	18e3      	adds	r3, r4, r3
    5206:	17da      	asrs	r2, r3, #31
    5208:	240f      	movs	r4, #15
    520a:	4014      	ands	r4, r2
    520c:	18e4      	adds	r4, r4, r3
    520e:	1124      	asrs	r4, r4, #4
                * (tmp_string + i) = tmp_value  % 5;
    5210:	2105      	movs	r1, #5
    5212:	0020      	movs	r0, r4
    5214:	4b0e      	ldr	r3, [pc, #56]	; (5250 <get_menu_bar_string+0x60>)
    5216:	4798      	blx	r3
    5218:	b2c9      	uxtb	r1, r1
    521a:	aa02      	add	r2, sp, #8
    521c:	2305      	movs	r3, #5
                * (tmp_string + i) = ' ';
    521e:	2520      	movs	r5, #32
            * (tmp_string + i) = 5;
    5220:	2705      	movs	r7, #5
    5222:	e00b      	b.n	523c <get_menu_bar_string+0x4c>
            if(tmp_value > (i * 5) && (tmp_value <= (i * 5 + 5)) && value != 0)
    5224:	1f58      	subs	r0, r3, #5
    5226:	4284      	cmp	r4, r0
    5228:	d903      	bls.n	5232 <get_menu_bar_string+0x42>
    522a:	2e00      	cmp	r6, #0
    522c:	d001      	beq.n	5232 <get_menu_bar_string+0x42>
                * (tmp_string + i) = tmp_value  % 5;
    522e:	7011      	strb	r1, [r2, #0]
    5230:	e000      	b.n	5234 <get_menu_bar_string+0x44>
                * (tmp_string + i) = ' ';
    5232:	7015      	strb	r5, [r2, #0]
    5234:	3305      	adds	r3, #5
    5236:	3201      	adds	r2, #1
    for(uint8_t i = 0; i < col_size; i++) {
    5238:	2b28      	cmp	r3, #40	; 0x28
    523a:	d003      	beq.n	5244 <get_menu_bar_string+0x54>
        if(tmp_value >= ((i + 1) * 5))
    523c:	42a3      	cmp	r3, r4
    523e:	d8f1      	bhi.n	5224 <get_menu_bar_string+0x34>
            * (tmp_string + i) = 5;
    5240:	7017      	strb	r7, [r2, #0]
    5242:	e7f7      	b.n	5234 <get_menu_bar_string+0x44>
    sprintf(dest, "%s", tmp_string);
    5244:	a902      	add	r1, sp, #8
    5246:	9801      	ldr	r0, [sp, #4]
    5248:	4b02      	ldr	r3, [pc, #8]	; (5254 <get_menu_bar_string+0x64>)
    524a:	4798      	blx	r3
}
    524c:	b005      	add	sp, #20
    524e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5250:	00006375 	.word	0x00006375
    5254:	00008b3d 	.word	0x00008b3d

00005258 <get_menu_dmx_ch_string>:
void get_menu_dmx_ch_string(char *dest, uint8_t num) {
    5258:	b5f0      	push	{r4, r5, r6, r7, lr}
    525a:	b085      	sub	sp, #20
    525c:	9001      	str	r0, [sp, #4]
    525e:	000e      	movs	r6, r1
    5260:	4d12      	ldr	r5, [pc, #72]	; (52ac <get_menu_dmx_ch_string+0x54>)
    for(i = 0; i < 5; i++) {
    5262:	2400      	movs	r4, #0
            sprintf(dest, "%d", dmx_values[num]);
    5264:	4f12      	ldr	r7, [pc, #72]	; (52b0 <get_menu_dmx_ch_string+0x58>)
    5266:	e009      	b.n	527c <get_menu_dmx_ch_string+0x24>
    5268:	5dba      	ldrb	r2, [r7, r6]
    526a:	4912      	ldr	r1, [pc, #72]	; (52b4 <get_menu_dmx_ch_string+0x5c>)
    526c:	9801      	ldr	r0, [sp, #4]
    526e:	4b12      	ldr	r3, [pc, #72]	; (52b8 <get_menu_dmx_ch_string+0x60>)
    5270:	4798      	blx	r3
    for(i = 0; i < 5; i++) {
    5272:	3401      	adds	r4, #1
    5274:	b2e4      	uxtb	r4, r4
    5276:	3504      	adds	r5, #4
    5278:	2c05      	cmp	r4, #5
    527a:	d014      	beq.n	52a6 <get_menu_dmx_ch_string+0x4e>
        if(p_to_channels[i]->dmx_ch == num && p_to_channels[i]->enabled)break;
    527c:	682b      	ldr	r3, [r5, #0]
    527e:	789a      	ldrb	r2, [r3, #2]
    5280:	42b2      	cmp	r2, r6
    5282:	d1f1      	bne.n	5268 <get_menu_dmx_ch_string+0x10>
    5284:	785b      	ldrb	r3, [r3, #1]
    5286:	2b00      	cmp	r3, #0
    5288:	d0ee      	beq.n	5268 <get_menu_dmx_ch_string+0x10>
    if(i == 5)return;
    528a:	2c05      	cmp	r4, #5
    528c:	d00b      	beq.n	52a6 <get_menu_dmx_ch_string+0x4e>
    char input_string[] = "IN ";
    528e:	a903      	add	r1, sp, #12
    5290:	4b0a      	ldr	r3, [pc, #40]	; (52bc <get_menu_dmx_ch_string+0x64>)
    5292:	9303      	str	r3, [sp, #12]
    input_string[2] = '0' + p_to_channels[i]->input_channel;
    5294:	00a4      	lsls	r4, r4, #2
    5296:	4b05      	ldr	r3, [pc, #20]	; (52ac <get_menu_dmx_ch_string+0x54>)
    5298:	58e3      	ldr	r3, [r4, r3]
    529a:	78db      	ldrb	r3, [r3, #3]
    529c:	3330      	adds	r3, #48	; 0x30
    529e:	708b      	strb	r3, [r1, #2]
    strcpy(dest, input_string);
    52a0:	9801      	ldr	r0, [sp, #4]
    52a2:	4b07      	ldr	r3, [pc, #28]	; (52c0 <get_menu_dmx_ch_string+0x68>)
    52a4:	4798      	blx	r3
}
    52a6:	b005      	add	sp, #20
    52a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    52aa:	46c0      	nop			; (mov r8, r8)
    52ac:	200026d0 	.word	0x200026d0
    52b0:	200025ac 	.word	0x200025ac
    52b4:	000094b0 	.word	0x000094b0
    52b8:	00008af9 	.word	0x00008af9
    52bc:	00204e49 	.word	0x00204e49
    52c0:	00008b3d 	.word	0x00008b3d

000052c4 <NMI_Handler>:
    BREAKPOINT;
    52c4:	46c0      	nop			; (mov r8, r8)
}
    52c6:	4770      	bx	lr

000052c8 <HardFault_Handler>:
    BREAKPOINT;
    52c8:	46c0      	nop			; (mov r8, r8)
}
    52ca:	4770      	bx	lr

000052cc <SVC_Handler>:
    BREAKPOINT;
    52cc:	46c0      	nop			; (mov r8, r8)
}
    52ce:	4770      	bx	lr

000052d0 <PendSV_Handler>:
    BREAKPOINT;
    52d0:	46c0      	nop			; (mov r8, r8)
}
    52d2:	4770      	bx	lr

000052d4 <SysTick_Handler>:
    BREAKPOINT;
    52d4:	46c0      	nop			; (mov r8, r8)
}
    52d6:	4770      	bx	lr

000052d8 <select_device_mode>:
    switch (mode) {
    52d8:	2801      	cmp	r0, #1
    52da:	d004      	beq.n	52e6 <select_device_mode+0xe>
            return DMX;
    52dc:	3802      	subs	r0, #2
    52de:	4243      	negs	r3, r0
    52e0:	4158      	adcs	r0, r3
    52e2:	3001      	adds	r0, #1
}
    52e4:	4770      	bx	lr
            return TRIGGER;
    52e6:	2000      	movs	r0, #0
    52e8:	e7fc      	b.n	52e4 <select_device_mode+0xc>
	...

000052ec <IO_init>:
void IO_init(void) {
    52ec:	b5f0      	push	{r4, r5, r6, r7, lr}
    52ee:	b085      	sub	sp, #20
	config->direction  = PORT_PIN_DIR_INPUT;
    52f0:	2700      	movs	r7, #0
    52f2:	466b      	mov	r3, sp
    52f4:	731f      	strb	r7, [r3, #12]
	config->powersave  = false;
    52f6:	739f      	strb	r7, [r3, #14]
    input_pin_no_pullup.input_pull = PORT_PIN_PULL_NONE;
    52f8:	735f      	strb	r7, [r3, #13]
	config->direction  = PORT_PIN_DIR_INPUT;
    52fa:	a902      	add	r1, sp, #8
    52fc:	700f      	strb	r7, [r1, #0]
	config->input_pull = PORT_PIN_PULL_UP;
    52fe:	2601      	movs	r6, #1
    5300:	704e      	strb	r6, [r1, #1]
	config->powersave  = false;
    5302:	708f      	strb	r7, [r1, #2]
	config->input_pull = PORT_PIN_PULL_UP;
    5304:	ad01      	add	r5, sp, #4
    5306:	706e      	strb	r6, [r5, #1]
	config->powersave  = false;
    5308:	70af      	strb	r7, [r5, #2]
    output_pin.direction = PORT_PIN_DIR_OUTPUT;
    530a:	702e      	strb	r6, [r5, #0]
    port_pin_set_config(PIN_SW1, &input_pin_pullup);
    530c:	200c      	movs	r0, #12
    530e:	4c2f      	ldr	r4, [pc, #188]	; (53cc <IO_init+0xe0>)
    5310:	47a0      	blx	r4
    port_pin_set_config(PIN_SW2, &input_pin_no_pullup);
    5312:	a903      	add	r1, sp, #12
    5314:	200d      	movs	r0, #13
    5316:	47a0      	blx	r4
    port_pin_set_config(PIN_ENC_B, &input_pin_no_pullup);
    5318:	a903      	add	r1, sp, #12
    531a:	2036      	movs	r0, #54	; 0x36
    531c:	47a0      	blx	r4
    port_pin_set_config(PIN_ENC_A, &input_pin_no_pullup);
    531e:	a903      	add	r1, sp, #12
    5320:	2037      	movs	r0, #55	; 0x37
    5322:	47a0      	blx	r4
    port_pin_set_config(PIN_EEPROM_WP, &output_pin);
    5324:	0029      	movs	r1, r5
    5326:	2018      	movs	r0, #24
    5328:	47a0      	blx	r4
    port_pin_set_config(PIN_LED_POWER, &output_pin);
    532a:	0029      	movs	r1, r5
    532c:	201c      	movs	r0, #28
    532e:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_D0, &output_pin);
    5330:	0029      	movs	r1, r5
    5332:	2026      	movs	r0, #38	; 0x26
    5334:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_D1, &output_pin);
    5336:	0029      	movs	r1, r5
    5338:	2025      	movs	r0, #37	; 0x25
    533a:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_D2, &output_pin);
    533c:	0029      	movs	r1, r5
    533e:	2024      	movs	r0, #36	; 0x24
    5340:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_D3, &output_pin);
    5342:	0029      	movs	r1, r5
    5344:	2023      	movs	r0, #35	; 0x23
    5346:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_D4, &output_pin);
    5348:	0029      	movs	r1, r5
    534a:	2022      	movs	r0, #34	; 0x22
    534c:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_D5, &output_pin);
    534e:	0029      	movs	r1, r5
    5350:	2021      	movs	r0, #33	; 0x21
    5352:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_D6, &output_pin);
    5354:	0029      	movs	r1, r5
    5356:	2020      	movs	r0, #32
    5358:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_D7, &output_pin);
    535a:	0029      	movs	r1, r5
    535c:	203f      	movs	r0, #63	; 0x3f
    535e:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_EN, &output_pin);
    5360:	0029      	movs	r1, r5
    5362:	2027      	movs	r0, #39	; 0x27
    5364:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_RW, &output_pin);
    5366:	0029      	movs	r1, r5
    5368:	2028      	movs	r0, #40	; 0x28
    536a:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_RS, &output_pin);
    536c:	0029      	movs	r1, r5
    536e:	2029      	movs	r0, #41	; 0x29
    5370:	47a0      	blx	r4
    port_pin_set_config(PIN_DMX_DIR, &output_pin);
    5372:	0029      	movs	r1, r5
    5374:	2014      	movs	r0, #20
    5376:	47a0      	blx	r4
		port_base->OUTCLR.reg = pin_mask;
    5378:	2280      	movs	r2, #128	; 0x80
    537a:	0452      	lsls	r2, r2, #17
    537c:	2382      	movs	r3, #130	; 0x82
    537e:	05db      	lsls	r3, r3, #23
    5380:	615a      	str	r2, [r3, #20]
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->mux_position = SYSTEM_PINMUX_GPIO;
	config->direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
    5382:	466b      	mov	r3, sp
    5384:	705f      	strb	r7, [r3, #1]
	config->input_pull   = SYSTEM_PINMUX_PIN_PULL_UP;
    5386:	709e      	strb	r6, [r3, #2]
	config->powersave    = false;
    5388:	70df      	strb	r7, [r3, #3]
    mux_config.mux_position = MUX_ADC0;
    538a:	701e      	strb	r6, [r3, #0]
    system_pinmux_pin_set_config(PIN_ADC0, &mux_config);
    538c:	4669      	mov	r1, sp
    538e:	2003      	movs	r0, #3
    5390:	4c0f      	ldr	r4, [pc, #60]	; (53d0 <IO_init+0xe4>)
    5392:	47a0      	blx	r4
    mux_config.mux_position = MUX_ADC1;
    5394:	466b      	mov	r3, sp
    5396:	701e      	strb	r6, [r3, #0]
    system_pinmux_pin_set_config(PIN_ADC1, &mux_config);
    5398:	4669      	mov	r1, sp
    539a:	2004      	movs	r0, #4
    539c:	47a0      	blx	r4
    mux_config.mux_position = MUX_ADC2;
    539e:	466b      	mov	r3, sp
    53a0:	701e      	strb	r6, [r3, #0]
    system_pinmux_pin_set_config(PIN_ADC2, &mux_config);
    53a2:	4669      	mov	r1, sp
    53a4:	2005      	movs	r0, #5
    53a6:	47a0      	blx	r4
    mux_config.mux_position = MUX_ADC3;
    53a8:	466b      	mov	r3, sp
    53aa:	701e      	strb	r6, [r3, #0]
    system_pinmux_pin_set_config(PIN_ADC3, &mux_config);
    53ac:	4669      	mov	r1, sp
    53ae:	2006      	movs	r0, #6
    53b0:	47a0      	blx	r4
    mux_config.mux_position = MUX_ADC4;
    53b2:	466b      	mov	r3, sp
    53b4:	701e      	strb	r6, [r3, #0]
    system_pinmux_pin_set_config(PIN_ADC4, &mux_config);
    53b6:	4669      	mov	r1, sp
    53b8:	2007      	movs	r0, #7
    53ba:	47a0      	blx	r4
    mux_config.mux_position = MUX_LCD_VO;
    53bc:	466b      	mov	r3, sp
    53be:	701e      	strb	r6, [r3, #0]
    system_pinmux_pin_set_config(PIN_LCD_VO, &mux_config);
    53c0:	4669      	mov	r1, sp
    53c2:	2002      	movs	r0, #2
    53c4:	47a0      	blx	r4
}
    53c6:	b005      	add	sp, #20
    53c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    53ca:	46c0      	nop			; (mov r8, r8)
    53cc:	00003675 	.word	0x00003675
    53d0:	00005035 	.word	0x00005035

000053d4 <configure_dac>:
void configure_dac(void) {
    53d4:	b500      	push	{lr}
    53d6:	b083      	sub	sp, #12
    dac_get_config_defaults(&config_dac);
    53d8:	4668      	mov	r0, sp
    53da:	4b05      	ldr	r3, [pc, #20]	; (53f0 <configure_dac+0x1c>)
    53dc:	4798      	blx	r3
    config_dac.reference = DAC_REFERENCE_AVCC;
    53de:	2340      	movs	r3, #64	; 0x40
    53e0:	466a      	mov	r2, sp
    53e2:	7013      	strb	r3, [r2, #0]
    dac_init(&dac_instance, DAC, &config_dac);
    53e4:	4903      	ldr	r1, [pc, #12]	; (53f4 <configure_dac+0x20>)
    53e6:	4804      	ldr	r0, [pc, #16]	; (53f8 <configure_dac+0x24>)
    53e8:	4b04      	ldr	r3, [pc, #16]	; (53fc <configure_dac+0x28>)
    53ea:	4798      	blx	r3
}
    53ec:	b003      	add	sp, #12
    53ee:	bd00      	pop	{pc}
    53f0:	00002311 	.word	0x00002311
    53f4:	42005400 	.word	0x42005400
    53f8:	200026ac 	.word	0x200026ac
    53fc:	00002325 	.word	0x00002325

00005400 <configure_dac_channel>:
void configure_dac_channel(void) {
    5400:	b510      	push	{r4, lr}
    5402:	b082      	sub	sp, #8
    dac_chan_get_config_defaults(&config_dac_chan);
    5404:	a801      	add	r0, sp, #4
    5406:	4b07      	ldr	r3, [pc, #28]	; (5424 <configure_dac_channel+0x24>)
    5408:	4798      	blx	r3
    dac_chan_set_config(&dac_instance, DAC_CHANNEL_0, &config_dac_chan);
    540a:	4c07      	ldr	r4, [pc, #28]	; (5428 <configure_dac_channel+0x28>)
    540c:	aa01      	add	r2, sp, #4
    540e:	2100      	movs	r1, #0
    5410:	0020      	movs	r0, r4
    5412:	4b06      	ldr	r3, [pc, #24]	; (542c <configure_dac_channel+0x2c>)
    5414:	4798      	blx	r3
    dac_chan_enable(&dac_instance, DAC_CHANNEL_0);
    5416:	2100      	movs	r1, #0
    5418:	0020      	movs	r0, r4
    541a:	4b05      	ldr	r3, [pc, #20]	; (5430 <configure_dac_channel+0x30>)
    541c:	4798      	blx	r3
}
    541e:	b002      	add	sp, #8
    5420:	bd10      	pop	{r4, pc}
    5422:	46c0      	nop			; (mov r8, r8)
    5424:	00002435 	.word	0x00002435
    5428:	200026ac 	.word	0x200026ac
    542c:	00002437 	.word	0x00002437
    5430:	00002439 	.word	0x00002439

00005434 <button_handler>:
void button_handler(TIPKA t, STATE *s) {
    5434:	b570      	push	{r4, r5, r6, lr}
    5436:	000c      	movs	r4, r1
    key_pressed = 1;
    5438:	2201      	movs	r2, #1
    543a:	4b13      	ldr	r3, [pc, #76]	; (5488 <button_handler+0x54>)
    543c:	701a      	strb	r2, [r3, #0]
    switch (t) {
    543e:	2801      	cmp	r0, #1
    5440:	d021      	beq.n	5486 <button_handler+0x52>
    5442:	2802      	cmp	r0, #2
    5444:	d11c      	bne.n	5480 <button_handler+0x4c>
            if (get_p_to_item(selected_menu)->type == TYPE_MENU) {
    5446:	4b11      	ldr	r3, [pc, #68]	; (548c <button_handler+0x58>)
    5448:	6818      	ldr	r0, [r3, #0]
    544a:	4b11      	ldr	r3, [pc, #68]	; (5490 <button_handler+0x5c>)
    544c:	4798      	blx	r3
    544e:	7803      	ldrb	r3, [r0, #0]
    5450:	2b04      	cmp	r3, #4
    5452:	d007      	beq.n	5464 <button_handler+0x30>
                if (*s == EDIT)
    5454:	7823      	ldrb	r3, [r4, #0]
    5456:	2b01      	cmp	r3, #1
    5458:	d00f      	beq.n	547a <button_handler+0x46>
                    if (*s == SCROLL)
    545a:	2b00      	cmp	r3, #0
    545c:	d113      	bne.n	5486 <button_handler+0x52>
                        *s = EDIT;
    545e:	3301      	adds	r3, #1
    5460:	7023      	strb	r3, [r4, #0]
    5462:	e010      	b.n	5486 <button_handler+0x52>
                menu_swap(&selected_menu, (MENU *)(get_p_to_item(selected_menu)->variable));
    5464:	4d09      	ldr	r5, [pc, #36]	; (548c <button_handler+0x58>)
    5466:	6828      	ldr	r0, [r5, #0]
    5468:	4b09      	ldr	r3, [pc, #36]	; (5490 <button_handler+0x5c>)
    546a:	4798      	blx	r3
    546c:	6901      	ldr	r1, [r0, #16]
    546e:	0028      	movs	r0, r5
    5470:	4b08      	ldr	r3, [pc, #32]	; (5494 <button_handler+0x60>)
    5472:	4798      	blx	r3
                *s = SCROLL;
    5474:	2300      	movs	r3, #0
    5476:	7023      	strb	r3, [r4, #0]
    5478:	e005      	b.n	5486 <button_handler+0x52>
                    *s = SCROLL;
    547a:	2300      	movs	r3, #0
    547c:	7023      	strb	r3, [r4, #0]
    547e:	e002      	b.n	5486 <button_handler+0x52>
            key_pressed = 0;
    5480:	2200      	movs	r2, #0
    5482:	4b01      	ldr	r3, [pc, #4]	; (5488 <button_handler+0x54>)
    5484:	701a      	strb	r2, [r3, #0]
}
    5486:	bd70      	pop	{r4, r5, r6, pc}
    5488:	2000001c 	.word	0x2000001c
    548c:	20000034 	.word	0x20000034
    5490:	00003e5d 	.word	0x00003e5d
    5494:	0000439d 	.word	0x0000439d

00005498 <menu_draw>:
void menu_draw(void) {
    5498:	b5f0      	push	{r4, r5, r6, r7, lr}
    549a:	b097      	sub	sp, #92	; 0x5c
    549c:	ad01      	add	r5, sp, #4
    549e:	ae16      	add	r6, sp, #88	; 0x58
    54a0:	0028      	movs	r0, r5
            menu_string_array[i][j] = ' ';
    54a2:	2120      	movs	r1, #32
        menu_string_array[i][20] = 0;
    54a4:	2400      	movs	r4, #0
    54a6:	0002      	movs	r2, r0
    54a8:	3214      	adds	r2, #20
void menu_draw(void) {
    54aa:	0003      	movs	r3, r0
            menu_string_array[i][j] = ' ';
    54ac:	7019      	strb	r1, [r3, #0]
    54ae:	3301      	adds	r3, #1
        for (uint8_t j = 0; j < 20; j++)
    54b0:	4293      	cmp	r3, r2
    54b2:	d1fb      	bne.n	54ac <menu_draw+0x14>
        menu_string_array[i][20] = 0;
    54b4:	7504      	strb	r4, [r0, #20]
    54b6:	3015      	adds	r0, #21
    for (uint8_t i = 0; i < 4; i++) {
    54b8:	42b0      	cmp	r0, r6
    54ba:	d1f4      	bne.n	54a6 <menu_draw+0xe>
    menu_whole_string(selected_menu, menu_string_array, state);
    54bc:	4b0a      	ldr	r3, [pc, #40]	; (54e8 <menu_draw+0x50>)
    54be:	781a      	ldrb	r2, [r3, #0]
    54c0:	4b0a      	ldr	r3, [pc, #40]	; (54ec <menu_draw+0x54>)
    54c2:	6818      	ldr	r0, [r3, #0]
    54c4:	a901      	add	r1, sp, #4
    54c6:	4b0a      	ldr	r3, [pc, #40]	; (54f0 <menu_draw+0x58>)
    54c8:	4798      	blx	r3
    for (uint8_t i = 0; i < 4; i++) {
    54ca:	2400      	movs	r4, #0
        lcd_setCursor(0, i);
    54cc:	4f09      	ldr	r7, [pc, #36]	; (54f4 <menu_draw+0x5c>)
        lcd_printstr(menu_string_array[i]);
    54ce:	4e0a      	ldr	r6, [pc, #40]	; (54f8 <menu_draw+0x60>)
        lcd_setCursor(0, i);
    54d0:	0021      	movs	r1, r4
    54d2:	2000      	movs	r0, #0
    54d4:	47b8      	blx	r7
        lcd_printstr(menu_string_array[i]);
    54d6:	0028      	movs	r0, r5
    54d8:	47b0      	blx	r6
    for (uint8_t i = 0; i < 4; i++) {
    54da:	3401      	adds	r4, #1
    54dc:	b2e4      	uxtb	r4, r4
    54de:	3515      	adds	r5, #21
    54e0:	2c04      	cmp	r4, #4
    54e2:	d1f5      	bne.n	54d0 <menu_draw+0x38>
}
    54e4:	b017      	add	sp, #92	; 0x5c
    54e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    54e8:	200015bd 	.word	0x200015bd
    54ec:	20000034 	.word	0x20000034
    54f0:	00004105 	.word	0x00004105
    54f4:	00000479 	.word	0x00000479
    54f8:	00000515 	.word	0x00000515

000054fc <device_factory_reset>:
void device_factory_reset(void) {
    54fc:	b5f0      	push	{r4, r5, r6, r7, lr}
    54fe:	46d6      	mov	lr, sl
    5500:	464f      	mov	r7, r9
    5502:	4646      	mov	r6, r8
    5504:	b5c0      	push	{r6, r7, lr}
    5506:	4d16      	ldr	r5, [pc, #88]	; (5560 <device_factory_reset+0x64>)
    5508:	4c16      	ldr	r4, [pc, #88]	; (5564 <device_factory_reset+0x68>)
    550a:	4b17      	ldr	r3, [pc, #92]	; (5568 <device_factory_reset+0x6c>)
    550c:	4698      	mov	r8, r3
    for(uint8_t i = 0; i < 5; i++) {
    550e:	2600      	movs	r6, #0
        adsr_init(adsr_channels + i, 1);
    5510:	4b16      	ldr	r3, [pc, #88]	; (556c <device_factory_reset+0x70>)
    5512:	469a      	mov	sl, r3
        adsr_channels[i].attack = 100;
    5514:	2764      	movs	r7, #100	; 0x64
        adsr_channels[i].decay = 100;
        adsr_channels[i].sustain = 100;
        adsr_channels[i].release = 100;
        adsr_channels[i].sustain_level = 127;
    5516:	237f      	movs	r3, #127	; 0x7f
    5518:	4699      	mov	r9, r3
        adsr_init(adsr_channels + i, 1);
    551a:	2101      	movs	r1, #1
    551c:	0028      	movs	r0, r5
    551e:	47d0      	blx	sl
        adsr_channels[i].attack = 100;
    5520:	60af      	str	r7, [r5, #8]
        adsr_channels[i].decay = 100;
    5522:	612f      	str	r7, [r5, #16]
        adsr_channels[i].sustain = 100;
    5524:	61af      	str	r7, [r5, #24]
        adsr_channels[i].release = 100;
    5526:	626f      	str	r7, [r5, #36]	; 0x24
        adsr_channels[i].sustain_level = 127;
    5528:	464b      	mov	r3, r9
    552a:	61eb      	str	r3, [r5, #28]
        trigger_channels[i].adsr = adsr_channels + i;
    552c:	60a5      	str	r5, [r4, #8]
        p_to_channels[i] = trigger_channels + i;
    552e:	4643      	mov	r3, r8
    5530:	c310      	stmia	r3!, {r4}
    5532:	4698      	mov	r8, r3
        p_to_channels[i]->dmx_ch = i + 10;
    5534:	0033      	movs	r3, r6
    5536:	330a      	adds	r3, #10
    5538:	70a3      	strb	r3, [r4, #2]
        p_to_channels[i]->note = MIDI_NOTE_A4;
    553a:	2345      	movs	r3, #69	; 0x45
    553c:	7163      	strb	r3, [r4, #5]
        p_to_channels[i]->midi_ch = i + 1;
    553e:	3601      	adds	r6, #1
    5540:	b2f6      	uxtb	r6, r6
    5542:	7126      	strb	r6, [r4, #4]
        p_to_channels[i]->input_channel = i + 1;
    5544:	70e6      	strb	r6, [r4, #3]
        p_to_channels[i]->enabled = 1;
    5546:	3b44      	subs	r3, #68	; 0x44
    5548:	7063      	strb	r3, [r4, #1]
        p_to_channels[i]->level = 16;
    554a:	330f      	adds	r3, #15
    554c:	7023      	strb	r3, [r4, #0]
    554e:	3530      	adds	r5, #48	; 0x30
    5550:	3410      	adds	r4, #16
    for(uint8_t i = 0; i < 5; i++) {
    5552:	2e05      	cmp	r6, #5
    5554:	d1e1      	bne.n	551a <device_factory_reset+0x1e>
    }
    5556:	bc1c      	pop	{r2, r3, r4}
    5558:	4690      	mov	r8, r2
    555a:	4699      	mov	r9, r3
    555c:	46a2      	mov	sl, r4
    555e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5560:	200024bc 	.word	0x200024bc
    5564:	200026e4 	.word	0x200026e4
    5568:	200026d0 	.word	0x200026d0
    556c:	00000725 	.word	0x00000725

00005570 <main>:
int main(void) {
    5570:	b5f0      	push	{r4, r5, r6, r7, lr}
    5572:	46de      	mov	lr, fp
    5574:	4657      	mov	r7, sl
    5576:	464e      	mov	r6, r9
    5578:	4645      	mov	r5, r8
    557a:	b5e0      	push	{r5, r6, r7, lr}
    557c:	b0ad      	sub	sp, #180	; 0xb4
    system_init();
    557e:	4bfa      	ldr	r3, [pc, #1000]	; (5968 <main+0x3f8>)
    5580:	4798      	blx	r3
    delay_init();
    5582:	4bfa      	ldr	r3, [pc, #1000]	; (596c <main+0x3fc>)
    5584:	4798      	blx	r3
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
    5586:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
    5588:	f3bf 8f5f 	dmb	sy
    Disable_global_interrupt();
    558c:	2200      	movs	r2, #0
    558e:	4bf8      	ldr	r3, [pc, #992]	; (5970 <main+0x400>)
    5590:	701a      	strb	r2, [r3, #0]
    device_factory_reset();
    5592:	4bf8      	ldr	r3, [pc, #992]	; (5974 <main+0x404>)
    5594:	4798      	blx	r3
    configure_i2c();
    5596:	4bf8      	ldr	r3, [pc, #992]	; (5978 <main+0x408>)
    5598:	4798      	blx	r3
    configure_ac(trigger_channels);
    559a:	4cf8      	ldr	r4, [pc, #992]	; (597c <main+0x40c>)
    559c:	0020      	movs	r0, r4
    559e:	4bf8      	ldr	r3, [pc, #992]	; (5980 <main+0x410>)
    55a0:	4798      	blx	r3
    IO_init();
    55a2:	4bf8      	ldr	r3, [pc, #992]	; (5984 <main+0x414>)
    55a4:	4798      	blx	r3
    configure_dac();
    55a6:	4bf8      	ldr	r3, [pc, #992]	; (5988 <main+0x418>)
    55a8:	4798      	blx	r3
    configure_dac_channel();
    55aa:	4bf8      	ldr	r3, [pc, #992]	; (598c <main+0x41c>)
    55ac:	4798      	blx	r3
    configure_USB();
    55ae:	4bf8      	ldr	r3, [pc, #992]	; (5990 <main+0x420>)
    55b0:	4798      	blx	r3
    configure_DMX();
    55b2:	4bf8      	ldr	r3, [pc, #992]	; (5994 <main+0x424>)
    55b4:	4798      	blx	r3
    configure_tc0();
    55b6:	4bf8      	ldr	r3, [pc, #992]	; (5998 <main+0x428>)
    55b8:	4798      	blx	r3
    dac_enable(&dac_instance);
    55ba:	48f8      	ldr	r0, [pc, #992]	; (599c <main+0x42c>)
    55bc:	4bf8      	ldr	r3, [pc, #992]	; (59a0 <main+0x430>)
    55be:	4798      	blx	r3
    lcd_create_bar_charts();
    55c0:	4bf8      	ldr	r3, [pc, #992]	; (59a4 <main+0x434>)
    55c2:	4798      	blx	r3
    configure_tcc0();
    55c4:	4bf8      	ldr	r3, [pc, #992]	; (59a8 <main+0x438>)
    55c6:	4798      	blx	r3
    configure_tcc0_callbacks(adsr_channels);
    55c8:	48f8      	ldr	r0, [pc, #992]	; (59ac <main+0x43c>)
    55ca:	4bf9      	ldr	r3, [pc, #996]	; (59b0 <main+0x440>)
    55cc:	4798      	blx	r3
    configure_adc0(trigger_channels);
    55ce:	0020      	movs	r0, r4
    55d0:	4bf8      	ldr	r3, [pc, #992]	; (59b4 <main+0x444>)
    55d2:	4798      	blx	r3
    lcd_begin();
    55d4:	4bf8      	ldr	r3, [pc, #992]	; (59b8 <main+0x448>)
    55d6:	4798      	blx	r3
    delay_ms(100); //wait for LCD to set up
    55d8:	2000      	movs	r0, #0
    55da:	4bf8      	ldr	r3, [pc, #992]	; (59bc <main+0x44c>)
    55dc:	4798      	blx	r3
    55de:	2264      	movs	r2, #100	; 0x64
    55e0:	2300      	movs	r3, #0
    55e2:	2100      	movs	r1, #0
    55e4:	4cf6      	ldr	r4, [pc, #984]	; (59c0 <main+0x450>)
    55e6:	47a0      	blx	r4
    55e8:	4af6      	ldr	r2, [pc, #984]	; (59c4 <main+0x454>)
    55ea:	2300      	movs	r3, #0
    55ec:	1880      	adds	r0, r0, r2
    55ee:	4159      	adcs	r1, r3
    55f0:	4af5      	ldr	r2, [pc, #980]	; (59c8 <main+0x458>)
    55f2:	2300      	movs	r3, #0
    55f4:	4cf5      	ldr	r4, [pc, #980]	; (59cc <main+0x45c>)
    55f6:	47a0      	blx	r4
    55f8:	4bf5      	ldr	r3, [pc, #980]	; (59d0 <main+0x460>)
    55fa:	4798      	blx	r3
    lcd_noCursor();
    55fc:	4bf5      	ldr	r3, [pc, #980]	; (59d4 <main+0x464>)
    55fe:	4798      	blx	r3
    5600:	4bf5      	ldr	r3, [pc, #980]	; (59d8 <main+0x468>)
    5602:	930b      	str	r3, [sp, #44]	; 0x2c
    5604:	1c5a      	adds	r2, r3, #1
    5606:	32ff      	adds	r2, #255	; 0xff
    5608:	0019      	movs	r1, r3
        dmx_values[i] = 0;
    560a:	2300      	movs	r3, #0
    560c:	700b      	strb	r3, [r1, #0]
    560e:	3101      	adds	r1, #1
    for (uint16_t i = 0; i < sizeof(dmx_values); i++) {
    5610:	4291      	cmp	r1, r2
    5612:	d1fb      	bne.n	560c <main+0x9c>
    5614:	910a      	str	r1, [sp, #40]	; 0x28
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
    5616:	4bf1      	ldr	r3, [pc, #964]	; (59dc <main+0x46c>)
    5618:	21c3      	movs	r1, #195	; 0xc3
    561a:	0089      	lsls	r1, r1, #2
    561c:	585a      	ldr	r2, [r3, r1]
    561e:	20ff      	movs	r0, #255	; 0xff
    5620:	4382      	bics	r2, r0
    5622:	387f      	subs	r0, #127	; 0x7f
    5624:	4302      	orrs	r2, r0
    5626:	505a      	str	r2, [r3, r1]
    5628:	20c6      	movs	r0, #198	; 0xc6
    562a:	0080      	lsls	r0, r0, #2
    562c:	581a      	ldr	r2, [r3, r0]
    562e:	0212      	lsls	r2, r2, #8
    5630:	0a12      	lsrs	r2, r2, #8
    5632:	501a      	str	r2, [r3, r0]
    5634:	581a      	ldr	r2, [r3, r0]
    5636:	4cea      	ldr	r4, [pc, #936]	; (59e0 <main+0x470>)
    5638:	4014      	ands	r4, r2
    563a:	2280      	movs	r2, #128	; 0x80
    563c:	01d2      	lsls	r2, r2, #7
    563e:	4322      	orrs	r2, r4
    5640:	501a      	str	r2, [r3, r0]
    5642:	585a      	ldr	r2, [r3, r1]
    5644:	48e7      	ldr	r0, [pc, #924]	; (59e4 <main+0x474>)
    5646:	4010      	ands	r0, r2
    5648:	2280      	movs	r2, #128	; 0x80
    564a:	0412      	lsls	r2, r2, #16
    564c:	4302      	orrs	r2, r0
    564e:	505a      	str	r2, [r3, r1]
    Enable_global_interrupt();
    5650:	2201      	movs	r2, #1
    5652:	4bc7      	ldr	r3, [pc, #796]	; (5970 <main+0x400>)
    5654:	701a      	strb	r2, [r3, #0]
    5656:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    565a:	b662      	cpsie	i
    memory_init();
    565c:	4be2      	ldr	r3, [pc, #904]	; (59e8 <main+0x478>)
    565e:	4798      	blx	r3
    5660:	ab1c      	add	r3, sp, #112	; 0x70
    5662:	469b      	mov	fp, r3
    5664:	af2c      	add	r7, sp, #176	; 0xb0
    5666:	001d      	movs	r5, r3
        p_to_dmx_group_menus[i] = (MENU *)malloc(sizeof(MENU));
    5668:	24bc      	movs	r4, #188	; 0xbc
    566a:	00a4      	lsls	r4, r4, #2
    566c:	4edf      	ldr	r6, [pc, #892]	; (59ec <main+0x47c>)
    566e:	0020      	movs	r0, r4
    5670:	47b0      	blx	r6
    5672:	c501      	stmia	r5!, {r0}
    for (uint8_t i = 0; i < 16; i++) {
    5674:	42bd      	cmp	r5, r7
    5676:	d1fa      	bne.n	566e <main+0xfe>
    device_settings.mode = 2;
    5678:	4bdd      	ldr	r3, [pc, #884]	; (59f0 <main+0x480>)
    567a:	4698      	mov	r8, r3
    567c:	2302      	movs	r3, #2
    567e:	4642      	mov	r2, r8
    5680:	70d3      	strb	r3, [r2, #3]
    menu_create_item(&tmp_item, "SETTINGS", TYPE_MENU, "", (void *)&settings_menu, 0, 0, NULL);
    5682:	2300      	movs	r3, #0
    5684:	4699      	mov	r9, r3
    5686:	9303      	str	r3, [sp, #12]
    5688:	2400      	movs	r4, #0
    568a:	9402      	str	r4, [sp, #8]
    568c:	9401      	str	r4, [sp, #4]
    568e:	4bd9      	ldr	r3, [pc, #868]	; (59f4 <main+0x484>)
    5690:	9300      	str	r3, [sp, #0]
    5692:	4bd9      	ldr	r3, [pc, #868]	; (59f8 <main+0x488>)
    5694:	2204      	movs	r2, #4
    5696:	49d9      	ldr	r1, [pc, #868]	; (59fc <main+0x48c>)
    5698:	a811      	add	r0, sp, #68	; 0x44
    569a:	4ed9      	ldr	r6, [pc, #868]	; (5a00 <main+0x490>)
    569c:	47b0      	blx	r6
    menu_add_item(&main_menu, tmp_item);
    569e:	ab14      	add	r3, sp, #80	; 0x50
    56a0:	466a      	mov	r2, sp
    56a2:	cb23      	ldmia	r3!, {r0, r1, r5}
    56a4:	c223      	stmia	r2!, {r0, r1, r5}
    56a6:	cb23      	ldmia	r3!, {r0, r1, r5}
    56a8:	c223      	stmia	r2!, {r0, r1, r5}
    56aa:	cb03      	ldmia	r3!, {r0, r1}
    56ac:	c203      	stmia	r2!, {r0, r1}
    56ae:	9911      	ldr	r1, [sp, #68]	; 0x44
    56b0:	9a12      	ldr	r2, [sp, #72]	; 0x48
    56b2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    56b4:	48d3      	ldr	r0, [pc, #844]	; (5a04 <main+0x494>)
    56b6:	4dd4      	ldr	r5, [pc, #848]	; (5a08 <main+0x498>)
    56b8:	47a8      	blx	r5
    menu_create_item(&tmp_item, "CHANNEL 1", TYPE_MENU, "", (void *)p_to_menus[0], 0, 0, NULL);
    56ba:	464b      	mov	r3, r9
    56bc:	9303      	str	r3, [sp, #12]
    56be:	9402      	str	r4, [sp, #8]
    56c0:	9401      	str	r4, [sp, #4]
    56c2:	4bd2      	ldr	r3, [pc, #840]	; (5a0c <main+0x49c>)
    56c4:	469a      	mov	sl, r3
    56c6:	681b      	ldr	r3, [r3, #0]
    56c8:	9300      	str	r3, [sp, #0]
    56ca:	4bcb      	ldr	r3, [pc, #812]	; (59f8 <main+0x488>)
    56cc:	2204      	movs	r2, #4
    56ce:	49d0      	ldr	r1, [pc, #832]	; (5a10 <main+0x4a0>)
    56d0:	a811      	add	r0, sp, #68	; 0x44
    56d2:	47b0      	blx	r6
    menu_add_item(&main_menu, tmp_item);
    56d4:	ab14      	add	r3, sp, #80	; 0x50
    56d6:	466a      	mov	r2, sp
    56d8:	cb83      	ldmia	r3!, {r0, r1, r7}
    56da:	c283      	stmia	r2!, {r0, r1, r7}
    56dc:	cb83      	ldmia	r3!, {r0, r1, r7}
    56de:	c283      	stmia	r2!, {r0, r1, r7}
    56e0:	cb03      	ldmia	r3!, {r0, r1}
    56e2:	c203      	stmia	r2!, {r0, r1}
    56e4:	9911      	ldr	r1, [sp, #68]	; 0x44
    56e6:	9a12      	ldr	r2, [sp, #72]	; 0x48
    56e8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    56ea:	48c6      	ldr	r0, [pc, #792]	; (5a04 <main+0x494>)
    56ec:	47a8      	blx	r5
    menu_create_item(&tmp_item, "CHANNEL 2", TYPE_MENU, "", (void *)p_to_menus[1], 0, 0, NULL);
    56ee:	464b      	mov	r3, r9
    56f0:	9303      	str	r3, [sp, #12]
    56f2:	9402      	str	r4, [sp, #8]
    56f4:	9401      	str	r4, [sp, #4]
    56f6:	4653      	mov	r3, sl
    56f8:	685b      	ldr	r3, [r3, #4]
    56fa:	9300      	str	r3, [sp, #0]
    56fc:	4bbe      	ldr	r3, [pc, #760]	; (59f8 <main+0x488>)
    56fe:	2204      	movs	r2, #4
    5700:	49c4      	ldr	r1, [pc, #784]	; (5a14 <main+0x4a4>)
    5702:	a811      	add	r0, sp, #68	; 0x44
    5704:	47b0      	blx	r6
    menu_add_item(&main_menu, tmp_item);
    5706:	ab14      	add	r3, sp, #80	; 0x50
    5708:	466a      	mov	r2, sp
    570a:	cb83      	ldmia	r3!, {r0, r1, r7}
    570c:	c283      	stmia	r2!, {r0, r1, r7}
    570e:	cb83      	ldmia	r3!, {r0, r1, r7}
    5710:	c283      	stmia	r2!, {r0, r1, r7}
    5712:	cb03      	ldmia	r3!, {r0, r1}
    5714:	c203      	stmia	r2!, {r0, r1}
    5716:	9911      	ldr	r1, [sp, #68]	; 0x44
    5718:	9a12      	ldr	r2, [sp, #72]	; 0x48
    571a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    571c:	48b9      	ldr	r0, [pc, #740]	; (5a04 <main+0x494>)
    571e:	47a8      	blx	r5
    menu_create_item(&tmp_item, "CHANNEL 3", TYPE_MENU, "", (void *)p_to_menus[2], 0, 0, NULL);
    5720:	464b      	mov	r3, r9
    5722:	9303      	str	r3, [sp, #12]
    5724:	9402      	str	r4, [sp, #8]
    5726:	9401      	str	r4, [sp, #4]
    5728:	4653      	mov	r3, sl
    572a:	689b      	ldr	r3, [r3, #8]
    572c:	9300      	str	r3, [sp, #0]
    572e:	4bb2      	ldr	r3, [pc, #712]	; (59f8 <main+0x488>)
    5730:	2204      	movs	r2, #4
    5732:	49b9      	ldr	r1, [pc, #740]	; (5a18 <main+0x4a8>)
    5734:	a811      	add	r0, sp, #68	; 0x44
    5736:	47b0      	blx	r6
    menu_add_item(&main_menu, tmp_item);
    5738:	ab14      	add	r3, sp, #80	; 0x50
    573a:	466a      	mov	r2, sp
    573c:	cb83      	ldmia	r3!, {r0, r1, r7}
    573e:	c283      	stmia	r2!, {r0, r1, r7}
    5740:	cb83      	ldmia	r3!, {r0, r1, r7}
    5742:	c283      	stmia	r2!, {r0, r1, r7}
    5744:	cb03      	ldmia	r3!, {r0, r1}
    5746:	c203      	stmia	r2!, {r0, r1}
    5748:	9911      	ldr	r1, [sp, #68]	; 0x44
    574a:	9a12      	ldr	r2, [sp, #72]	; 0x48
    574c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    574e:	48ad      	ldr	r0, [pc, #692]	; (5a04 <main+0x494>)
    5750:	47a8      	blx	r5
    menu_create_item(&tmp_item, "CHANNEL 4", TYPE_MENU, "", (void *)p_to_menus[3], 0, 0, NULL);
    5752:	464b      	mov	r3, r9
    5754:	9303      	str	r3, [sp, #12]
    5756:	9402      	str	r4, [sp, #8]
    5758:	9401      	str	r4, [sp, #4]
    575a:	4653      	mov	r3, sl
    575c:	68db      	ldr	r3, [r3, #12]
    575e:	9300      	str	r3, [sp, #0]
    5760:	4ba5      	ldr	r3, [pc, #660]	; (59f8 <main+0x488>)
    5762:	2204      	movs	r2, #4
    5764:	49ad      	ldr	r1, [pc, #692]	; (5a1c <main+0x4ac>)
    5766:	a811      	add	r0, sp, #68	; 0x44
    5768:	47b0      	blx	r6
    menu_add_item(&main_menu, tmp_item);
    576a:	ab14      	add	r3, sp, #80	; 0x50
    576c:	466a      	mov	r2, sp
    576e:	cb83      	ldmia	r3!, {r0, r1, r7}
    5770:	c283      	stmia	r2!, {r0, r1, r7}
    5772:	cb83      	ldmia	r3!, {r0, r1, r7}
    5774:	c283      	stmia	r2!, {r0, r1, r7}
    5776:	cb03      	ldmia	r3!, {r0, r1}
    5778:	c203      	stmia	r2!, {r0, r1}
    577a:	9911      	ldr	r1, [sp, #68]	; 0x44
    577c:	9a12      	ldr	r2, [sp, #72]	; 0x48
    577e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5780:	48a0      	ldr	r0, [pc, #640]	; (5a04 <main+0x494>)
    5782:	47a8      	blx	r5
    menu_create_item(&tmp_item, "CHANNEL 5", TYPE_MENU, "", (void *)p_to_menus[4], 0, 0, NULL);
    5784:	464b      	mov	r3, r9
    5786:	9303      	str	r3, [sp, #12]
    5788:	9402      	str	r4, [sp, #8]
    578a:	9401      	str	r4, [sp, #4]
    578c:	4653      	mov	r3, sl
    578e:	691b      	ldr	r3, [r3, #16]
    5790:	9300      	str	r3, [sp, #0]
    5792:	4b99      	ldr	r3, [pc, #612]	; (59f8 <main+0x488>)
    5794:	2204      	movs	r2, #4
    5796:	49a2      	ldr	r1, [pc, #648]	; (5a20 <main+0x4b0>)
    5798:	a811      	add	r0, sp, #68	; 0x44
    579a:	47b0      	blx	r6
    menu_add_item(&main_menu, tmp_item);
    579c:	ab14      	add	r3, sp, #80	; 0x50
    579e:	466a      	mov	r2, sp
    57a0:	cb83      	ldmia	r3!, {r0, r1, r7}
    57a2:	c283      	stmia	r2!, {r0, r1, r7}
    57a4:	cb83      	ldmia	r3!, {r0, r1, r7}
    57a6:	c283      	stmia	r2!, {r0, r1, r7}
    57a8:	cb03      	ldmia	r3!, {r0, r1}
    57aa:	c203      	stmia	r2!, {r0, r1}
    57ac:	9911      	ldr	r1, [sp, #68]	; 0x44
    57ae:	9a12      	ldr	r2, [sp, #72]	; 0x48
    57b0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    57b2:	4894      	ldr	r0, [pc, #592]	; (5a04 <main+0x494>)
    57b4:	47a8      	blx	r5
    menu_create_item(&tmp_item, "CONTRAST", TYPE_BAR, "", (void *)&device_settings.contrast, 0, 16, get_menu_bar_string);
    57b6:	4b9b      	ldr	r3, [pc, #620]	; (5a24 <main+0x4b4>)
    57b8:	9303      	str	r3, [sp, #12]
    57ba:	2383      	movs	r3, #131	; 0x83
    57bc:	05db      	lsls	r3, r3, #23
    57be:	469a      	mov	sl, r3
    57c0:	9302      	str	r3, [sp, #8]
    57c2:	9401      	str	r4, [sp, #4]
    57c4:	4643      	mov	r3, r8
    57c6:	9300      	str	r3, [sp, #0]
    57c8:	4b8b      	ldr	r3, [pc, #556]	; (59f8 <main+0x488>)
    57ca:	2205      	movs	r2, #5
    57cc:	4996      	ldr	r1, [pc, #600]	; (5a28 <main+0x4b8>)
    57ce:	a811      	add	r0, sp, #68	; 0x44
    57d0:	47b0      	blx	r6
    menu_add_item(&settings_menu, tmp_item);
    57d2:	ab14      	add	r3, sp, #80	; 0x50
    57d4:	466a      	mov	r2, sp
    57d6:	cb83      	ldmia	r3!, {r0, r1, r7}
    57d8:	c283      	stmia	r2!, {r0, r1, r7}
    57da:	cb83      	ldmia	r3!, {r0, r1, r7}
    57dc:	c283      	stmia	r2!, {r0, r1, r7}
    57de:	cb03      	ldmia	r3!, {r0, r1}
    57e0:	c203      	stmia	r2!, {r0, r1}
    57e2:	9911      	ldr	r1, [sp, #68]	; 0x44
    57e4:	9a12      	ldr	r2, [sp, #72]	; 0x48
    57e6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    57e8:	4882      	ldr	r0, [pc, #520]	; (59f4 <main+0x484>)
    57ea:	47a8      	blx	r5
    menu_create_item(&tmp_item, "BRIGHTNESS", TYPE_BAR, "", (void *)&device_settings.brightness, 0, 16, get_menu_bar_string);
    57ec:	4b8d      	ldr	r3, [pc, #564]	; (5a24 <main+0x4b4>)
    57ee:	9303      	str	r3, [sp, #12]
    57f0:	4653      	mov	r3, sl
    57f2:	9302      	str	r3, [sp, #8]
    57f4:	9401      	str	r4, [sp, #4]
    57f6:	4643      	mov	r3, r8
    57f8:	3301      	adds	r3, #1
    57fa:	9300      	str	r3, [sp, #0]
    57fc:	4b7e      	ldr	r3, [pc, #504]	; (59f8 <main+0x488>)
    57fe:	2205      	movs	r2, #5
    5800:	498a      	ldr	r1, [pc, #552]	; (5a2c <main+0x4bc>)
    5802:	a811      	add	r0, sp, #68	; 0x44
    5804:	47b0      	blx	r6
    menu_add_item(&settings_menu, tmp_item);
    5806:	ab14      	add	r3, sp, #80	; 0x50
    5808:	466a      	mov	r2, sp
    580a:	cb83      	ldmia	r3!, {r0, r1, r7}
    580c:	c283      	stmia	r2!, {r0, r1, r7}
    580e:	cb83      	ldmia	r3!, {r0, r1, r7}
    5810:	c283      	stmia	r2!, {r0, r1, r7}
    5812:	cb03      	ldmia	r3!, {r0, r1}
    5814:	c203      	stmia	r2!, {r0, r1}
    5816:	9911      	ldr	r1, [sp, #68]	; 0x44
    5818:	9a12      	ldr	r2, [sp, #72]	; 0x48
    581a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    581c:	4875      	ldr	r0, [pc, #468]	; (59f4 <main+0x484>)
    581e:	47a8      	blx	r5
    menu_create_item(&tmp_item, "MODE", TYPE_ENUM, "", (void *)&device_settings.mode, 0, 2, get_menu_mode_string);
    5820:	4b83      	ldr	r3, [pc, #524]	; (5a30 <main+0x4c0>)
    5822:	9303      	str	r3, [sp, #12]
    5824:	2380      	movs	r3, #128	; 0x80
    5826:	05db      	lsls	r3, r3, #23
    5828:	9302      	str	r3, [sp, #8]
    582a:	9401      	str	r4, [sp, #4]
    582c:	4643      	mov	r3, r8
    582e:	3303      	adds	r3, #3
    5830:	9300      	str	r3, [sp, #0]
    5832:	4b71      	ldr	r3, [pc, #452]	; (59f8 <main+0x488>)
    5834:	2207      	movs	r2, #7
    5836:	497f      	ldr	r1, [pc, #508]	; (5a34 <main+0x4c4>)
    5838:	a811      	add	r0, sp, #68	; 0x44
    583a:	47b0      	blx	r6
    menu_add_item(&settings_menu, tmp_item);
    583c:	ab14      	add	r3, sp, #80	; 0x50
    583e:	466a      	mov	r2, sp
    5840:	cb83      	ldmia	r3!, {r0, r1, r7}
    5842:	c283      	stmia	r2!, {r0, r1, r7}
    5844:	cb83      	ldmia	r3!, {r0, r1, r7}
    5846:	c283      	stmia	r2!, {r0, r1, r7}
    5848:	cb03      	ldmia	r3!, {r0, r1}
    584a:	c203      	stmia	r2!, {r0, r1}
    584c:	9911      	ldr	r1, [sp, #68]	; 0x44
    584e:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5850:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5852:	4868      	ldr	r0, [pc, #416]	; (59f4 <main+0x484>)
    5854:	47a8      	blx	r5
    menu_create_item(&tmp_item, "LOAD SAVE", TYPE_SAVE, "", (void *)&lsave, 0, 16, memory_get_preset_name);
    5856:	4b78      	ldr	r3, [pc, #480]	; (5a38 <main+0x4c8>)
    5858:	4698      	mov	r8, r3
    585a:	9303      	str	r3, [sp, #12]
    585c:	4653      	mov	r3, sl
    585e:	9302      	str	r3, [sp, #8]
    5860:	9401      	str	r4, [sp, #4]
    5862:	4b76      	ldr	r3, [pc, #472]	; (5a3c <main+0x4cc>)
    5864:	9300      	str	r3, [sp, #0]
    5866:	4b64      	ldr	r3, [pc, #400]	; (59f8 <main+0x488>)
    5868:	2209      	movs	r2, #9
    586a:	4975      	ldr	r1, [pc, #468]	; (5a40 <main+0x4d0>)
    586c:	a811      	add	r0, sp, #68	; 0x44
    586e:	47b0      	blx	r6
    menu_add_item(&settings_menu, tmp_item);
    5870:	ab14      	add	r3, sp, #80	; 0x50
    5872:	466a      	mov	r2, sp
    5874:	cb83      	ldmia	r3!, {r0, r1, r7}
    5876:	c283      	stmia	r2!, {r0, r1, r7}
    5878:	cb83      	ldmia	r3!, {r0, r1, r7}
    587a:	c283      	stmia	r2!, {r0, r1, r7}
    587c:	cb03      	ldmia	r3!, {r0, r1}
    587e:	c203      	stmia	r2!, {r0, r1}
    5880:	9911      	ldr	r1, [sp, #68]	; 0x44
    5882:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5884:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5886:	485b      	ldr	r0, [pc, #364]	; (59f4 <main+0x484>)
    5888:	47a8      	blx	r5
    menu_create_item(&tmp_item, "SAVE", TYPE_SAVE, "", (void *)&ssave, 0, 16, memory_get_preset_name);
    588a:	4643      	mov	r3, r8
    588c:	9303      	str	r3, [sp, #12]
    588e:	4653      	mov	r3, sl
    5890:	9302      	str	r3, [sp, #8]
    5892:	9401      	str	r4, [sp, #4]
    5894:	4b6b      	ldr	r3, [pc, #428]	; (5a44 <main+0x4d4>)
    5896:	9300      	str	r3, [sp, #0]
    5898:	4b57      	ldr	r3, [pc, #348]	; (59f8 <main+0x488>)
    589a:	2209      	movs	r2, #9
    589c:	496a      	ldr	r1, [pc, #424]	; (5a48 <main+0x4d8>)
    589e:	a811      	add	r0, sp, #68	; 0x44
    58a0:	47b0      	blx	r6
    menu_add_item(&settings_menu, tmp_item);
    58a2:	ab14      	add	r3, sp, #80	; 0x50
    58a4:	466a      	mov	r2, sp
    58a6:	cb83      	ldmia	r3!, {r0, r1, r7}
    58a8:	c283      	stmia	r2!, {r0, r1, r7}
    58aa:	cb83      	ldmia	r3!, {r0, r1, r7}
    58ac:	c283      	stmia	r2!, {r0, r1, r7}
    58ae:	cb03      	ldmia	r3!, {r0, r1}
    58b0:	c203      	stmia	r2!, {r0, r1}
    58b2:	9911      	ldr	r1, [sp, #68]	; 0x44
    58b4:	9a12      	ldr	r2, [sp, #72]	; 0x48
    58b6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    58b8:	484e      	ldr	r0, [pc, #312]	; (59f4 <main+0x484>)
    58ba:	47a8      	blx	r5
    menu_create_item(&tmp_item, "FORMAT", TYPE_CONFIRM, "", (void *)&format, 0, 1, get_menu_confirm_string);
    58bc:	4b63      	ldr	r3, [pc, #396]	; (5a4c <main+0x4dc>)
    58be:	4698      	mov	r8, r3
    58c0:	9303      	str	r3, [sp, #12]
    58c2:	23fe      	movs	r3, #254	; 0xfe
    58c4:	059b      	lsls	r3, r3, #22
    58c6:	469a      	mov	sl, r3
    58c8:	9302      	str	r3, [sp, #8]
    58ca:	9401      	str	r4, [sp, #4]
    58cc:	4b60      	ldr	r3, [pc, #384]	; (5a50 <main+0x4e0>)
    58ce:	9300      	str	r3, [sp, #0]
    58d0:	4b49      	ldr	r3, [pc, #292]	; (59f8 <main+0x488>)
    58d2:	220a      	movs	r2, #10
    58d4:	495f      	ldr	r1, [pc, #380]	; (5a54 <main+0x4e4>)
    58d6:	a811      	add	r0, sp, #68	; 0x44
    58d8:	47b0      	blx	r6
    menu_add_item(&settings_menu, tmp_item);
    58da:	ab14      	add	r3, sp, #80	; 0x50
    58dc:	466a      	mov	r2, sp
    58de:	cb83      	ldmia	r3!, {r0, r1, r7}
    58e0:	c283      	stmia	r2!, {r0, r1, r7}
    58e2:	cb83      	ldmia	r3!, {r0, r1, r7}
    58e4:	c283      	stmia	r2!, {r0, r1, r7}
    58e6:	cb03      	ldmia	r3!, {r0, r1}
    58e8:	c203      	stmia	r2!, {r0, r1}
    58ea:	9911      	ldr	r1, [sp, #68]	; 0x44
    58ec:	9a12      	ldr	r2, [sp, #72]	; 0x48
    58ee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    58f0:	4840      	ldr	r0, [pc, #256]	; (59f4 <main+0x484>)
    58f2:	47a8      	blx	r5
    menu_create_item(&tmp_item, "FAC RESET", TYPE_CONFIRM, "", (void *)&fac_reset, 0, 1, get_menu_confirm_string);
    58f4:	4643      	mov	r3, r8
    58f6:	9303      	str	r3, [sp, #12]
    58f8:	4653      	mov	r3, sl
    58fa:	9302      	str	r3, [sp, #8]
    58fc:	9401      	str	r4, [sp, #4]
    58fe:	4b56      	ldr	r3, [pc, #344]	; (5a58 <main+0x4e8>)
    5900:	9300      	str	r3, [sp, #0]
    5902:	4b3d      	ldr	r3, [pc, #244]	; (59f8 <main+0x488>)
    5904:	220a      	movs	r2, #10
    5906:	4955      	ldr	r1, [pc, #340]	; (5a5c <main+0x4ec>)
    5908:	a811      	add	r0, sp, #68	; 0x44
    590a:	47b0      	blx	r6
    menu_add_item(&settings_menu, tmp_item);
    590c:	ab14      	add	r3, sp, #80	; 0x50
    590e:	466a      	mov	r2, sp
    5910:	cb83      	ldmia	r3!, {r0, r1, r7}
    5912:	c283      	stmia	r2!, {r0, r1, r7}
    5914:	cb83      	ldmia	r3!, {r0, r1, r7}
    5916:	c283      	stmia	r2!, {r0, r1, r7}
    5918:	cb03      	ldmia	r3!, {r0, r1}
    591a:	c203      	stmia	r2!, {r0, r1}
    591c:	9911      	ldr	r1, [sp, #68]	; 0x44
    591e:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5920:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5922:	4834      	ldr	r0, [pc, #208]	; (59f4 <main+0x484>)
    5924:	47a8      	blx	r5
    menu_create_item(&tmp_item, "BACK", TYPE_MENU, "", (void *)&main_menu, 0, 0, NULL);
    5926:	464b      	mov	r3, r9
    5928:	9303      	str	r3, [sp, #12]
    592a:	9402      	str	r4, [sp, #8]
    592c:	9401      	str	r4, [sp, #4]
    592e:	4b35      	ldr	r3, [pc, #212]	; (5a04 <main+0x494>)
    5930:	9300      	str	r3, [sp, #0]
    5932:	4b31      	ldr	r3, [pc, #196]	; (59f8 <main+0x488>)
    5934:	2204      	movs	r2, #4
    5936:	494a      	ldr	r1, [pc, #296]	; (5a60 <main+0x4f0>)
    5938:	a811      	add	r0, sp, #68	; 0x44
    593a:	47b0      	blx	r6
    menu_add_item(&settings_menu, tmp_item);
    593c:	ab14      	add	r3, sp, #80	; 0x50
    593e:	466a      	mov	r2, sp
    5940:	cb13      	ldmia	r3!, {r0, r1, r4}
    5942:	c213      	stmia	r2!, {r0, r1, r4}
    5944:	cb13      	ldmia	r3!, {r0, r1, r4}
    5946:	c213      	stmia	r2!, {r0, r1, r4}
    5948:	cb03      	ldmia	r3!, {r0, r1}
    594a:	c203      	stmia	r2!, {r0, r1}
    594c:	9911      	ldr	r1, [sp, #68]	; 0x44
    594e:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5950:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5952:	4828      	ldr	r0, [pc, #160]	; (59f4 <main+0x484>)
    5954:	47a8      	blx	r5
    5956:	2310      	movs	r3, #16
    5958:	4699      	mov	r9, r3
    595a:	2300      	movs	r3, #0
    595c:	469a      	mov	sl, r3
    595e:	4698      	mov	r8, r3
    5960:	465e      	mov	r6, fp
    5962:	464b      	mov	r3, r9
    5964:	9309      	str	r3, [sp, #36]	; 0x24
    5966:	e0f4      	b.n	5b52 <main+0x5e2>
    5968:	00005065 	.word	0x00005065
    596c:	00000c2d 	.word	0x00000c2d
    5970:	20000014 	.word	0x20000014
    5974:	000054fd 	.word	0x000054fd
    5978:	00003c1d 	.word	0x00003c1d
    597c:	200026e4 	.word	0x200026e4
    5980:	00003a39 	.word	0x00003a39
    5984:	000052ed 	.word	0x000052ed
    5988:	000053d5 	.word	0x000053d5
    598c:	00005401 	.word	0x00005401
    5990:	0000444d 	.word	0x0000444d
    5994:	00001cb5 	.word	0x00001cb5
    5998:	000047c9 	.word	0x000047c9
    599c:	200026ac 	.word	0x200026ac
    59a0:	000023ed 	.word	0x000023ed
    59a4:	00000531 	.word	0x00000531
    59a8:	000046f1 	.word	0x000046f1
    59ac:	200024bc 	.word	0x200024bc
    59b0:	00004741 	.word	0x00004741
    59b4:	00003745 	.word	0x00003745
    59b8:	0000034d 	.word	0x0000034d
    59bc:	00004e5d 	.word	0x00004e5d
    59c0:	00006435 	.word	0x00006435
    59c4:	00001b57 	.word	0x00001b57
    59c8:	00001b58 	.word	0x00001b58
    59cc:	000063f5 	.word	0x000063f5
    59d0:	20000001 	.word	0x20000001
    59d4:	000004b5 	.word	0x000004b5
    59d8:	200025ac 	.word	0x200025ac
    59dc:	e000e100 	.word	0xe000e100
    59e0:	ffff00ff 	.word	0xffff00ff
    59e4:	ff00ffff 	.word	0xff00ffff
    59e8:	00001fe9 	.word	0x00001fe9
    59ec:	0000894d 	.word	0x0000894d
    59f0:	20000018 	.word	0x20000018
    59f4:	200012cc 	.word	0x200012cc
    59f8:	000095c0 	.word	0x000095c0
    59fc:	0000955c 	.word	0x0000955c
    5a00:	000041b1 	.word	0x000041b1
    5a04:	20000fdc 	.word	0x20000fdc
    5a08:	00003dad 	.word	0x00003dad
    5a0c:	20000020 	.word	0x20000020
    5a10:	00009568 	.word	0x00009568
    5a14:	00009574 	.word	0x00009574
    5a18:	00009580 	.word	0x00009580
    5a1c:	0000958c 	.word	0x0000958c
    5a20:	00009598 	.word	0x00009598
    5a24:	000051f1 	.word	0x000051f1
    5a28:	000095a4 	.word	0x000095a4
    5a2c:	000095b0 	.word	0x000095b0
    5a30:	00005141 	.word	0x00005141
    5a34:	000095bc 	.word	0x000095bc
    5a38:	000022c1 	.word	0x000022c1
    5a3c:	20000fda 	.word	0x20000fda
    5a40:	000095c4 	.word	0x000095c4
    5a44:	200015bc 	.word	0x200015bc
    5a48:	000095d0 	.word	0x000095d0
    5a4c:	000051b9 	.word	0x000051b9
    5a50:	20000fd9 	.word	0x20000fd9
    5a54:	000095d8 	.word	0x000095d8
    5a58:	20000fd8 	.word	0x20000fd8
    5a5c:	000095e0 	.word	0x000095e0
    5a60:	000095ec 	.word	0x000095ec
            sprintf(menu_item_short_name, "DMX%d", i * MENU_MAX_ITEMS + j);
    5a64:	002a      	movs	r2, r5
    5a66:	493d      	ldr	r1, [pc, #244]	; (5b5c <main+0x5ec>)
    5a68:	a80c      	add	r0, sp, #48	; 0x30
    5a6a:	4b3d      	ldr	r3, [pc, #244]	; (5b60 <main+0x5f0>)
    5a6c:	4798      	blx	r3
            menu_create_item(&tmp_item, menu_item_short_name, TYPE_DMX_CH, "", dmx_values + i * 16 + j, -1, 256, get_menu_dmx_ch_string);
    5a6e:	4b3d      	ldr	r3, [pc, #244]	; (5b64 <main+0x5f4>)
    5a70:	9303      	str	r3, [sp, #12]
    5a72:	2387      	movs	r3, #135	; 0x87
    5a74:	05db      	lsls	r3, r3, #23
    5a76:	9302      	str	r3, [sp, #8]
    5a78:	4b3b      	ldr	r3, [pc, #236]	; (5b68 <main+0x5f8>)
    5a7a:	9301      	str	r3, [sp, #4]
    5a7c:	4653      	mov	r3, sl
    5a7e:	18eb      	adds	r3, r5, r3
    5a80:	4a3a      	ldr	r2, [pc, #232]	; (5b6c <main+0x5fc>)
    5a82:	189b      	adds	r3, r3, r2
    5a84:	9300      	str	r3, [sp, #0]
    5a86:	4b3a      	ldr	r3, [pc, #232]	; (5b70 <main+0x600>)
    5a88:	2208      	movs	r2, #8
    5a8a:	a90c      	add	r1, sp, #48	; 0x30
    5a8c:	a811      	add	r0, sp, #68	; 0x44
    5a8e:	4e39      	ldr	r6, [pc, #228]	; (5b74 <main+0x604>)
    5a90:	47b0      	blx	r6
            menu_add_item(p_to_dmx_group_menus[i], tmp_item);
    5a92:	6826      	ldr	r6, [r4, #0]
    5a94:	ab14      	add	r3, sp, #80	; 0x50
    5a96:	466a      	mov	r2, sp
    5a98:	cb83      	ldmia	r3!, {r0, r1, r7}
    5a9a:	c283      	stmia	r2!, {r0, r1, r7}
    5a9c:	cb83      	ldmia	r3!, {r0, r1, r7}
    5a9e:	c283      	stmia	r2!, {r0, r1, r7}
    5aa0:	cb03      	ldmia	r3!, {r0, r1}
    5aa2:	c203      	stmia	r2!, {r0, r1}
    5aa4:	9911      	ldr	r1, [sp, #68]	; 0x44
    5aa6:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5aa8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5aaa:	0030      	movs	r0, r6
    5aac:	4f32      	ldr	r7, [pc, #200]	; (5b78 <main+0x608>)
    5aae:	47b8      	blx	r7
    5ab0:	3501      	adds	r5, #1
        for (uint16_t j = 0; j < MENU_MAX_ITEMS - 1; j++) {
    5ab2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5ab4:	429d      	cmp	r5, r3
    5ab6:	d1d5      	bne.n	5a64 <main+0x4f4>
    5ab8:	0023      	movs	r3, r4
    5aba:	0034      	movs	r4, r6
    5abc:	001e      	movs	r6, r3
        menu_create_item(&tmp_item, "BACK", TYPE_MENU, "", (void *)&static_channels_menu, 0, 0, NULL);
    5abe:	2300      	movs	r3, #0
    5ac0:	9303      	str	r3, [sp, #12]
    5ac2:	2300      	movs	r3, #0
    5ac4:	4699      	mov	r9, r3
    5ac6:	9302      	str	r3, [sp, #8]
    5ac8:	9301      	str	r3, [sp, #4]
    5aca:	4b2c      	ldr	r3, [pc, #176]	; (5b7c <main+0x60c>)
    5acc:	9300      	str	r3, [sp, #0]
    5ace:	4b28      	ldr	r3, [pc, #160]	; (5b70 <main+0x600>)
    5ad0:	2204      	movs	r2, #4
    5ad2:	492b      	ldr	r1, [pc, #172]	; (5b80 <main+0x610>)
    5ad4:	a811      	add	r0, sp, #68	; 0x44
    5ad6:	4d27      	ldr	r5, [pc, #156]	; (5b74 <main+0x604>)
    5ad8:	46ab      	mov	fp, r5
    5ada:	47a8      	blx	r5
        menu_add_item(p_to_dmx_group_menus[i], tmp_item);
    5adc:	ab14      	add	r3, sp, #80	; 0x50
    5ade:	466a      	mov	r2, sp
    5ae0:	cb23      	ldmia	r3!, {r0, r1, r5}
    5ae2:	c223      	stmia	r2!, {r0, r1, r5}
    5ae4:	cb23      	ldmia	r3!, {r0, r1, r5}
    5ae6:	c223      	stmia	r2!, {r0, r1, r5}
    5ae8:	cb03      	ldmia	r3!, {r0, r1}
    5aea:	c203      	stmia	r2!, {r0, r1}
    5aec:	9911      	ldr	r1, [sp, #68]	; 0x44
    5aee:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5af0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5af2:	0020      	movs	r0, r4
    5af4:	4d20      	ldr	r5, [pc, #128]	; (5b78 <main+0x608>)
    5af6:	47a8      	blx	r5
        sprintf(menu_item_short_name, "DMX%d-%d", i * 16, i * 16 + 15);
    5af8:	4643      	mov	r3, r8
    5afa:	330f      	adds	r3, #15
    5afc:	4642      	mov	r2, r8
    5afe:	4921      	ldr	r1, [pc, #132]	; (5b84 <main+0x614>)
    5b00:	a80c      	add	r0, sp, #48	; 0x30
    5b02:	4f17      	ldr	r7, [pc, #92]	; (5b60 <main+0x5f0>)
    5b04:	47b8      	blx	r7
        menu_create_item(&tmp_item, menu_item_short_name, TYPE_MENU, "", (void *)p_to_dmx_group_menus[i], 0, 0, NULL);
    5b06:	2300      	movs	r3, #0
    5b08:	9303      	str	r3, [sp, #12]
    5b0a:	464b      	mov	r3, r9
    5b0c:	9302      	str	r3, [sp, #8]
    5b0e:	9301      	str	r3, [sp, #4]
    5b10:	9400      	str	r4, [sp, #0]
    5b12:	4b17      	ldr	r3, [pc, #92]	; (5b70 <main+0x600>)
    5b14:	2204      	movs	r2, #4
    5b16:	a90c      	add	r1, sp, #48	; 0x30
    5b18:	a811      	add	r0, sp, #68	; 0x44
    5b1a:	47d8      	blx	fp
        menu_add_item(&static_channels_menu, tmp_item);
    5b1c:	ab14      	add	r3, sp, #80	; 0x50
    5b1e:	466a      	mov	r2, sp
    5b20:	cb13      	ldmia	r3!, {r0, r1, r4}
    5b22:	c213      	stmia	r2!, {r0, r1, r4}
    5b24:	cb13      	ldmia	r3!, {r0, r1, r4}
    5b26:	c213      	stmia	r2!, {r0, r1, r4}
    5b28:	cb03      	ldmia	r3!, {r0, r1}
    5b2a:	c203      	stmia	r2!, {r0, r1}
    5b2c:	9911      	ldr	r1, [sp, #68]	; 0x44
    5b2e:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5b30:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5b32:	4812      	ldr	r0, [pc, #72]	; (5b7c <main+0x60c>)
    5b34:	47a8      	blx	r5
    5b36:	3604      	adds	r6, #4
    5b38:	2310      	movs	r3, #16
    5b3a:	469c      	mov	ip, r3
    5b3c:	44e0      	add	r8, ip
    5b3e:	3b11      	subs	r3, #17
    5b40:	469c      	mov	ip, r3
    5b42:	44e2      	add	sl, ip
    5b44:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5b46:	3311      	adds	r3, #17
    5b48:	9309      	str	r3, [sp, #36]	; 0x24
    for (uint16_t i = 0; i < (MAX_DMX_CHANNELS / 16); i++) {
    5b4a:	2380      	movs	r3, #128	; 0x80
    5b4c:	005b      	lsls	r3, r3, #1
    5b4e:	4598      	cmp	r8, r3
    5b50:	d01a      	beq.n	5b88 <main+0x618>
    5b52:	9d09      	ldr	r5, [sp, #36]	; 0x24
    5b54:	3d10      	subs	r5, #16
    5b56:	0034      	movs	r4, r6
    5b58:	e784      	b.n	5a64 <main+0x4f4>
    5b5a:	46c0      	nop			; (mov r8, r8)
    5b5c:	000095f4 	.word	0x000095f4
    5b60:	00008af9 	.word	0x00008af9
    5b64:	00005259 	.word	0x00005259
    5b68:	bf800000 	.word	0xbf800000
    5b6c:	200025ac 	.word	0x200025ac
    5b70:	000095c0 	.word	0x000095c0
    5b74:	000041b1 	.word	0x000041b1
    5b78:	00003dad 	.word	0x00003dad
    5b7c:	200015c0 	.word	0x200015c0
    5b80:	000095ec 	.word	0x000095ec
    5b84:	000095fc 	.word	0x000095fc
    menu_create_item(&tmp_item, "STATIC_CH", TYPE_MENU, "", (void *)&static_channels_menu, 0, 0, NULL);
    5b88:	2300      	movs	r3, #0
    5b8a:	469a      	mov	sl, r3
    5b8c:	9303      	str	r3, [sp, #12]
    5b8e:	2400      	movs	r4, #0
    5b90:	9402      	str	r4, [sp, #8]
    5b92:	9401      	str	r4, [sp, #4]
    5b94:	4ff1      	ldr	r7, [pc, #964]	; (5f5c <main+0x9ec>)
    5b96:	9700      	str	r7, [sp, #0]
    5b98:	4bf1      	ldr	r3, [pc, #964]	; (5f60 <main+0x9f0>)
    5b9a:	2204      	movs	r2, #4
    5b9c:	49f1      	ldr	r1, [pc, #964]	; (5f64 <main+0x9f4>)
    5b9e:	a811      	add	r0, sp, #68	; 0x44
    5ba0:	4ef1      	ldr	r6, [pc, #964]	; (5f68 <main+0x9f8>)
    5ba2:	47b0      	blx	r6
    menu_add_item(&main_menu, tmp_item);
    5ba4:	4bf1      	ldr	r3, [pc, #964]	; (5f6c <main+0x9fc>)
    5ba6:	4699      	mov	r9, r3
    5ba8:	ab14      	add	r3, sp, #80	; 0x50
    5baa:	466a      	mov	r2, sp
    5bac:	cb23      	ldmia	r3!, {r0, r1, r5}
    5bae:	c223      	stmia	r2!, {r0, r1, r5}
    5bb0:	cb23      	ldmia	r3!, {r0, r1, r5}
    5bb2:	c223      	stmia	r2!, {r0, r1, r5}
    5bb4:	cb03      	ldmia	r3!, {r0, r1}
    5bb6:	c203      	stmia	r2!, {r0, r1}
    5bb8:	9911      	ldr	r1, [sp, #68]	; 0x44
    5bba:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5bbc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5bbe:	4648      	mov	r0, r9
    5bc0:	4deb      	ldr	r5, [pc, #940]	; (5f70 <main+0xa00>)
    5bc2:	47a8      	blx	r5
    menu_create_item(&tmp_item, "BACK", TYPE_MENU, "", (void *)&main_menu, 0, 0, NULL);
    5bc4:	4653      	mov	r3, sl
    5bc6:	9303      	str	r3, [sp, #12]
    5bc8:	9402      	str	r4, [sp, #8]
    5bca:	9401      	str	r4, [sp, #4]
    5bcc:	464b      	mov	r3, r9
    5bce:	9300      	str	r3, [sp, #0]
    5bd0:	4be3      	ldr	r3, [pc, #908]	; (5f60 <main+0x9f0>)
    5bd2:	2204      	movs	r2, #4
    5bd4:	49e7      	ldr	r1, [pc, #924]	; (5f74 <main+0xa04>)
    5bd6:	a811      	add	r0, sp, #68	; 0x44
    5bd8:	47b0      	blx	r6
    menu_add_item(&static_channels_menu, tmp_item);
    5bda:	ab14      	add	r3, sp, #80	; 0x50
    5bdc:	466a      	mov	r2, sp
    5bde:	cb13      	ldmia	r3!, {r0, r1, r4}
    5be0:	c213      	stmia	r2!, {r0, r1, r4}
    5be2:	cb13      	ldmia	r3!, {r0, r1, r4}
    5be4:	c213      	stmia	r2!, {r0, r1, r4}
    5be6:	cb03      	ldmia	r3!, {r0, r1}
    5be8:	c203      	stmia	r2!, {r0, r1}
    5bea:	9911      	ldr	r1, [sp, #68]	; 0x44
    5bec:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5bee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5bf0:	0038      	movs	r0, r7
    5bf2:	47a8      	blx	r5
    5bf4:	4de0      	ldr	r5, [pc, #896]	; (5f78 <main+0xa08>)
    5bf6:	4ce1      	ldr	r4, [pc, #900]	; (5f7c <main+0xa0c>)
        menu_create_item(&tmp_item,  "INPUT", TYPE_UINT8, "", (void *)&p_to_channels[i]->input_channel, 1, 5, NULL);
    5bf8:	2700      	movs	r7, #0
    5bfa:	46a8      	mov	r8, r5
        menu_create_item(&tmp_item,  "ENABLE", TYPE_ENUM, "", (void *)&p_to_channels[i]->enabled, 0, 1, get_menu_enable_string);
    5bfc:	4be0      	ldr	r3, [pc, #896]	; (5f80 <main+0xa10>)
    5bfe:	9303      	str	r3, [sp, #12]
    5c00:	23fe      	movs	r3, #254	; 0xfe
    5c02:	059b      	lsls	r3, r3, #22
    5c04:	469b      	mov	fp, r3
    5c06:	9302      	str	r3, [sp, #8]
    5c08:	2300      	movs	r3, #0
    5c0a:	4699      	mov	r9, r3
    5c0c:	9301      	str	r3, [sp, #4]
    5c0e:	4643      	mov	r3, r8
    5c10:	681b      	ldr	r3, [r3, #0]
    5c12:	3301      	adds	r3, #1
    5c14:	9300      	str	r3, [sp, #0]
    5c16:	4bd2      	ldr	r3, [pc, #840]	; (5f60 <main+0x9f0>)
    5c18:	2207      	movs	r2, #7
    5c1a:	49da      	ldr	r1, [pc, #872]	; (5f84 <main+0xa14>)
    5c1c:	a811      	add	r0, sp, #68	; 0x44
    5c1e:	4dd2      	ldr	r5, [pc, #840]	; (5f68 <main+0x9f8>)
    5c20:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5c22:	6825      	ldr	r5, [r4, #0]
    5c24:	ab14      	add	r3, sp, #80	; 0x50
    5c26:	466a      	mov	r2, sp
    5c28:	cb43      	ldmia	r3!, {r0, r1, r6}
    5c2a:	c243      	stmia	r2!, {r0, r1, r6}
    5c2c:	cb43      	ldmia	r3!, {r0, r1, r6}
    5c2e:	c243      	stmia	r2!, {r0, r1, r6}
    5c30:	cb03      	ldmia	r3!, {r0, r1}
    5c32:	c203      	stmia	r2!, {r0, r1}
    5c34:	9911      	ldr	r1, [sp, #68]	; 0x44
    5c36:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5c38:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5c3a:	0028      	movs	r0, r5
    5c3c:	4ecc      	ldr	r6, [pc, #816]	; (5f70 <main+0xa00>)
    5c3e:	47b0      	blx	r6
        menu_create_item(&tmp_item,  "INPUT", TYPE_UINT8, "", (void *)&p_to_channels[i]->input_channel, 1, 5, NULL);
    5c40:	9703      	str	r7, [sp, #12]
    5c42:	4bd1      	ldr	r3, [pc, #836]	; (5f88 <main+0xa18>)
    5c44:	9302      	str	r3, [sp, #8]
    5c46:	465b      	mov	r3, fp
    5c48:	9301      	str	r3, [sp, #4]
    5c4a:	4643      	mov	r3, r8
    5c4c:	681b      	ldr	r3, [r3, #0]
    5c4e:	3303      	adds	r3, #3
    5c50:	9300      	str	r3, [sp, #0]
    5c52:	4bc3      	ldr	r3, [pc, #780]	; (5f60 <main+0x9f0>)
    5c54:	003a      	movs	r2, r7
    5c56:	49cd      	ldr	r1, [pc, #820]	; (5f8c <main+0xa1c>)
    5c58:	a811      	add	r0, sp, #68	; 0x44
    5c5a:	4dc3      	ldr	r5, [pc, #780]	; (5f68 <main+0x9f8>)
    5c5c:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5c5e:	6823      	ldr	r3, [r4, #0]
    5c60:	469c      	mov	ip, r3
    5c62:	ab14      	add	r3, sp, #80	; 0x50
    5c64:	466a      	mov	r2, sp
    5c66:	cb23      	ldmia	r3!, {r0, r1, r5}
    5c68:	c223      	stmia	r2!, {r0, r1, r5}
    5c6a:	cb23      	ldmia	r3!, {r0, r1, r5}
    5c6c:	c223      	stmia	r2!, {r0, r1, r5}
    5c6e:	cb03      	ldmia	r3!, {r0, r1}
    5c70:	c203      	stmia	r2!, {r0, r1}
    5c72:	9911      	ldr	r1, [sp, #68]	; 0x44
    5c74:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5c76:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5c78:	4660      	mov	r0, ip
    5c7a:	47b0      	blx	r6
        menu_create_item(&tmp_item, "DMX CHAN", TYPE_UINT8, "", (void *)&p_to_channels[i]->dmx_ch, 0, 256, NULL);
    5c7c:	9703      	str	r7, [sp, #12]
    5c7e:	2387      	movs	r3, #135	; 0x87
    5c80:	05db      	lsls	r3, r3, #23
    5c82:	9302      	str	r3, [sp, #8]
    5c84:	464b      	mov	r3, r9
    5c86:	9301      	str	r3, [sp, #4]
    5c88:	4643      	mov	r3, r8
    5c8a:	681b      	ldr	r3, [r3, #0]
    5c8c:	3302      	adds	r3, #2
    5c8e:	9300      	str	r3, [sp, #0]
    5c90:	4bb3      	ldr	r3, [pc, #716]	; (5f60 <main+0x9f0>)
    5c92:	003a      	movs	r2, r7
    5c94:	49be      	ldr	r1, [pc, #760]	; (5f90 <main+0xa20>)
    5c96:	a811      	add	r0, sp, #68	; 0x44
    5c98:	4db3      	ldr	r5, [pc, #716]	; (5f68 <main+0x9f8>)
    5c9a:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5c9c:	6823      	ldr	r3, [r4, #0]
    5c9e:	469c      	mov	ip, r3
    5ca0:	ab14      	add	r3, sp, #80	; 0x50
    5ca2:	466a      	mov	r2, sp
    5ca4:	cb23      	ldmia	r3!, {r0, r1, r5}
    5ca6:	c223      	stmia	r2!, {r0, r1, r5}
    5ca8:	cb23      	ldmia	r3!, {r0, r1, r5}
    5caa:	c223      	stmia	r2!, {r0, r1, r5}
    5cac:	cb03      	ldmia	r3!, {r0, r1}
    5cae:	c203      	stmia	r2!, {r0, r1}
    5cb0:	9911      	ldr	r1, [sp, #68]	; 0x44
    5cb2:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5cb4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5cb6:	4660      	mov	r0, ip
    5cb8:	47b0      	blx	r6
        menu_create_item(&tmp_item, "LEVEL", TYPE_UINT8, "", (void *)&p_to_channels[i]->level, 0, 31, NULL);
    5cba:	9703      	str	r7, [sp, #12]
    5cbc:	4bb5      	ldr	r3, [pc, #724]	; (5f94 <main+0xa24>)
    5cbe:	9302      	str	r3, [sp, #8]
    5cc0:	464b      	mov	r3, r9
    5cc2:	9301      	str	r3, [sp, #4]
    5cc4:	4643      	mov	r3, r8
    5cc6:	681b      	ldr	r3, [r3, #0]
    5cc8:	9300      	str	r3, [sp, #0]
    5cca:	4ba5      	ldr	r3, [pc, #660]	; (5f60 <main+0x9f0>)
    5ccc:	003a      	movs	r2, r7
    5cce:	49b2      	ldr	r1, [pc, #712]	; (5f98 <main+0xa28>)
    5cd0:	a811      	add	r0, sp, #68	; 0x44
    5cd2:	4da5      	ldr	r5, [pc, #660]	; (5f68 <main+0x9f8>)
    5cd4:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5cd6:	6823      	ldr	r3, [r4, #0]
    5cd8:	469c      	mov	ip, r3
    5cda:	ab14      	add	r3, sp, #80	; 0x50
    5cdc:	466a      	mov	r2, sp
    5cde:	cb23      	ldmia	r3!, {r0, r1, r5}
    5ce0:	c223      	stmia	r2!, {r0, r1, r5}
    5ce2:	cb23      	ldmia	r3!, {r0, r1, r5}
    5ce4:	c223      	stmia	r2!, {r0, r1, r5}
    5ce6:	cb03      	ldmia	r3!, {r0, r1}
    5ce8:	c203      	stmia	r2!, {r0, r1}
    5cea:	9911      	ldr	r1, [sp, #68]	; 0x44
    5cec:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5cee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5cf0:	4660      	mov	r0, ip
    5cf2:	47b0      	blx	r6
        menu_create_item(&tmp_item, "ATTACK", TYPE_UINT32, "ms", (void *)&p_to_channels[i]->adsr->attack, 0, 5000, NULL);
    5cf4:	9703      	str	r7, [sp, #12]
    5cf6:	4ba9      	ldr	r3, [pc, #676]	; (5f9c <main+0xa2c>)
    5cf8:	469a      	mov	sl, r3
    5cfa:	9302      	str	r3, [sp, #8]
    5cfc:	464b      	mov	r3, r9
    5cfe:	9301      	str	r3, [sp, #4]
    5d00:	4643      	mov	r3, r8
    5d02:	681b      	ldr	r3, [r3, #0]
    5d04:	689b      	ldr	r3, [r3, #8]
    5d06:	3308      	adds	r3, #8
    5d08:	9300      	str	r3, [sp, #0]
    5d0a:	4ba5      	ldr	r3, [pc, #660]	; (5fa0 <main+0xa30>)
    5d0c:	2202      	movs	r2, #2
    5d0e:	49a5      	ldr	r1, [pc, #660]	; (5fa4 <main+0xa34>)
    5d10:	a811      	add	r0, sp, #68	; 0x44
    5d12:	4d95      	ldr	r5, [pc, #596]	; (5f68 <main+0x9f8>)
    5d14:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5d16:	6823      	ldr	r3, [r4, #0]
    5d18:	469c      	mov	ip, r3
    5d1a:	ab14      	add	r3, sp, #80	; 0x50
    5d1c:	466a      	mov	r2, sp
    5d1e:	cb23      	ldmia	r3!, {r0, r1, r5}
    5d20:	c223      	stmia	r2!, {r0, r1, r5}
    5d22:	cb23      	ldmia	r3!, {r0, r1, r5}
    5d24:	c223      	stmia	r2!, {r0, r1, r5}
    5d26:	cb03      	ldmia	r3!, {r0, r1}
    5d28:	c203      	stmia	r2!, {r0, r1}
    5d2a:	9911      	ldr	r1, [sp, #68]	; 0x44
    5d2c:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5d2e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5d30:	4660      	mov	r0, ip
    5d32:	47b0      	blx	r6
        menu_create_item(&tmp_item, "DECAY", TYPE_UINT32, "ms", (void *)&p_to_channels[i]->adsr->decay, 0, 5000, NULL);
    5d34:	9703      	str	r7, [sp, #12]
    5d36:	4653      	mov	r3, sl
    5d38:	9302      	str	r3, [sp, #8]
    5d3a:	464b      	mov	r3, r9
    5d3c:	9301      	str	r3, [sp, #4]
    5d3e:	4643      	mov	r3, r8
    5d40:	681b      	ldr	r3, [r3, #0]
    5d42:	689b      	ldr	r3, [r3, #8]
    5d44:	3310      	adds	r3, #16
    5d46:	9300      	str	r3, [sp, #0]
    5d48:	4b95      	ldr	r3, [pc, #596]	; (5fa0 <main+0xa30>)
    5d4a:	2202      	movs	r2, #2
    5d4c:	4996      	ldr	r1, [pc, #600]	; (5fa8 <main+0xa38>)
    5d4e:	a811      	add	r0, sp, #68	; 0x44
    5d50:	4d85      	ldr	r5, [pc, #532]	; (5f68 <main+0x9f8>)
    5d52:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5d54:	6823      	ldr	r3, [r4, #0]
    5d56:	469c      	mov	ip, r3
    5d58:	ab14      	add	r3, sp, #80	; 0x50
    5d5a:	466a      	mov	r2, sp
    5d5c:	cb23      	ldmia	r3!, {r0, r1, r5}
    5d5e:	c223      	stmia	r2!, {r0, r1, r5}
    5d60:	cb23      	ldmia	r3!, {r0, r1, r5}
    5d62:	c223      	stmia	r2!, {r0, r1, r5}
    5d64:	cb03      	ldmia	r3!, {r0, r1}
    5d66:	c203      	stmia	r2!, {r0, r1}
    5d68:	9911      	ldr	r1, [sp, #68]	; 0x44
    5d6a:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5d6c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5d6e:	4660      	mov	r0, ip
    5d70:	47b0      	blx	r6
        menu_create_item(&tmp_item,  "SUSTAIN", TYPE_UINT32, "ms", (void *)&p_to_channels[i]->adsr->sustain, 0, 5000, NULL);
    5d72:	9703      	str	r7, [sp, #12]
    5d74:	4653      	mov	r3, sl
    5d76:	9302      	str	r3, [sp, #8]
    5d78:	464b      	mov	r3, r9
    5d7a:	9301      	str	r3, [sp, #4]
    5d7c:	4643      	mov	r3, r8
    5d7e:	681b      	ldr	r3, [r3, #0]
    5d80:	689b      	ldr	r3, [r3, #8]
    5d82:	3318      	adds	r3, #24
    5d84:	9300      	str	r3, [sp, #0]
    5d86:	4b86      	ldr	r3, [pc, #536]	; (5fa0 <main+0xa30>)
    5d88:	2202      	movs	r2, #2
    5d8a:	4988      	ldr	r1, [pc, #544]	; (5fac <main+0xa3c>)
    5d8c:	a811      	add	r0, sp, #68	; 0x44
    5d8e:	4d76      	ldr	r5, [pc, #472]	; (5f68 <main+0x9f8>)
    5d90:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5d92:	6823      	ldr	r3, [r4, #0]
    5d94:	469c      	mov	ip, r3
    5d96:	ab14      	add	r3, sp, #80	; 0x50
    5d98:	466a      	mov	r2, sp
    5d9a:	cb23      	ldmia	r3!, {r0, r1, r5}
    5d9c:	c223      	stmia	r2!, {r0, r1, r5}
    5d9e:	cb23      	ldmia	r3!, {r0, r1, r5}
    5da0:	c223      	stmia	r2!, {r0, r1, r5}
    5da2:	cb03      	ldmia	r3!, {r0, r1}
    5da4:	c203      	stmia	r2!, {r0, r1}
    5da6:	9911      	ldr	r1, [sp, #68]	; 0x44
    5da8:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5daa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5dac:	4660      	mov	r0, ip
    5dae:	47b0      	blx	r6
        menu_create_item(&tmp_item,  "S_LEVEL", TYPE_UINT8, "", (void *)&p_to_channels[i]->adsr->sustain_level, 0, 255, NULL);
    5db0:	9703      	str	r7, [sp, #12]
    5db2:	4b7f      	ldr	r3, [pc, #508]	; (5fb0 <main+0xa40>)
    5db4:	9302      	str	r3, [sp, #8]
    5db6:	464b      	mov	r3, r9
    5db8:	9301      	str	r3, [sp, #4]
    5dba:	4643      	mov	r3, r8
    5dbc:	681b      	ldr	r3, [r3, #0]
    5dbe:	689b      	ldr	r3, [r3, #8]
    5dc0:	331c      	adds	r3, #28
    5dc2:	9300      	str	r3, [sp, #0]
    5dc4:	4b66      	ldr	r3, [pc, #408]	; (5f60 <main+0x9f0>)
    5dc6:	003a      	movs	r2, r7
    5dc8:	497a      	ldr	r1, [pc, #488]	; (5fb4 <main+0xa44>)
    5dca:	a811      	add	r0, sp, #68	; 0x44
    5dcc:	4d66      	ldr	r5, [pc, #408]	; (5f68 <main+0x9f8>)
    5dce:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5dd0:	6823      	ldr	r3, [r4, #0]
    5dd2:	469c      	mov	ip, r3
    5dd4:	ab14      	add	r3, sp, #80	; 0x50
    5dd6:	466a      	mov	r2, sp
    5dd8:	cb23      	ldmia	r3!, {r0, r1, r5}
    5dda:	c223      	stmia	r2!, {r0, r1, r5}
    5ddc:	cb23      	ldmia	r3!, {r0, r1, r5}
    5dde:	c223      	stmia	r2!, {r0, r1, r5}
    5de0:	cb03      	ldmia	r3!, {r0, r1}
    5de2:	c203      	stmia	r2!, {r0, r1}
    5de4:	9911      	ldr	r1, [sp, #68]	; 0x44
    5de6:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5de8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5dea:	4660      	mov	r0, ip
    5dec:	47b0      	blx	r6
        menu_create_item(&tmp_item, "RELEASE", TYPE_UINT32, "ms", (void *)&p_to_channels[i]->adsr->release, 0, 5000, NULL);
    5dee:	9703      	str	r7, [sp, #12]
    5df0:	4653      	mov	r3, sl
    5df2:	9302      	str	r3, [sp, #8]
    5df4:	464b      	mov	r3, r9
    5df6:	9301      	str	r3, [sp, #4]
    5df8:	4643      	mov	r3, r8
    5dfa:	681b      	ldr	r3, [r3, #0]
    5dfc:	689b      	ldr	r3, [r3, #8]
    5dfe:	3324      	adds	r3, #36	; 0x24
    5e00:	9300      	str	r3, [sp, #0]
    5e02:	4b67      	ldr	r3, [pc, #412]	; (5fa0 <main+0xa30>)
    5e04:	2202      	movs	r2, #2
    5e06:	496c      	ldr	r1, [pc, #432]	; (5fb8 <main+0xa48>)
    5e08:	a811      	add	r0, sp, #68	; 0x44
    5e0a:	4d57      	ldr	r5, [pc, #348]	; (5f68 <main+0x9f8>)
    5e0c:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5e0e:	6823      	ldr	r3, [r4, #0]
    5e10:	469c      	mov	ip, r3
    5e12:	ab14      	add	r3, sp, #80	; 0x50
    5e14:	466a      	mov	r2, sp
    5e16:	cb23      	ldmia	r3!, {r0, r1, r5}
    5e18:	c223      	stmia	r2!, {r0, r1, r5}
    5e1a:	cb23      	ldmia	r3!, {r0, r1, r5}
    5e1c:	c223      	stmia	r2!, {r0, r1, r5}
    5e1e:	cb03      	ldmia	r3!, {r0, r1}
    5e20:	c203      	stmia	r2!, {r0, r1}
    5e22:	9911      	ldr	r1, [sp, #68]	; 0x44
    5e24:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5e26:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5e28:	4660      	mov	r0, ip
    5e2a:	47b0      	blx	r6
        menu_create_item(&tmp_item,  "MIDI CH", TYPE_UINT8, "", (void *)&p_to_channels[i]->midi_ch, 1, 16, NULL);
    5e2c:	9703      	str	r7, [sp, #12]
    5e2e:	2383      	movs	r3, #131	; 0x83
    5e30:	05db      	lsls	r3, r3, #23
    5e32:	9302      	str	r3, [sp, #8]
    5e34:	465b      	mov	r3, fp
    5e36:	9301      	str	r3, [sp, #4]
    5e38:	4643      	mov	r3, r8
    5e3a:	681b      	ldr	r3, [r3, #0]
    5e3c:	3304      	adds	r3, #4
    5e3e:	9300      	str	r3, [sp, #0]
    5e40:	4b47      	ldr	r3, [pc, #284]	; (5f60 <main+0x9f0>)
    5e42:	003a      	movs	r2, r7
    5e44:	495d      	ldr	r1, [pc, #372]	; (5fbc <main+0xa4c>)
    5e46:	a811      	add	r0, sp, #68	; 0x44
    5e48:	4d47      	ldr	r5, [pc, #284]	; (5f68 <main+0x9f8>)
    5e4a:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5e4c:	6823      	ldr	r3, [r4, #0]
    5e4e:	469c      	mov	ip, r3
    5e50:	ab14      	add	r3, sp, #80	; 0x50
    5e52:	466a      	mov	r2, sp
    5e54:	cb23      	ldmia	r3!, {r0, r1, r5}
    5e56:	c223      	stmia	r2!, {r0, r1, r5}
    5e58:	cb23      	ldmia	r3!, {r0, r1, r5}
    5e5a:	c223      	stmia	r2!, {r0, r1, r5}
    5e5c:	cb03      	ldmia	r3!, {r0, r1}
    5e5e:	c203      	stmia	r2!, {r0, r1}
    5e60:	9911      	ldr	r1, [sp, #68]	; 0x44
    5e62:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5e64:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5e66:	4660      	mov	r0, ip
    5e68:	47b0      	blx	r6
        menu_create_item(&tmp_item,  "MIDI NOTE", TYPE_UINT8, "", (void *)&p_to_channels[i]->note, 0, 127, NULL);
    5e6a:	9703      	str	r7, [sp, #12]
    5e6c:	4b54      	ldr	r3, [pc, #336]	; (5fc0 <main+0xa50>)
    5e6e:	9302      	str	r3, [sp, #8]
    5e70:	464b      	mov	r3, r9
    5e72:	9301      	str	r3, [sp, #4]
    5e74:	4642      	mov	r2, r8
    5e76:	ca08      	ldmia	r2!, {r3}
    5e78:	4690      	mov	r8, r2
    5e7a:	3305      	adds	r3, #5
    5e7c:	9300      	str	r3, [sp, #0]
    5e7e:	4b38      	ldr	r3, [pc, #224]	; (5f60 <main+0x9f0>)
    5e80:	003a      	movs	r2, r7
    5e82:	4950      	ldr	r1, [pc, #320]	; (5fc4 <main+0xa54>)
    5e84:	a811      	add	r0, sp, #68	; 0x44
    5e86:	4d38      	ldr	r5, [pc, #224]	; (5f68 <main+0x9f8>)
    5e88:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5e8a:	6823      	ldr	r3, [r4, #0]
    5e8c:	469c      	mov	ip, r3
    5e8e:	ab14      	add	r3, sp, #80	; 0x50
    5e90:	466a      	mov	r2, sp
    5e92:	cb23      	ldmia	r3!, {r0, r1, r5}
    5e94:	c223      	stmia	r2!, {r0, r1, r5}
    5e96:	cb23      	ldmia	r3!, {r0, r1, r5}
    5e98:	c223      	stmia	r2!, {r0, r1, r5}
    5e9a:	cb03      	ldmia	r3!, {r0, r1}
    5e9c:	c203      	stmia	r2!, {r0, r1}
    5e9e:	9911      	ldr	r1, [sp, #68]	; 0x44
    5ea0:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5ea2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5ea4:	4660      	mov	r0, ip
    5ea6:	47b0      	blx	r6
        menu_create_item(&tmp_item, "BACK", TYPE_MENU, "", (void *)&main_menu, 0, 0, NULL);
    5ea8:	9703      	str	r7, [sp, #12]
    5eaa:	464b      	mov	r3, r9
    5eac:	9302      	str	r3, [sp, #8]
    5eae:	9301      	str	r3, [sp, #4]
    5eb0:	4b2e      	ldr	r3, [pc, #184]	; (5f6c <main+0x9fc>)
    5eb2:	9300      	str	r3, [sp, #0]
    5eb4:	4b2a      	ldr	r3, [pc, #168]	; (5f60 <main+0x9f0>)
    5eb6:	2204      	movs	r2, #4
    5eb8:	492e      	ldr	r1, [pc, #184]	; (5f74 <main+0xa04>)
    5eba:	a811      	add	r0, sp, #68	; 0x44
    5ebc:	4d2a      	ldr	r5, [pc, #168]	; (5f68 <main+0x9f8>)
    5ebe:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5ec0:	cc08      	ldmia	r4!, {r3}
    5ec2:	469c      	mov	ip, r3
    5ec4:	ab14      	add	r3, sp, #80	; 0x50
    5ec6:	466a      	mov	r2, sp
    5ec8:	cb23      	ldmia	r3!, {r0, r1, r5}
    5eca:	c223      	stmia	r2!, {r0, r1, r5}
    5ecc:	cb23      	ldmia	r3!, {r0, r1, r5}
    5ece:	c223      	stmia	r2!, {r0, r1, r5}
    5ed0:	cb03      	ldmia	r3!, {r0, r1}
    5ed2:	c203      	stmia	r2!, {r0, r1}
    5ed4:	9911      	ldr	r1, [sp, #68]	; 0x44
    5ed6:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5ed8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5eda:	4660      	mov	r0, ip
    5edc:	47b0      	blx	r6
    for (uint8_t i = 0; i < 5; i++) {
    5ede:	4b3a      	ldr	r3, [pc, #232]	; (5fc8 <main+0xa58>)
    5ee0:	429c      	cmp	r4, r3
    5ee2:	d000      	beq.n	5ee6 <main+0x976>
    5ee4:	e68a      	b.n	5bfc <main+0x68c>
        dmx_values[i] = 0;
    5ee6:	2300      	movs	r3, #0
    5ee8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    5eea:	7013      	strb	r3, [r2, #0]
    5eec:	3201      	adds	r2, #1
    for (uint16_t i = 0; i < sizeof(dmx_values); i++) {
    5eee:	990a      	ldr	r1, [sp, #40]	; 0x28
    5ef0:	428a      	cmp	r2, r1
    5ef2:	d1fa      	bne.n	5eea <main+0x97a>
    dmx_values[6] = 255;
    5ef4:	22ff      	movs	r2, #255	; 0xff
    5ef6:	4b35      	ldr	r3, [pc, #212]	; (5fcc <main+0xa5c>)
    5ef8:	719a      	strb	r2, [r3, #6]
    uint8_t prev_compare_vals[5] = {0, 0, 0, 0, 0};
    5efa:	3afa      	subs	r2, #250	; 0xfa
    5efc:	2100      	movs	r1, #0
    5efe:	a80f      	add	r0, sp, #60	; 0x3c
    5f00:	4b33      	ldr	r3, [pc, #204]	; (5fd0 <main+0xa60>)
    5f02:	4798      	blx	r3
    uint32_t send_data_timer = 0, read_button_timer = 0;
    5f04:	2300      	movs	r3, #0
    5f06:	4699      	mov	r9, r3
    5f08:	9309      	str	r3, [sp, #36]	; 0x24
    uint8_t prev_brightness = 0;
    5f0a:	2700      	movs	r7, #0
    uint8_t prev_contrast = 0;
    5f0c:	469a      	mov	sl, r3
        if(state == SCROLL) {
    5f0e:	4b31      	ldr	r3, [pc, #196]	; (5fd4 <main+0xa64>)
    5f10:	4698      	mov	r8, r3
    5f12:	e0f5      	b.n	6100 <main+0xb90>
                format = 0;
    5f14:	2200      	movs	r2, #0
    5f16:	4b30      	ldr	r3, [pc, #192]	; (5fd8 <main+0xa68>)
    5f18:	701a      	strb	r2, [r3, #0]
                memory_full_format();
    5f1a:	4b30      	ldr	r3, [pc, #192]	; (5fdc <main+0xa6c>)
    5f1c:	4798      	blx	r3
    5f1e:	e0f8      	b.n	6112 <main+0xba2>
                memory_load_preset(p_to_channels, dmx_values, lsave);
    5f20:	492a      	ldr	r1, [pc, #168]	; (5fcc <main+0xa5c>)
    5f22:	4815      	ldr	r0, [pc, #84]	; (5f78 <main+0xa08>)
    5f24:	4b2e      	ldr	r3, [pc, #184]	; (5fe0 <main+0xa70>)
    5f26:	4798      	blx	r3
                lsave = 0;
    5f28:	2200      	movs	r2, #0
    5f2a:	4b2e      	ldr	r3, [pc, #184]	; (5fe4 <main+0xa74>)
    5f2c:	701a      	strb	r2, [r3, #0]
    5f2e:	e0f5      	b.n	611c <main+0xbac>
                memory_write_preset(p_to_channels, dmx_values, ssave);
    5f30:	4926      	ldr	r1, [pc, #152]	; (5fcc <main+0xa5c>)
    5f32:	4811      	ldr	r0, [pc, #68]	; (5f78 <main+0xa08>)
    5f34:	4b2c      	ldr	r3, [pc, #176]	; (5fe8 <main+0xa78>)
    5f36:	4798      	blx	r3
                ssave = 0;
    5f38:	2200      	movs	r2, #0
    5f3a:	4b2c      	ldr	r3, [pc, #176]	; (5fec <main+0xa7c>)
    5f3c:	701a      	strb	r2, [r3, #0]
    5f3e:	e0f2      	b.n	6126 <main+0xbb6>
                device_factory_reset();
    5f40:	4b2b      	ldr	r3, [pc, #172]	; (5ff0 <main+0xa80>)
    5f42:	4798      	blx	r3
                fac_reset = 0;
    5f44:	2200      	movs	r2, #0
    5f46:	4b2b      	ldr	r3, [pc, #172]	; (5ff4 <main+0xa84>)
    5f48:	701a      	strb	r2, [r3, #0]
    5f4a:	e0f1      	b.n	6130 <main+0xbc0>
                        ac_set_scaler(2, p_to_channels[i]->level);
    5f4c:	2002      	movs	r0, #2
    5f4e:	4b2a      	ldr	r3, [pc, #168]	; (5ff8 <main+0xa88>)
    5f50:	4798      	blx	r3
                        break;
    5f52:	e055      	b.n	6000 <main+0xa90>
                        ac_set_scaler(0, p_to_channels[i]->level);
    5f54:	2000      	movs	r0, #0
    5f56:	4b28      	ldr	r3, [pc, #160]	; (5ff8 <main+0xa88>)
    5f58:	4798      	blx	r3
                        break;
    5f5a:	e051      	b.n	6000 <main+0xa90>
    5f5c:	200015c0 	.word	0x200015c0
    5f60:	000095c0 	.word	0x000095c0
    5f64:	00009608 	.word	0x00009608
    5f68:	000041b1 	.word	0x000041b1
    5f6c:	20000fdc 	.word	0x20000fdc
    5f70:	00003dad 	.word	0x00003dad
    5f74:	000095ec 	.word	0x000095ec
    5f78:	200026d0 	.word	0x200026d0
    5f7c:	20000020 	.word	0x20000020
    5f80:	0000518d 	.word	0x0000518d
    5f84:	00009614 	.word	0x00009614
    5f88:	40a00000 	.word	0x40a00000
    5f8c:	0000961c 	.word	0x0000961c
    5f90:	00009624 	.word	0x00009624
    5f94:	41f80000 	.word	0x41f80000
    5f98:	00009630 	.word	0x00009630
    5f9c:	459c4000 	.word	0x459c4000
    5fa0:	00009638 	.word	0x00009638
    5fa4:	0000963c 	.word	0x0000963c
    5fa8:	00009644 	.word	0x00009644
    5fac:	0000964c 	.word	0x0000964c
    5fb0:	437f0000 	.word	0x437f0000
    5fb4:	00009654 	.word	0x00009654
    5fb8:	0000965c 	.word	0x0000965c
    5fbc:	00009664 	.word	0x00009664
    5fc0:	42fe0000 	.word	0x42fe0000
    5fc4:	0000966c 	.word	0x0000966c
    5fc8:	20000034 	.word	0x20000034
    5fcc:	200025ac 	.word	0x200025ac
    5fd0:	00008973 	.word	0x00008973
    5fd4:	200015bd 	.word	0x200015bd
    5fd8:	20000fd9 	.word	0x20000fd9
    5fdc:	0000207d 	.word	0x0000207d
    5fe0:	000021c9 	.word	0x000021c9
    5fe4:	20000fda 	.word	0x20000fda
    5fe8:	00002251 	.word	0x00002251
    5fec:	200015bc 	.word	0x200015bc
    5ff0:	000054fd 	.word	0x000054fd
    5ff4:	20000fd8 	.word	0x20000fd8
    5ff8:	00003bb5 	.word	0x00003bb5
        for(uint8_t i = 0; i < 3; i++) {
    5ffc:	2d02      	cmp	r5, #2
    5ffe:	d815      	bhi.n	602c <main+0xabc>
    6000:	3401      	adds	r4, #1
    6002:	3501      	adds	r5, #1
    6004:	b2ed      	uxtb	r5, r5
    6006:	b2e3      	uxtb	r3, r4
            if(p_to_channels[i]->level != prev_compare_vals[i]) {
    6008:	00a2      	lsls	r2, r4, #2
    600a:	58b2      	ldr	r2, [r6, r2]
    600c:	7811      	ldrb	r1, [r2, #0]
    600e:	aa0f      	add	r2, sp, #60	; 0x3c
    6010:	5ca2      	ldrb	r2, [r4, r2]
    6012:	428a      	cmp	r2, r1
    6014:	d0f2      	beq.n	5ffc <main+0xa8c>
                prev_compare_vals[i] = p_to_channels[i]->level;
    6016:	aa0f      	add	r2, sp, #60	; 0x3c
    6018:	54a1      	strb	r1, [r4, r2]
                switch(i) {
    601a:	2b01      	cmp	r3, #1
    601c:	d09a      	beq.n	5f54 <main+0x9e4>
    601e:	2b00      	cmp	r3, #0
    6020:	d094      	beq.n	5f4c <main+0x9dc>
    6022:	2b02      	cmp	r3, #2
    6024:	d1ea      	bne.n	5ffc <main+0xa8c>
                        ac_set_scaler(1, p_to_channels[i]->level);
    6026:	2001      	movs	r0, #1
    6028:	4b6e      	ldr	r3, [pc, #440]	; (61e4 <main+0xc74>)
    602a:	4798      	blx	r3
        if (device_settings.contrast != prev_contrast) {
    602c:	4b6e      	ldr	r3, [pc, #440]	; (61e8 <main+0xc78>)
    602e:	781e      	ldrb	r6, [r3, #0]
    6030:	45b2      	cmp	sl, r6
    6032:	d004      	beq.n	603e <main+0xace>
            dac_chan_write(&dac_instance, DAC_CHANNEL_0, (device_settings.contrast << 5));
    6034:	0172      	lsls	r2, r6, #5
    6036:	2100      	movs	r1, #0
    6038:	486c      	ldr	r0, [pc, #432]	; (61ec <main+0xc7c>)
    603a:	4b6d      	ldr	r3, [pc, #436]	; (61f0 <main+0xc80>)
    603c:	4798      	blx	r3
        if (device_settings.brightness != prev_brightness) {
    603e:	4b6a      	ldr	r3, [pc, #424]	; (61e8 <main+0xc78>)
    6040:	7858      	ldrb	r0, [r3, #1]
    6042:	4287      	cmp	r7, r0
    6044:	d01a      	beq.n	607c <main+0xb0c>
            set_brightness(device_settings.brightness);
    6046:	4b6b      	ldr	r3, [pc, #428]	; (61f4 <main+0xc84>)
    6048:	4798      	blx	r3
            prev_brightness = device_settings.brightness;
    604a:	4b67      	ldr	r3, [pc, #412]	; (61e8 <main+0xc78>)
    604c:	785f      	ldrb	r7, [r3, #1]
        if (key_pressed) {
    604e:	4b6a      	ldr	r3, [pc, #424]	; (61f8 <main+0xc88>)
    6050:	781b      	ldrb	r3, [r3, #0]
    6052:	2b00      	cmp	r3, #0
    6054:	d114      	bne.n	6080 <main+0xb10>
        key_pressed = 1;
    6056:	2201      	movs	r2, #1
    6058:	4b67      	ldr	r3, [pc, #412]	; (61f8 <main+0xc88>)
    605a:	701a      	strb	r2, [r3, #0]
        switch (get_encoder_status()) {
    605c:	4b67      	ldr	r3, [pc, #412]	; (61fc <main+0xc8c>)
    605e:	4798      	blx	r3
    6060:	2801      	cmp	r0, #1
    6062:	d01f      	beq.n	60a4 <main+0xb34>
    6064:	2802      	cmp	r0, #2
    6066:	d136      	bne.n	60d6 <main+0xb66>
                for (uint8_t i = get_encoder_speed(); i > 0; i--)
    6068:	4b65      	ldr	r3, [pc, #404]	; (6200 <main+0xc90>)
    606a:	4798      	blx	r3
    606c:	1e04      	subs	r4, r0, #0
    606e:	d035      	beq.n	60dc <main+0xb6c>
                    if (state == SCROLL) {
    6070:	4d64      	ldr	r5, [pc, #400]	; (6204 <main+0xc94>)
                        decrement_menu_position(selected_menu);
    6072:	4b65      	ldr	r3, [pc, #404]	; (6208 <main+0xc98>)
    6074:	469b      	mov	fp, r3
    6076:	4b65      	ldr	r3, [pc, #404]	; (620c <main+0xc9c>)
    6078:	469a      	mov	sl, r3
    607a:	e00c      	b.n	6096 <main+0xb26>
    607c:	0007      	movs	r7, r0
    607e:	e7e6      	b.n	604e <main+0xade>
            menu_draw();
    6080:	4b63      	ldr	r3, [pc, #396]	; (6210 <main+0xca0>)
    6082:	4798      	blx	r3
    6084:	e7e7      	b.n	6056 <main+0xae6>
                        menu_decrement_item(selected_menu);
    6086:	4b60      	ldr	r3, [pc, #384]	; (6208 <main+0xc98>)
    6088:	6818      	ldr	r0, [r3, #0]
    608a:	4b62      	ldr	r3, [pc, #392]	; (6214 <main+0xca4>)
    608c:	4798      	blx	r3
                for (uint8_t i = get_encoder_speed(); i > 0; i--)
    608e:	3c01      	subs	r4, #1
    6090:	b2e4      	uxtb	r4, r4
    6092:	2c00      	cmp	r4, #0
    6094:	d022      	beq.n	60dc <main+0xb6c>
                    if (state == SCROLL) {
    6096:	782b      	ldrb	r3, [r5, #0]
    6098:	2b00      	cmp	r3, #0
    609a:	d1f4      	bne.n	6086 <main+0xb16>
                        decrement_menu_position(selected_menu);
    609c:	465b      	mov	r3, fp
    609e:	6818      	ldr	r0, [r3, #0]
    60a0:	47d0      	blx	sl
    60a2:	e7f4      	b.n	608e <main+0xb1e>
                for (uint8_t i = get_encoder_speed(); i > 0; i--)
    60a4:	4b56      	ldr	r3, [pc, #344]	; (6200 <main+0xc90>)
    60a6:	4798      	blx	r3
    60a8:	1e04      	subs	r4, r0, #0
    60aa:	d017      	beq.n	60dc <main+0xb6c>
                    if (state == SCROLL) {
    60ac:	4d55      	ldr	r5, [pc, #340]	; (6204 <main+0xc94>)
                        increment_menu_position(selected_menu);
    60ae:	4b56      	ldr	r3, [pc, #344]	; (6208 <main+0xc98>)
    60b0:	469b      	mov	fp, r3
    60b2:	4b59      	ldr	r3, [pc, #356]	; (6218 <main+0xca8>)
    60b4:	469a      	mov	sl, r3
    60b6:	e007      	b.n	60c8 <main+0xb58>
                        menu_increment_item(selected_menu);
    60b8:	4b53      	ldr	r3, [pc, #332]	; (6208 <main+0xc98>)
    60ba:	6818      	ldr	r0, [r3, #0]
    60bc:	4b57      	ldr	r3, [pc, #348]	; (621c <main+0xcac>)
    60be:	4798      	blx	r3
                for (uint8_t i = get_encoder_speed(); i > 0; i--)
    60c0:	3c01      	subs	r4, #1
    60c2:	b2e4      	uxtb	r4, r4
    60c4:	2c00      	cmp	r4, #0
    60c6:	d009      	beq.n	60dc <main+0xb6c>
                    if (state == SCROLL) {
    60c8:	782b      	ldrb	r3, [r5, #0]
    60ca:	2b00      	cmp	r3, #0
    60cc:	d1f4      	bne.n	60b8 <main+0xb48>
                        increment_menu_position(selected_menu);
    60ce:	465b      	mov	r3, fp
    60d0:	6818      	ldr	r0, [r3, #0]
    60d2:	47d0      	blx	sl
    60d4:	e7f4      	b.n	60c0 <main+0xb50>
                key_pressed = 0;
    60d6:	2200      	movs	r2, #0
    60d8:	4b47      	ldr	r3, [pc, #284]	; (61f8 <main+0xc88>)
    60da:	701a      	strb	r2, [r3, #0]
        if (millis() - read_button_timer > 2) {
    60dc:	4b50      	ldr	r3, [pc, #320]	; (6220 <main+0xcb0>)
    60de:	4798      	blx	r3
    60e0:	464b      	mov	r3, r9
    60e2:	1ac0      	subs	r0, r0, r3
    60e4:	2802      	cmp	r0, #2
    60e6:	d827      	bhi.n	6138 <main+0xbc8>
	return (port_base->IN.reg & pin_mask);
    60e8:	2382      	movs	r3, #130	; 0x82
    60ea:	05db      	lsls	r3, r3, #23
    60ec:	6a1b      	ldr	r3, [r3, #32]
        if (port_pin_get_input_level(PIN_SW1) == 0)
    60ee:	04db      	lsls	r3, r3, #19
    60f0:	d52b      	bpl.n	614a <main+0xbda>
        if (millis() - send_data_timer > 20) {
    60f2:	4b4b      	ldr	r3, [pc, #300]	; (6220 <main+0xcb0>)
    60f4:	4798      	blx	r3
    60f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
    60f8:	1ac0      	subs	r0, r0, r3
    60fa:	2814      	cmp	r0, #20
    60fc:	d829      	bhi.n	6152 <main+0xbe2>
    menu_add_item(&settings_menu, tmp_item);
    60fe:	46b2      	mov	sl, r6
        if(state == SCROLL) {
    6100:	4643      	mov	r3, r8
    6102:	781b      	ldrb	r3, [r3, #0]
    6104:	2b00      	cmp	r3, #0
    6106:	d113      	bne.n	6130 <main+0xbc0>
            if(format == 1) {
    6108:	4b46      	ldr	r3, [pc, #280]	; (6224 <main+0xcb4>)
    610a:	781b      	ldrb	r3, [r3, #0]
    610c:	2b01      	cmp	r3, #1
    610e:	d100      	bne.n	6112 <main+0xba2>
    6110:	e700      	b.n	5f14 <main+0x9a4>
            if(lsave) {
    6112:	4b45      	ldr	r3, [pc, #276]	; (6228 <main+0xcb8>)
    6114:	781a      	ldrb	r2, [r3, #0]
    6116:	2a00      	cmp	r2, #0
    6118:	d000      	beq.n	611c <main+0xbac>
    611a:	e701      	b.n	5f20 <main+0x9b0>
            if(ssave) {
    611c:	4b43      	ldr	r3, [pc, #268]	; (622c <main+0xcbc>)
    611e:	781a      	ldrb	r2, [r3, #0]
    6120:	2a00      	cmp	r2, #0
    6122:	d000      	beq.n	6126 <main+0xbb6>
    6124:	e704      	b.n	5f30 <main+0x9c0>
            if(fac_reset) {
    6126:	4b42      	ldr	r3, [pc, #264]	; (6230 <main+0xcc0>)
    6128:	781b      	ldrb	r3, [r3, #0]
    612a:	2b00      	cmp	r3, #0
    612c:	d000      	beq.n	6130 <main+0xbc0>
    612e:	e707      	b.n	5f40 <main+0x9d0>
    uint8_t prev_contrast = 0;
    6130:	2501      	movs	r5, #1
    6132:	2400      	movs	r4, #0
            if(p_to_channels[i]->level != prev_compare_vals[i]) {
    6134:	4e3f      	ldr	r6, [pc, #252]	; (6234 <main+0xcc4>)
    6136:	e766      	b.n	6006 <main+0xa96>
            read_button_timer = millis();
    6138:	4b39      	ldr	r3, [pc, #228]	; (6220 <main+0xcb0>)
    613a:	4798      	blx	r3
    613c:	4681      	mov	r9, r0
            button_handler(button_read(), &state);
    613e:	4b3e      	ldr	r3, [pc, #248]	; (6238 <main+0xcc8>)
    6140:	4798      	blx	r3
    6142:	4930      	ldr	r1, [pc, #192]	; (6204 <main+0xc94>)
    6144:	4b3d      	ldr	r3, [pc, #244]	; (623c <main+0xccc>)
    6146:	4798      	blx	r3
    6148:	e7ce      	b.n	60e8 <main+0xb78>
            adsr_trigger(adsr_channels + 0);
    614a:	483d      	ldr	r0, [pc, #244]	; (6240 <main+0xcd0>)
    614c:	4b3d      	ldr	r3, [pc, #244]	; (6244 <main+0xcd4>)
    614e:	4798      	blx	r3
    6150:	e7cf      	b.n	60f2 <main+0xb82>
            send_data_timer = millis();
    6152:	4b33      	ldr	r3, [pc, #204]	; (6220 <main+0xcb0>)
    6154:	4798      	blx	r3
    6156:	9009      	str	r0, [sp, #36]	; 0x24
            device_mode = select_device_mode(device_settings.mode);
    6158:	4b23      	ldr	r3, [pc, #140]	; (61e8 <main+0xc78>)
    615a:	78d8      	ldrb	r0, [r3, #3]
    615c:	4b3a      	ldr	r3, [pc, #232]	; (6248 <main+0xcd8>)
    615e:	4798      	blx	r3
    6160:	4b3a      	ldr	r3, [pc, #232]	; (624c <main+0xcdc>)
    6162:	7018      	strb	r0, [r3, #0]
    6164:	4d36      	ldr	r5, [pc, #216]	; (6240 <main+0xcd0>)
    6166:	2400      	movs	r4, #0
                if(p_to_channels[i]->enabled)
    6168:	4b32      	ldr	r3, [pc, #200]	; (6234 <main+0xcc4>)
    616a:	469a      	mov	sl, r3
    616c:	e003      	b.n	6176 <main+0xc06>
    616e:	3530      	adds	r5, #48	; 0x30
    6170:	3404      	adds	r4, #4
            for(uint8_t i = 0; i < 5; i++)
    6172:	2c14      	cmp	r4, #20
    6174:	d00d      	beq.n	6192 <main+0xc22>
                if(p_to_channels[i]->enabled)
    6176:	4653      	mov	r3, sl
    6178:	591b      	ldr	r3, [r3, r4]
    617a:	785a      	ldrb	r2, [r3, #1]
    617c:	2a00      	cmp	r2, #0
    617e:	d0f6      	beq.n	616e <main+0xbfe>
                    dmx_values[p_to_channels[i]->dmx_ch] = adsr_get_value(adsr_channels + i);
    6180:	789b      	ldrb	r3, [r3, #2]
    6182:	469b      	mov	fp, r3
    6184:	0028      	movs	r0, r5
    6186:	4b32      	ldr	r3, [pc, #200]	; (6250 <main+0xce0>)
    6188:	4798      	blx	r3
    618a:	4b32      	ldr	r3, [pc, #200]	; (6254 <main+0xce4>)
    618c:	465a      	mov	r2, fp
    618e:	5498      	strb	r0, [r3, r2]
    6190:	e7ed      	b.n	616e <main+0xbfe>
            if (device_mode == DMX || device_mode == BOTH) {
    6192:	4b2e      	ldr	r3, [pc, #184]	; (624c <main+0xcdc>)
    6194:	781b      	ldrb	r3, [r3, #0]
    6196:	3b01      	subs	r3, #1
    6198:	2b01      	cmp	r3, #1
    619a:	d907      	bls.n	61ac <main+0xc3c>
            if (device_mode == TRIGGER || device_mode == BOTH) {
    619c:	4b2b      	ldr	r3, [pc, #172]	; (624c <main+0xcdc>)
    619e:	781b      	ldrb	r3, [r3, #0]
    61a0:	2202      	movs	r2, #2
    61a2:	4393      	bics	r3, r2
    61a4:	d1ab      	bne.n	60fe <main+0xb8e>
    61a6:	2400      	movs	r4, #0
                    if((get_trigger_flags() >> i) & 0x1)
    61a8:	4d2b      	ldr	r5, [pc, #172]	; (6258 <main+0xce8>)
    61aa:	e008      	b.n	61be <main+0xc4e>
                DMX_SendMessage(dmx_values, sizeof(dmx_values));
    61ac:	2180      	movs	r1, #128	; 0x80
    61ae:	0049      	lsls	r1, r1, #1
    61b0:	4828      	ldr	r0, [pc, #160]	; (6254 <main+0xce4>)
    61b2:	4b2a      	ldr	r3, [pc, #168]	; (625c <main+0xcec>)
    61b4:	4798      	blx	r3
    61b6:	e7f1      	b.n	619c <main+0xc2c>
    61b8:	3401      	adds	r4, #1
                for(uint8_t i = 0; i < 5; i++)
    61ba:	2c05      	cmp	r4, #5
    61bc:	d00e      	beq.n	61dc <main+0xc6c>
                    if((get_trigger_flags() >> i) & 0x1)
    61be:	47a8      	blx	r5
    61c0:	4120      	asrs	r0, r4
    61c2:	07c3      	lsls	r3, r0, #31
    61c4:	d5f8      	bpl.n	61b8 <main+0xc48>
                        MIDI_send_note_on(p_to_channels[i]->midi_ch, p_to_channels[i]->note, dmx_values[p_to_channels[i]->dmx_ch]);
    61c6:	00a3      	lsls	r3, r4, #2
    61c8:	4a1a      	ldr	r2, [pc, #104]	; (6234 <main+0xcc4>)
    61ca:	58d3      	ldr	r3, [r2, r3]
    61cc:	789a      	ldrb	r2, [r3, #2]
    61ce:	4921      	ldr	r1, [pc, #132]	; (6254 <main+0xce4>)
    61d0:	5c8a      	ldrb	r2, [r1, r2]
    61d2:	7959      	ldrb	r1, [r3, #5]
    61d4:	7918      	ldrb	r0, [r3, #4]
    61d6:	4b22      	ldr	r3, [pc, #136]	; (6260 <main+0xcf0>)
    61d8:	4798      	blx	r3
    61da:	e7ed      	b.n	61b8 <main+0xc48>
                clear_trigger_flags();
    61dc:	4b21      	ldr	r3, [pc, #132]	; (6264 <main+0xcf4>)
    61de:	4798      	blx	r3
    61e0:	e78d      	b.n	60fe <main+0xb8e>
    61e2:	46c0      	nop			; (mov r8, r8)
    61e4:	00003bb5 	.word	0x00003bb5
    61e8:	20000018 	.word	0x20000018
    61ec:	200026ac 	.word	0x200026ac
    61f0:	0000243d 	.word	0x0000243d
    61f4:	0000484d 	.word	0x0000484d
    61f8:	2000001c 	.word	0x2000001c
    61fc:	000045e1 	.word	0x000045e1
    6200:	0000479d 	.word	0x0000479d
    6204:	200015bd 	.word	0x200015bd
    6208:	20000034 	.word	0x20000034
    620c:	00003e31 	.word	0x00003e31
    6210:	00005499 	.word	0x00005499
    6214:	000042ad 	.word	0x000042ad
    6218:	00003dfd 	.word	0x00003dfd
    621c:	000041e1 	.word	0x000041e1
    6220:	000045d5 	.word	0x000045d5
    6224:	20000fd9 	.word	0x20000fd9
    6228:	20000fda 	.word	0x20000fda
    622c:	200015bc 	.word	0x200015bc
    6230:	20000fd8 	.word	0x20000fd8
    6234:	200026d0 	.word	0x200026d0
    6238:	00000bf1 	.word	0x00000bf1
    623c:	00005435 	.word	0x00005435
    6240:	200024bc 	.word	0x200024bc
    6244:	000006c5 	.word	0x000006c5
    6248:	000052d9 	.word	0x000052d9
    624c:	20002734 	.word	0x20002734
    6250:	000006c1 	.word	0x000006c1
    6254:	200025ac 	.word	0x200025ac
    6258:	0000070d 	.word	0x0000070d
    625c:	00001ea1 	.word	0x00001ea1
    6260:	000045b5 	.word	0x000045b5
    6264:	00000719 	.word	0x00000719

00006268 <__udivsi3>:
    6268:	2200      	movs	r2, #0
    626a:	0843      	lsrs	r3, r0, #1
    626c:	428b      	cmp	r3, r1
    626e:	d374      	bcc.n	635a <__udivsi3+0xf2>
    6270:	0903      	lsrs	r3, r0, #4
    6272:	428b      	cmp	r3, r1
    6274:	d35f      	bcc.n	6336 <__udivsi3+0xce>
    6276:	0a03      	lsrs	r3, r0, #8
    6278:	428b      	cmp	r3, r1
    627a:	d344      	bcc.n	6306 <__udivsi3+0x9e>
    627c:	0b03      	lsrs	r3, r0, #12
    627e:	428b      	cmp	r3, r1
    6280:	d328      	bcc.n	62d4 <__udivsi3+0x6c>
    6282:	0c03      	lsrs	r3, r0, #16
    6284:	428b      	cmp	r3, r1
    6286:	d30d      	bcc.n	62a4 <__udivsi3+0x3c>
    6288:	22ff      	movs	r2, #255	; 0xff
    628a:	0209      	lsls	r1, r1, #8
    628c:	ba12      	rev	r2, r2
    628e:	0c03      	lsrs	r3, r0, #16
    6290:	428b      	cmp	r3, r1
    6292:	d302      	bcc.n	629a <__udivsi3+0x32>
    6294:	1212      	asrs	r2, r2, #8
    6296:	0209      	lsls	r1, r1, #8
    6298:	d065      	beq.n	6366 <__udivsi3+0xfe>
    629a:	0b03      	lsrs	r3, r0, #12
    629c:	428b      	cmp	r3, r1
    629e:	d319      	bcc.n	62d4 <__udivsi3+0x6c>
    62a0:	e000      	b.n	62a4 <__udivsi3+0x3c>
    62a2:	0a09      	lsrs	r1, r1, #8
    62a4:	0bc3      	lsrs	r3, r0, #15
    62a6:	428b      	cmp	r3, r1
    62a8:	d301      	bcc.n	62ae <__udivsi3+0x46>
    62aa:	03cb      	lsls	r3, r1, #15
    62ac:	1ac0      	subs	r0, r0, r3
    62ae:	4152      	adcs	r2, r2
    62b0:	0b83      	lsrs	r3, r0, #14
    62b2:	428b      	cmp	r3, r1
    62b4:	d301      	bcc.n	62ba <__udivsi3+0x52>
    62b6:	038b      	lsls	r3, r1, #14
    62b8:	1ac0      	subs	r0, r0, r3
    62ba:	4152      	adcs	r2, r2
    62bc:	0b43      	lsrs	r3, r0, #13
    62be:	428b      	cmp	r3, r1
    62c0:	d301      	bcc.n	62c6 <__udivsi3+0x5e>
    62c2:	034b      	lsls	r3, r1, #13
    62c4:	1ac0      	subs	r0, r0, r3
    62c6:	4152      	adcs	r2, r2
    62c8:	0b03      	lsrs	r3, r0, #12
    62ca:	428b      	cmp	r3, r1
    62cc:	d301      	bcc.n	62d2 <__udivsi3+0x6a>
    62ce:	030b      	lsls	r3, r1, #12
    62d0:	1ac0      	subs	r0, r0, r3
    62d2:	4152      	adcs	r2, r2
    62d4:	0ac3      	lsrs	r3, r0, #11
    62d6:	428b      	cmp	r3, r1
    62d8:	d301      	bcc.n	62de <__udivsi3+0x76>
    62da:	02cb      	lsls	r3, r1, #11
    62dc:	1ac0      	subs	r0, r0, r3
    62de:	4152      	adcs	r2, r2
    62e0:	0a83      	lsrs	r3, r0, #10
    62e2:	428b      	cmp	r3, r1
    62e4:	d301      	bcc.n	62ea <__udivsi3+0x82>
    62e6:	028b      	lsls	r3, r1, #10
    62e8:	1ac0      	subs	r0, r0, r3
    62ea:	4152      	adcs	r2, r2
    62ec:	0a43      	lsrs	r3, r0, #9
    62ee:	428b      	cmp	r3, r1
    62f0:	d301      	bcc.n	62f6 <__udivsi3+0x8e>
    62f2:	024b      	lsls	r3, r1, #9
    62f4:	1ac0      	subs	r0, r0, r3
    62f6:	4152      	adcs	r2, r2
    62f8:	0a03      	lsrs	r3, r0, #8
    62fa:	428b      	cmp	r3, r1
    62fc:	d301      	bcc.n	6302 <__udivsi3+0x9a>
    62fe:	020b      	lsls	r3, r1, #8
    6300:	1ac0      	subs	r0, r0, r3
    6302:	4152      	adcs	r2, r2
    6304:	d2cd      	bcs.n	62a2 <__udivsi3+0x3a>
    6306:	09c3      	lsrs	r3, r0, #7
    6308:	428b      	cmp	r3, r1
    630a:	d301      	bcc.n	6310 <__udivsi3+0xa8>
    630c:	01cb      	lsls	r3, r1, #7
    630e:	1ac0      	subs	r0, r0, r3
    6310:	4152      	adcs	r2, r2
    6312:	0983      	lsrs	r3, r0, #6
    6314:	428b      	cmp	r3, r1
    6316:	d301      	bcc.n	631c <__udivsi3+0xb4>
    6318:	018b      	lsls	r3, r1, #6
    631a:	1ac0      	subs	r0, r0, r3
    631c:	4152      	adcs	r2, r2
    631e:	0943      	lsrs	r3, r0, #5
    6320:	428b      	cmp	r3, r1
    6322:	d301      	bcc.n	6328 <__udivsi3+0xc0>
    6324:	014b      	lsls	r3, r1, #5
    6326:	1ac0      	subs	r0, r0, r3
    6328:	4152      	adcs	r2, r2
    632a:	0903      	lsrs	r3, r0, #4
    632c:	428b      	cmp	r3, r1
    632e:	d301      	bcc.n	6334 <__udivsi3+0xcc>
    6330:	010b      	lsls	r3, r1, #4
    6332:	1ac0      	subs	r0, r0, r3
    6334:	4152      	adcs	r2, r2
    6336:	08c3      	lsrs	r3, r0, #3
    6338:	428b      	cmp	r3, r1
    633a:	d301      	bcc.n	6340 <__udivsi3+0xd8>
    633c:	00cb      	lsls	r3, r1, #3
    633e:	1ac0      	subs	r0, r0, r3
    6340:	4152      	adcs	r2, r2
    6342:	0883      	lsrs	r3, r0, #2
    6344:	428b      	cmp	r3, r1
    6346:	d301      	bcc.n	634c <__udivsi3+0xe4>
    6348:	008b      	lsls	r3, r1, #2
    634a:	1ac0      	subs	r0, r0, r3
    634c:	4152      	adcs	r2, r2
    634e:	0843      	lsrs	r3, r0, #1
    6350:	428b      	cmp	r3, r1
    6352:	d301      	bcc.n	6358 <__udivsi3+0xf0>
    6354:	004b      	lsls	r3, r1, #1
    6356:	1ac0      	subs	r0, r0, r3
    6358:	4152      	adcs	r2, r2
    635a:	1a41      	subs	r1, r0, r1
    635c:	d200      	bcs.n	6360 <__udivsi3+0xf8>
    635e:	4601      	mov	r1, r0
    6360:	4152      	adcs	r2, r2
    6362:	4610      	mov	r0, r2
    6364:	4770      	bx	lr
    6366:	e7ff      	b.n	6368 <__udivsi3+0x100>
    6368:	b501      	push	{r0, lr}
    636a:	2000      	movs	r0, #0
    636c:	f000 f806 	bl	637c <__aeabi_idiv0>
    6370:	bd02      	pop	{r1, pc}
    6372:	46c0      	nop			; (mov r8, r8)

00006374 <__aeabi_uidivmod>:
    6374:	2900      	cmp	r1, #0
    6376:	d0f7      	beq.n	6368 <__udivsi3+0x100>
    6378:	e776      	b.n	6268 <__udivsi3>
    637a:	4770      	bx	lr

0000637c <__aeabi_idiv0>:
    637c:	4770      	bx	lr
    637e:	46c0      	nop			; (mov r8, r8)

00006380 <__aeabi_cfrcmple>:
    6380:	4684      	mov	ip, r0
    6382:	1c08      	adds	r0, r1, #0
    6384:	4661      	mov	r1, ip
    6386:	e7ff      	b.n	6388 <__aeabi_cfcmpeq>

00006388 <__aeabi_cfcmpeq>:
    6388:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    638a:	f000 f9bb 	bl	6704 <__lesf2>
    638e:	2800      	cmp	r0, #0
    6390:	d401      	bmi.n	6396 <__aeabi_cfcmpeq+0xe>
    6392:	2100      	movs	r1, #0
    6394:	42c8      	cmn	r0, r1
    6396:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00006398 <__aeabi_fcmpeq>:
    6398:	b510      	push	{r4, lr}
    639a:	f000 f94d 	bl	6638 <__eqsf2>
    639e:	4240      	negs	r0, r0
    63a0:	3001      	adds	r0, #1
    63a2:	bd10      	pop	{r4, pc}

000063a4 <__aeabi_fcmplt>:
    63a4:	b510      	push	{r4, lr}
    63a6:	f000 f9ad 	bl	6704 <__lesf2>
    63aa:	2800      	cmp	r0, #0
    63ac:	db01      	blt.n	63b2 <__aeabi_fcmplt+0xe>
    63ae:	2000      	movs	r0, #0
    63b0:	bd10      	pop	{r4, pc}
    63b2:	2001      	movs	r0, #1
    63b4:	bd10      	pop	{r4, pc}
    63b6:	46c0      	nop			; (mov r8, r8)

000063b8 <__aeabi_fcmple>:
    63b8:	b510      	push	{r4, lr}
    63ba:	f000 f9a3 	bl	6704 <__lesf2>
    63be:	2800      	cmp	r0, #0
    63c0:	dd01      	ble.n	63c6 <__aeabi_fcmple+0xe>
    63c2:	2000      	movs	r0, #0
    63c4:	bd10      	pop	{r4, pc}
    63c6:	2001      	movs	r0, #1
    63c8:	bd10      	pop	{r4, pc}
    63ca:	46c0      	nop			; (mov r8, r8)

000063cc <__aeabi_fcmpgt>:
    63cc:	b510      	push	{r4, lr}
    63ce:	f000 f959 	bl	6684 <__gesf2>
    63d2:	2800      	cmp	r0, #0
    63d4:	dc01      	bgt.n	63da <__aeabi_fcmpgt+0xe>
    63d6:	2000      	movs	r0, #0
    63d8:	bd10      	pop	{r4, pc}
    63da:	2001      	movs	r0, #1
    63dc:	bd10      	pop	{r4, pc}
    63de:	46c0      	nop			; (mov r8, r8)

000063e0 <__aeabi_fcmpge>:
    63e0:	b510      	push	{r4, lr}
    63e2:	f000 f94f 	bl	6684 <__gesf2>
    63e6:	2800      	cmp	r0, #0
    63e8:	da01      	bge.n	63ee <__aeabi_fcmpge+0xe>
    63ea:	2000      	movs	r0, #0
    63ec:	bd10      	pop	{r4, pc}
    63ee:	2001      	movs	r0, #1
    63f0:	bd10      	pop	{r4, pc}
    63f2:	46c0      	nop			; (mov r8, r8)

000063f4 <__aeabi_uldivmod>:
    63f4:	2b00      	cmp	r3, #0
    63f6:	d111      	bne.n	641c <__aeabi_uldivmod+0x28>
    63f8:	2a00      	cmp	r2, #0
    63fa:	d10f      	bne.n	641c <__aeabi_uldivmod+0x28>
    63fc:	2900      	cmp	r1, #0
    63fe:	d100      	bne.n	6402 <__aeabi_uldivmod+0xe>
    6400:	2800      	cmp	r0, #0
    6402:	d002      	beq.n	640a <__aeabi_uldivmod+0x16>
    6404:	2100      	movs	r1, #0
    6406:	43c9      	mvns	r1, r1
    6408:	1c08      	adds	r0, r1, #0
    640a:	b407      	push	{r0, r1, r2}
    640c:	4802      	ldr	r0, [pc, #8]	; (6418 <__aeabi_uldivmod+0x24>)
    640e:	a102      	add	r1, pc, #8	; (adr r1, 6418 <__aeabi_uldivmod+0x24>)
    6410:	1840      	adds	r0, r0, r1
    6412:	9002      	str	r0, [sp, #8]
    6414:	bd03      	pop	{r0, r1, pc}
    6416:	46c0      	nop			; (mov r8, r8)
    6418:	ffffff65 	.word	0xffffff65
    641c:	b403      	push	{r0, r1}
    641e:	4668      	mov	r0, sp
    6420:	b501      	push	{r0, lr}
    6422:	9802      	ldr	r0, [sp, #8]
    6424:	f000 f848 	bl	64b8 <__udivmoddi4>
    6428:	9b01      	ldr	r3, [sp, #4]
    642a:	469e      	mov	lr, r3
    642c:	b002      	add	sp, #8
    642e:	bc0c      	pop	{r2, r3}
    6430:	4770      	bx	lr
    6432:	46c0      	nop			; (mov r8, r8)

00006434 <__aeabi_lmul>:
    6434:	b5f0      	push	{r4, r5, r6, r7, lr}
    6436:	46ce      	mov	lr, r9
    6438:	4647      	mov	r7, r8
    643a:	0415      	lsls	r5, r2, #16
    643c:	0c2d      	lsrs	r5, r5, #16
    643e:	002e      	movs	r6, r5
    6440:	b580      	push	{r7, lr}
    6442:	0407      	lsls	r7, r0, #16
    6444:	0c14      	lsrs	r4, r2, #16
    6446:	0c3f      	lsrs	r7, r7, #16
    6448:	4699      	mov	r9, r3
    644a:	0c03      	lsrs	r3, r0, #16
    644c:	437e      	muls	r6, r7
    644e:	435d      	muls	r5, r3
    6450:	4367      	muls	r7, r4
    6452:	4363      	muls	r3, r4
    6454:	197f      	adds	r7, r7, r5
    6456:	0c34      	lsrs	r4, r6, #16
    6458:	19e4      	adds	r4, r4, r7
    645a:	469c      	mov	ip, r3
    645c:	42a5      	cmp	r5, r4
    645e:	d903      	bls.n	6468 <__aeabi_lmul+0x34>
    6460:	2380      	movs	r3, #128	; 0x80
    6462:	025b      	lsls	r3, r3, #9
    6464:	4698      	mov	r8, r3
    6466:	44c4      	add	ip, r8
    6468:	464b      	mov	r3, r9
    646a:	4351      	muls	r1, r2
    646c:	4343      	muls	r3, r0
    646e:	0436      	lsls	r6, r6, #16
    6470:	0c36      	lsrs	r6, r6, #16
    6472:	0c25      	lsrs	r5, r4, #16
    6474:	0424      	lsls	r4, r4, #16
    6476:	4465      	add	r5, ip
    6478:	19a4      	adds	r4, r4, r6
    647a:	1859      	adds	r1, r3, r1
    647c:	1949      	adds	r1, r1, r5
    647e:	0020      	movs	r0, r4
    6480:	bc0c      	pop	{r2, r3}
    6482:	4690      	mov	r8, r2
    6484:	4699      	mov	r9, r3
    6486:	bdf0      	pop	{r4, r5, r6, r7, pc}

00006488 <__aeabi_f2uiz>:
    6488:	219e      	movs	r1, #158	; 0x9e
    648a:	b510      	push	{r4, lr}
    648c:	05c9      	lsls	r1, r1, #23
    648e:	1c04      	adds	r4, r0, #0
    6490:	f7ff ffa6 	bl	63e0 <__aeabi_fcmpge>
    6494:	2800      	cmp	r0, #0
    6496:	d103      	bne.n	64a0 <__aeabi_f2uiz+0x18>
    6498:	1c20      	adds	r0, r4, #0
    649a:	f000 fc31 	bl	6d00 <__aeabi_f2iz>
    649e:	bd10      	pop	{r4, pc}
    64a0:	219e      	movs	r1, #158	; 0x9e
    64a2:	1c20      	adds	r0, r4, #0
    64a4:	05c9      	lsls	r1, r1, #23
    64a6:	f000 fa8f 	bl	69c8 <__aeabi_fsub>
    64aa:	f000 fc29 	bl	6d00 <__aeabi_f2iz>
    64ae:	2380      	movs	r3, #128	; 0x80
    64b0:	061b      	lsls	r3, r3, #24
    64b2:	469c      	mov	ip, r3
    64b4:	4460      	add	r0, ip
    64b6:	e7f2      	b.n	649e <__aeabi_f2uiz+0x16>

000064b8 <__udivmoddi4>:
    64b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    64ba:	4657      	mov	r7, sl
    64bc:	464e      	mov	r6, r9
    64be:	4645      	mov	r5, r8
    64c0:	46de      	mov	lr, fp
    64c2:	b5e0      	push	{r5, r6, r7, lr}
    64c4:	0004      	movs	r4, r0
    64c6:	b083      	sub	sp, #12
    64c8:	000d      	movs	r5, r1
    64ca:	4692      	mov	sl, r2
    64cc:	4699      	mov	r9, r3
    64ce:	428b      	cmp	r3, r1
    64d0:	d82f      	bhi.n	6532 <__udivmoddi4+0x7a>
    64d2:	d02c      	beq.n	652e <__udivmoddi4+0x76>
    64d4:	4649      	mov	r1, r9
    64d6:	4650      	mov	r0, sl
    64d8:	f002 fa08 	bl	88ec <__clzdi2>
    64dc:	0029      	movs	r1, r5
    64de:	0006      	movs	r6, r0
    64e0:	0020      	movs	r0, r4
    64e2:	f002 fa03 	bl	88ec <__clzdi2>
    64e6:	1a33      	subs	r3, r6, r0
    64e8:	4698      	mov	r8, r3
    64ea:	3b20      	subs	r3, #32
    64ec:	469b      	mov	fp, r3
    64ee:	d500      	bpl.n	64f2 <__udivmoddi4+0x3a>
    64f0:	e074      	b.n	65dc <__udivmoddi4+0x124>
    64f2:	4653      	mov	r3, sl
    64f4:	465a      	mov	r2, fp
    64f6:	4093      	lsls	r3, r2
    64f8:	001f      	movs	r7, r3
    64fa:	4653      	mov	r3, sl
    64fc:	4642      	mov	r2, r8
    64fe:	4093      	lsls	r3, r2
    6500:	001e      	movs	r6, r3
    6502:	42af      	cmp	r7, r5
    6504:	d829      	bhi.n	655a <__udivmoddi4+0xa2>
    6506:	d026      	beq.n	6556 <__udivmoddi4+0x9e>
    6508:	465b      	mov	r3, fp
    650a:	1ba4      	subs	r4, r4, r6
    650c:	41bd      	sbcs	r5, r7
    650e:	2b00      	cmp	r3, #0
    6510:	da00      	bge.n	6514 <__udivmoddi4+0x5c>
    6512:	e079      	b.n	6608 <__udivmoddi4+0x150>
    6514:	2200      	movs	r2, #0
    6516:	2300      	movs	r3, #0
    6518:	9200      	str	r2, [sp, #0]
    651a:	9301      	str	r3, [sp, #4]
    651c:	2301      	movs	r3, #1
    651e:	465a      	mov	r2, fp
    6520:	4093      	lsls	r3, r2
    6522:	9301      	str	r3, [sp, #4]
    6524:	2301      	movs	r3, #1
    6526:	4642      	mov	r2, r8
    6528:	4093      	lsls	r3, r2
    652a:	9300      	str	r3, [sp, #0]
    652c:	e019      	b.n	6562 <__udivmoddi4+0xaa>
    652e:	4282      	cmp	r2, r0
    6530:	d9d0      	bls.n	64d4 <__udivmoddi4+0x1c>
    6532:	2200      	movs	r2, #0
    6534:	2300      	movs	r3, #0
    6536:	9200      	str	r2, [sp, #0]
    6538:	9301      	str	r3, [sp, #4]
    653a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    653c:	2b00      	cmp	r3, #0
    653e:	d001      	beq.n	6544 <__udivmoddi4+0x8c>
    6540:	601c      	str	r4, [r3, #0]
    6542:	605d      	str	r5, [r3, #4]
    6544:	9800      	ldr	r0, [sp, #0]
    6546:	9901      	ldr	r1, [sp, #4]
    6548:	b003      	add	sp, #12
    654a:	bc3c      	pop	{r2, r3, r4, r5}
    654c:	4690      	mov	r8, r2
    654e:	4699      	mov	r9, r3
    6550:	46a2      	mov	sl, r4
    6552:	46ab      	mov	fp, r5
    6554:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6556:	42a3      	cmp	r3, r4
    6558:	d9d6      	bls.n	6508 <__udivmoddi4+0x50>
    655a:	2200      	movs	r2, #0
    655c:	2300      	movs	r3, #0
    655e:	9200      	str	r2, [sp, #0]
    6560:	9301      	str	r3, [sp, #4]
    6562:	4643      	mov	r3, r8
    6564:	2b00      	cmp	r3, #0
    6566:	d0e8      	beq.n	653a <__udivmoddi4+0x82>
    6568:	07fb      	lsls	r3, r7, #31
    656a:	0872      	lsrs	r2, r6, #1
    656c:	431a      	orrs	r2, r3
    656e:	4646      	mov	r6, r8
    6570:	087b      	lsrs	r3, r7, #1
    6572:	e00e      	b.n	6592 <__udivmoddi4+0xda>
    6574:	42ab      	cmp	r3, r5
    6576:	d101      	bne.n	657c <__udivmoddi4+0xc4>
    6578:	42a2      	cmp	r2, r4
    657a:	d80c      	bhi.n	6596 <__udivmoddi4+0xde>
    657c:	1aa4      	subs	r4, r4, r2
    657e:	419d      	sbcs	r5, r3
    6580:	2001      	movs	r0, #1
    6582:	1924      	adds	r4, r4, r4
    6584:	416d      	adcs	r5, r5
    6586:	2100      	movs	r1, #0
    6588:	3e01      	subs	r6, #1
    658a:	1824      	adds	r4, r4, r0
    658c:	414d      	adcs	r5, r1
    658e:	2e00      	cmp	r6, #0
    6590:	d006      	beq.n	65a0 <__udivmoddi4+0xe8>
    6592:	42ab      	cmp	r3, r5
    6594:	d9ee      	bls.n	6574 <__udivmoddi4+0xbc>
    6596:	3e01      	subs	r6, #1
    6598:	1924      	adds	r4, r4, r4
    659a:	416d      	adcs	r5, r5
    659c:	2e00      	cmp	r6, #0
    659e:	d1f8      	bne.n	6592 <__udivmoddi4+0xda>
    65a0:	465b      	mov	r3, fp
    65a2:	9800      	ldr	r0, [sp, #0]
    65a4:	9901      	ldr	r1, [sp, #4]
    65a6:	1900      	adds	r0, r0, r4
    65a8:	4169      	adcs	r1, r5
    65aa:	2b00      	cmp	r3, #0
    65ac:	db22      	blt.n	65f4 <__udivmoddi4+0x13c>
    65ae:	002b      	movs	r3, r5
    65b0:	465a      	mov	r2, fp
    65b2:	40d3      	lsrs	r3, r2
    65b4:	002a      	movs	r2, r5
    65b6:	4644      	mov	r4, r8
    65b8:	40e2      	lsrs	r2, r4
    65ba:	001c      	movs	r4, r3
    65bc:	465b      	mov	r3, fp
    65be:	0015      	movs	r5, r2
    65c0:	2b00      	cmp	r3, #0
    65c2:	db2c      	blt.n	661e <__udivmoddi4+0x166>
    65c4:	0026      	movs	r6, r4
    65c6:	409e      	lsls	r6, r3
    65c8:	0033      	movs	r3, r6
    65ca:	0026      	movs	r6, r4
    65cc:	4647      	mov	r7, r8
    65ce:	40be      	lsls	r6, r7
    65d0:	0032      	movs	r2, r6
    65d2:	1a80      	subs	r0, r0, r2
    65d4:	4199      	sbcs	r1, r3
    65d6:	9000      	str	r0, [sp, #0]
    65d8:	9101      	str	r1, [sp, #4]
    65da:	e7ae      	b.n	653a <__udivmoddi4+0x82>
    65dc:	4642      	mov	r2, r8
    65de:	2320      	movs	r3, #32
    65e0:	1a9b      	subs	r3, r3, r2
    65e2:	4652      	mov	r2, sl
    65e4:	40da      	lsrs	r2, r3
    65e6:	4641      	mov	r1, r8
    65e8:	0013      	movs	r3, r2
    65ea:	464a      	mov	r2, r9
    65ec:	408a      	lsls	r2, r1
    65ee:	0017      	movs	r7, r2
    65f0:	431f      	orrs	r7, r3
    65f2:	e782      	b.n	64fa <__udivmoddi4+0x42>
    65f4:	4642      	mov	r2, r8
    65f6:	2320      	movs	r3, #32
    65f8:	1a9b      	subs	r3, r3, r2
    65fa:	002a      	movs	r2, r5
    65fc:	4646      	mov	r6, r8
    65fe:	409a      	lsls	r2, r3
    6600:	0023      	movs	r3, r4
    6602:	40f3      	lsrs	r3, r6
    6604:	4313      	orrs	r3, r2
    6606:	e7d5      	b.n	65b4 <__udivmoddi4+0xfc>
    6608:	4642      	mov	r2, r8
    660a:	2320      	movs	r3, #32
    660c:	2100      	movs	r1, #0
    660e:	1a9b      	subs	r3, r3, r2
    6610:	2200      	movs	r2, #0
    6612:	9100      	str	r1, [sp, #0]
    6614:	9201      	str	r2, [sp, #4]
    6616:	2201      	movs	r2, #1
    6618:	40da      	lsrs	r2, r3
    661a:	9201      	str	r2, [sp, #4]
    661c:	e782      	b.n	6524 <__udivmoddi4+0x6c>
    661e:	4642      	mov	r2, r8
    6620:	2320      	movs	r3, #32
    6622:	0026      	movs	r6, r4
    6624:	1a9b      	subs	r3, r3, r2
    6626:	40de      	lsrs	r6, r3
    6628:	002f      	movs	r7, r5
    662a:	46b4      	mov	ip, r6
    662c:	4097      	lsls	r7, r2
    662e:	4666      	mov	r6, ip
    6630:	003b      	movs	r3, r7
    6632:	4333      	orrs	r3, r6
    6634:	e7c9      	b.n	65ca <__udivmoddi4+0x112>
    6636:	46c0      	nop			; (mov r8, r8)

00006638 <__eqsf2>:
    6638:	b570      	push	{r4, r5, r6, lr}
    663a:	0042      	lsls	r2, r0, #1
    663c:	0245      	lsls	r5, r0, #9
    663e:	024e      	lsls	r6, r1, #9
    6640:	004c      	lsls	r4, r1, #1
    6642:	0fc3      	lsrs	r3, r0, #31
    6644:	0a6d      	lsrs	r5, r5, #9
    6646:	0e12      	lsrs	r2, r2, #24
    6648:	0a76      	lsrs	r6, r6, #9
    664a:	0e24      	lsrs	r4, r4, #24
    664c:	0fc9      	lsrs	r1, r1, #31
    664e:	2001      	movs	r0, #1
    6650:	2aff      	cmp	r2, #255	; 0xff
    6652:	d006      	beq.n	6662 <__eqsf2+0x2a>
    6654:	2cff      	cmp	r4, #255	; 0xff
    6656:	d003      	beq.n	6660 <__eqsf2+0x28>
    6658:	42a2      	cmp	r2, r4
    665a:	d101      	bne.n	6660 <__eqsf2+0x28>
    665c:	42b5      	cmp	r5, r6
    665e:	d006      	beq.n	666e <__eqsf2+0x36>
    6660:	bd70      	pop	{r4, r5, r6, pc}
    6662:	2d00      	cmp	r5, #0
    6664:	d1fc      	bne.n	6660 <__eqsf2+0x28>
    6666:	2cff      	cmp	r4, #255	; 0xff
    6668:	d1fa      	bne.n	6660 <__eqsf2+0x28>
    666a:	2e00      	cmp	r6, #0
    666c:	d1f8      	bne.n	6660 <__eqsf2+0x28>
    666e:	428b      	cmp	r3, r1
    6670:	d006      	beq.n	6680 <__eqsf2+0x48>
    6672:	2001      	movs	r0, #1
    6674:	2a00      	cmp	r2, #0
    6676:	d1f3      	bne.n	6660 <__eqsf2+0x28>
    6678:	0028      	movs	r0, r5
    667a:	1e45      	subs	r5, r0, #1
    667c:	41a8      	sbcs	r0, r5
    667e:	e7ef      	b.n	6660 <__eqsf2+0x28>
    6680:	2000      	movs	r0, #0
    6682:	e7ed      	b.n	6660 <__eqsf2+0x28>

00006684 <__gesf2>:
    6684:	b5f0      	push	{r4, r5, r6, r7, lr}
    6686:	0042      	lsls	r2, r0, #1
    6688:	0245      	lsls	r5, r0, #9
    668a:	024c      	lsls	r4, r1, #9
    668c:	0fc3      	lsrs	r3, r0, #31
    668e:	0048      	lsls	r0, r1, #1
    6690:	0a6d      	lsrs	r5, r5, #9
    6692:	0e12      	lsrs	r2, r2, #24
    6694:	0a64      	lsrs	r4, r4, #9
    6696:	0e00      	lsrs	r0, r0, #24
    6698:	0fc9      	lsrs	r1, r1, #31
    669a:	2aff      	cmp	r2, #255	; 0xff
    669c:	d01e      	beq.n	66dc <__gesf2+0x58>
    669e:	28ff      	cmp	r0, #255	; 0xff
    66a0:	d021      	beq.n	66e6 <__gesf2+0x62>
    66a2:	2a00      	cmp	r2, #0
    66a4:	d10a      	bne.n	66bc <__gesf2+0x38>
    66a6:	426e      	negs	r6, r5
    66a8:	416e      	adcs	r6, r5
    66aa:	b2f6      	uxtb	r6, r6
    66ac:	2800      	cmp	r0, #0
    66ae:	d10f      	bne.n	66d0 <__gesf2+0x4c>
    66b0:	2c00      	cmp	r4, #0
    66b2:	d10d      	bne.n	66d0 <__gesf2+0x4c>
    66b4:	2000      	movs	r0, #0
    66b6:	2d00      	cmp	r5, #0
    66b8:	d009      	beq.n	66ce <__gesf2+0x4a>
    66ba:	e005      	b.n	66c8 <__gesf2+0x44>
    66bc:	2800      	cmp	r0, #0
    66be:	d101      	bne.n	66c4 <__gesf2+0x40>
    66c0:	2c00      	cmp	r4, #0
    66c2:	d001      	beq.n	66c8 <__gesf2+0x44>
    66c4:	428b      	cmp	r3, r1
    66c6:	d011      	beq.n	66ec <__gesf2+0x68>
    66c8:	2101      	movs	r1, #1
    66ca:	4258      	negs	r0, r3
    66cc:	4308      	orrs	r0, r1
    66ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
    66d0:	2e00      	cmp	r6, #0
    66d2:	d0f7      	beq.n	66c4 <__gesf2+0x40>
    66d4:	2001      	movs	r0, #1
    66d6:	3901      	subs	r1, #1
    66d8:	4308      	orrs	r0, r1
    66da:	e7f8      	b.n	66ce <__gesf2+0x4a>
    66dc:	2d00      	cmp	r5, #0
    66de:	d0de      	beq.n	669e <__gesf2+0x1a>
    66e0:	2002      	movs	r0, #2
    66e2:	4240      	negs	r0, r0
    66e4:	e7f3      	b.n	66ce <__gesf2+0x4a>
    66e6:	2c00      	cmp	r4, #0
    66e8:	d0db      	beq.n	66a2 <__gesf2+0x1e>
    66ea:	e7f9      	b.n	66e0 <__gesf2+0x5c>
    66ec:	4282      	cmp	r2, r0
    66ee:	dceb      	bgt.n	66c8 <__gesf2+0x44>
    66f0:	db04      	blt.n	66fc <__gesf2+0x78>
    66f2:	42a5      	cmp	r5, r4
    66f4:	d8e8      	bhi.n	66c8 <__gesf2+0x44>
    66f6:	2000      	movs	r0, #0
    66f8:	42a5      	cmp	r5, r4
    66fa:	d2e8      	bcs.n	66ce <__gesf2+0x4a>
    66fc:	2101      	movs	r1, #1
    66fe:	1e58      	subs	r0, r3, #1
    6700:	4308      	orrs	r0, r1
    6702:	e7e4      	b.n	66ce <__gesf2+0x4a>

00006704 <__lesf2>:
    6704:	b5f0      	push	{r4, r5, r6, r7, lr}
    6706:	0042      	lsls	r2, r0, #1
    6708:	024d      	lsls	r5, r1, #9
    670a:	004c      	lsls	r4, r1, #1
    670c:	0246      	lsls	r6, r0, #9
    670e:	0a76      	lsrs	r6, r6, #9
    6710:	0e12      	lsrs	r2, r2, #24
    6712:	0fc3      	lsrs	r3, r0, #31
    6714:	0a6d      	lsrs	r5, r5, #9
    6716:	0e24      	lsrs	r4, r4, #24
    6718:	0fc9      	lsrs	r1, r1, #31
    671a:	2aff      	cmp	r2, #255	; 0xff
    671c:	d016      	beq.n	674c <__lesf2+0x48>
    671e:	2cff      	cmp	r4, #255	; 0xff
    6720:	d018      	beq.n	6754 <__lesf2+0x50>
    6722:	2a00      	cmp	r2, #0
    6724:	d10a      	bne.n	673c <__lesf2+0x38>
    6726:	4270      	negs	r0, r6
    6728:	4170      	adcs	r0, r6
    672a:	b2c0      	uxtb	r0, r0
    672c:	2c00      	cmp	r4, #0
    672e:	d015      	beq.n	675c <__lesf2+0x58>
    6730:	2800      	cmp	r0, #0
    6732:	d005      	beq.n	6740 <__lesf2+0x3c>
    6734:	2001      	movs	r0, #1
    6736:	3901      	subs	r1, #1
    6738:	4308      	orrs	r0, r1
    673a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    673c:	2c00      	cmp	r4, #0
    673e:	d013      	beq.n	6768 <__lesf2+0x64>
    6740:	4299      	cmp	r1, r3
    6742:	d014      	beq.n	676e <__lesf2+0x6a>
    6744:	2001      	movs	r0, #1
    6746:	425b      	negs	r3, r3
    6748:	4318      	orrs	r0, r3
    674a:	e7f6      	b.n	673a <__lesf2+0x36>
    674c:	2002      	movs	r0, #2
    674e:	2e00      	cmp	r6, #0
    6750:	d1f3      	bne.n	673a <__lesf2+0x36>
    6752:	e7e4      	b.n	671e <__lesf2+0x1a>
    6754:	2002      	movs	r0, #2
    6756:	2d00      	cmp	r5, #0
    6758:	d1ef      	bne.n	673a <__lesf2+0x36>
    675a:	e7e2      	b.n	6722 <__lesf2+0x1e>
    675c:	2d00      	cmp	r5, #0
    675e:	d1e7      	bne.n	6730 <__lesf2+0x2c>
    6760:	2000      	movs	r0, #0
    6762:	2e00      	cmp	r6, #0
    6764:	d0e9      	beq.n	673a <__lesf2+0x36>
    6766:	e7ed      	b.n	6744 <__lesf2+0x40>
    6768:	2d00      	cmp	r5, #0
    676a:	d1e9      	bne.n	6740 <__lesf2+0x3c>
    676c:	e7ea      	b.n	6744 <__lesf2+0x40>
    676e:	42a2      	cmp	r2, r4
    6770:	dc06      	bgt.n	6780 <__lesf2+0x7c>
    6772:	dbdf      	blt.n	6734 <__lesf2+0x30>
    6774:	42ae      	cmp	r6, r5
    6776:	d803      	bhi.n	6780 <__lesf2+0x7c>
    6778:	2000      	movs	r0, #0
    677a:	42ae      	cmp	r6, r5
    677c:	d3da      	bcc.n	6734 <__lesf2+0x30>
    677e:	e7dc      	b.n	673a <__lesf2+0x36>
    6780:	2001      	movs	r0, #1
    6782:	4249      	negs	r1, r1
    6784:	4308      	orrs	r0, r1
    6786:	e7d8      	b.n	673a <__lesf2+0x36>

00006788 <__aeabi_fmul>:
    6788:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    678a:	4657      	mov	r7, sl
    678c:	464e      	mov	r6, r9
    678e:	4645      	mov	r5, r8
    6790:	46de      	mov	lr, fp
    6792:	b5e0      	push	{r5, r6, r7, lr}
    6794:	0247      	lsls	r7, r0, #9
    6796:	0046      	lsls	r6, r0, #1
    6798:	4688      	mov	r8, r1
    679a:	0a7f      	lsrs	r7, r7, #9
    679c:	0e36      	lsrs	r6, r6, #24
    679e:	0fc4      	lsrs	r4, r0, #31
    67a0:	2e00      	cmp	r6, #0
    67a2:	d047      	beq.n	6834 <__aeabi_fmul+0xac>
    67a4:	2eff      	cmp	r6, #255	; 0xff
    67a6:	d024      	beq.n	67f2 <__aeabi_fmul+0x6a>
    67a8:	00fb      	lsls	r3, r7, #3
    67aa:	2780      	movs	r7, #128	; 0x80
    67ac:	04ff      	lsls	r7, r7, #19
    67ae:	431f      	orrs	r7, r3
    67b0:	2300      	movs	r3, #0
    67b2:	4699      	mov	r9, r3
    67b4:	469a      	mov	sl, r3
    67b6:	3e7f      	subs	r6, #127	; 0x7f
    67b8:	4643      	mov	r3, r8
    67ba:	025d      	lsls	r5, r3, #9
    67bc:	0058      	lsls	r0, r3, #1
    67be:	0fdb      	lsrs	r3, r3, #31
    67c0:	0a6d      	lsrs	r5, r5, #9
    67c2:	0e00      	lsrs	r0, r0, #24
    67c4:	4698      	mov	r8, r3
    67c6:	d043      	beq.n	6850 <__aeabi_fmul+0xc8>
    67c8:	28ff      	cmp	r0, #255	; 0xff
    67ca:	d03b      	beq.n	6844 <__aeabi_fmul+0xbc>
    67cc:	00eb      	lsls	r3, r5, #3
    67ce:	2580      	movs	r5, #128	; 0x80
    67d0:	2200      	movs	r2, #0
    67d2:	04ed      	lsls	r5, r5, #19
    67d4:	431d      	orrs	r5, r3
    67d6:	387f      	subs	r0, #127	; 0x7f
    67d8:	1836      	adds	r6, r6, r0
    67da:	1c73      	adds	r3, r6, #1
    67dc:	4641      	mov	r1, r8
    67de:	469b      	mov	fp, r3
    67e0:	464b      	mov	r3, r9
    67e2:	4061      	eors	r1, r4
    67e4:	4313      	orrs	r3, r2
    67e6:	2b0f      	cmp	r3, #15
    67e8:	d864      	bhi.n	68b4 <__aeabi_fmul+0x12c>
    67ea:	4875      	ldr	r0, [pc, #468]	; (69c0 <__aeabi_fmul+0x238>)
    67ec:	009b      	lsls	r3, r3, #2
    67ee:	58c3      	ldr	r3, [r0, r3]
    67f0:	469f      	mov	pc, r3
    67f2:	2f00      	cmp	r7, #0
    67f4:	d142      	bne.n	687c <__aeabi_fmul+0xf4>
    67f6:	2308      	movs	r3, #8
    67f8:	4699      	mov	r9, r3
    67fa:	3b06      	subs	r3, #6
    67fc:	26ff      	movs	r6, #255	; 0xff
    67fe:	469a      	mov	sl, r3
    6800:	e7da      	b.n	67b8 <__aeabi_fmul+0x30>
    6802:	4641      	mov	r1, r8
    6804:	2a02      	cmp	r2, #2
    6806:	d028      	beq.n	685a <__aeabi_fmul+0xd2>
    6808:	2a03      	cmp	r2, #3
    680a:	d100      	bne.n	680e <__aeabi_fmul+0x86>
    680c:	e0ce      	b.n	69ac <__aeabi_fmul+0x224>
    680e:	2a01      	cmp	r2, #1
    6810:	d000      	beq.n	6814 <__aeabi_fmul+0x8c>
    6812:	e0ac      	b.n	696e <__aeabi_fmul+0x1e6>
    6814:	4011      	ands	r1, r2
    6816:	2000      	movs	r0, #0
    6818:	2200      	movs	r2, #0
    681a:	b2cc      	uxtb	r4, r1
    681c:	0240      	lsls	r0, r0, #9
    681e:	05d2      	lsls	r2, r2, #23
    6820:	0a40      	lsrs	r0, r0, #9
    6822:	07e4      	lsls	r4, r4, #31
    6824:	4310      	orrs	r0, r2
    6826:	4320      	orrs	r0, r4
    6828:	bc3c      	pop	{r2, r3, r4, r5}
    682a:	4690      	mov	r8, r2
    682c:	4699      	mov	r9, r3
    682e:	46a2      	mov	sl, r4
    6830:	46ab      	mov	fp, r5
    6832:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6834:	2f00      	cmp	r7, #0
    6836:	d115      	bne.n	6864 <__aeabi_fmul+0xdc>
    6838:	2304      	movs	r3, #4
    683a:	4699      	mov	r9, r3
    683c:	3b03      	subs	r3, #3
    683e:	2600      	movs	r6, #0
    6840:	469a      	mov	sl, r3
    6842:	e7b9      	b.n	67b8 <__aeabi_fmul+0x30>
    6844:	20ff      	movs	r0, #255	; 0xff
    6846:	2202      	movs	r2, #2
    6848:	2d00      	cmp	r5, #0
    684a:	d0c5      	beq.n	67d8 <__aeabi_fmul+0x50>
    684c:	2203      	movs	r2, #3
    684e:	e7c3      	b.n	67d8 <__aeabi_fmul+0x50>
    6850:	2d00      	cmp	r5, #0
    6852:	d119      	bne.n	6888 <__aeabi_fmul+0x100>
    6854:	2000      	movs	r0, #0
    6856:	2201      	movs	r2, #1
    6858:	e7be      	b.n	67d8 <__aeabi_fmul+0x50>
    685a:	2401      	movs	r4, #1
    685c:	22ff      	movs	r2, #255	; 0xff
    685e:	400c      	ands	r4, r1
    6860:	2000      	movs	r0, #0
    6862:	e7db      	b.n	681c <__aeabi_fmul+0x94>
    6864:	0038      	movs	r0, r7
    6866:	f002 f823 	bl	88b0 <__clzsi2>
    686a:	2676      	movs	r6, #118	; 0x76
    686c:	1f43      	subs	r3, r0, #5
    686e:	409f      	lsls	r7, r3
    6870:	2300      	movs	r3, #0
    6872:	4276      	negs	r6, r6
    6874:	1a36      	subs	r6, r6, r0
    6876:	4699      	mov	r9, r3
    6878:	469a      	mov	sl, r3
    687a:	e79d      	b.n	67b8 <__aeabi_fmul+0x30>
    687c:	230c      	movs	r3, #12
    687e:	4699      	mov	r9, r3
    6880:	3b09      	subs	r3, #9
    6882:	26ff      	movs	r6, #255	; 0xff
    6884:	469a      	mov	sl, r3
    6886:	e797      	b.n	67b8 <__aeabi_fmul+0x30>
    6888:	0028      	movs	r0, r5
    688a:	f002 f811 	bl	88b0 <__clzsi2>
    688e:	1f43      	subs	r3, r0, #5
    6890:	409d      	lsls	r5, r3
    6892:	2376      	movs	r3, #118	; 0x76
    6894:	425b      	negs	r3, r3
    6896:	1a18      	subs	r0, r3, r0
    6898:	2200      	movs	r2, #0
    689a:	e79d      	b.n	67d8 <__aeabi_fmul+0x50>
    689c:	2080      	movs	r0, #128	; 0x80
    689e:	2400      	movs	r4, #0
    68a0:	03c0      	lsls	r0, r0, #15
    68a2:	22ff      	movs	r2, #255	; 0xff
    68a4:	e7ba      	b.n	681c <__aeabi_fmul+0x94>
    68a6:	003d      	movs	r5, r7
    68a8:	4652      	mov	r2, sl
    68aa:	e7ab      	b.n	6804 <__aeabi_fmul+0x7c>
    68ac:	003d      	movs	r5, r7
    68ae:	0021      	movs	r1, r4
    68b0:	4652      	mov	r2, sl
    68b2:	e7a7      	b.n	6804 <__aeabi_fmul+0x7c>
    68b4:	0c3b      	lsrs	r3, r7, #16
    68b6:	469c      	mov	ip, r3
    68b8:	042a      	lsls	r2, r5, #16
    68ba:	0c12      	lsrs	r2, r2, #16
    68bc:	0c2b      	lsrs	r3, r5, #16
    68be:	0014      	movs	r4, r2
    68c0:	4660      	mov	r0, ip
    68c2:	4665      	mov	r5, ip
    68c4:	043f      	lsls	r7, r7, #16
    68c6:	0c3f      	lsrs	r7, r7, #16
    68c8:	437c      	muls	r4, r7
    68ca:	4342      	muls	r2, r0
    68cc:	435d      	muls	r5, r3
    68ce:	437b      	muls	r3, r7
    68d0:	0c27      	lsrs	r7, r4, #16
    68d2:	189b      	adds	r3, r3, r2
    68d4:	18ff      	adds	r7, r7, r3
    68d6:	42ba      	cmp	r2, r7
    68d8:	d903      	bls.n	68e2 <__aeabi_fmul+0x15a>
    68da:	2380      	movs	r3, #128	; 0x80
    68dc:	025b      	lsls	r3, r3, #9
    68de:	469c      	mov	ip, r3
    68e0:	4465      	add	r5, ip
    68e2:	0424      	lsls	r4, r4, #16
    68e4:	043a      	lsls	r2, r7, #16
    68e6:	0c24      	lsrs	r4, r4, #16
    68e8:	1912      	adds	r2, r2, r4
    68ea:	0193      	lsls	r3, r2, #6
    68ec:	1e5c      	subs	r4, r3, #1
    68ee:	41a3      	sbcs	r3, r4
    68f0:	0c3f      	lsrs	r7, r7, #16
    68f2:	0e92      	lsrs	r2, r2, #26
    68f4:	197d      	adds	r5, r7, r5
    68f6:	431a      	orrs	r2, r3
    68f8:	01ad      	lsls	r5, r5, #6
    68fa:	4315      	orrs	r5, r2
    68fc:	012b      	lsls	r3, r5, #4
    68fe:	d504      	bpl.n	690a <__aeabi_fmul+0x182>
    6900:	2301      	movs	r3, #1
    6902:	465e      	mov	r6, fp
    6904:	086a      	lsrs	r2, r5, #1
    6906:	401d      	ands	r5, r3
    6908:	4315      	orrs	r5, r2
    690a:	0032      	movs	r2, r6
    690c:	327f      	adds	r2, #127	; 0x7f
    690e:	2a00      	cmp	r2, #0
    6910:	dd25      	ble.n	695e <__aeabi_fmul+0x1d6>
    6912:	076b      	lsls	r3, r5, #29
    6914:	d004      	beq.n	6920 <__aeabi_fmul+0x198>
    6916:	230f      	movs	r3, #15
    6918:	402b      	ands	r3, r5
    691a:	2b04      	cmp	r3, #4
    691c:	d000      	beq.n	6920 <__aeabi_fmul+0x198>
    691e:	3504      	adds	r5, #4
    6920:	012b      	lsls	r3, r5, #4
    6922:	d503      	bpl.n	692c <__aeabi_fmul+0x1a4>
    6924:	0032      	movs	r2, r6
    6926:	4b27      	ldr	r3, [pc, #156]	; (69c4 <__aeabi_fmul+0x23c>)
    6928:	3280      	adds	r2, #128	; 0x80
    692a:	401d      	ands	r5, r3
    692c:	2afe      	cmp	r2, #254	; 0xfe
    692e:	dc94      	bgt.n	685a <__aeabi_fmul+0xd2>
    6930:	2401      	movs	r4, #1
    6932:	01a8      	lsls	r0, r5, #6
    6934:	0a40      	lsrs	r0, r0, #9
    6936:	b2d2      	uxtb	r2, r2
    6938:	400c      	ands	r4, r1
    693a:	e76f      	b.n	681c <__aeabi_fmul+0x94>
    693c:	2080      	movs	r0, #128	; 0x80
    693e:	03c0      	lsls	r0, r0, #15
    6940:	4207      	tst	r7, r0
    6942:	d007      	beq.n	6954 <__aeabi_fmul+0x1cc>
    6944:	4205      	tst	r5, r0
    6946:	d105      	bne.n	6954 <__aeabi_fmul+0x1cc>
    6948:	4328      	orrs	r0, r5
    694a:	0240      	lsls	r0, r0, #9
    694c:	0a40      	lsrs	r0, r0, #9
    694e:	4644      	mov	r4, r8
    6950:	22ff      	movs	r2, #255	; 0xff
    6952:	e763      	b.n	681c <__aeabi_fmul+0x94>
    6954:	4338      	orrs	r0, r7
    6956:	0240      	lsls	r0, r0, #9
    6958:	0a40      	lsrs	r0, r0, #9
    695a:	22ff      	movs	r2, #255	; 0xff
    695c:	e75e      	b.n	681c <__aeabi_fmul+0x94>
    695e:	2401      	movs	r4, #1
    6960:	1aa3      	subs	r3, r4, r2
    6962:	2b1b      	cmp	r3, #27
    6964:	dd05      	ble.n	6972 <__aeabi_fmul+0x1ea>
    6966:	400c      	ands	r4, r1
    6968:	2200      	movs	r2, #0
    696a:	2000      	movs	r0, #0
    696c:	e756      	b.n	681c <__aeabi_fmul+0x94>
    696e:	465e      	mov	r6, fp
    6970:	e7cb      	b.n	690a <__aeabi_fmul+0x182>
    6972:	002a      	movs	r2, r5
    6974:	2020      	movs	r0, #32
    6976:	40da      	lsrs	r2, r3
    6978:	1ac3      	subs	r3, r0, r3
    697a:	409d      	lsls	r5, r3
    697c:	002b      	movs	r3, r5
    697e:	1e5d      	subs	r5, r3, #1
    6980:	41ab      	sbcs	r3, r5
    6982:	4313      	orrs	r3, r2
    6984:	075a      	lsls	r2, r3, #29
    6986:	d004      	beq.n	6992 <__aeabi_fmul+0x20a>
    6988:	220f      	movs	r2, #15
    698a:	401a      	ands	r2, r3
    698c:	2a04      	cmp	r2, #4
    698e:	d000      	beq.n	6992 <__aeabi_fmul+0x20a>
    6990:	3304      	adds	r3, #4
    6992:	015a      	lsls	r2, r3, #5
    6994:	d504      	bpl.n	69a0 <__aeabi_fmul+0x218>
    6996:	2401      	movs	r4, #1
    6998:	2201      	movs	r2, #1
    699a:	400c      	ands	r4, r1
    699c:	2000      	movs	r0, #0
    699e:	e73d      	b.n	681c <__aeabi_fmul+0x94>
    69a0:	2401      	movs	r4, #1
    69a2:	019b      	lsls	r3, r3, #6
    69a4:	0a58      	lsrs	r0, r3, #9
    69a6:	400c      	ands	r4, r1
    69a8:	2200      	movs	r2, #0
    69aa:	e737      	b.n	681c <__aeabi_fmul+0x94>
    69ac:	2080      	movs	r0, #128	; 0x80
    69ae:	2401      	movs	r4, #1
    69b0:	03c0      	lsls	r0, r0, #15
    69b2:	4328      	orrs	r0, r5
    69b4:	0240      	lsls	r0, r0, #9
    69b6:	0a40      	lsrs	r0, r0, #9
    69b8:	400c      	ands	r4, r1
    69ba:	22ff      	movs	r2, #255	; 0xff
    69bc:	e72e      	b.n	681c <__aeabi_fmul+0x94>
    69be:	46c0      	nop			; (mov r8, r8)
    69c0:	00009678 	.word	0x00009678
    69c4:	f7ffffff 	.word	0xf7ffffff

000069c8 <__aeabi_fsub>:
    69c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    69ca:	464f      	mov	r7, r9
    69cc:	46d6      	mov	lr, sl
    69ce:	4646      	mov	r6, r8
    69d0:	0044      	lsls	r4, r0, #1
    69d2:	b5c0      	push	{r6, r7, lr}
    69d4:	0fc2      	lsrs	r2, r0, #31
    69d6:	0247      	lsls	r7, r0, #9
    69d8:	0248      	lsls	r0, r1, #9
    69da:	0a40      	lsrs	r0, r0, #9
    69dc:	4684      	mov	ip, r0
    69de:	4666      	mov	r6, ip
    69e0:	0a7b      	lsrs	r3, r7, #9
    69e2:	0048      	lsls	r0, r1, #1
    69e4:	0fc9      	lsrs	r1, r1, #31
    69e6:	469a      	mov	sl, r3
    69e8:	0e24      	lsrs	r4, r4, #24
    69ea:	0015      	movs	r5, r2
    69ec:	00db      	lsls	r3, r3, #3
    69ee:	0e00      	lsrs	r0, r0, #24
    69f0:	4689      	mov	r9, r1
    69f2:	00f6      	lsls	r6, r6, #3
    69f4:	28ff      	cmp	r0, #255	; 0xff
    69f6:	d100      	bne.n	69fa <__aeabi_fsub+0x32>
    69f8:	e08f      	b.n	6b1a <__aeabi_fsub+0x152>
    69fa:	2101      	movs	r1, #1
    69fc:	464f      	mov	r7, r9
    69fe:	404f      	eors	r7, r1
    6a00:	0039      	movs	r1, r7
    6a02:	4291      	cmp	r1, r2
    6a04:	d066      	beq.n	6ad4 <__aeabi_fsub+0x10c>
    6a06:	1a22      	subs	r2, r4, r0
    6a08:	2a00      	cmp	r2, #0
    6a0a:	dc00      	bgt.n	6a0e <__aeabi_fsub+0x46>
    6a0c:	e09d      	b.n	6b4a <__aeabi_fsub+0x182>
    6a0e:	2800      	cmp	r0, #0
    6a10:	d13d      	bne.n	6a8e <__aeabi_fsub+0xc6>
    6a12:	2e00      	cmp	r6, #0
    6a14:	d100      	bne.n	6a18 <__aeabi_fsub+0x50>
    6a16:	e08b      	b.n	6b30 <__aeabi_fsub+0x168>
    6a18:	1e51      	subs	r1, r2, #1
    6a1a:	2900      	cmp	r1, #0
    6a1c:	d000      	beq.n	6a20 <__aeabi_fsub+0x58>
    6a1e:	e0b5      	b.n	6b8c <__aeabi_fsub+0x1c4>
    6a20:	2401      	movs	r4, #1
    6a22:	1b9b      	subs	r3, r3, r6
    6a24:	015a      	lsls	r2, r3, #5
    6a26:	d544      	bpl.n	6ab2 <__aeabi_fsub+0xea>
    6a28:	019b      	lsls	r3, r3, #6
    6a2a:	099f      	lsrs	r7, r3, #6
    6a2c:	0038      	movs	r0, r7
    6a2e:	f001 ff3f 	bl	88b0 <__clzsi2>
    6a32:	3805      	subs	r0, #5
    6a34:	4087      	lsls	r7, r0
    6a36:	4284      	cmp	r4, r0
    6a38:	dd00      	ble.n	6a3c <__aeabi_fsub+0x74>
    6a3a:	e096      	b.n	6b6a <__aeabi_fsub+0x1a2>
    6a3c:	1b04      	subs	r4, r0, r4
    6a3e:	003a      	movs	r2, r7
    6a40:	2020      	movs	r0, #32
    6a42:	3401      	adds	r4, #1
    6a44:	40e2      	lsrs	r2, r4
    6a46:	1b04      	subs	r4, r0, r4
    6a48:	40a7      	lsls	r7, r4
    6a4a:	003b      	movs	r3, r7
    6a4c:	1e5f      	subs	r7, r3, #1
    6a4e:	41bb      	sbcs	r3, r7
    6a50:	2400      	movs	r4, #0
    6a52:	4313      	orrs	r3, r2
    6a54:	075a      	lsls	r2, r3, #29
    6a56:	d004      	beq.n	6a62 <__aeabi_fsub+0x9a>
    6a58:	220f      	movs	r2, #15
    6a5a:	401a      	ands	r2, r3
    6a5c:	2a04      	cmp	r2, #4
    6a5e:	d000      	beq.n	6a62 <__aeabi_fsub+0x9a>
    6a60:	3304      	adds	r3, #4
    6a62:	015a      	lsls	r2, r3, #5
    6a64:	d527      	bpl.n	6ab6 <__aeabi_fsub+0xee>
    6a66:	3401      	adds	r4, #1
    6a68:	2cff      	cmp	r4, #255	; 0xff
    6a6a:	d100      	bne.n	6a6e <__aeabi_fsub+0xa6>
    6a6c:	e079      	b.n	6b62 <__aeabi_fsub+0x19a>
    6a6e:	2201      	movs	r2, #1
    6a70:	019b      	lsls	r3, r3, #6
    6a72:	0a5b      	lsrs	r3, r3, #9
    6a74:	b2e4      	uxtb	r4, r4
    6a76:	402a      	ands	r2, r5
    6a78:	025b      	lsls	r3, r3, #9
    6a7a:	05e4      	lsls	r4, r4, #23
    6a7c:	0a58      	lsrs	r0, r3, #9
    6a7e:	07d2      	lsls	r2, r2, #31
    6a80:	4320      	orrs	r0, r4
    6a82:	4310      	orrs	r0, r2
    6a84:	bc1c      	pop	{r2, r3, r4}
    6a86:	4690      	mov	r8, r2
    6a88:	4699      	mov	r9, r3
    6a8a:	46a2      	mov	sl, r4
    6a8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6a8e:	2cff      	cmp	r4, #255	; 0xff
    6a90:	d0e0      	beq.n	6a54 <__aeabi_fsub+0x8c>
    6a92:	2180      	movs	r1, #128	; 0x80
    6a94:	04c9      	lsls	r1, r1, #19
    6a96:	430e      	orrs	r6, r1
    6a98:	2a1b      	cmp	r2, #27
    6a9a:	dc7b      	bgt.n	6b94 <__aeabi_fsub+0x1cc>
    6a9c:	0031      	movs	r1, r6
    6a9e:	2020      	movs	r0, #32
    6aa0:	40d1      	lsrs	r1, r2
    6aa2:	1a82      	subs	r2, r0, r2
    6aa4:	4096      	lsls	r6, r2
    6aa6:	1e72      	subs	r2, r6, #1
    6aa8:	4196      	sbcs	r6, r2
    6aaa:	430e      	orrs	r6, r1
    6aac:	1b9b      	subs	r3, r3, r6
    6aae:	015a      	lsls	r2, r3, #5
    6ab0:	d4ba      	bmi.n	6a28 <__aeabi_fsub+0x60>
    6ab2:	075a      	lsls	r2, r3, #29
    6ab4:	d1d0      	bne.n	6a58 <__aeabi_fsub+0x90>
    6ab6:	2201      	movs	r2, #1
    6ab8:	08df      	lsrs	r7, r3, #3
    6aba:	402a      	ands	r2, r5
    6abc:	2cff      	cmp	r4, #255	; 0xff
    6abe:	d133      	bne.n	6b28 <__aeabi_fsub+0x160>
    6ac0:	2f00      	cmp	r7, #0
    6ac2:	d100      	bne.n	6ac6 <__aeabi_fsub+0xfe>
    6ac4:	e0a8      	b.n	6c18 <__aeabi_fsub+0x250>
    6ac6:	2380      	movs	r3, #128	; 0x80
    6ac8:	03db      	lsls	r3, r3, #15
    6aca:	433b      	orrs	r3, r7
    6acc:	025b      	lsls	r3, r3, #9
    6ace:	0a5b      	lsrs	r3, r3, #9
    6ad0:	24ff      	movs	r4, #255	; 0xff
    6ad2:	e7d1      	b.n	6a78 <__aeabi_fsub+0xb0>
    6ad4:	1a21      	subs	r1, r4, r0
    6ad6:	2900      	cmp	r1, #0
    6ad8:	dd4c      	ble.n	6b74 <__aeabi_fsub+0x1ac>
    6ada:	2800      	cmp	r0, #0
    6adc:	d02a      	beq.n	6b34 <__aeabi_fsub+0x16c>
    6ade:	2cff      	cmp	r4, #255	; 0xff
    6ae0:	d0b8      	beq.n	6a54 <__aeabi_fsub+0x8c>
    6ae2:	2080      	movs	r0, #128	; 0x80
    6ae4:	04c0      	lsls	r0, r0, #19
    6ae6:	4306      	orrs	r6, r0
    6ae8:	291b      	cmp	r1, #27
    6aea:	dd00      	ble.n	6aee <__aeabi_fsub+0x126>
    6aec:	e0af      	b.n	6c4e <__aeabi_fsub+0x286>
    6aee:	0030      	movs	r0, r6
    6af0:	2720      	movs	r7, #32
    6af2:	40c8      	lsrs	r0, r1
    6af4:	1a79      	subs	r1, r7, r1
    6af6:	408e      	lsls	r6, r1
    6af8:	1e71      	subs	r1, r6, #1
    6afa:	418e      	sbcs	r6, r1
    6afc:	4306      	orrs	r6, r0
    6afe:	199b      	adds	r3, r3, r6
    6b00:	0159      	lsls	r1, r3, #5
    6b02:	d5d6      	bpl.n	6ab2 <__aeabi_fsub+0xea>
    6b04:	3401      	adds	r4, #1
    6b06:	2cff      	cmp	r4, #255	; 0xff
    6b08:	d100      	bne.n	6b0c <__aeabi_fsub+0x144>
    6b0a:	e085      	b.n	6c18 <__aeabi_fsub+0x250>
    6b0c:	2201      	movs	r2, #1
    6b0e:	497a      	ldr	r1, [pc, #488]	; (6cf8 <__aeabi_fsub+0x330>)
    6b10:	401a      	ands	r2, r3
    6b12:	085b      	lsrs	r3, r3, #1
    6b14:	400b      	ands	r3, r1
    6b16:	4313      	orrs	r3, r2
    6b18:	e79c      	b.n	6a54 <__aeabi_fsub+0x8c>
    6b1a:	2e00      	cmp	r6, #0
    6b1c:	d000      	beq.n	6b20 <__aeabi_fsub+0x158>
    6b1e:	e770      	b.n	6a02 <__aeabi_fsub+0x3a>
    6b20:	e76b      	b.n	69fa <__aeabi_fsub+0x32>
    6b22:	1e3b      	subs	r3, r7, #0
    6b24:	d1c5      	bne.n	6ab2 <__aeabi_fsub+0xea>
    6b26:	2200      	movs	r2, #0
    6b28:	027b      	lsls	r3, r7, #9
    6b2a:	0a5b      	lsrs	r3, r3, #9
    6b2c:	b2e4      	uxtb	r4, r4
    6b2e:	e7a3      	b.n	6a78 <__aeabi_fsub+0xb0>
    6b30:	0014      	movs	r4, r2
    6b32:	e78f      	b.n	6a54 <__aeabi_fsub+0x8c>
    6b34:	2e00      	cmp	r6, #0
    6b36:	d04d      	beq.n	6bd4 <__aeabi_fsub+0x20c>
    6b38:	1e48      	subs	r0, r1, #1
    6b3a:	2800      	cmp	r0, #0
    6b3c:	d157      	bne.n	6bee <__aeabi_fsub+0x226>
    6b3e:	199b      	adds	r3, r3, r6
    6b40:	2401      	movs	r4, #1
    6b42:	015a      	lsls	r2, r3, #5
    6b44:	d5b5      	bpl.n	6ab2 <__aeabi_fsub+0xea>
    6b46:	2402      	movs	r4, #2
    6b48:	e7e0      	b.n	6b0c <__aeabi_fsub+0x144>
    6b4a:	2a00      	cmp	r2, #0
    6b4c:	d125      	bne.n	6b9a <__aeabi_fsub+0x1d2>
    6b4e:	1c62      	adds	r2, r4, #1
    6b50:	b2d2      	uxtb	r2, r2
    6b52:	2a01      	cmp	r2, #1
    6b54:	dd72      	ble.n	6c3c <__aeabi_fsub+0x274>
    6b56:	1b9f      	subs	r7, r3, r6
    6b58:	017a      	lsls	r2, r7, #5
    6b5a:	d535      	bpl.n	6bc8 <__aeabi_fsub+0x200>
    6b5c:	1af7      	subs	r7, r6, r3
    6b5e:	000d      	movs	r5, r1
    6b60:	e764      	b.n	6a2c <__aeabi_fsub+0x64>
    6b62:	2201      	movs	r2, #1
    6b64:	2300      	movs	r3, #0
    6b66:	402a      	ands	r2, r5
    6b68:	e786      	b.n	6a78 <__aeabi_fsub+0xb0>
    6b6a:	003b      	movs	r3, r7
    6b6c:	4a63      	ldr	r2, [pc, #396]	; (6cfc <__aeabi_fsub+0x334>)
    6b6e:	1a24      	subs	r4, r4, r0
    6b70:	4013      	ands	r3, r2
    6b72:	e76f      	b.n	6a54 <__aeabi_fsub+0x8c>
    6b74:	2900      	cmp	r1, #0
    6b76:	d16c      	bne.n	6c52 <__aeabi_fsub+0x28a>
    6b78:	1c61      	adds	r1, r4, #1
    6b7a:	b2c8      	uxtb	r0, r1
    6b7c:	2801      	cmp	r0, #1
    6b7e:	dd4e      	ble.n	6c1e <__aeabi_fsub+0x256>
    6b80:	29ff      	cmp	r1, #255	; 0xff
    6b82:	d049      	beq.n	6c18 <__aeabi_fsub+0x250>
    6b84:	199b      	adds	r3, r3, r6
    6b86:	085b      	lsrs	r3, r3, #1
    6b88:	000c      	movs	r4, r1
    6b8a:	e763      	b.n	6a54 <__aeabi_fsub+0x8c>
    6b8c:	2aff      	cmp	r2, #255	; 0xff
    6b8e:	d041      	beq.n	6c14 <__aeabi_fsub+0x24c>
    6b90:	000a      	movs	r2, r1
    6b92:	e781      	b.n	6a98 <__aeabi_fsub+0xd0>
    6b94:	2601      	movs	r6, #1
    6b96:	1b9b      	subs	r3, r3, r6
    6b98:	e789      	b.n	6aae <__aeabi_fsub+0xe6>
    6b9a:	2c00      	cmp	r4, #0
    6b9c:	d01c      	beq.n	6bd8 <__aeabi_fsub+0x210>
    6b9e:	28ff      	cmp	r0, #255	; 0xff
    6ba0:	d021      	beq.n	6be6 <__aeabi_fsub+0x21e>
    6ba2:	2480      	movs	r4, #128	; 0x80
    6ba4:	04e4      	lsls	r4, r4, #19
    6ba6:	4252      	negs	r2, r2
    6ba8:	4323      	orrs	r3, r4
    6baa:	2a1b      	cmp	r2, #27
    6bac:	dd00      	ble.n	6bb0 <__aeabi_fsub+0x1e8>
    6bae:	e096      	b.n	6cde <__aeabi_fsub+0x316>
    6bb0:	001c      	movs	r4, r3
    6bb2:	2520      	movs	r5, #32
    6bb4:	40d4      	lsrs	r4, r2
    6bb6:	1aaa      	subs	r2, r5, r2
    6bb8:	4093      	lsls	r3, r2
    6bba:	1e5a      	subs	r2, r3, #1
    6bbc:	4193      	sbcs	r3, r2
    6bbe:	4323      	orrs	r3, r4
    6bc0:	1af3      	subs	r3, r6, r3
    6bc2:	0004      	movs	r4, r0
    6bc4:	000d      	movs	r5, r1
    6bc6:	e72d      	b.n	6a24 <__aeabi_fsub+0x5c>
    6bc8:	2f00      	cmp	r7, #0
    6bca:	d000      	beq.n	6bce <__aeabi_fsub+0x206>
    6bcc:	e72e      	b.n	6a2c <__aeabi_fsub+0x64>
    6bce:	2200      	movs	r2, #0
    6bd0:	2400      	movs	r4, #0
    6bd2:	e7a9      	b.n	6b28 <__aeabi_fsub+0x160>
    6bd4:	000c      	movs	r4, r1
    6bd6:	e73d      	b.n	6a54 <__aeabi_fsub+0x8c>
    6bd8:	2b00      	cmp	r3, #0
    6bda:	d058      	beq.n	6c8e <__aeabi_fsub+0x2c6>
    6bdc:	43d2      	mvns	r2, r2
    6bde:	2a00      	cmp	r2, #0
    6be0:	d0ee      	beq.n	6bc0 <__aeabi_fsub+0x1f8>
    6be2:	28ff      	cmp	r0, #255	; 0xff
    6be4:	d1e1      	bne.n	6baa <__aeabi_fsub+0x1e2>
    6be6:	0033      	movs	r3, r6
    6be8:	24ff      	movs	r4, #255	; 0xff
    6bea:	000d      	movs	r5, r1
    6bec:	e732      	b.n	6a54 <__aeabi_fsub+0x8c>
    6bee:	29ff      	cmp	r1, #255	; 0xff
    6bf0:	d010      	beq.n	6c14 <__aeabi_fsub+0x24c>
    6bf2:	0001      	movs	r1, r0
    6bf4:	e778      	b.n	6ae8 <__aeabi_fsub+0x120>
    6bf6:	2b00      	cmp	r3, #0
    6bf8:	d06e      	beq.n	6cd8 <__aeabi_fsub+0x310>
    6bfa:	24ff      	movs	r4, #255	; 0xff
    6bfc:	2e00      	cmp	r6, #0
    6bfe:	d100      	bne.n	6c02 <__aeabi_fsub+0x23a>
    6c00:	e728      	b.n	6a54 <__aeabi_fsub+0x8c>
    6c02:	2280      	movs	r2, #128	; 0x80
    6c04:	4651      	mov	r1, sl
    6c06:	03d2      	lsls	r2, r2, #15
    6c08:	4211      	tst	r1, r2
    6c0a:	d003      	beq.n	6c14 <__aeabi_fsub+0x24c>
    6c0c:	4661      	mov	r1, ip
    6c0e:	4211      	tst	r1, r2
    6c10:	d100      	bne.n	6c14 <__aeabi_fsub+0x24c>
    6c12:	0033      	movs	r3, r6
    6c14:	24ff      	movs	r4, #255	; 0xff
    6c16:	e71d      	b.n	6a54 <__aeabi_fsub+0x8c>
    6c18:	24ff      	movs	r4, #255	; 0xff
    6c1a:	2300      	movs	r3, #0
    6c1c:	e72c      	b.n	6a78 <__aeabi_fsub+0xb0>
    6c1e:	2c00      	cmp	r4, #0
    6c20:	d1e9      	bne.n	6bf6 <__aeabi_fsub+0x22e>
    6c22:	2b00      	cmp	r3, #0
    6c24:	d063      	beq.n	6cee <__aeabi_fsub+0x326>
    6c26:	2e00      	cmp	r6, #0
    6c28:	d100      	bne.n	6c2c <__aeabi_fsub+0x264>
    6c2a:	e713      	b.n	6a54 <__aeabi_fsub+0x8c>
    6c2c:	199b      	adds	r3, r3, r6
    6c2e:	015a      	lsls	r2, r3, #5
    6c30:	d400      	bmi.n	6c34 <__aeabi_fsub+0x26c>
    6c32:	e73e      	b.n	6ab2 <__aeabi_fsub+0xea>
    6c34:	4a31      	ldr	r2, [pc, #196]	; (6cfc <__aeabi_fsub+0x334>)
    6c36:	000c      	movs	r4, r1
    6c38:	4013      	ands	r3, r2
    6c3a:	e70b      	b.n	6a54 <__aeabi_fsub+0x8c>
    6c3c:	2c00      	cmp	r4, #0
    6c3e:	d11e      	bne.n	6c7e <__aeabi_fsub+0x2b6>
    6c40:	2b00      	cmp	r3, #0
    6c42:	d12f      	bne.n	6ca4 <__aeabi_fsub+0x2dc>
    6c44:	2e00      	cmp	r6, #0
    6c46:	d04f      	beq.n	6ce8 <__aeabi_fsub+0x320>
    6c48:	0033      	movs	r3, r6
    6c4a:	000d      	movs	r5, r1
    6c4c:	e702      	b.n	6a54 <__aeabi_fsub+0x8c>
    6c4e:	2601      	movs	r6, #1
    6c50:	e755      	b.n	6afe <__aeabi_fsub+0x136>
    6c52:	2c00      	cmp	r4, #0
    6c54:	d11f      	bne.n	6c96 <__aeabi_fsub+0x2ce>
    6c56:	2b00      	cmp	r3, #0
    6c58:	d043      	beq.n	6ce2 <__aeabi_fsub+0x31a>
    6c5a:	43c9      	mvns	r1, r1
    6c5c:	2900      	cmp	r1, #0
    6c5e:	d00b      	beq.n	6c78 <__aeabi_fsub+0x2b0>
    6c60:	28ff      	cmp	r0, #255	; 0xff
    6c62:	d039      	beq.n	6cd8 <__aeabi_fsub+0x310>
    6c64:	291b      	cmp	r1, #27
    6c66:	dc44      	bgt.n	6cf2 <__aeabi_fsub+0x32a>
    6c68:	001c      	movs	r4, r3
    6c6a:	2720      	movs	r7, #32
    6c6c:	40cc      	lsrs	r4, r1
    6c6e:	1a79      	subs	r1, r7, r1
    6c70:	408b      	lsls	r3, r1
    6c72:	1e59      	subs	r1, r3, #1
    6c74:	418b      	sbcs	r3, r1
    6c76:	4323      	orrs	r3, r4
    6c78:	199b      	adds	r3, r3, r6
    6c7a:	0004      	movs	r4, r0
    6c7c:	e740      	b.n	6b00 <__aeabi_fsub+0x138>
    6c7e:	2b00      	cmp	r3, #0
    6c80:	d11a      	bne.n	6cb8 <__aeabi_fsub+0x2f0>
    6c82:	2e00      	cmp	r6, #0
    6c84:	d124      	bne.n	6cd0 <__aeabi_fsub+0x308>
    6c86:	2780      	movs	r7, #128	; 0x80
    6c88:	2200      	movs	r2, #0
    6c8a:	03ff      	lsls	r7, r7, #15
    6c8c:	e71b      	b.n	6ac6 <__aeabi_fsub+0xfe>
    6c8e:	0033      	movs	r3, r6
    6c90:	0004      	movs	r4, r0
    6c92:	000d      	movs	r5, r1
    6c94:	e6de      	b.n	6a54 <__aeabi_fsub+0x8c>
    6c96:	28ff      	cmp	r0, #255	; 0xff
    6c98:	d01e      	beq.n	6cd8 <__aeabi_fsub+0x310>
    6c9a:	2480      	movs	r4, #128	; 0x80
    6c9c:	04e4      	lsls	r4, r4, #19
    6c9e:	4249      	negs	r1, r1
    6ca0:	4323      	orrs	r3, r4
    6ca2:	e7df      	b.n	6c64 <__aeabi_fsub+0x29c>
    6ca4:	2e00      	cmp	r6, #0
    6ca6:	d100      	bne.n	6caa <__aeabi_fsub+0x2e2>
    6ca8:	e6d4      	b.n	6a54 <__aeabi_fsub+0x8c>
    6caa:	1b9f      	subs	r7, r3, r6
    6cac:	017a      	lsls	r2, r7, #5
    6cae:	d400      	bmi.n	6cb2 <__aeabi_fsub+0x2ea>
    6cb0:	e737      	b.n	6b22 <__aeabi_fsub+0x15a>
    6cb2:	1af3      	subs	r3, r6, r3
    6cb4:	000d      	movs	r5, r1
    6cb6:	e6cd      	b.n	6a54 <__aeabi_fsub+0x8c>
    6cb8:	24ff      	movs	r4, #255	; 0xff
    6cba:	2e00      	cmp	r6, #0
    6cbc:	d100      	bne.n	6cc0 <__aeabi_fsub+0x2f8>
    6cbe:	e6c9      	b.n	6a54 <__aeabi_fsub+0x8c>
    6cc0:	2280      	movs	r2, #128	; 0x80
    6cc2:	4650      	mov	r0, sl
    6cc4:	03d2      	lsls	r2, r2, #15
    6cc6:	4210      	tst	r0, r2
    6cc8:	d0a4      	beq.n	6c14 <__aeabi_fsub+0x24c>
    6cca:	4660      	mov	r0, ip
    6ccc:	4210      	tst	r0, r2
    6cce:	d1a1      	bne.n	6c14 <__aeabi_fsub+0x24c>
    6cd0:	0033      	movs	r3, r6
    6cd2:	000d      	movs	r5, r1
    6cd4:	24ff      	movs	r4, #255	; 0xff
    6cd6:	e6bd      	b.n	6a54 <__aeabi_fsub+0x8c>
    6cd8:	0033      	movs	r3, r6
    6cda:	24ff      	movs	r4, #255	; 0xff
    6cdc:	e6ba      	b.n	6a54 <__aeabi_fsub+0x8c>
    6cde:	2301      	movs	r3, #1
    6ce0:	e76e      	b.n	6bc0 <__aeabi_fsub+0x1f8>
    6ce2:	0033      	movs	r3, r6
    6ce4:	0004      	movs	r4, r0
    6ce6:	e6b5      	b.n	6a54 <__aeabi_fsub+0x8c>
    6ce8:	2700      	movs	r7, #0
    6cea:	2200      	movs	r2, #0
    6cec:	e71c      	b.n	6b28 <__aeabi_fsub+0x160>
    6cee:	0033      	movs	r3, r6
    6cf0:	e6b0      	b.n	6a54 <__aeabi_fsub+0x8c>
    6cf2:	2301      	movs	r3, #1
    6cf4:	e7c0      	b.n	6c78 <__aeabi_fsub+0x2b0>
    6cf6:	46c0      	nop			; (mov r8, r8)
    6cf8:	7dffffff 	.word	0x7dffffff
    6cfc:	fbffffff 	.word	0xfbffffff

00006d00 <__aeabi_f2iz>:
    6d00:	0241      	lsls	r1, r0, #9
    6d02:	0043      	lsls	r3, r0, #1
    6d04:	0fc2      	lsrs	r2, r0, #31
    6d06:	0a49      	lsrs	r1, r1, #9
    6d08:	0e1b      	lsrs	r3, r3, #24
    6d0a:	2000      	movs	r0, #0
    6d0c:	2b7e      	cmp	r3, #126	; 0x7e
    6d0e:	dd0d      	ble.n	6d2c <__aeabi_f2iz+0x2c>
    6d10:	2b9d      	cmp	r3, #157	; 0x9d
    6d12:	dc0c      	bgt.n	6d2e <__aeabi_f2iz+0x2e>
    6d14:	2080      	movs	r0, #128	; 0x80
    6d16:	0400      	lsls	r0, r0, #16
    6d18:	4301      	orrs	r1, r0
    6d1a:	2b95      	cmp	r3, #149	; 0x95
    6d1c:	dc0a      	bgt.n	6d34 <__aeabi_f2iz+0x34>
    6d1e:	2096      	movs	r0, #150	; 0x96
    6d20:	1ac3      	subs	r3, r0, r3
    6d22:	40d9      	lsrs	r1, r3
    6d24:	4248      	negs	r0, r1
    6d26:	2a00      	cmp	r2, #0
    6d28:	d100      	bne.n	6d2c <__aeabi_f2iz+0x2c>
    6d2a:	0008      	movs	r0, r1
    6d2c:	4770      	bx	lr
    6d2e:	4b03      	ldr	r3, [pc, #12]	; (6d3c <__aeabi_f2iz+0x3c>)
    6d30:	18d0      	adds	r0, r2, r3
    6d32:	e7fb      	b.n	6d2c <__aeabi_f2iz+0x2c>
    6d34:	3b96      	subs	r3, #150	; 0x96
    6d36:	4099      	lsls	r1, r3
    6d38:	e7f4      	b.n	6d24 <__aeabi_f2iz+0x24>
    6d3a:	46c0      	nop			; (mov r8, r8)
    6d3c:	7fffffff 	.word	0x7fffffff

00006d40 <__aeabi_i2f>:
    6d40:	b570      	push	{r4, r5, r6, lr}
    6d42:	2800      	cmp	r0, #0
    6d44:	d030      	beq.n	6da8 <__aeabi_i2f+0x68>
    6d46:	17c3      	asrs	r3, r0, #31
    6d48:	18c4      	adds	r4, r0, r3
    6d4a:	405c      	eors	r4, r3
    6d4c:	0fc5      	lsrs	r5, r0, #31
    6d4e:	0020      	movs	r0, r4
    6d50:	f001 fdae 	bl	88b0 <__clzsi2>
    6d54:	239e      	movs	r3, #158	; 0x9e
    6d56:	1a1b      	subs	r3, r3, r0
    6d58:	2b96      	cmp	r3, #150	; 0x96
    6d5a:	dc0d      	bgt.n	6d78 <__aeabi_i2f+0x38>
    6d5c:	2296      	movs	r2, #150	; 0x96
    6d5e:	1ad2      	subs	r2, r2, r3
    6d60:	4094      	lsls	r4, r2
    6d62:	002a      	movs	r2, r5
    6d64:	0264      	lsls	r4, r4, #9
    6d66:	0a64      	lsrs	r4, r4, #9
    6d68:	b2db      	uxtb	r3, r3
    6d6a:	0264      	lsls	r4, r4, #9
    6d6c:	05db      	lsls	r3, r3, #23
    6d6e:	0a60      	lsrs	r0, r4, #9
    6d70:	07d2      	lsls	r2, r2, #31
    6d72:	4318      	orrs	r0, r3
    6d74:	4310      	orrs	r0, r2
    6d76:	bd70      	pop	{r4, r5, r6, pc}
    6d78:	2b99      	cmp	r3, #153	; 0x99
    6d7a:	dc19      	bgt.n	6db0 <__aeabi_i2f+0x70>
    6d7c:	2299      	movs	r2, #153	; 0x99
    6d7e:	1ad2      	subs	r2, r2, r3
    6d80:	2a00      	cmp	r2, #0
    6d82:	dd29      	ble.n	6dd8 <__aeabi_i2f+0x98>
    6d84:	4094      	lsls	r4, r2
    6d86:	0022      	movs	r2, r4
    6d88:	4c14      	ldr	r4, [pc, #80]	; (6ddc <__aeabi_i2f+0x9c>)
    6d8a:	4014      	ands	r4, r2
    6d8c:	0751      	lsls	r1, r2, #29
    6d8e:	d004      	beq.n	6d9a <__aeabi_i2f+0x5a>
    6d90:	210f      	movs	r1, #15
    6d92:	400a      	ands	r2, r1
    6d94:	2a04      	cmp	r2, #4
    6d96:	d000      	beq.n	6d9a <__aeabi_i2f+0x5a>
    6d98:	3404      	adds	r4, #4
    6d9a:	0162      	lsls	r2, r4, #5
    6d9c:	d413      	bmi.n	6dc6 <__aeabi_i2f+0x86>
    6d9e:	01a4      	lsls	r4, r4, #6
    6da0:	0a64      	lsrs	r4, r4, #9
    6da2:	b2db      	uxtb	r3, r3
    6da4:	002a      	movs	r2, r5
    6da6:	e7e0      	b.n	6d6a <__aeabi_i2f+0x2a>
    6da8:	2200      	movs	r2, #0
    6daa:	2300      	movs	r3, #0
    6dac:	2400      	movs	r4, #0
    6dae:	e7dc      	b.n	6d6a <__aeabi_i2f+0x2a>
    6db0:	2205      	movs	r2, #5
    6db2:	0021      	movs	r1, r4
    6db4:	1a12      	subs	r2, r2, r0
    6db6:	40d1      	lsrs	r1, r2
    6db8:	22b9      	movs	r2, #185	; 0xb9
    6dba:	1ad2      	subs	r2, r2, r3
    6dbc:	4094      	lsls	r4, r2
    6dbe:	1e62      	subs	r2, r4, #1
    6dc0:	4194      	sbcs	r4, r2
    6dc2:	430c      	orrs	r4, r1
    6dc4:	e7da      	b.n	6d7c <__aeabi_i2f+0x3c>
    6dc6:	4b05      	ldr	r3, [pc, #20]	; (6ddc <__aeabi_i2f+0x9c>)
    6dc8:	002a      	movs	r2, r5
    6dca:	401c      	ands	r4, r3
    6dcc:	239f      	movs	r3, #159	; 0x9f
    6dce:	01a4      	lsls	r4, r4, #6
    6dd0:	1a1b      	subs	r3, r3, r0
    6dd2:	0a64      	lsrs	r4, r4, #9
    6dd4:	b2db      	uxtb	r3, r3
    6dd6:	e7c8      	b.n	6d6a <__aeabi_i2f+0x2a>
    6dd8:	0022      	movs	r2, r4
    6dda:	e7d5      	b.n	6d88 <__aeabi_i2f+0x48>
    6ddc:	fbffffff 	.word	0xfbffffff

00006de0 <__aeabi_ui2f>:
    6de0:	b510      	push	{r4, lr}
    6de2:	1e04      	subs	r4, r0, #0
    6de4:	d027      	beq.n	6e36 <__aeabi_ui2f+0x56>
    6de6:	f001 fd63 	bl	88b0 <__clzsi2>
    6dea:	239e      	movs	r3, #158	; 0x9e
    6dec:	1a1b      	subs	r3, r3, r0
    6dee:	2b96      	cmp	r3, #150	; 0x96
    6df0:	dc0a      	bgt.n	6e08 <__aeabi_ui2f+0x28>
    6df2:	2296      	movs	r2, #150	; 0x96
    6df4:	1ad2      	subs	r2, r2, r3
    6df6:	4094      	lsls	r4, r2
    6df8:	0264      	lsls	r4, r4, #9
    6dfa:	0a64      	lsrs	r4, r4, #9
    6dfc:	b2db      	uxtb	r3, r3
    6dfe:	0264      	lsls	r4, r4, #9
    6e00:	05db      	lsls	r3, r3, #23
    6e02:	0a60      	lsrs	r0, r4, #9
    6e04:	4318      	orrs	r0, r3
    6e06:	bd10      	pop	{r4, pc}
    6e08:	2b99      	cmp	r3, #153	; 0x99
    6e0a:	dc17      	bgt.n	6e3c <__aeabi_ui2f+0x5c>
    6e0c:	2299      	movs	r2, #153	; 0x99
    6e0e:	1ad2      	subs	r2, r2, r3
    6e10:	2a00      	cmp	r2, #0
    6e12:	dd27      	ble.n	6e64 <__aeabi_ui2f+0x84>
    6e14:	4094      	lsls	r4, r2
    6e16:	0022      	movs	r2, r4
    6e18:	4c13      	ldr	r4, [pc, #76]	; (6e68 <__aeabi_ui2f+0x88>)
    6e1a:	4014      	ands	r4, r2
    6e1c:	0751      	lsls	r1, r2, #29
    6e1e:	d004      	beq.n	6e2a <__aeabi_ui2f+0x4a>
    6e20:	210f      	movs	r1, #15
    6e22:	400a      	ands	r2, r1
    6e24:	2a04      	cmp	r2, #4
    6e26:	d000      	beq.n	6e2a <__aeabi_ui2f+0x4a>
    6e28:	3404      	adds	r4, #4
    6e2a:	0162      	lsls	r2, r4, #5
    6e2c:	d412      	bmi.n	6e54 <__aeabi_ui2f+0x74>
    6e2e:	01a4      	lsls	r4, r4, #6
    6e30:	0a64      	lsrs	r4, r4, #9
    6e32:	b2db      	uxtb	r3, r3
    6e34:	e7e3      	b.n	6dfe <__aeabi_ui2f+0x1e>
    6e36:	2300      	movs	r3, #0
    6e38:	2400      	movs	r4, #0
    6e3a:	e7e0      	b.n	6dfe <__aeabi_ui2f+0x1e>
    6e3c:	22b9      	movs	r2, #185	; 0xb9
    6e3e:	0021      	movs	r1, r4
    6e40:	1ad2      	subs	r2, r2, r3
    6e42:	4091      	lsls	r1, r2
    6e44:	000a      	movs	r2, r1
    6e46:	1e51      	subs	r1, r2, #1
    6e48:	418a      	sbcs	r2, r1
    6e4a:	2105      	movs	r1, #5
    6e4c:	1a09      	subs	r1, r1, r0
    6e4e:	40cc      	lsrs	r4, r1
    6e50:	4314      	orrs	r4, r2
    6e52:	e7db      	b.n	6e0c <__aeabi_ui2f+0x2c>
    6e54:	4b04      	ldr	r3, [pc, #16]	; (6e68 <__aeabi_ui2f+0x88>)
    6e56:	401c      	ands	r4, r3
    6e58:	239f      	movs	r3, #159	; 0x9f
    6e5a:	01a4      	lsls	r4, r4, #6
    6e5c:	1a1b      	subs	r3, r3, r0
    6e5e:	0a64      	lsrs	r4, r4, #9
    6e60:	b2db      	uxtb	r3, r3
    6e62:	e7cc      	b.n	6dfe <__aeabi_ui2f+0x1e>
    6e64:	0022      	movs	r2, r4
    6e66:	e7d7      	b.n	6e18 <__aeabi_ui2f+0x38>
    6e68:	fbffffff 	.word	0xfbffffff

00006e6c <__aeabi_dadd>:
    6e6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6e6e:	4645      	mov	r5, r8
    6e70:	46de      	mov	lr, fp
    6e72:	4657      	mov	r7, sl
    6e74:	464e      	mov	r6, r9
    6e76:	030c      	lsls	r4, r1, #12
    6e78:	b5e0      	push	{r5, r6, r7, lr}
    6e7a:	004e      	lsls	r6, r1, #1
    6e7c:	0fc9      	lsrs	r1, r1, #31
    6e7e:	4688      	mov	r8, r1
    6e80:	000d      	movs	r5, r1
    6e82:	0a61      	lsrs	r1, r4, #9
    6e84:	0f44      	lsrs	r4, r0, #29
    6e86:	430c      	orrs	r4, r1
    6e88:	00c7      	lsls	r7, r0, #3
    6e8a:	0319      	lsls	r1, r3, #12
    6e8c:	0058      	lsls	r0, r3, #1
    6e8e:	0fdb      	lsrs	r3, r3, #31
    6e90:	469b      	mov	fp, r3
    6e92:	0a4b      	lsrs	r3, r1, #9
    6e94:	0f51      	lsrs	r1, r2, #29
    6e96:	430b      	orrs	r3, r1
    6e98:	0d76      	lsrs	r6, r6, #21
    6e9a:	0d40      	lsrs	r0, r0, #21
    6e9c:	0019      	movs	r1, r3
    6e9e:	00d2      	lsls	r2, r2, #3
    6ea0:	45d8      	cmp	r8, fp
    6ea2:	d100      	bne.n	6ea6 <__aeabi_dadd+0x3a>
    6ea4:	e0ae      	b.n	7004 <__aeabi_dadd+0x198>
    6ea6:	1a35      	subs	r5, r6, r0
    6ea8:	2d00      	cmp	r5, #0
    6eaa:	dc00      	bgt.n	6eae <__aeabi_dadd+0x42>
    6eac:	e0f6      	b.n	709c <__aeabi_dadd+0x230>
    6eae:	2800      	cmp	r0, #0
    6eb0:	d10f      	bne.n	6ed2 <__aeabi_dadd+0x66>
    6eb2:	4313      	orrs	r3, r2
    6eb4:	d100      	bne.n	6eb8 <__aeabi_dadd+0x4c>
    6eb6:	e0db      	b.n	7070 <__aeabi_dadd+0x204>
    6eb8:	1e6b      	subs	r3, r5, #1
    6eba:	2b00      	cmp	r3, #0
    6ebc:	d000      	beq.n	6ec0 <__aeabi_dadd+0x54>
    6ebe:	e137      	b.n	7130 <__aeabi_dadd+0x2c4>
    6ec0:	1aba      	subs	r2, r7, r2
    6ec2:	4297      	cmp	r7, r2
    6ec4:	41bf      	sbcs	r7, r7
    6ec6:	1a64      	subs	r4, r4, r1
    6ec8:	427f      	negs	r7, r7
    6eca:	1be4      	subs	r4, r4, r7
    6ecc:	2601      	movs	r6, #1
    6ece:	0017      	movs	r7, r2
    6ed0:	e024      	b.n	6f1c <__aeabi_dadd+0xb0>
    6ed2:	4bc6      	ldr	r3, [pc, #792]	; (71ec <__aeabi_dadd+0x380>)
    6ed4:	429e      	cmp	r6, r3
    6ed6:	d04d      	beq.n	6f74 <__aeabi_dadd+0x108>
    6ed8:	2380      	movs	r3, #128	; 0x80
    6eda:	041b      	lsls	r3, r3, #16
    6edc:	4319      	orrs	r1, r3
    6ede:	2d38      	cmp	r5, #56	; 0x38
    6ee0:	dd00      	ble.n	6ee4 <__aeabi_dadd+0x78>
    6ee2:	e107      	b.n	70f4 <__aeabi_dadd+0x288>
    6ee4:	2d1f      	cmp	r5, #31
    6ee6:	dd00      	ble.n	6eea <__aeabi_dadd+0x7e>
    6ee8:	e138      	b.n	715c <__aeabi_dadd+0x2f0>
    6eea:	2020      	movs	r0, #32
    6eec:	1b43      	subs	r3, r0, r5
    6eee:	469a      	mov	sl, r3
    6ef0:	000b      	movs	r3, r1
    6ef2:	4650      	mov	r0, sl
    6ef4:	4083      	lsls	r3, r0
    6ef6:	4699      	mov	r9, r3
    6ef8:	0013      	movs	r3, r2
    6efa:	4648      	mov	r0, r9
    6efc:	40eb      	lsrs	r3, r5
    6efe:	4318      	orrs	r0, r3
    6f00:	0003      	movs	r3, r0
    6f02:	4650      	mov	r0, sl
    6f04:	4082      	lsls	r2, r0
    6f06:	1e50      	subs	r0, r2, #1
    6f08:	4182      	sbcs	r2, r0
    6f0a:	40e9      	lsrs	r1, r5
    6f0c:	431a      	orrs	r2, r3
    6f0e:	1aba      	subs	r2, r7, r2
    6f10:	1a61      	subs	r1, r4, r1
    6f12:	4297      	cmp	r7, r2
    6f14:	41a4      	sbcs	r4, r4
    6f16:	0017      	movs	r7, r2
    6f18:	4264      	negs	r4, r4
    6f1a:	1b0c      	subs	r4, r1, r4
    6f1c:	0223      	lsls	r3, r4, #8
    6f1e:	d562      	bpl.n	6fe6 <__aeabi_dadd+0x17a>
    6f20:	0264      	lsls	r4, r4, #9
    6f22:	0a65      	lsrs	r5, r4, #9
    6f24:	2d00      	cmp	r5, #0
    6f26:	d100      	bne.n	6f2a <__aeabi_dadd+0xbe>
    6f28:	e0df      	b.n	70ea <__aeabi_dadd+0x27e>
    6f2a:	0028      	movs	r0, r5
    6f2c:	f001 fcc0 	bl	88b0 <__clzsi2>
    6f30:	0003      	movs	r3, r0
    6f32:	3b08      	subs	r3, #8
    6f34:	2b1f      	cmp	r3, #31
    6f36:	dd00      	ble.n	6f3a <__aeabi_dadd+0xce>
    6f38:	e0d2      	b.n	70e0 <__aeabi_dadd+0x274>
    6f3a:	2220      	movs	r2, #32
    6f3c:	003c      	movs	r4, r7
    6f3e:	1ad2      	subs	r2, r2, r3
    6f40:	409d      	lsls	r5, r3
    6f42:	40d4      	lsrs	r4, r2
    6f44:	409f      	lsls	r7, r3
    6f46:	4325      	orrs	r5, r4
    6f48:	429e      	cmp	r6, r3
    6f4a:	dd00      	ble.n	6f4e <__aeabi_dadd+0xe2>
    6f4c:	e0c4      	b.n	70d8 <__aeabi_dadd+0x26c>
    6f4e:	1b9e      	subs	r6, r3, r6
    6f50:	1c73      	adds	r3, r6, #1
    6f52:	2b1f      	cmp	r3, #31
    6f54:	dd00      	ble.n	6f58 <__aeabi_dadd+0xec>
    6f56:	e0f1      	b.n	713c <__aeabi_dadd+0x2d0>
    6f58:	2220      	movs	r2, #32
    6f5a:	0038      	movs	r0, r7
    6f5c:	0029      	movs	r1, r5
    6f5e:	1ad2      	subs	r2, r2, r3
    6f60:	40d8      	lsrs	r0, r3
    6f62:	4091      	lsls	r1, r2
    6f64:	4097      	lsls	r7, r2
    6f66:	002c      	movs	r4, r5
    6f68:	4301      	orrs	r1, r0
    6f6a:	1e78      	subs	r0, r7, #1
    6f6c:	4187      	sbcs	r7, r0
    6f6e:	40dc      	lsrs	r4, r3
    6f70:	2600      	movs	r6, #0
    6f72:	430f      	orrs	r7, r1
    6f74:	077b      	lsls	r3, r7, #29
    6f76:	d009      	beq.n	6f8c <__aeabi_dadd+0x120>
    6f78:	230f      	movs	r3, #15
    6f7a:	403b      	ands	r3, r7
    6f7c:	2b04      	cmp	r3, #4
    6f7e:	d005      	beq.n	6f8c <__aeabi_dadd+0x120>
    6f80:	1d3b      	adds	r3, r7, #4
    6f82:	42bb      	cmp	r3, r7
    6f84:	41bf      	sbcs	r7, r7
    6f86:	427f      	negs	r7, r7
    6f88:	19e4      	adds	r4, r4, r7
    6f8a:	001f      	movs	r7, r3
    6f8c:	0223      	lsls	r3, r4, #8
    6f8e:	d52c      	bpl.n	6fea <__aeabi_dadd+0x17e>
    6f90:	4b96      	ldr	r3, [pc, #600]	; (71ec <__aeabi_dadd+0x380>)
    6f92:	3601      	adds	r6, #1
    6f94:	429e      	cmp	r6, r3
    6f96:	d100      	bne.n	6f9a <__aeabi_dadd+0x12e>
    6f98:	e09a      	b.n	70d0 <__aeabi_dadd+0x264>
    6f9a:	4645      	mov	r5, r8
    6f9c:	4b94      	ldr	r3, [pc, #592]	; (71f0 <__aeabi_dadd+0x384>)
    6f9e:	08ff      	lsrs	r7, r7, #3
    6fa0:	401c      	ands	r4, r3
    6fa2:	0760      	lsls	r0, r4, #29
    6fa4:	0576      	lsls	r6, r6, #21
    6fa6:	0264      	lsls	r4, r4, #9
    6fa8:	4307      	orrs	r7, r0
    6faa:	0b24      	lsrs	r4, r4, #12
    6fac:	0d76      	lsrs	r6, r6, #21
    6fae:	2100      	movs	r1, #0
    6fb0:	0324      	lsls	r4, r4, #12
    6fb2:	0b23      	lsrs	r3, r4, #12
    6fb4:	0d0c      	lsrs	r4, r1, #20
    6fb6:	4a8f      	ldr	r2, [pc, #572]	; (71f4 <__aeabi_dadd+0x388>)
    6fb8:	0524      	lsls	r4, r4, #20
    6fba:	431c      	orrs	r4, r3
    6fbc:	4014      	ands	r4, r2
    6fbe:	0533      	lsls	r3, r6, #20
    6fc0:	4323      	orrs	r3, r4
    6fc2:	005b      	lsls	r3, r3, #1
    6fc4:	07ed      	lsls	r5, r5, #31
    6fc6:	085b      	lsrs	r3, r3, #1
    6fc8:	432b      	orrs	r3, r5
    6fca:	0038      	movs	r0, r7
    6fcc:	0019      	movs	r1, r3
    6fce:	bc3c      	pop	{r2, r3, r4, r5}
    6fd0:	4690      	mov	r8, r2
    6fd2:	4699      	mov	r9, r3
    6fd4:	46a2      	mov	sl, r4
    6fd6:	46ab      	mov	fp, r5
    6fd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6fda:	4664      	mov	r4, ip
    6fdc:	4304      	orrs	r4, r0
    6fde:	d100      	bne.n	6fe2 <__aeabi_dadd+0x176>
    6fe0:	e211      	b.n	7406 <__aeabi_dadd+0x59a>
    6fe2:	0004      	movs	r4, r0
    6fe4:	4667      	mov	r7, ip
    6fe6:	077b      	lsls	r3, r7, #29
    6fe8:	d1c6      	bne.n	6f78 <__aeabi_dadd+0x10c>
    6fea:	4645      	mov	r5, r8
    6fec:	0760      	lsls	r0, r4, #29
    6fee:	08ff      	lsrs	r7, r7, #3
    6ff0:	4307      	orrs	r7, r0
    6ff2:	08e4      	lsrs	r4, r4, #3
    6ff4:	4b7d      	ldr	r3, [pc, #500]	; (71ec <__aeabi_dadd+0x380>)
    6ff6:	429e      	cmp	r6, r3
    6ff8:	d030      	beq.n	705c <__aeabi_dadd+0x1f0>
    6ffa:	0324      	lsls	r4, r4, #12
    6ffc:	0576      	lsls	r6, r6, #21
    6ffe:	0b24      	lsrs	r4, r4, #12
    7000:	0d76      	lsrs	r6, r6, #21
    7002:	e7d4      	b.n	6fae <__aeabi_dadd+0x142>
    7004:	1a33      	subs	r3, r6, r0
    7006:	469a      	mov	sl, r3
    7008:	2b00      	cmp	r3, #0
    700a:	dd78      	ble.n	70fe <__aeabi_dadd+0x292>
    700c:	2800      	cmp	r0, #0
    700e:	d031      	beq.n	7074 <__aeabi_dadd+0x208>
    7010:	4876      	ldr	r0, [pc, #472]	; (71ec <__aeabi_dadd+0x380>)
    7012:	4286      	cmp	r6, r0
    7014:	d0ae      	beq.n	6f74 <__aeabi_dadd+0x108>
    7016:	2080      	movs	r0, #128	; 0x80
    7018:	0400      	lsls	r0, r0, #16
    701a:	4301      	orrs	r1, r0
    701c:	4653      	mov	r3, sl
    701e:	2b38      	cmp	r3, #56	; 0x38
    7020:	dc00      	bgt.n	7024 <__aeabi_dadd+0x1b8>
    7022:	e0e9      	b.n	71f8 <__aeabi_dadd+0x38c>
    7024:	430a      	orrs	r2, r1
    7026:	1e51      	subs	r1, r2, #1
    7028:	418a      	sbcs	r2, r1
    702a:	2100      	movs	r1, #0
    702c:	19d2      	adds	r2, r2, r7
    702e:	42ba      	cmp	r2, r7
    7030:	41bf      	sbcs	r7, r7
    7032:	1909      	adds	r1, r1, r4
    7034:	427c      	negs	r4, r7
    7036:	0017      	movs	r7, r2
    7038:	190c      	adds	r4, r1, r4
    703a:	0223      	lsls	r3, r4, #8
    703c:	d5d3      	bpl.n	6fe6 <__aeabi_dadd+0x17a>
    703e:	4b6b      	ldr	r3, [pc, #428]	; (71ec <__aeabi_dadd+0x380>)
    7040:	3601      	adds	r6, #1
    7042:	429e      	cmp	r6, r3
    7044:	d100      	bne.n	7048 <__aeabi_dadd+0x1dc>
    7046:	e13a      	b.n	72be <__aeabi_dadd+0x452>
    7048:	2001      	movs	r0, #1
    704a:	4b69      	ldr	r3, [pc, #420]	; (71f0 <__aeabi_dadd+0x384>)
    704c:	401c      	ands	r4, r3
    704e:	087b      	lsrs	r3, r7, #1
    7050:	4007      	ands	r7, r0
    7052:	431f      	orrs	r7, r3
    7054:	07e0      	lsls	r0, r4, #31
    7056:	4307      	orrs	r7, r0
    7058:	0864      	lsrs	r4, r4, #1
    705a:	e78b      	b.n	6f74 <__aeabi_dadd+0x108>
    705c:	0023      	movs	r3, r4
    705e:	433b      	orrs	r3, r7
    7060:	d100      	bne.n	7064 <__aeabi_dadd+0x1f8>
    7062:	e1cb      	b.n	73fc <__aeabi_dadd+0x590>
    7064:	2280      	movs	r2, #128	; 0x80
    7066:	0312      	lsls	r2, r2, #12
    7068:	4314      	orrs	r4, r2
    706a:	0324      	lsls	r4, r4, #12
    706c:	0b24      	lsrs	r4, r4, #12
    706e:	e79e      	b.n	6fae <__aeabi_dadd+0x142>
    7070:	002e      	movs	r6, r5
    7072:	e77f      	b.n	6f74 <__aeabi_dadd+0x108>
    7074:	0008      	movs	r0, r1
    7076:	4310      	orrs	r0, r2
    7078:	d100      	bne.n	707c <__aeabi_dadd+0x210>
    707a:	e0b4      	b.n	71e6 <__aeabi_dadd+0x37a>
    707c:	1e58      	subs	r0, r3, #1
    707e:	2800      	cmp	r0, #0
    7080:	d000      	beq.n	7084 <__aeabi_dadd+0x218>
    7082:	e0de      	b.n	7242 <__aeabi_dadd+0x3d6>
    7084:	18ba      	adds	r2, r7, r2
    7086:	42ba      	cmp	r2, r7
    7088:	419b      	sbcs	r3, r3
    708a:	1864      	adds	r4, r4, r1
    708c:	425b      	negs	r3, r3
    708e:	18e4      	adds	r4, r4, r3
    7090:	0017      	movs	r7, r2
    7092:	2601      	movs	r6, #1
    7094:	0223      	lsls	r3, r4, #8
    7096:	d5a6      	bpl.n	6fe6 <__aeabi_dadd+0x17a>
    7098:	2602      	movs	r6, #2
    709a:	e7d5      	b.n	7048 <__aeabi_dadd+0x1dc>
    709c:	2d00      	cmp	r5, #0
    709e:	d16e      	bne.n	717e <__aeabi_dadd+0x312>
    70a0:	1c70      	adds	r0, r6, #1
    70a2:	0540      	lsls	r0, r0, #21
    70a4:	0d40      	lsrs	r0, r0, #21
    70a6:	2801      	cmp	r0, #1
    70a8:	dc00      	bgt.n	70ac <__aeabi_dadd+0x240>
    70aa:	e0f9      	b.n	72a0 <__aeabi_dadd+0x434>
    70ac:	1ab8      	subs	r0, r7, r2
    70ae:	4684      	mov	ip, r0
    70b0:	4287      	cmp	r7, r0
    70b2:	4180      	sbcs	r0, r0
    70b4:	1ae5      	subs	r5, r4, r3
    70b6:	4240      	negs	r0, r0
    70b8:	1a2d      	subs	r5, r5, r0
    70ba:	0228      	lsls	r0, r5, #8
    70bc:	d400      	bmi.n	70c0 <__aeabi_dadd+0x254>
    70be:	e089      	b.n	71d4 <__aeabi_dadd+0x368>
    70c0:	1bd7      	subs	r7, r2, r7
    70c2:	42ba      	cmp	r2, r7
    70c4:	4192      	sbcs	r2, r2
    70c6:	1b1c      	subs	r4, r3, r4
    70c8:	4252      	negs	r2, r2
    70ca:	1aa5      	subs	r5, r4, r2
    70cc:	46d8      	mov	r8, fp
    70ce:	e729      	b.n	6f24 <__aeabi_dadd+0xb8>
    70d0:	4645      	mov	r5, r8
    70d2:	2400      	movs	r4, #0
    70d4:	2700      	movs	r7, #0
    70d6:	e76a      	b.n	6fae <__aeabi_dadd+0x142>
    70d8:	4c45      	ldr	r4, [pc, #276]	; (71f0 <__aeabi_dadd+0x384>)
    70da:	1af6      	subs	r6, r6, r3
    70dc:	402c      	ands	r4, r5
    70de:	e749      	b.n	6f74 <__aeabi_dadd+0x108>
    70e0:	003d      	movs	r5, r7
    70e2:	3828      	subs	r0, #40	; 0x28
    70e4:	4085      	lsls	r5, r0
    70e6:	2700      	movs	r7, #0
    70e8:	e72e      	b.n	6f48 <__aeabi_dadd+0xdc>
    70ea:	0038      	movs	r0, r7
    70ec:	f001 fbe0 	bl	88b0 <__clzsi2>
    70f0:	3020      	adds	r0, #32
    70f2:	e71d      	b.n	6f30 <__aeabi_dadd+0xc4>
    70f4:	430a      	orrs	r2, r1
    70f6:	1e51      	subs	r1, r2, #1
    70f8:	418a      	sbcs	r2, r1
    70fa:	2100      	movs	r1, #0
    70fc:	e707      	b.n	6f0e <__aeabi_dadd+0xa2>
    70fe:	2b00      	cmp	r3, #0
    7100:	d000      	beq.n	7104 <__aeabi_dadd+0x298>
    7102:	e0f3      	b.n	72ec <__aeabi_dadd+0x480>
    7104:	1c70      	adds	r0, r6, #1
    7106:	0543      	lsls	r3, r0, #21
    7108:	0d5b      	lsrs	r3, r3, #21
    710a:	2b01      	cmp	r3, #1
    710c:	dc00      	bgt.n	7110 <__aeabi_dadd+0x2a4>
    710e:	e0ad      	b.n	726c <__aeabi_dadd+0x400>
    7110:	4b36      	ldr	r3, [pc, #216]	; (71ec <__aeabi_dadd+0x380>)
    7112:	4298      	cmp	r0, r3
    7114:	d100      	bne.n	7118 <__aeabi_dadd+0x2ac>
    7116:	e0d1      	b.n	72bc <__aeabi_dadd+0x450>
    7118:	18ba      	adds	r2, r7, r2
    711a:	42ba      	cmp	r2, r7
    711c:	41bf      	sbcs	r7, r7
    711e:	1864      	adds	r4, r4, r1
    7120:	427f      	negs	r7, r7
    7122:	19e4      	adds	r4, r4, r7
    7124:	07e7      	lsls	r7, r4, #31
    7126:	0852      	lsrs	r2, r2, #1
    7128:	4317      	orrs	r7, r2
    712a:	0864      	lsrs	r4, r4, #1
    712c:	0006      	movs	r6, r0
    712e:	e721      	b.n	6f74 <__aeabi_dadd+0x108>
    7130:	482e      	ldr	r0, [pc, #184]	; (71ec <__aeabi_dadd+0x380>)
    7132:	4285      	cmp	r5, r0
    7134:	d100      	bne.n	7138 <__aeabi_dadd+0x2cc>
    7136:	e093      	b.n	7260 <__aeabi_dadd+0x3f4>
    7138:	001d      	movs	r5, r3
    713a:	e6d0      	b.n	6ede <__aeabi_dadd+0x72>
    713c:	0029      	movs	r1, r5
    713e:	3e1f      	subs	r6, #31
    7140:	40f1      	lsrs	r1, r6
    7142:	2b20      	cmp	r3, #32
    7144:	d100      	bne.n	7148 <__aeabi_dadd+0x2dc>
    7146:	e08d      	b.n	7264 <__aeabi_dadd+0x3f8>
    7148:	2240      	movs	r2, #64	; 0x40
    714a:	1ad3      	subs	r3, r2, r3
    714c:	409d      	lsls	r5, r3
    714e:	432f      	orrs	r7, r5
    7150:	1e7d      	subs	r5, r7, #1
    7152:	41af      	sbcs	r7, r5
    7154:	2400      	movs	r4, #0
    7156:	430f      	orrs	r7, r1
    7158:	2600      	movs	r6, #0
    715a:	e744      	b.n	6fe6 <__aeabi_dadd+0x17a>
    715c:	002b      	movs	r3, r5
    715e:	0008      	movs	r0, r1
    7160:	3b20      	subs	r3, #32
    7162:	40d8      	lsrs	r0, r3
    7164:	0003      	movs	r3, r0
    7166:	2d20      	cmp	r5, #32
    7168:	d100      	bne.n	716c <__aeabi_dadd+0x300>
    716a:	e07d      	b.n	7268 <__aeabi_dadd+0x3fc>
    716c:	2040      	movs	r0, #64	; 0x40
    716e:	1b45      	subs	r5, r0, r5
    7170:	40a9      	lsls	r1, r5
    7172:	430a      	orrs	r2, r1
    7174:	1e51      	subs	r1, r2, #1
    7176:	418a      	sbcs	r2, r1
    7178:	2100      	movs	r1, #0
    717a:	431a      	orrs	r2, r3
    717c:	e6c7      	b.n	6f0e <__aeabi_dadd+0xa2>
    717e:	2e00      	cmp	r6, #0
    7180:	d050      	beq.n	7224 <__aeabi_dadd+0x3b8>
    7182:	4e1a      	ldr	r6, [pc, #104]	; (71ec <__aeabi_dadd+0x380>)
    7184:	42b0      	cmp	r0, r6
    7186:	d057      	beq.n	7238 <__aeabi_dadd+0x3cc>
    7188:	2680      	movs	r6, #128	; 0x80
    718a:	426b      	negs	r3, r5
    718c:	4699      	mov	r9, r3
    718e:	0436      	lsls	r6, r6, #16
    7190:	4334      	orrs	r4, r6
    7192:	464b      	mov	r3, r9
    7194:	2b38      	cmp	r3, #56	; 0x38
    7196:	dd00      	ble.n	719a <__aeabi_dadd+0x32e>
    7198:	e0d6      	b.n	7348 <__aeabi_dadd+0x4dc>
    719a:	2b1f      	cmp	r3, #31
    719c:	dd00      	ble.n	71a0 <__aeabi_dadd+0x334>
    719e:	e135      	b.n	740c <__aeabi_dadd+0x5a0>
    71a0:	2620      	movs	r6, #32
    71a2:	1af5      	subs	r5, r6, r3
    71a4:	0026      	movs	r6, r4
    71a6:	40ae      	lsls	r6, r5
    71a8:	46b2      	mov	sl, r6
    71aa:	003e      	movs	r6, r7
    71ac:	40de      	lsrs	r6, r3
    71ae:	46ac      	mov	ip, r5
    71b0:	0035      	movs	r5, r6
    71b2:	4656      	mov	r6, sl
    71b4:	432e      	orrs	r6, r5
    71b6:	4665      	mov	r5, ip
    71b8:	40af      	lsls	r7, r5
    71ba:	1e7d      	subs	r5, r7, #1
    71bc:	41af      	sbcs	r7, r5
    71be:	40dc      	lsrs	r4, r3
    71c0:	4337      	orrs	r7, r6
    71c2:	1bd7      	subs	r7, r2, r7
    71c4:	42ba      	cmp	r2, r7
    71c6:	4192      	sbcs	r2, r2
    71c8:	1b0c      	subs	r4, r1, r4
    71ca:	4252      	negs	r2, r2
    71cc:	1aa4      	subs	r4, r4, r2
    71ce:	0006      	movs	r6, r0
    71d0:	46d8      	mov	r8, fp
    71d2:	e6a3      	b.n	6f1c <__aeabi_dadd+0xb0>
    71d4:	4664      	mov	r4, ip
    71d6:	4667      	mov	r7, ip
    71d8:	432c      	orrs	r4, r5
    71da:	d000      	beq.n	71de <__aeabi_dadd+0x372>
    71dc:	e6a2      	b.n	6f24 <__aeabi_dadd+0xb8>
    71de:	2500      	movs	r5, #0
    71e0:	2600      	movs	r6, #0
    71e2:	2700      	movs	r7, #0
    71e4:	e706      	b.n	6ff4 <__aeabi_dadd+0x188>
    71e6:	001e      	movs	r6, r3
    71e8:	e6c4      	b.n	6f74 <__aeabi_dadd+0x108>
    71ea:	46c0      	nop			; (mov r8, r8)
    71ec:	000007ff 	.word	0x000007ff
    71f0:	ff7fffff 	.word	0xff7fffff
    71f4:	800fffff 	.word	0x800fffff
    71f8:	2b1f      	cmp	r3, #31
    71fa:	dc63      	bgt.n	72c4 <__aeabi_dadd+0x458>
    71fc:	2020      	movs	r0, #32
    71fe:	1ac3      	subs	r3, r0, r3
    7200:	0008      	movs	r0, r1
    7202:	4098      	lsls	r0, r3
    7204:	469c      	mov	ip, r3
    7206:	4683      	mov	fp, r0
    7208:	4653      	mov	r3, sl
    720a:	0010      	movs	r0, r2
    720c:	40d8      	lsrs	r0, r3
    720e:	0003      	movs	r3, r0
    7210:	4658      	mov	r0, fp
    7212:	4318      	orrs	r0, r3
    7214:	4663      	mov	r3, ip
    7216:	409a      	lsls	r2, r3
    7218:	1e53      	subs	r3, r2, #1
    721a:	419a      	sbcs	r2, r3
    721c:	4653      	mov	r3, sl
    721e:	4302      	orrs	r2, r0
    7220:	40d9      	lsrs	r1, r3
    7222:	e703      	b.n	702c <__aeabi_dadd+0x1c0>
    7224:	0026      	movs	r6, r4
    7226:	433e      	orrs	r6, r7
    7228:	d006      	beq.n	7238 <__aeabi_dadd+0x3cc>
    722a:	43eb      	mvns	r3, r5
    722c:	4699      	mov	r9, r3
    722e:	2b00      	cmp	r3, #0
    7230:	d0c7      	beq.n	71c2 <__aeabi_dadd+0x356>
    7232:	4e94      	ldr	r6, [pc, #592]	; (7484 <__aeabi_dadd+0x618>)
    7234:	42b0      	cmp	r0, r6
    7236:	d1ac      	bne.n	7192 <__aeabi_dadd+0x326>
    7238:	000c      	movs	r4, r1
    723a:	0017      	movs	r7, r2
    723c:	0006      	movs	r6, r0
    723e:	46d8      	mov	r8, fp
    7240:	e698      	b.n	6f74 <__aeabi_dadd+0x108>
    7242:	4b90      	ldr	r3, [pc, #576]	; (7484 <__aeabi_dadd+0x618>)
    7244:	459a      	cmp	sl, r3
    7246:	d00b      	beq.n	7260 <__aeabi_dadd+0x3f4>
    7248:	4682      	mov	sl, r0
    724a:	e6e7      	b.n	701c <__aeabi_dadd+0x1b0>
    724c:	2800      	cmp	r0, #0
    724e:	d000      	beq.n	7252 <__aeabi_dadd+0x3e6>
    7250:	e09e      	b.n	7390 <__aeabi_dadd+0x524>
    7252:	0018      	movs	r0, r3
    7254:	4310      	orrs	r0, r2
    7256:	d100      	bne.n	725a <__aeabi_dadd+0x3ee>
    7258:	e0e9      	b.n	742e <__aeabi_dadd+0x5c2>
    725a:	001c      	movs	r4, r3
    725c:	0017      	movs	r7, r2
    725e:	46d8      	mov	r8, fp
    7260:	4e88      	ldr	r6, [pc, #544]	; (7484 <__aeabi_dadd+0x618>)
    7262:	e687      	b.n	6f74 <__aeabi_dadd+0x108>
    7264:	2500      	movs	r5, #0
    7266:	e772      	b.n	714e <__aeabi_dadd+0x2e2>
    7268:	2100      	movs	r1, #0
    726a:	e782      	b.n	7172 <__aeabi_dadd+0x306>
    726c:	0023      	movs	r3, r4
    726e:	433b      	orrs	r3, r7
    7270:	2e00      	cmp	r6, #0
    7272:	d000      	beq.n	7276 <__aeabi_dadd+0x40a>
    7274:	e0ab      	b.n	73ce <__aeabi_dadd+0x562>
    7276:	2b00      	cmp	r3, #0
    7278:	d100      	bne.n	727c <__aeabi_dadd+0x410>
    727a:	e0e7      	b.n	744c <__aeabi_dadd+0x5e0>
    727c:	000b      	movs	r3, r1
    727e:	4313      	orrs	r3, r2
    7280:	d100      	bne.n	7284 <__aeabi_dadd+0x418>
    7282:	e677      	b.n	6f74 <__aeabi_dadd+0x108>
    7284:	18ba      	adds	r2, r7, r2
    7286:	42ba      	cmp	r2, r7
    7288:	41bf      	sbcs	r7, r7
    728a:	1864      	adds	r4, r4, r1
    728c:	427f      	negs	r7, r7
    728e:	19e4      	adds	r4, r4, r7
    7290:	0223      	lsls	r3, r4, #8
    7292:	d400      	bmi.n	7296 <__aeabi_dadd+0x42a>
    7294:	e0f2      	b.n	747c <__aeabi_dadd+0x610>
    7296:	4b7c      	ldr	r3, [pc, #496]	; (7488 <__aeabi_dadd+0x61c>)
    7298:	0017      	movs	r7, r2
    729a:	401c      	ands	r4, r3
    729c:	0006      	movs	r6, r0
    729e:	e669      	b.n	6f74 <__aeabi_dadd+0x108>
    72a0:	0020      	movs	r0, r4
    72a2:	4338      	orrs	r0, r7
    72a4:	2e00      	cmp	r6, #0
    72a6:	d1d1      	bne.n	724c <__aeabi_dadd+0x3e0>
    72a8:	2800      	cmp	r0, #0
    72aa:	d15b      	bne.n	7364 <__aeabi_dadd+0x4f8>
    72ac:	001c      	movs	r4, r3
    72ae:	4314      	orrs	r4, r2
    72b0:	d100      	bne.n	72b4 <__aeabi_dadd+0x448>
    72b2:	e0a8      	b.n	7406 <__aeabi_dadd+0x59a>
    72b4:	001c      	movs	r4, r3
    72b6:	0017      	movs	r7, r2
    72b8:	46d8      	mov	r8, fp
    72ba:	e65b      	b.n	6f74 <__aeabi_dadd+0x108>
    72bc:	0006      	movs	r6, r0
    72be:	2400      	movs	r4, #0
    72c0:	2700      	movs	r7, #0
    72c2:	e697      	b.n	6ff4 <__aeabi_dadd+0x188>
    72c4:	4650      	mov	r0, sl
    72c6:	000b      	movs	r3, r1
    72c8:	3820      	subs	r0, #32
    72ca:	40c3      	lsrs	r3, r0
    72cc:	4699      	mov	r9, r3
    72ce:	4653      	mov	r3, sl
    72d0:	2b20      	cmp	r3, #32
    72d2:	d100      	bne.n	72d6 <__aeabi_dadd+0x46a>
    72d4:	e095      	b.n	7402 <__aeabi_dadd+0x596>
    72d6:	2340      	movs	r3, #64	; 0x40
    72d8:	4650      	mov	r0, sl
    72da:	1a1b      	subs	r3, r3, r0
    72dc:	4099      	lsls	r1, r3
    72de:	430a      	orrs	r2, r1
    72e0:	1e51      	subs	r1, r2, #1
    72e2:	418a      	sbcs	r2, r1
    72e4:	464b      	mov	r3, r9
    72e6:	2100      	movs	r1, #0
    72e8:	431a      	orrs	r2, r3
    72ea:	e69f      	b.n	702c <__aeabi_dadd+0x1c0>
    72ec:	2e00      	cmp	r6, #0
    72ee:	d130      	bne.n	7352 <__aeabi_dadd+0x4e6>
    72f0:	0026      	movs	r6, r4
    72f2:	433e      	orrs	r6, r7
    72f4:	d067      	beq.n	73c6 <__aeabi_dadd+0x55a>
    72f6:	43db      	mvns	r3, r3
    72f8:	469a      	mov	sl, r3
    72fa:	2b00      	cmp	r3, #0
    72fc:	d01c      	beq.n	7338 <__aeabi_dadd+0x4cc>
    72fe:	4e61      	ldr	r6, [pc, #388]	; (7484 <__aeabi_dadd+0x618>)
    7300:	42b0      	cmp	r0, r6
    7302:	d060      	beq.n	73c6 <__aeabi_dadd+0x55a>
    7304:	4653      	mov	r3, sl
    7306:	2b38      	cmp	r3, #56	; 0x38
    7308:	dd00      	ble.n	730c <__aeabi_dadd+0x4a0>
    730a:	e096      	b.n	743a <__aeabi_dadd+0x5ce>
    730c:	2b1f      	cmp	r3, #31
    730e:	dd00      	ble.n	7312 <__aeabi_dadd+0x4a6>
    7310:	e09f      	b.n	7452 <__aeabi_dadd+0x5e6>
    7312:	2620      	movs	r6, #32
    7314:	1af3      	subs	r3, r6, r3
    7316:	0026      	movs	r6, r4
    7318:	409e      	lsls	r6, r3
    731a:	469c      	mov	ip, r3
    731c:	46b3      	mov	fp, r6
    731e:	4653      	mov	r3, sl
    7320:	003e      	movs	r6, r7
    7322:	40de      	lsrs	r6, r3
    7324:	0033      	movs	r3, r6
    7326:	465e      	mov	r6, fp
    7328:	431e      	orrs	r6, r3
    732a:	4663      	mov	r3, ip
    732c:	409f      	lsls	r7, r3
    732e:	1e7b      	subs	r3, r7, #1
    7330:	419f      	sbcs	r7, r3
    7332:	4653      	mov	r3, sl
    7334:	40dc      	lsrs	r4, r3
    7336:	4337      	orrs	r7, r6
    7338:	18bf      	adds	r7, r7, r2
    733a:	4297      	cmp	r7, r2
    733c:	4192      	sbcs	r2, r2
    733e:	1864      	adds	r4, r4, r1
    7340:	4252      	negs	r2, r2
    7342:	18a4      	adds	r4, r4, r2
    7344:	0006      	movs	r6, r0
    7346:	e678      	b.n	703a <__aeabi_dadd+0x1ce>
    7348:	4327      	orrs	r7, r4
    734a:	1e7c      	subs	r4, r7, #1
    734c:	41a7      	sbcs	r7, r4
    734e:	2400      	movs	r4, #0
    7350:	e737      	b.n	71c2 <__aeabi_dadd+0x356>
    7352:	4e4c      	ldr	r6, [pc, #304]	; (7484 <__aeabi_dadd+0x618>)
    7354:	42b0      	cmp	r0, r6
    7356:	d036      	beq.n	73c6 <__aeabi_dadd+0x55a>
    7358:	2680      	movs	r6, #128	; 0x80
    735a:	425b      	negs	r3, r3
    735c:	0436      	lsls	r6, r6, #16
    735e:	469a      	mov	sl, r3
    7360:	4334      	orrs	r4, r6
    7362:	e7cf      	b.n	7304 <__aeabi_dadd+0x498>
    7364:	0018      	movs	r0, r3
    7366:	4310      	orrs	r0, r2
    7368:	d100      	bne.n	736c <__aeabi_dadd+0x500>
    736a:	e603      	b.n	6f74 <__aeabi_dadd+0x108>
    736c:	1ab8      	subs	r0, r7, r2
    736e:	4684      	mov	ip, r0
    7370:	4567      	cmp	r7, ip
    7372:	41ad      	sbcs	r5, r5
    7374:	1ae0      	subs	r0, r4, r3
    7376:	426d      	negs	r5, r5
    7378:	1b40      	subs	r0, r0, r5
    737a:	0205      	lsls	r5, r0, #8
    737c:	d400      	bmi.n	7380 <__aeabi_dadd+0x514>
    737e:	e62c      	b.n	6fda <__aeabi_dadd+0x16e>
    7380:	1bd7      	subs	r7, r2, r7
    7382:	42ba      	cmp	r2, r7
    7384:	4192      	sbcs	r2, r2
    7386:	1b1c      	subs	r4, r3, r4
    7388:	4252      	negs	r2, r2
    738a:	1aa4      	subs	r4, r4, r2
    738c:	46d8      	mov	r8, fp
    738e:	e5f1      	b.n	6f74 <__aeabi_dadd+0x108>
    7390:	0018      	movs	r0, r3
    7392:	4310      	orrs	r0, r2
    7394:	d100      	bne.n	7398 <__aeabi_dadd+0x52c>
    7396:	e763      	b.n	7260 <__aeabi_dadd+0x3f4>
    7398:	08f8      	lsrs	r0, r7, #3
    739a:	0767      	lsls	r7, r4, #29
    739c:	4307      	orrs	r7, r0
    739e:	2080      	movs	r0, #128	; 0x80
    73a0:	08e4      	lsrs	r4, r4, #3
    73a2:	0300      	lsls	r0, r0, #12
    73a4:	4204      	tst	r4, r0
    73a6:	d008      	beq.n	73ba <__aeabi_dadd+0x54e>
    73a8:	08dd      	lsrs	r5, r3, #3
    73aa:	4205      	tst	r5, r0
    73ac:	d105      	bne.n	73ba <__aeabi_dadd+0x54e>
    73ae:	08d2      	lsrs	r2, r2, #3
    73b0:	0759      	lsls	r1, r3, #29
    73b2:	4311      	orrs	r1, r2
    73b4:	000f      	movs	r7, r1
    73b6:	002c      	movs	r4, r5
    73b8:	46d8      	mov	r8, fp
    73ba:	0f7b      	lsrs	r3, r7, #29
    73bc:	00e4      	lsls	r4, r4, #3
    73be:	431c      	orrs	r4, r3
    73c0:	00ff      	lsls	r7, r7, #3
    73c2:	4e30      	ldr	r6, [pc, #192]	; (7484 <__aeabi_dadd+0x618>)
    73c4:	e5d6      	b.n	6f74 <__aeabi_dadd+0x108>
    73c6:	000c      	movs	r4, r1
    73c8:	0017      	movs	r7, r2
    73ca:	0006      	movs	r6, r0
    73cc:	e5d2      	b.n	6f74 <__aeabi_dadd+0x108>
    73ce:	2b00      	cmp	r3, #0
    73d0:	d038      	beq.n	7444 <__aeabi_dadd+0x5d8>
    73d2:	000b      	movs	r3, r1
    73d4:	4313      	orrs	r3, r2
    73d6:	d100      	bne.n	73da <__aeabi_dadd+0x56e>
    73d8:	e742      	b.n	7260 <__aeabi_dadd+0x3f4>
    73da:	08f8      	lsrs	r0, r7, #3
    73dc:	0767      	lsls	r7, r4, #29
    73de:	4307      	orrs	r7, r0
    73e0:	2080      	movs	r0, #128	; 0x80
    73e2:	08e4      	lsrs	r4, r4, #3
    73e4:	0300      	lsls	r0, r0, #12
    73e6:	4204      	tst	r4, r0
    73e8:	d0e7      	beq.n	73ba <__aeabi_dadd+0x54e>
    73ea:	08cb      	lsrs	r3, r1, #3
    73ec:	4203      	tst	r3, r0
    73ee:	d1e4      	bne.n	73ba <__aeabi_dadd+0x54e>
    73f0:	08d2      	lsrs	r2, r2, #3
    73f2:	0749      	lsls	r1, r1, #29
    73f4:	4311      	orrs	r1, r2
    73f6:	000f      	movs	r7, r1
    73f8:	001c      	movs	r4, r3
    73fa:	e7de      	b.n	73ba <__aeabi_dadd+0x54e>
    73fc:	2700      	movs	r7, #0
    73fe:	2400      	movs	r4, #0
    7400:	e5d5      	b.n	6fae <__aeabi_dadd+0x142>
    7402:	2100      	movs	r1, #0
    7404:	e76b      	b.n	72de <__aeabi_dadd+0x472>
    7406:	2500      	movs	r5, #0
    7408:	2700      	movs	r7, #0
    740a:	e5f3      	b.n	6ff4 <__aeabi_dadd+0x188>
    740c:	464e      	mov	r6, r9
    740e:	0025      	movs	r5, r4
    7410:	3e20      	subs	r6, #32
    7412:	40f5      	lsrs	r5, r6
    7414:	464b      	mov	r3, r9
    7416:	002e      	movs	r6, r5
    7418:	2b20      	cmp	r3, #32
    741a:	d02d      	beq.n	7478 <__aeabi_dadd+0x60c>
    741c:	2540      	movs	r5, #64	; 0x40
    741e:	1aed      	subs	r5, r5, r3
    7420:	40ac      	lsls	r4, r5
    7422:	4327      	orrs	r7, r4
    7424:	1e7c      	subs	r4, r7, #1
    7426:	41a7      	sbcs	r7, r4
    7428:	2400      	movs	r4, #0
    742a:	4337      	orrs	r7, r6
    742c:	e6c9      	b.n	71c2 <__aeabi_dadd+0x356>
    742e:	2480      	movs	r4, #128	; 0x80
    7430:	2500      	movs	r5, #0
    7432:	0324      	lsls	r4, r4, #12
    7434:	4e13      	ldr	r6, [pc, #76]	; (7484 <__aeabi_dadd+0x618>)
    7436:	2700      	movs	r7, #0
    7438:	e5dc      	b.n	6ff4 <__aeabi_dadd+0x188>
    743a:	4327      	orrs	r7, r4
    743c:	1e7c      	subs	r4, r7, #1
    743e:	41a7      	sbcs	r7, r4
    7440:	2400      	movs	r4, #0
    7442:	e779      	b.n	7338 <__aeabi_dadd+0x4cc>
    7444:	000c      	movs	r4, r1
    7446:	0017      	movs	r7, r2
    7448:	4e0e      	ldr	r6, [pc, #56]	; (7484 <__aeabi_dadd+0x618>)
    744a:	e593      	b.n	6f74 <__aeabi_dadd+0x108>
    744c:	000c      	movs	r4, r1
    744e:	0017      	movs	r7, r2
    7450:	e590      	b.n	6f74 <__aeabi_dadd+0x108>
    7452:	4656      	mov	r6, sl
    7454:	0023      	movs	r3, r4
    7456:	3e20      	subs	r6, #32
    7458:	40f3      	lsrs	r3, r6
    745a:	4699      	mov	r9, r3
    745c:	4653      	mov	r3, sl
    745e:	2b20      	cmp	r3, #32
    7460:	d00e      	beq.n	7480 <__aeabi_dadd+0x614>
    7462:	2340      	movs	r3, #64	; 0x40
    7464:	4656      	mov	r6, sl
    7466:	1b9b      	subs	r3, r3, r6
    7468:	409c      	lsls	r4, r3
    746a:	4327      	orrs	r7, r4
    746c:	1e7c      	subs	r4, r7, #1
    746e:	41a7      	sbcs	r7, r4
    7470:	464b      	mov	r3, r9
    7472:	2400      	movs	r4, #0
    7474:	431f      	orrs	r7, r3
    7476:	e75f      	b.n	7338 <__aeabi_dadd+0x4cc>
    7478:	2400      	movs	r4, #0
    747a:	e7d2      	b.n	7422 <__aeabi_dadd+0x5b6>
    747c:	0017      	movs	r7, r2
    747e:	e5b2      	b.n	6fe6 <__aeabi_dadd+0x17a>
    7480:	2400      	movs	r4, #0
    7482:	e7f2      	b.n	746a <__aeabi_dadd+0x5fe>
    7484:	000007ff 	.word	0x000007ff
    7488:	ff7fffff 	.word	0xff7fffff

0000748c <__aeabi_ddiv>:
    748c:	b5f0      	push	{r4, r5, r6, r7, lr}
    748e:	4657      	mov	r7, sl
    7490:	4645      	mov	r5, r8
    7492:	46de      	mov	lr, fp
    7494:	464e      	mov	r6, r9
    7496:	b5e0      	push	{r5, r6, r7, lr}
    7498:	004c      	lsls	r4, r1, #1
    749a:	030e      	lsls	r6, r1, #12
    749c:	b087      	sub	sp, #28
    749e:	4683      	mov	fp, r0
    74a0:	4692      	mov	sl, r2
    74a2:	001d      	movs	r5, r3
    74a4:	4680      	mov	r8, r0
    74a6:	0b36      	lsrs	r6, r6, #12
    74a8:	0d64      	lsrs	r4, r4, #21
    74aa:	0fcf      	lsrs	r7, r1, #31
    74ac:	2c00      	cmp	r4, #0
    74ae:	d04f      	beq.n	7550 <__aeabi_ddiv+0xc4>
    74b0:	4b6f      	ldr	r3, [pc, #444]	; (7670 <__aeabi_ddiv+0x1e4>)
    74b2:	429c      	cmp	r4, r3
    74b4:	d035      	beq.n	7522 <__aeabi_ddiv+0x96>
    74b6:	2380      	movs	r3, #128	; 0x80
    74b8:	0f42      	lsrs	r2, r0, #29
    74ba:	041b      	lsls	r3, r3, #16
    74bc:	00f6      	lsls	r6, r6, #3
    74be:	4313      	orrs	r3, r2
    74c0:	4333      	orrs	r3, r6
    74c2:	4699      	mov	r9, r3
    74c4:	00c3      	lsls	r3, r0, #3
    74c6:	4698      	mov	r8, r3
    74c8:	4b6a      	ldr	r3, [pc, #424]	; (7674 <__aeabi_ddiv+0x1e8>)
    74ca:	2600      	movs	r6, #0
    74cc:	469c      	mov	ip, r3
    74ce:	2300      	movs	r3, #0
    74d0:	4464      	add	r4, ip
    74d2:	9303      	str	r3, [sp, #12]
    74d4:	032b      	lsls	r3, r5, #12
    74d6:	0b1b      	lsrs	r3, r3, #12
    74d8:	469b      	mov	fp, r3
    74da:	006b      	lsls	r3, r5, #1
    74dc:	0fed      	lsrs	r5, r5, #31
    74de:	4650      	mov	r0, sl
    74e0:	0d5b      	lsrs	r3, r3, #21
    74e2:	9501      	str	r5, [sp, #4]
    74e4:	d05e      	beq.n	75a4 <__aeabi_ddiv+0x118>
    74e6:	4a62      	ldr	r2, [pc, #392]	; (7670 <__aeabi_ddiv+0x1e4>)
    74e8:	4293      	cmp	r3, r2
    74ea:	d053      	beq.n	7594 <__aeabi_ddiv+0x108>
    74ec:	465a      	mov	r2, fp
    74ee:	00d1      	lsls	r1, r2, #3
    74f0:	2280      	movs	r2, #128	; 0x80
    74f2:	0f40      	lsrs	r0, r0, #29
    74f4:	0412      	lsls	r2, r2, #16
    74f6:	4302      	orrs	r2, r0
    74f8:	430a      	orrs	r2, r1
    74fa:	4693      	mov	fp, r2
    74fc:	4652      	mov	r2, sl
    74fe:	00d1      	lsls	r1, r2, #3
    7500:	4a5c      	ldr	r2, [pc, #368]	; (7674 <__aeabi_ddiv+0x1e8>)
    7502:	4694      	mov	ip, r2
    7504:	2200      	movs	r2, #0
    7506:	4463      	add	r3, ip
    7508:	0038      	movs	r0, r7
    750a:	4068      	eors	r0, r5
    750c:	4684      	mov	ip, r0
    750e:	9002      	str	r0, [sp, #8]
    7510:	1ae4      	subs	r4, r4, r3
    7512:	4316      	orrs	r6, r2
    7514:	2e0f      	cmp	r6, #15
    7516:	d900      	bls.n	751a <__aeabi_ddiv+0x8e>
    7518:	e0b4      	b.n	7684 <__aeabi_ddiv+0x1f8>
    751a:	4b57      	ldr	r3, [pc, #348]	; (7678 <__aeabi_ddiv+0x1ec>)
    751c:	00b6      	lsls	r6, r6, #2
    751e:	599b      	ldr	r3, [r3, r6]
    7520:	469f      	mov	pc, r3
    7522:	0003      	movs	r3, r0
    7524:	4333      	orrs	r3, r6
    7526:	4699      	mov	r9, r3
    7528:	d16c      	bne.n	7604 <__aeabi_ddiv+0x178>
    752a:	2300      	movs	r3, #0
    752c:	4698      	mov	r8, r3
    752e:	3302      	adds	r3, #2
    7530:	2608      	movs	r6, #8
    7532:	9303      	str	r3, [sp, #12]
    7534:	e7ce      	b.n	74d4 <__aeabi_ddiv+0x48>
    7536:	46cb      	mov	fp, r9
    7538:	4641      	mov	r1, r8
    753a:	9a03      	ldr	r2, [sp, #12]
    753c:	9701      	str	r7, [sp, #4]
    753e:	2a02      	cmp	r2, #2
    7540:	d165      	bne.n	760e <__aeabi_ddiv+0x182>
    7542:	9b01      	ldr	r3, [sp, #4]
    7544:	4c4a      	ldr	r4, [pc, #296]	; (7670 <__aeabi_ddiv+0x1e4>)
    7546:	469c      	mov	ip, r3
    7548:	2300      	movs	r3, #0
    754a:	2200      	movs	r2, #0
    754c:	4698      	mov	r8, r3
    754e:	e06b      	b.n	7628 <__aeabi_ddiv+0x19c>
    7550:	0003      	movs	r3, r0
    7552:	4333      	orrs	r3, r6
    7554:	4699      	mov	r9, r3
    7556:	d04e      	beq.n	75f6 <__aeabi_ddiv+0x16a>
    7558:	2e00      	cmp	r6, #0
    755a:	d100      	bne.n	755e <__aeabi_ddiv+0xd2>
    755c:	e1bc      	b.n	78d8 <__aeabi_ddiv+0x44c>
    755e:	0030      	movs	r0, r6
    7560:	f001 f9a6 	bl	88b0 <__clzsi2>
    7564:	0003      	movs	r3, r0
    7566:	3b0b      	subs	r3, #11
    7568:	2b1c      	cmp	r3, #28
    756a:	dd00      	ble.n	756e <__aeabi_ddiv+0xe2>
    756c:	e1ac      	b.n	78c8 <__aeabi_ddiv+0x43c>
    756e:	221d      	movs	r2, #29
    7570:	1ad3      	subs	r3, r2, r3
    7572:	465a      	mov	r2, fp
    7574:	0001      	movs	r1, r0
    7576:	40da      	lsrs	r2, r3
    7578:	3908      	subs	r1, #8
    757a:	408e      	lsls	r6, r1
    757c:	0013      	movs	r3, r2
    757e:	4333      	orrs	r3, r6
    7580:	4699      	mov	r9, r3
    7582:	465b      	mov	r3, fp
    7584:	408b      	lsls	r3, r1
    7586:	4698      	mov	r8, r3
    7588:	2300      	movs	r3, #0
    758a:	4c3c      	ldr	r4, [pc, #240]	; (767c <__aeabi_ddiv+0x1f0>)
    758c:	2600      	movs	r6, #0
    758e:	1a24      	subs	r4, r4, r0
    7590:	9303      	str	r3, [sp, #12]
    7592:	e79f      	b.n	74d4 <__aeabi_ddiv+0x48>
    7594:	4651      	mov	r1, sl
    7596:	465a      	mov	r2, fp
    7598:	4311      	orrs	r1, r2
    759a:	d129      	bne.n	75f0 <__aeabi_ddiv+0x164>
    759c:	2200      	movs	r2, #0
    759e:	4693      	mov	fp, r2
    75a0:	3202      	adds	r2, #2
    75a2:	e7b1      	b.n	7508 <__aeabi_ddiv+0x7c>
    75a4:	4659      	mov	r1, fp
    75a6:	4301      	orrs	r1, r0
    75a8:	d01e      	beq.n	75e8 <__aeabi_ddiv+0x15c>
    75aa:	465b      	mov	r3, fp
    75ac:	2b00      	cmp	r3, #0
    75ae:	d100      	bne.n	75b2 <__aeabi_ddiv+0x126>
    75b0:	e19e      	b.n	78f0 <__aeabi_ddiv+0x464>
    75b2:	4658      	mov	r0, fp
    75b4:	f001 f97c 	bl	88b0 <__clzsi2>
    75b8:	0003      	movs	r3, r0
    75ba:	3b0b      	subs	r3, #11
    75bc:	2b1c      	cmp	r3, #28
    75be:	dd00      	ble.n	75c2 <__aeabi_ddiv+0x136>
    75c0:	e18f      	b.n	78e2 <__aeabi_ddiv+0x456>
    75c2:	0002      	movs	r2, r0
    75c4:	4659      	mov	r1, fp
    75c6:	3a08      	subs	r2, #8
    75c8:	4091      	lsls	r1, r2
    75ca:	468b      	mov	fp, r1
    75cc:	211d      	movs	r1, #29
    75ce:	1acb      	subs	r3, r1, r3
    75d0:	4651      	mov	r1, sl
    75d2:	40d9      	lsrs	r1, r3
    75d4:	000b      	movs	r3, r1
    75d6:	4659      	mov	r1, fp
    75d8:	430b      	orrs	r3, r1
    75da:	4651      	mov	r1, sl
    75dc:	469b      	mov	fp, r3
    75de:	4091      	lsls	r1, r2
    75e0:	4b26      	ldr	r3, [pc, #152]	; (767c <__aeabi_ddiv+0x1f0>)
    75e2:	2200      	movs	r2, #0
    75e4:	1a1b      	subs	r3, r3, r0
    75e6:	e78f      	b.n	7508 <__aeabi_ddiv+0x7c>
    75e8:	2300      	movs	r3, #0
    75ea:	2201      	movs	r2, #1
    75ec:	469b      	mov	fp, r3
    75ee:	e78b      	b.n	7508 <__aeabi_ddiv+0x7c>
    75f0:	4651      	mov	r1, sl
    75f2:	2203      	movs	r2, #3
    75f4:	e788      	b.n	7508 <__aeabi_ddiv+0x7c>
    75f6:	2300      	movs	r3, #0
    75f8:	4698      	mov	r8, r3
    75fa:	3301      	adds	r3, #1
    75fc:	2604      	movs	r6, #4
    75fe:	2400      	movs	r4, #0
    7600:	9303      	str	r3, [sp, #12]
    7602:	e767      	b.n	74d4 <__aeabi_ddiv+0x48>
    7604:	2303      	movs	r3, #3
    7606:	46b1      	mov	r9, r6
    7608:	9303      	str	r3, [sp, #12]
    760a:	260c      	movs	r6, #12
    760c:	e762      	b.n	74d4 <__aeabi_ddiv+0x48>
    760e:	2a03      	cmp	r2, #3
    7610:	d100      	bne.n	7614 <__aeabi_ddiv+0x188>
    7612:	e25c      	b.n	7ace <__aeabi_ddiv+0x642>
    7614:	9b01      	ldr	r3, [sp, #4]
    7616:	2a01      	cmp	r2, #1
    7618:	d000      	beq.n	761c <__aeabi_ddiv+0x190>
    761a:	e1e4      	b.n	79e6 <__aeabi_ddiv+0x55a>
    761c:	4013      	ands	r3, r2
    761e:	469c      	mov	ip, r3
    7620:	2300      	movs	r3, #0
    7622:	2400      	movs	r4, #0
    7624:	2200      	movs	r2, #0
    7626:	4698      	mov	r8, r3
    7628:	2100      	movs	r1, #0
    762a:	0312      	lsls	r2, r2, #12
    762c:	0b13      	lsrs	r3, r2, #12
    762e:	0d0a      	lsrs	r2, r1, #20
    7630:	0512      	lsls	r2, r2, #20
    7632:	431a      	orrs	r2, r3
    7634:	0523      	lsls	r3, r4, #20
    7636:	4c12      	ldr	r4, [pc, #72]	; (7680 <__aeabi_ddiv+0x1f4>)
    7638:	4640      	mov	r0, r8
    763a:	4022      	ands	r2, r4
    763c:	4313      	orrs	r3, r2
    763e:	4662      	mov	r2, ip
    7640:	005b      	lsls	r3, r3, #1
    7642:	07d2      	lsls	r2, r2, #31
    7644:	085b      	lsrs	r3, r3, #1
    7646:	4313      	orrs	r3, r2
    7648:	0019      	movs	r1, r3
    764a:	b007      	add	sp, #28
    764c:	bc3c      	pop	{r2, r3, r4, r5}
    764e:	4690      	mov	r8, r2
    7650:	4699      	mov	r9, r3
    7652:	46a2      	mov	sl, r4
    7654:	46ab      	mov	fp, r5
    7656:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7658:	2300      	movs	r3, #0
    765a:	2280      	movs	r2, #128	; 0x80
    765c:	469c      	mov	ip, r3
    765e:	0312      	lsls	r2, r2, #12
    7660:	4698      	mov	r8, r3
    7662:	4c03      	ldr	r4, [pc, #12]	; (7670 <__aeabi_ddiv+0x1e4>)
    7664:	e7e0      	b.n	7628 <__aeabi_ddiv+0x19c>
    7666:	2300      	movs	r3, #0
    7668:	4c01      	ldr	r4, [pc, #4]	; (7670 <__aeabi_ddiv+0x1e4>)
    766a:	2200      	movs	r2, #0
    766c:	4698      	mov	r8, r3
    766e:	e7db      	b.n	7628 <__aeabi_ddiv+0x19c>
    7670:	000007ff 	.word	0x000007ff
    7674:	fffffc01 	.word	0xfffffc01
    7678:	000096b8 	.word	0x000096b8
    767c:	fffffc0d 	.word	0xfffffc0d
    7680:	800fffff 	.word	0x800fffff
    7684:	45d9      	cmp	r9, fp
    7686:	d900      	bls.n	768a <__aeabi_ddiv+0x1fe>
    7688:	e139      	b.n	78fe <__aeabi_ddiv+0x472>
    768a:	d100      	bne.n	768e <__aeabi_ddiv+0x202>
    768c:	e134      	b.n	78f8 <__aeabi_ddiv+0x46c>
    768e:	2300      	movs	r3, #0
    7690:	4646      	mov	r6, r8
    7692:	464d      	mov	r5, r9
    7694:	469a      	mov	sl, r3
    7696:	3c01      	subs	r4, #1
    7698:	465b      	mov	r3, fp
    769a:	0e0a      	lsrs	r2, r1, #24
    769c:	021b      	lsls	r3, r3, #8
    769e:	431a      	orrs	r2, r3
    76a0:	020b      	lsls	r3, r1, #8
    76a2:	0c17      	lsrs	r7, r2, #16
    76a4:	9303      	str	r3, [sp, #12]
    76a6:	0413      	lsls	r3, r2, #16
    76a8:	0c1b      	lsrs	r3, r3, #16
    76aa:	0039      	movs	r1, r7
    76ac:	0028      	movs	r0, r5
    76ae:	4690      	mov	r8, r2
    76b0:	9301      	str	r3, [sp, #4]
    76b2:	f7fe fdd9 	bl	6268 <__udivsi3>
    76b6:	0002      	movs	r2, r0
    76b8:	9b01      	ldr	r3, [sp, #4]
    76ba:	4683      	mov	fp, r0
    76bc:	435a      	muls	r2, r3
    76be:	0028      	movs	r0, r5
    76c0:	0039      	movs	r1, r7
    76c2:	4691      	mov	r9, r2
    76c4:	f7fe fe56 	bl	6374 <__aeabi_uidivmod>
    76c8:	0c35      	lsrs	r5, r6, #16
    76ca:	0409      	lsls	r1, r1, #16
    76cc:	430d      	orrs	r5, r1
    76ce:	45a9      	cmp	r9, r5
    76d0:	d90d      	bls.n	76ee <__aeabi_ddiv+0x262>
    76d2:	465b      	mov	r3, fp
    76d4:	4445      	add	r5, r8
    76d6:	3b01      	subs	r3, #1
    76d8:	45a8      	cmp	r8, r5
    76da:	d900      	bls.n	76de <__aeabi_ddiv+0x252>
    76dc:	e13a      	b.n	7954 <__aeabi_ddiv+0x4c8>
    76de:	45a9      	cmp	r9, r5
    76e0:	d800      	bhi.n	76e4 <__aeabi_ddiv+0x258>
    76e2:	e137      	b.n	7954 <__aeabi_ddiv+0x4c8>
    76e4:	2302      	movs	r3, #2
    76e6:	425b      	negs	r3, r3
    76e8:	469c      	mov	ip, r3
    76ea:	4445      	add	r5, r8
    76ec:	44e3      	add	fp, ip
    76ee:	464b      	mov	r3, r9
    76f0:	1aeb      	subs	r3, r5, r3
    76f2:	0039      	movs	r1, r7
    76f4:	0018      	movs	r0, r3
    76f6:	9304      	str	r3, [sp, #16]
    76f8:	f7fe fdb6 	bl	6268 <__udivsi3>
    76fc:	9b01      	ldr	r3, [sp, #4]
    76fe:	0005      	movs	r5, r0
    7700:	4343      	muls	r3, r0
    7702:	0039      	movs	r1, r7
    7704:	9804      	ldr	r0, [sp, #16]
    7706:	4699      	mov	r9, r3
    7708:	f7fe fe34 	bl	6374 <__aeabi_uidivmod>
    770c:	0433      	lsls	r3, r6, #16
    770e:	0409      	lsls	r1, r1, #16
    7710:	0c1b      	lsrs	r3, r3, #16
    7712:	430b      	orrs	r3, r1
    7714:	4599      	cmp	r9, r3
    7716:	d909      	bls.n	772c <__aeabi_ddiv+0x2a0>
    7718:	4443      	add	r3, r8
    771a:	1e6a      	subs	r2, r5, #1
    771c:	4598      	cmp	r8, r3
    771e:	d900      	bls.n	7722 <__aeabi_ddiv+0x296>
    7720:	e11a      	b.n	7958 <__aeabi_ddiv+0x4cc>
    7722:	4599      	cmp	r9, r3
    7724:	d800      	bhi.n	7728 <__aeabi_ddiv+0x29c>
    7726:	e117      	b.n	7958 <__aeabi_ddiv+0x4cc>
    7728:	3d02      	subs	r5, #2
    772a:	4443      	add	r3, r8
    772c:	464a      	mov	r2, r9
    772e:	1a9b      	subs	r3, r3, r2
    7730:	465a      	mov	r2, fp
    7732:	0412      	lsls	r2, r2, #16
    7734:	432a      	orrs	r2, r5
    7736:	9903      	ldr	r1, [sp, #12]
    7738:	4693      	mov	fp, r2
    773a:	0c10      	lsrs	r0, r2, #16
    773c:	0c0a      	lsrs	r2, r1, #16
    773e:	4691      	mov	r9, r2
    7740:	0409      	lsls	r1, r1, #16
    7742:	465a      	mov	r2, fp
    7744:	0c09      	lsrs	r1, r1, #16
    7746:	464e      	mov	r6, r9
    7748:	000d      	movs	r5, r1
    774a:	0412      	lsls	r2, r2, #16
    774c:	0c12      	lsrs	r2, r2, #16
    774e:	4345      	muls	r5, r0
    7750:	9105      	str	r1, [sp, #20]
    7752:	4351      	muls	r1, r2
    7754:	4372      	muls	r2, r6
    7756:	4370      	muls	r0, r6
    7758:	1952      	adds	r2, r2, r5
    775a:	0c0e      	lsrs	r6, r1, #16
    775c:	18b2      	adds	r2, r6, r2
    775e:	4295      	cmp	r5, r2
    7760:	d903      	bls.n	776a <__aeabi_ddiv+0x2de>
    7762:	2580      	movs	r5, #128	; 0x80
    7764:	026d      	lsls	r5, r5, #9
    7766:	46ac      	mov	ip, r5
    7768:	4460      	add	r0, ip
    776a:	0c15      	lsrs	r5, r2, #16
    776c:	0409      	lsls	r1, r1, #16
    776e:	0412      	lsls	r2, r2, #16
    7770:	0c09      	lsrs	r1, r1, #16
    7772:	1828      	adds	r0, r5, r0
    7774:	1852      	adds	r2, r2, r1
    7776:	4283      	cmp	r3, r0
    7778:	d200      	bcs.n	777c <__aeabi_ddiv+0x2f0>
    777a:	e0ce      	b.n	791a <__aeabi_ddiv+0x48e>
    777c:	d100      	bne.n	7780 <__aeabi_ddiv+0x2f4>
    777e:	e0c8      	b.n	7912 <__aeabi_ddiv+0x486>
    7780:	1a1d      	subs	r5, r3, r0
    7782:	4653      	mov	r3, sl
    7784:	1a9e      	subs	r6, r3, r2
    7786:	45b2      	cmp	sl, r6
    7788:	4192      	sbcs	r2, r2
    778a:	4252      	negs	r2, r2
    778c:	1aab      	subs	r3, r5, r2
    778e:	469a      	mov	sl, r3
    7790:	4598      	cmp	r8, r3
    7792:	d100      	bne.n	7796 <__aeabi_ddiv+0x30a>
    7794:	e117      	b.n	79c6 <__aeabi_ddiv+0x53a>
    7796:	0039      	movs	r1, r7
    7798:	0018      	movs	r0, r3
    779a:	f7fe fd65 	bl	6268 <__udivsi3>
    779e:	9b01      	ldr	r3, [sp, #4]
    77a0:	0005      	movs	r5, r0
    77a2:	4343      	muls	r3, r0
    77a4:	0039      	movs	r1, r7
    77a6:	4650      	mov	r0, sl
    77a8:	9304      	str	r3, [sp, #16]
    77aa:	f7fe fde3 	bl	6374 <__aeabi_uidivmod>
    77ae:	9804      	ldr	r0, [sp, #16]
    77b0:	040b      	lsls	r3, r1, #16
    77b2:	0c31      	lsrs	r1, r6, #16
    77b4:	4319      	orrs	r1, r3
    77b6:	4288      	cmp	r0, r1
    77b8:	d909      	bls.n	77ce <__aeabi_ddiv+0x342>
    77ba:	4441      	add	r1, r8
    77bc:	1e6b      	subs	r3, r5, #1
    77be:	4588      	cmp	r8, r1
    77c0:	d900      	bls.n	77c4 <__aeabi_ddiv+0x338>
    77c2:	e107      	b.n	79d4 <__aeabi_ddiv+0x548>
    77c4:	4288      	cmp	r0, r1
    77c6:	d800      	bhi.n	77ca <__aeabi_ddiv+0x33e>
    77c8:	e104      	b.n	79d4 <__aeabi_ddiv+0x548>
    77ca:	3d02      	subs	r5, #2
    77cc:	4441      	add	r1, r8
    77ce:	9b04      	ldr	r3, [sp, #16]
    77d0:	1acb      	subs	r3, r1, r3
    77d2:	0018      	movs	r0, r3
    77d4:	0039      	movs	r1, r7
    77d6:	9304      	str	r3, [sp, #16]
    77d8:	f7fe fd46 	bl	6268 <__udivsi3>
    77dc:	9b01      	ldr	r3, [sp, #4]
    77de:	4682      	mov	sl, r0
    77e0:	4343      	muls	r3, r0
    77e2:	0039      	movs	r1, r7
    77e4:	9804      	ldr	r0, [sp, #16]
    77e6:	9301      	str	r3, [sp, #4]
    77e8:	f7fe fdc4 	bl	6374 <__aeabi_uidivmod>
    77ec:	9801      	ldr	r0, [sp, #4]
    77ee:	040b      	lsls	r3, r1, #16
    77f0:	0431      	lsls	r1, r6, #16
    77f2:	0c09      	lsrs	r1, r1, #16
    77f4:	4319      	orrs	r1, r3
    77f6:	4288      	cmp	r0, r1
    77f8:	d90d      	bls.n	7816 <__aeabi_ddiv+0x38a>
    77fa:	4653      	mov	r3, sl
    77fc:	4441      	add	r1, r8
    77fe:	3b01      	subs	r3, #1
    7800:	4588      	cmp	r8, r1
    7802:	d900      	bls.n	7806 <__aeabi_ddiv+0x37a>
    7804:	e0e8      	b.n	79d8 <__aeabi_ddiv+0x54c>
    7806:	4288      	cmp	r0, r1
    7808:	d800      	bhi.n	780c <__aeabi_ddiv+0x380>
    780a:	e0e5      	b.n	79d8 <__aeabi_ddiv+0x54c>
    780c:	2302      	movs	r3, #2
    780e:	425b      	negs	r3, r3
    7810:	469c      	mov	ip, r3
    7812:	4441      	add	r1, r8
    7814:	44e2      	add	sl, ip
    7816:	9b01      	ldr	r3, [sp, #4]
    7818:	042d      	lsls	r5, r5, #16
    781a:	1ace      	subs	r6, r1, r3
    781c:	4651      	mov	r1, sl
    781e:	4329      	orrs	r1, r5
    7820:	9d05      	ldr	r5, [sp, #20]
    7822:	464f      	mov	r7, r9
    7824:	002a      	movs	r2, r5
    7826:	040b      	lsls	r3, r1, #16
    7828:	0c08      	lsrs	r0, r1, #16
    782a:	0c1b      	lsrs	r3, r3, #16
    782c:	435a      	muls	r2, r3
    782e:	4345      	muls	r5, r0
    7830:	437b      	muls	r3, r7
    7832:	4378      	muls	r0, r7
    7834:	195b      	adds	r3, r3, r5
    7836:	0c17      	lsrs	r7, r2, #16
    7838:	18fb      	adds	r3, r7, r3
    783a:	429d      	cmp	r5, r3
    783c:	d903      	bls.n	7846 <__aeabi_ddiv+0x3ba>
    783e:	2580      	movs	r5, #128	; 0x80
    7840:	026d      	lsls	r5, r5, #9
    7842:	46ac      	mov	ip, r5
    7844:	4460      	add	r0, ip
    7846:	0c1d      	lsrs	r5, r3, #16
    7848:	0412      	lsls	r2, r2, #16
    784a:	041b      	lsls	r3, r3, #16
    784c:	0c12      	lsrs	r2, r2, #16
    784e:	1828      	adds	r0, r5, r0
    7850:	189b      	adds	r3, r3, r2
    7852:	4286      	cmp	r6, r0
    7854:	d200      	bcs.n	7858 <__aeabi_ddiv+0x3cc>
    7856:	e093      	b.n	7980 <__aeabi_ddiv+0x4f4>
    7858:	d100      	bne.n	785c <__aeabi_ddiv+0x3d0>
    785a:	e08e      	b.n	797a <__aeabi_ddiv+0x4ee>
    785c:	2301      	movs	r3, #1
    785e:	4319      	orrs	r1, r3
    7860:	4ba0      	ldr	r3, [pc, #640]	; (7ae4 <__aeabi_ddiv+0x658>)
    7862:	18e3      	adds	r3, r4, r3
    7864:	2b00      	cmp	r3, #0
    7866:	dc00      	bgt.n	786a <__aeabi_ddiv+0x3de>
    7868:	e099      	b.n	799e <__aeabi_ddiv+0x512>
    786a:	074a      	lsls	r2, r1, #29
    786c:	d000      	beq.n	7870 <__aeabi_ddiv+0x3e4>
    786e:	e09e      	b.n	79ae <__aeabi_ddiv+0x522>
    7870:	465a      	mov	r2, fp
    7872:	01d2      	lsls	r2, r2, #7
    7874:	d506      	bpl.n	7884 <__aeabi_ddiv+0x3f8>
    7876:	465a      	mov	r2, fp
    7878:	4b9b      	ldr	r3, [pc, #620]	; (7ae8 <__aeabi_ddiv+0x65c>)
    787a:	401a      	ands	r2, r3
    787c:	2380      	movs	r3, #128	; 0x80
    787e:	4693      	mov	fp, r2
    7880:	00db      	lsls	r3, r3, #3
    7882:	18e3      	adds	r3, r4, r3
    7884:	4a99      	ldr	r2, [pc, #612]	; (7aec <__aeabi_ddiv+0x660>)
    7886:	4293      	cmp	r3, r2
    7888:	dd68      	ble.n	795c <__aeabi_ddiv+0x4d0>
    788a:	2301      	movs	r3, #1
    788c:	9a02      	ldr	r2, [sp, #8]
    788e:	4c98      	ldr	r4, [pc, #608]	; (7af0 <__aeabi_ddiv+0x664>)
    7890:	401a      	ands	r2, r3
    7892:	2300      	movs	r3, #0
    7894:	4694      	mov	ip, r2
    7896:	4698      	mov	r8, r3
    7898:	2200      	movs	r2, #0
    789a:	e6c5      	b.n	7628 <__aeabi_ddiv+0x19c>
    789c:	2280      	movs	r2, #128	; 0x80
    789e:	464b      	mov	r3, r9
    78a0:	0312      	lsls	r2, r2, #12
    78a2:	4213      	tst	r3, r2
    78a4:	d00a      	beq.n	78bc <__aeabi_ddiv+0x430>
    78a6:	465b      	mov	r3, fp
    78a8:	4213      	tst	r3, r2
    78aa:	d106      	bne.n	78ba <__aeabi_ddiv+0x42e>
    78ac:	431a      	orrs	r2, r3
    78ae:	0312      	lsls	r2, r2, #12
    78b0:	0b12      	lsrs	r2, r2, #12
    78b2:	46ac      	mov	ip, r5
    78b4:	4688      	mov	r8, r1
    78b6:	4c8e      	ldr	r4, [pc, #568]	; (7af0 <__aeabi_ddiv+0x664>)
    78b8:	e6b6      	b.n	7628 <__aeabi_ddiv+0x19c>
    78ba:	464b      	mov	r3, r9
    78bc:	431a      	orrs	r2, r3
    78be:	0312      	lsls	r2, r2, #12
    78c0:	0b12      	lsrs	r2, r2, #12
    78c2:	46bc      	mov	ip, r7
    78c4:	4c8a      	ldr	r4, [pc, #552]	; (7af0 <__aeabi_ddiv+0x664>)
    78c6:	e6af      	b.n	7628 <__aeabi_ddiv+0x19c>
    78c8:	0003      	movs	r3, r0
    78ca:	465a      	mov	r2, fp
    78cc:	3b28      	subs	r3, #40	; 0x28
    78ce:	409a      	lsls	r2, r3
    78d0:	2300      	movs	r3, #0
    78d2:	4691      	mov	r9, r2
    78d4:	4698      	mov	r8, r3
    78d6:	e657      	b.n	7588 <__aeabi_ddiv+0xfc>
    78d8:	4658      	mov	r0, fp
    78da:	f000 ffe9 	bl	88b0 <__clzsi2>
    78de:	3020      	adds	r0, #32
    78e0:	e640      	b.n	7564 <__aeabi_ddiv+0xd8>
    78e2:	0003      	movs	r3, r0
    78e4:	4652      	mov	r2, sl
    78e6:	3b28      	subs	r3, #40	; 0x28
    78e8:	409a      	lsls	r2, r3
    78ea:	2100      	movs	r1, #0
    78ec:	4693      	mov	fp, r2
    78ee:	e677      	b.n	75e0 <__aeabi_ddiv+0x154>
    78f0:	f000 ffde 	bl	88b0 <__clzsi2>
    78f4:	3020      	adds	r0, #32
    78f6:	e65f      	b.n	75b8 <__aeabi_ddiv+0x12c>
    78f8:	4588      	cmp	r8, r1
    78fa:	d200      	bcs.n	78fe <__aeabi_ddiv+0x472>
    78fc:	e6c7      	b.n	768e <__aeabi_ddiv+0x202>
    78fe:	464b      	mov	r3, r9
    7900:	07de      	lsls	r6, r3, #31
    7902:	085d      	lsrs	r5, r3, #1
    7904:	4643      	mov	r3, r8
    7906:	085b      	lsrs	r3, r3, #1
    7908:	431e      	orrs	r6, r3
    790a:	4643      	mov	r3, r8
    790c:	07db      	lsls	r3, r3, #31
    790e:	469a      	mov	sl, r3
    7910:	e6c2      	b.n	7698 <__aeabi_ddiv+0x20c>
    7912:	2500      	movs	r5, #0
    7914:	4592      	cmp	sl, r2
    7916:	d300      	bcc.n	791a <__aeabi_ddiv+0x48e>
    7918:	e733      	b.n	7782 <__aeabi_ddiv+0x2f6>
    791a:	9e03      	ldr	r6, [sp, #12]
    791c:	4659      	mov	r1, fp
    791e:	46b4      	mov	ip, r6
    7920:	44e2      	add	sl, ip
    7922:	45b2      	cmp	sl, r6
    7924:	41ad      	sbcs	r5, r5
    7926:	426d      	negs	r5, r5
    7928:	4445      	add	r5, r8
    792a:	18eb      	adds	r3, r5, r3
    792c:	3901      	subs	r1, #1
    792e:	4598      	cmp	r8, r3
    7930:	d207      	bcs.n	7942 <__aeabi_ddiv+0x4b6>
    7932:	4298      	cmp	r0, r3
    7934:	d900      	bls.n	7938 <__aeabi_ddiv+0x4ac>
    7936:	e07f      	b.n	7a38 <__aeabi_ddiv+0x5ac>
    7938:	d100      	bne.n	793c <__aeabi_ddiv+0x4b0>
    793a:	e0bc      	b.n	7ab6 <__aeabi_ddiv+0x62a>
    793c:	1a1d      	subs	r5, r3, r0
    793e:	468b      	mov	fp, r1
    7940:	e71f      	b.n	7782 <__aeabi_ddiv+0x2f6>
    7942:	4598      	cmp	r8, r3
    7944:	d1fa      	bne.n	793c <__aeabi_ddiv+0x4b0>
    7946:	9d03      	ldr	r5, [sp, #12]
    7948:	4555      	cmp	r5, sl
    794a:	d9f2      	bls.n	7932 <__aeabi_ddiv+0x4a6>
    794c:	4643      	mov	r3, r8
    794e:	468b      	mov	fp, r1
    7950:	1a1d      	subs	r5, r3, r0
    7952:	e716      	b.n	7782 <__aeabi_ddiv+0x2f6>
    7954:	469b      	mov	fp, r3
    7956:	e6ca      	b.n	76ee <__aeabi_ddiv+0x262>
    7958:	0015      	movs	r5, r2
    795a:	e6e7      	b.n	772c <__aeabi_ddiv+0x2a0>
    795c:	465a      	mov	r2, fp
    795e:	08c9      	lsrs	r1, r1, #3
    7960:	0752      	lsls	r2, r2, #29
    7962:	430a      	orrs	r2, r1
    7964:	055b      	lsls	r3, r3, #21
    7966:	4690      	mov	r8, r2
    7968:	0d5c      	lsrs	r4, r3, #21
    796a:	465a      	mov	r2, fp
    796c:	2301      	movs	r3, #1
    796e:	9902      	ldr	r1, [sp, #8]
    7970:	0252      	lsls	r2, r2, #9
    7972:	4019      	ands	r1, r3
    7974:	0b12      	lsrs	r2, r2, #12
    7976:	468c      	mov	ip, r1
    7978:	e656      	b.n	7628 <__aeabi_ddiv+0x19c>
    797a:	2b00      	cmp	r3, #0
    797c:	d100      	bne.n	7980 <__aeabi_ddiv+0x4f4>
    797e:	e76f      	b.n	7860 <__aeabi_ddiv+0x3d4>
    7980:	4446      	add	r6, r8
    7982:	1e4a      	subs	r2, r1, #1
    7984:	45b0      	cmp	r8, r6
    7986:	d929      	bls.n	79dc <__aeabi_ddiv+0x550>
    7988:	0011      	movs	r1, r2
    798a:	4286      	cmp	r6, r0
    798c:	d000      	beq.n	7990 <__aeabi_ddiv+0x504>
    798e:	e765      	b.n	785c <__aeabi_ddiv+0x3d0>
    7990:	9a03      	ldr	r2, [sp, #12]
    7992:	4293      	cmp	r3, r2
    7994:	d000      	beq.n	7998 <__aeabi_ddiv+0x50c>
    7996:	e761      	b.n	785c <__aeabi_ddiv+0x3d0>
    7998:	e762      	b.n	7860 <__aeabi_ddiv+0x3d4>
    799a:	2101      	movs	r1, #1
    799c:	4249      	negs	r1, r1
    799e:	2001      	movs	r0, #1
    79a0:	1ac2      	subs	r2, r0, r3
    79a2:	2a38      	cmp	r2, #56	; 0x38
    79a4:	dd21      	ble.n	79ea <__aeabi_ddiv+0x55e>
    79a6:	9b02      	ldr	r3, [sp, #8]
    79a8:	4003      	ands	r3, r0
    79aa:	469c      	mov	ip, r3
    79ac:	e638      	b.n	7620 <__aeabi_ddiv+0x194>
    79ae:	220f      	movs	r2, #15
    79b0:	400a      	ands	r2, r1
    79b2:	2a04      	cmp	r2, #4
    79b4:	d100      	bne.n	79b8 <__aeabi_ddiv+0x52c>
    79b6:	e75b      	b.n	7870 <__aeabi_ddiv+0x3e4>
    79b8:	000a      	movs	r2, r1
    79ba:	1d11      	adds	r1, r2, #4
    79bc:	4291      	cmp	r1, r2
    79be:	4192      	sbcs	r2, r2
    79c0:	4252      	negs	r2, r2
    79c2:	4493      	add	fp, r2
    79c4:	e754      	b.n	7870 <__aeabi_ddiv+0x3e4>
    79c6:	4b47      	ldr	r3, [pc, #284]	; (7ae4 <__aeabi_ddiv+0x658>)
    79c8:	18e3      	adds	r3, r4, r3
    79ca:	2b00      	cmp	r3, #0
    79cc:	dde5      	ble.n	799a <__aeabi_ddiv+0x50e>
    79ce:	2201      	movs	r2, #1
    79d0:	4252      	negs	r2, r2
    79d2:	e7f2      	b.n	79ba <__aeabi_ddiv+0x52e>
    79d4:	001d      	movs	r5, r3
    79d6:	e6fa      	b.n	77ce <__aeabi_ddiv+0x342>
    79d8:	469a      	mov	sl, r3
    79da:	e71c      	b.n	7816 <__aeabi_ddiv+0x38a>
    79dc:	42b0      	cmp	r0, r6
    79de:	d839      	bhi.n	7a54 <__aeabi_ddiv+0x5c8>
    79e0:	d06e      	beq.n	7ac0 <__aeabi_ddiv+0x634>
    79e2:	0011      	movs	r1, r2
    79e4:	e73a      	b.n	785c <__aeabi_ddiv+0x3d0>
    79e6:	9302      	str	r3, [sp, #8]
    79e8:	e73a      	b.n	7860 <__aeabi_ddiv+0x3d4>
    79ea:	2a1f      	cmp	r2, #31
    79ec:	dc3c      	bgt.n	7a68 <__aeabi_ddiv+0x5dc>
    79ee:	2320      	movs	r3, #32
    79f0:	1a9b      	subs	r3, r3, r2
    79f2:	000c      	movs	r4, r1
    79f4:	4658      	mov	r0, fp
    79f6:	4099      	lsls	r1, r3
    79f8:	4098      	lsls	r0, r3
    79fa:	1e4b      	subs	r3, r1, #1
    79fc:	4199      	sbcs	r1, r3
    79fe:	465b      	mov	r3, fp
    7a00:	40d4      	lsrs	r4, r2
    7a02:	40d3      	lsrs	r3, r2
    7a04:	4320      	orrs	r0, r4
    7a06:	4308      	orrs	r0, r1
    7a08:	001a      	movs	r2, r3
    7a0a:	0743      	lsls	r3, r0, #29
    7a0c:	d009      	beq.n	7a22 <__aeabi_ddiv+0x596>
    7a0e:	230f      	movs	r3, #15
    7a10:	4003      	ands	r3, r0
    7a12:	2b04      	cmp	r3, #4
    7a14:	d005      	beq.n	7a22 <__aeabi_ddiv+0x596>
    7a16:	0001      	movs	r1, r0
    7a18:	1d08      	adds	r0, r1, #4
    7a1a:	4288      	cmp	r0, r1
    7a1c:	419b      	sbcs	r3, r3
    7a1e:	425b      	negs	r3, r3
    7a20:	18d2      	adds	r2, r2, r3
    7a22:	0213      	lsls	r3, r2, #8
    7a24:	d53a      	bpl.n	7a9c <__aeabi_ddiv+0x610>
    7a26:	2301      	movs	r3, #1
    7a28:	9a02      	ldr	r2, [sp, #8]
    7a2a:	2401      	movs	r4, #1
    7a2c:	401a      	ands	r2, r3
    7a2e:	2300      	movs	r3, #0
    7a30:	4694      	mov	ip, r2
    7a32:	4698      	mov	r8, r3
    7a34:	2200      	movs	r2, #0
    7a36:	e5f7      	b.n	7628 <__aeabi_ddiv+0x19c>
    7a38:	2102      	movs	r1, #2
    7a3a:	4249      	negs	r1, r1
    7a3c:	468c      	mov	ip, r1
    7a3e:	9d03      	ldr	r5, [sp, #12]
    7a40:	44e3      	add	fp, ip
    7a42:	46ac      	mov	ip, r5
    7a44:	44e2      	add	sl, ip
    7a46:	45aa      	cmp	sl, r5
    7a48:	41ad      	sbcs	r5, r5
    7a4a:	426d      	negs	r5, r5
    7a4c:	4445      	add	r5, r8
    7a4e:	18ed      	adds	r5, r5, r3
    7a50:	1a2d      	subs	r5, r5, r0
    7a52:	e696      	b.n	7782 <__aeabi_ddiv+0x2f6>
    7a54:	1e8a      	subs	r2, r1, #2
    7a56:	9903      	ldr	r1, [sp, #12]
    7a58:	004d      	lsls	r5, r1, #1
    7a5a:	428d      	cmp	r5, r1
    7a5c:	4189      	sbcs	r1, r1
    7a5e:	4249      	negs	r1, r1
    7a60:	4441      	add	r1, r8
    7a62:	1876      	adds	r6, r6, r1
    7a64:	9503      	str	r5, [sp, #12]
    7a66:	e78f      	b.n	7988 <__aeabi_ddiv+0x4fc>
    7a68:	201f      	movs	r0, #31
    7a6a:	4240      	negs	r0, r0
    7a6c:	1ac3      	subs	r3, r0, r3
    7a6e:	4658      	mov	r0, fp
    7a70:	40d8      	lsrs	r0, r3
    7a72:	0003      	movs	r3, r0
    7a74:	2a20      	cmp	r2, #32
    7a76:	d028      	beq.n	7aca <__aeabi_ddiv+0x63e>
    7a78:	2040      	movs	r0, #64	; 0x40
    7a7a:	465d      	mov	r5, fp
    7a7c:	1a82      	subs	r2, r0, r2
    7a7e:	4095      	lsls	r5, r2
    7a80:	4329      	orrs	r1, r5
    7a82:	1e4a      	subs	r2, r1, #1
    7a84:	4191      	sbcs	r1, r2
    7a86:	4319      	orrs	r1, r3
    7a88:	2307      	movs	r3, #7
    7a8a:	2200      	movs	r2, #0
    7a8c:	400b      	ands	r3, r1
    7a8e:	d009      	beq.n	7aa4 <__aeabi_ddiv+0x618>
    7a90:	230f      	movs	r3, #15
    7a92:	2200      	movs	r2, #0
    7a94:	400b      	ands	r3, r1
    7a96:	0008      	movs	r0, r1
    7a98:	2b04      	cmp	r3, #4
    7a9a:	d1bd      	bne.n	7a18 <__aeabi_ddiv+0x58c>
    7a9c:	0001      	movs	r1, r0
    7a9e:	0753      	lsls	r3, r2, #29
    7aa0:	0252      	lsls	r2, r2, #9
    7aa2:	0b12      	lsrs	r2, r2, #12
    7aa4:	08c9      	lsrs	r1, r1, #3
    7aa6:	4319      	orrs	r1, r3
    7aa8:	2301      	movs	r3, #1
    7aaa:	4688      	mov	r8, r1
    7aac:	9902      	ldr	r1, [sp, #8]
    7aae:	2400      	movs	r4, #0
    7ab0:	4019      	ands	r1, r3
    7ab2:	468c      	mov	ip, r1
    7ab4:	e5b8      	b.n	7628 <__aeabi_ddiv+0x19c>
    7ab6:	4552      	cmp	r2, sl
    7ab8:	d8be      	bhi.n	7a38 <__aeabi_ddiv+0x5ac>
    7aba:	468b      	mov	fp, r1
    7abc:	2500      	movs	r5, #0
    7abe:	e660      	b.n	7782 <__aeabi_ddiv+0x2f6>
    7ac0:	9d03      	ldr	r5, [sp, #12]
    7ac2:	429d      	cmp	r5, r3
    7ac4:	d3c6      	bcc.n	7a54 <__aeabi_ddiv+0x5c8>
    7ac6:	0011      	movs	r1, r2
    7ac8:	e762      	b.n	7990 <__aeabi_ddiv+0x504>
    7aca:	2500      	movs	r5, #0
    7acc:	e7d8      	b.n	7a80 <__aeabi_ddiv+0x5f4>
    7ace:	2280      	movs	r2, #128	; 0x80
    7ad0:	465b      	mov	r3, fp
    7ad2:	0312      	lsls	r2, r2, #12
    7ad4:	431a      	orrs	r2, r3
    7ad6:	9b01      	ldr	r3, [sp, #4]
    7ad8:	0312      	lsls	r2, r2, #12
    7ada:	0b12      	lsrs	r2, r2, #12
    7adc:	469c      	mov	ip, r3
    7ade:	4688      	mov	r8, r1
    7ae0:	4c03      	ldr	r4, [pc, #12]	; (7af0 <__aeabi_ddiv+0x664>)
    7ae2:	e5a1      	b.n	7628 <__aeabi_ddiv+0x19c>
    7ae4:	000003ff 	.word	0x000003ff
    7ae8:	feffffff 	.word	0xfeffffff
    7aec:	000007fe 	.word	0x000007fe
    7af0:	000007ff 	.word	0x000007ff

00007af4 <__aeabi_dmul>:
    7af4:	b5f0      	push	{r4, r5, r6, r7, lr}
    7af6:	4657      	mov	r7, sl
    7af8:	4645      	mov	r5, r8
    7afa:	46de      	mov	lr, fp
    7afc:	464e      	mov	r6, r9
    7afe:	b5e0      	push	{r5, r6, r7, lr}
    7b00:	030c      	lsls	r4, r1, #12
    7b02:	4698      	mov	r8, r3
    7b04:	004e      	lsls	r6, r1, #1
    7b06:	0b23      	lsrs	r3, r4, #12
    7b08:	b087      	sub	sp, #28
    7b0a:	0007      	movs	r7, r0
    7b0c:	4692      	mov	sl, r2
    7b0e:	469b      	mov	fp, r3
    7b10:	0d76      	lsrs	r6, r6, #21
    7b12:	0fcd      	lsrs	r5, r1, #31
    7b14:	2e00      	cmp	r6, #0
    7b16:	d06b      	beq.n	7bf0 <__aeabi_dmul+0xfc>
    7b18:	4b6d      	ldr	r3, [pc, #436]	; (7cd0 <__aeabi_dmul+0x1dc>)
    7b1a:	429e      	cmp	r6, r3
    7b1c:	d035      	beq.n	7b8a <__aeabi_dmul+0x96>
    7b1e:	2480      	movs	r4, #128	; 0x80
    7b20:	465b      	mov	r3, fp
    7b22:	0f42      	lsrs	r2, r0, #29
    7b24:	0424      	lsls	r4, r4, #16
    7b26:	00db      	lsls	r3, r3, #3
    7b28:	4314      	orrs	r4, r2
    7b2a:	431c      	orrs	r4, r3
    7b2c:	00c3      	lsls	r3, r0, #3
    7b2e:	4699      	mov	r9, r3
    7b30:	4b68      	ldr	r3, [pc, #416]	; (7cd4 <__aeabi_dmul+0x1e0>)
    7b32:	46a3      	mov	fp, r4
    7b34:	469c      	mov	ip, r3
    7b36:	2300      	movs	r3, #0
    7b38:	2700      	movs	r7, #0
    7b3a:	4466      	add	r6, ip
    7b3c:	9302      	str	r3, [sp, #8]
    7b3e:	4643      	mov	r3, r8
    7b40:	031c      	lsls	r4, r3, #12
    7b42:	005a      	lsls	r2, r3, #1
    7b44:	0fdb      	lsrs	r3, r3, #31
    7b46:	4650      	mov	r0, sl
    7b48:	0b24      	lsrs	r4, r4, #12
    7b4a:	0d52      	lsrs	r2, r2, #21
    7b4c:	4698      	mov	r8, r3
    7b4e:	d100      	bne.n	7b52 <__aeabi_dmul+0x5e>
    7b50:	e076      	b.n	7c40 <__aeabi_dmul+0x14c>
    7b52:	4b5f      	ldr	r3, [pc, #380]	; (7cd0 <__aeabi_dmul+0x1dc>)
    7b54:	429a      	cmp	r2, r3
    7b56:	d06d      	beq.n	7c34 <__aeabi_dmul+0x140>
    7b58:	2380      	movs	r3, #128	; 0x80
    7b5a:	0f41      	lsrs	r1, r0, #29
    7b5c:	041b      	lsls	r3, r3, #16
    7b5e:	430b      	orrs	r3, r1
    7b60:	495c      	ldr	r1, [pc, #368]	; (7cd4 <__aeabi_dmul+0x1e0>)
    7b62:	00e4      	lsls	r4, r4, #3
    7b64:	468c      	mov	ip, r1
    7b66:	431c      	orrs	r4, r3
    7b68:	00c3      	lsls	r3, r0, #3
    7b6a:	2000      	movs	r0, #0
    7b6c:	4462      	add	r2, ip
    7b6e:	4641      	mov	r1, r8
    7b70:	18b6      	adds	r6, r6, r2
    7b72:	4069      	eors	r1, r5
    7b74:	1c72      	adds	r2, r6, #1
    7b76:	9101      	str	r1, [sp, #4]
    7b78:	4694      	mov	ip, r2
    7b7a:	4307      	orrs	r7, r0
    7b7c:	2f0f      	cmp	r7, #15
    7b7e:	d900      	bls.n	7b82 <__aeabi_dmul+0x8e>
    7b80:	e0b0      	b.n	7ce4 <__aeabi_dmul+0x1f0>
    7b82:	4a55      	ldr	r2, [pc, #340]	; (7cd8 <__aeabi_dmul+0x1e4>)
    7b84:	00bf      	lsls	r7, r7, #2
    7b86:	59d2      	ldr	r2, [r2, r7]
    7b88:	4697      	mov	pc, r2
    7b8a:	465b      	mov	r3, fp
    7b8c:	4303      	orrs	r3, r0
    7b8e:	4699      	mov	r9, r3
    7b90:	d000      	beq.n	7b94 <__aeabi_dmul+0xa0>
    7b92:	e087      	b.n	7ca4 <__aeabi_dmul+0x1b0>
    7b94:	2300      	movs	r3, #0
    7b96:	469b      	mov	fp, r3
    7b98:	3302      	adds	r3, #2
    7b9a:	2708      	movs	r7, #8
    7b9c:	9302      	str	r3, [sp, #8]
    7b9e:	e7ce      	b.n	7b3e <__aeabi_dmul+0x4a>
    7ba0:	4642      	mov	r2, r8
    7ba2:	9201      	str	r2, [sp, #4]
    7ba4:	2802      	cmp	r0, #2
    7ba6:	d067      	beq.n	7c78 <__aeabi_dmul+0x184>
    7ba8:	2803      	cmp	r0, #3
    7baa:	d100      	bne.n	7bae <__aeabi_dmul+0xba>
    7bac:	e20e      	b.n	7fcc <__aeabi_dmul+0x4d8>
    7bae:	2801      	cmp	r0, #1
    7bb0:	d000      	beq.n	7bb4 <__aeabi_dmul+0xc0>
    7bb2:	e162      	b.n	7e7a <__aeabi_dmul+0x386>
    7bb4:	2300      	movs	r3, #0
    7bb6:	2400      	movs	r4, #0
    7bb8:	2200      	movs	r2, #0
    7bba:	4699      	mov	r9, r3
    7bbc:	9901      	ldr	r1, [sp, #4]
    7bbe:	4001      	ands	r1, r0
    7bc0:	b2cd      	uxtb	r5, r1
    7bc2:	2100      	movs	r1, #0
    7bc4:	0312      	lsls	r2, r2, #12
    7bc6:	0d0b      	lsrs	r3, r1, #20
    7bc8:	0b12      	lsrs	r2, r2, #12
    7bca:	051b      	lsls	r3, r3, #20
    7bcc:	4313      	orrs	r3, r2
    7bce:	4a43      	ldr	r2, [pc, #268]	; (7cdc <__aeabi_dmul+0x1e8>)
    7bd0:	0524      	lsls	r4, r4, #20
    7bd2:	4013      	ands	r3, r2
    7bd4:	431c      	orrs	r4, r3
    7bd6:	0064      	lsls	r4, r4, #1
    7bd8:	07ed      	lsls	r5, r5, #31
    7bda:	0864      	lsrs	r4, r4, #1
    7bdc:	432c      	orrs	r4, r5
    7bde:	4648      	mov	r0, r9
    7be0:	0021      	movs	r1, r4
    7be2:	b007      	add	sp, #28
    7be4:	bc3c      	pop	{r2, r3, r4, r5}
    7be6:	4690      	mov	r8, r2
    7be8:	4699      	mov	r9, r3
    7bea:	46a2      	mov	sl, r4
    7bec:	46ab      	mov	fp, r5
    7bee:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7bf0:	4303      	orrs	r3, r0
    7bf2:	4699      	mov	r9, r3
    7bf4:	d04f      	beq.n	7c96 <__aeabi_dmul+0x1a2>
    7bf6:	465b      	mov	r3, fp
    7bf8:	2b00      	cmp	r3, #0
    7bfa:	d100      	bne.n	7bfe <__aeabi_dmul+0x10a>
    7bfc:	e189      	b.n	7f12 <__aeabi_dmul+0x41e>
    7bfe:	4658      	mov	r0, fp
    7c00:	f000 fe56 	bl	88b0 <__clzsi2>
    7c04:	0003      	movs	r3, r0
    7c06:	3b0b      	subs	r3, #11
    7c08:	2b1c      	cmp	r3, #28
    7c0a:	dd00      	ble.n	7c0e <__aeabi_dmul+0x11a>
    7c0c:	e17a      	b.n	7f04 <__aeabi_dmul+0x410>
    7c0e:	221d      	movs	r2, #29
    7c10:	1ad3      	subs	r3, r2, r3
    7c12:	003a      	movs	r2, r7
    7c14:	0001      	movs	r1, r0
    7c16:	465c      	mov	r4, fp
    7c18:	40da      	lsrs	r2, r3
    7c1a:	3908      	subs	r1, #8
    7c1c:	408c      	lsls	r4, r1
    7c1e:	0013      	movs	r3, r2
    7c20:	408f      	lsls	r7, r1
    7c22:	4323      	orrs	r3, r4
    7c24:	469b      	mov	fp, r3
    7c26:	46b9      	mov	r9, r7
    7c28:	2300      	movs	r3, #0
    7c2a:	4e2d      	ldr	r6, [pc, #180]	; (7ce0 <__aeabi_dmul+0x1ec>)
    7c2c:	2700      	movs	r7, #0
    7c2e:	1a36      	subs	r6, r6, r0
    7c30:	9302      	str	r3, [sp, #8]
    7c32:	e784      	b.n	7b3e <__aeabi_dmul+0x4a>
    7c34:	4653      	mov	r3, sl
    7c36:	4323      	orrs	r3, r4
    7c38:	d12a      	bne.n	7c90 <__aeabi_dmul+0x19c>
    7c3a:	2400      	movs	r4, #0
    7c3c:	2002      	movs	r0, #2
    7c3e:	e796      	b.n	7b6e <__aeabi_dmul+0x7a>
    7c40:	4653      	mov	r3, sl
    7c42:	4323      	orrs	r3, r4
    7c44:	d020      	beq.n	7c88 <__aeabi_dmul+0x194>
    7c46:	2c00      	cmp	r4, #0
    7c48:	d100      	bne.n	7c4c <__aeabi_dmul+0x158>
    7c4a:	e157      	b.n	7efc <__aeabi_dmul+0x408>
    7c4c:	0020      	movs	r0, r4
    7c4e:	f000 fe2f 	bl	88b0 <__clzsi2>
    7c52:	0003      	movs	r3, r0
    7c54:	3b0b      	subs	r3, #11
    7c56:	2b1c      	cmp	r3, #28
    7c58:	dd00      	ble.n	7c5c <__aeabi_dmul+0x168>
    7c5a:	e149      	b.n	7ef0 <__aeabi_dmul+0x3fc>
    7c5c:	211d      	movs	r1, #29
    7c5e:	1acb      	subs	r3, r1, r3
    7c60:	4651      	mov	r1, sl
    7c62:	0002      	movs	r2, r0
    7c64:	40d9      	lsrs	r1, r3
    7c66:	4653      	mov	r3, sl
    7c68:	3a08      	subs	r2, #8
    7c6a:	4094      	lsls	r4, r2
    7c6c:	4093      	lsls	r3, r2
    7c6e:	430c      	orrs	r4, r1
    7c70:	4a1b      	ldr	r2, [pc, #108]	; (7ce0 <__aeabi_dmul+0x1ec>)
    7c72:	1a12      	subs	r2, r2, r0
    7c74:	2000      	movs	r0, #0
    7c76:	e77a      	b.n	7b6e <__aeabi_dmul+0x7a>
    7c78:	2501      	movs	r5, #1
    7c7a:	9b01      	ldr	r3, [sp, #4]
    7c7c:	4c14      	ldr	r4, [pc, #80]	; (7cd0 <__aeabi_dmul+0x1dc>)
    7c7e:	401d      	ands	r5, r3
    7c80:	2300      	movs	r3, #0
    7c82:	2200      	movs	r2, #0
    7c84:	4699      	mov	r9, r3
    7c86:	e79c      	b.n	7bc2 <__aeabi_dmul+0xce>
    7c88:	2400      	movs	r4, #0
    7c8a:	2200      	movs	r2, #0
    7c8c:	2001      	movs	r0, #1
    7c8e:	e76e      	b.n	7b6e <__aeabi_dmul+0x7a>
    7c90:	4653      	mov	r3, sl
    7c92:	2003      	movs	r0, #3
    7c94:	e76b      	b.n	7b6e <__aeabi_dmul+0x7a>
    7c96:	2300      	movs	r3, #0
    7c98:	469b      	mov	fp, r3
    7c9a:	3301      	adds	r3, #1
    7c9c:	2704      	movs	r7, #4
    7c9e:	2600      	movs	r6, #0
    7ca0:	9302      	str	r3, [sp, #8]
    7ca2:	e74c      	b.n	7b3e <__aeabi_dmul+0x4a>
    7ca4:	2303      	movs	r3, #3
    7ca6:	4681      	mov	r9, r0
    7ca8:	270c      	movs	r7, #12
    7caa:	9302      	str	r3, [sp, #8]
    7cac:	e747      	b.n	7b3e <__aeabi_dmul+0x4a>
    7cae:	2280      	movs	r2, #128	; 0x80
    7cb0:	2300      	movs	r3, #0
    7cb2:	2500      	movs	r5, #0
    7cb4:	0312      	lsls	r2, r2, #12
    7cb6:	4699      	mov	r9, r3
    7cb8:	4c05      	ldr	r4, [pc, #20]	; (7cd0 <__aeabi_dmul+0x1dc>)
    7cba:	e782      	b.n	7bc2 <__aeabi_dmul+0xce>
    7cbc:	465c      	mov	r4, fp
    7cbe:	464b      	mov	r3, r9
    7cc0:	9802      	ldr	r0, [sp, #8]
    7cc2:	e76f      	b.n	7ba4 <__aeabi_dmul+0xb0>
    7cc4:	465c      	mov	r4, fp
    7cc6:	464b      	mov	r3, r9
    7cc8:	9501      	str	r5, [sp, #4]
    7cca:	9802      	ldr	r0, [sp, #8]
    7ccc:	e76a      	b.n	7ba4 <__aeabi_dmul+0xb0>
    7cce:	46c0      	nop			; (mov r8, r8)
    7cd0:	000007ff 	.word	0x000007ff
    7cd4:	fffffc01 	.word	0xfffffc01
    7cd8:	000096f8 	.word	0x000096f8
    7cdc:	800fffff 	.word	0x800fffff
    7ce0:	fffffc0d 	.word	0xfffffc0d
    7ce4:	464a      	mov	r2, r9
    7ce6:	4649      	mov	r1, r9
    7ce8:	0c17      	lsrs	r7, r2, #16
    7cea:	0c1a      	lsrs	r2, r3, #16
    7cec:	041b      	lsls	r3, r3, #16
    7cee:	0c1b      	lsrs	r3, r3, #16
    7cf0:	0408      	lsls	r0, r1, #16
    7cf2:	0019      	movs	r1, r3
    7cf4:	0c00      	lsrs	r0, r0, #16
    7cf6:	4341      	muls	r1, r0
    7cf8:	0015      	movs	r5, r2
    7cfa:	4688      	mov	r8, r1
    7cfc:	0019      	movs	r1, r3
    7cfe:	437d      	muls	r5, r7
    7d00:	4379      	muls	r1, r7
    7d02:	9503      	str	r5, [sp, #12]
    7d04:	4689      	mov	r9, r1
    7d06:	0029      	movs	r1, r5
    7d08:	0015      	movs	r5, r2
    7d0a:	4345      	muls	r5, r0
    7d0c:	444d      	add	r5, r9
    7d0e:	9502      	str	r5, [sp, #8]
    7d10:	4645      	mov	r5, r8
    7d12:	0c2d      	lsrs	r5, r5, #16
    7d14:	46aa      	mov	sl, r5
    7d16:	9d02      	ldr	r5, [sp, #8]
    7d18:	4455      	add	r5, sl
    7d1a:	45a9      	cmp	r9, r5
    7d1c:	d906      	bls.n	7d2c <__aeabi_dmul+0x238>
    7d1e:	468a      	mov	sl, r1
    7d20:	2180      	movs	r1, #128	; 0x80
    7d22:	0249      	lsls	r1, r1, #9
    7d24:	4689      	mov	r9, r1
    7d26:	44ca      	add	sl, r9
    7d28:	4651      	mov	r1, sl
    7d2a:	9103      	str	r1, [sp, #12]
    7d2c:	0c29      	lsrs	r1, r5, #16
    7d2e:	9104      	str	r1, [sp, #16]
    7d30:	4641      	mov	r1, r8
    7d32:	0409      	lsls	r1, r1, #16
    7d34:	042d      	lsls	r5, r5, #16
    7d36:	0c09      	lsrs	r1, r1, #16
    7d38:	4688      	mov	r8, r1
    7d3a:	0029      	movs	r1, r5
    7d3c:	0c25      	lsrs	r5, r4, #16
    7d3e:	0424      	lsls	r4, r4, #16
    7d40:	4441      	add	r1, r8
    7d42:	0c24      	lsrs	r4, r4, #16
    7d44:	9105      	str	r1, [sp, #20]
    7d46:	0021      	movs	r1, r4
    7d48:	4341      	muls	r1, r0
    7d4a:	4688      	mov	r8, r1
    7d4c:	0021      	movs	r1, r4
    7d4e:	4379      	muls	r1, r7
    7d50:	468a      	mov	sl, r1
    7d52:	4368      	muls	r0, r5
    7d54:	4641      	mov	r1, r8
    7d56:	4450      	add	r0, sl
    7d58:	4681      	mov	r9, r0
    7d5a:	0c08      	lsrs	r0, r1, #16
    7d5c:	4448      	add	r0, r9
    7d5e:	436f      	muls	r7, r5
    7d60:	4582      	cmp	sl, r0
    7d62:	d903      	bls.n	7d6c <__aeabi_dmul+0x278>
    7d64:	2180      	movs	r1, #128	; 0x80
    7d66:	0249      	lsls	r1, r1, #9
    7d68:	4689      	mov	r9, r1
    7d6a:	444f      	add	r7, r9
    7d6c:	0c01      	lsrs	r1, r0, #16
    7d6e:	4689      	mov	r9, r1
    7d70:	0039      	movs	r1, r7
    7d72:	4449      	add	r1, r9
    7d74:	9102      	str	r1, [sp, #8]
    7d76:	4641      	mov	r1, r8
    7d78:	040f      	lsls	r7, r1, #16
    7d7a:	9904      	ldr	r1, [sp, #16]
    7d7c:	0c3f      	lsrs	r7, r7, #16
    7d7e:	4688      	mov	r8, r1
    7d80:	0400      	lsls	r0, r0, #16
    7d82:	19c0      	adds	r0, r0, r7
    7d84:	4480      	add	r8, r0
    7d86:	4641      	mov	r1, r8
    7d88:	9104      	str	r1, [sp, #16]
    7d8a:	4659      	mov	r1, fp
    7d8c:	0c0f      	lsrs	r7, r1, #16
    7d8e:	0409      	lsls	r1, r1, #16
    7d90:	0c09      	lsrs	r1, r1, #16
    7d92:	4688      	mov	r8, r1
    7d94:	4359      	muls	r1, r3
    7d96:	468a      	mov	sl, r1
    7d98:	0039      	movs	r1, r7
    7d9a:	4351      	muls	r1, r2
    7d9c:	4689      	mov	r9, r1
    7d9e:	4641      	mov	r1, r8
    7da0:	434a      	muls	r2, r1
    7da2:	4651      	mov	r1, sl
    7da4:	0c09      	lsrs	r1, r1, #16
    7da6:	468b      	mov	fp, r1
    7da8:	437b      	muls	r3, r7
    7daa:	18d2      	adds	r2, r2, r3
    7dac:	445a      	add	r2, fp
    7dae:	4293      	cmp	r3, r2
    7db0:	d903      	bls.n	7dba <__aeabi_dmul+0x2c6>
    7db2:	2380      	movs	r3, #128	; 0x80
    7db4:	025b      	lsls	r3, r3, #9
    7db6:	469b      	mov	fp, r3
    7db8:	44d9      	add	r9, fp
    7dba:	4651      	mov	r1, sl
    7dbc:	0409      	lsls	r1, r1, #16
    7dbe:	0c09      	lsrs	r1, r1, #16
    7dc0:	468a      	mov	sl, r1
    7dc2:	4641      	mov	r1, r8
    7dc4:	4361      	muls	r1, r4
    7dc6:	437c      	muls	r4, r7
    7dc8:	0c13      	lsrs	r3, r2, #16
    7dca:	0412      	lsls	r2, r2, #16
    7dcc:	444b      	add	r3, r9
    7dce:	4452      	add	r2, sl
    7dd0:	46a1      	mov	r9, r4
    7dd2:	468a      	mov	sl, r1
    7dd4:	003c      	movs	r4, r7
    7dd6:	4641      	mov	r1, r8
    7dd8:	436c      	muls	r4, r5
    7dda:	434d      	muls	r5, r1
    7ddc:	4651      	mov	r1, sl
    7dde:	444d      	add	r5, r9
    7de0:	0c0f      	lsrs	r7, r1, #16
    7de2:	197d      	adds	r5, r7, r5
    7de4:	45a9      	cmp	r9, r5
    7de6:	d903      	bls.n	7df0 <__aeabi_dmul+0x2fc>
    7de8:	2180      	movs	r1, #128	; 0x80
    7dea:	0249      	lsls	r1, r1, #9
    7dec:	4688      	mov	r8, r1
    7dee:	4444      	add	r4, r8
    7df0:	9f04      	ldr	r7, [sp, #16]
    7df2:	9903      	ldr	r1, [sp, #12]
    7df4:	46b8      	mov	r8, r7
    7df6:	4441      	add	r1, r8
    7df8:	468b      	mov	fp, r1
    7dfa:	4583      	cmp	fp, r0
    7dfc:	4180      	sbcs	r0, r0
    7dfe:	4241      	negs	r1, r0
    7e00:	4688      	mov	r8, r1
    7e02:	4651      	mov	r1, sl
    7e04:	0408      	lsls	r0, r1, #16
    7e06:	042f      	lsls	r7, r5, #16
    7e08:	0c00      	lsrs	r0, r0, #16
    7e0a:	183f      	adds	r7, r7, r0
    7e0c:	4658      	mov	r0, fp
    7e0e:	9902      	ldr	r1, [sp, #8]
    7e10:	1810      	adds	r0, r2, r0
    7e12:	4689      	mov	r9, r1
    7e14:	4290      	cmp	r0, r2
    7e16:	4192      	sbcs	r2, r2
    7e18:	444f      	add	r7, r9
    7e1a:	46ba      	mov	sl, r7
    7e1c:	4252      	negs	r2, r2
    7e1e:	4699      	mov	r9, r3
    7e20:	4693      	mov	fp, r2
    7e22:	44c2      	add	sl, r8
    7e24:	44d1      	add	r9, sl
    7e26:	44cb      	add	fp, r9
    7e28:	428f      	cmp	r7, r1
    7e2a:	41bf      	sbcs	r7, r7
    7e2c:	45c2      	cmp	sl, r8
    7e2e:	4189      	sbcs	r1, r1
    7e30:	4599      	cmp	r9, r3
    7e32:	419b      	sbcs	r3, r3
    7e34:	4593      	cmp	fp, r2
    7e36:	4192      	sbcs	r2, r2
    7e38:	427f      	negs	r7, r7
    7e3a:	4249      	negs	r1, r1
    7e3c:	0c2d      	lsrs	r5, r5, #16
    7e3e:	4252      	negs	r2, r2
    7e40:	430f      	orrs	r7, r1
    7e42:	425b      	negs	r3, r3
    7e44:	4313      	orrs	r3, r2
    7e46:	197f      	adds	r7, r7, r5
    7e48:	18ff      	adds	r7, r7, r3
    7e4a:	465b      	mov	r3, fp
    7e4c:	193c      	adds	r4, r7, r4
    7e4e:	0ddb      	lsrs	r3, r3, #23
    7e50:	9a05      	ldr	r2, [sp, #20]
    7e52:	0264      	lsls	r4, r4, #9
    7e54:	431c      	orrs	r4, r3
    7e56:	0243      	lsls	r3, r0, #9
    7e58:	4313      	orrs	r3, r2
    7e5a:	1e5d      	subs	r5, r3, #1
    7e5c:	41ab      	sbcs	r3, r5
    7e5e:	465a      	mov	r2, fp
    7e60:	0dc0      	lsrs	r0, r0, #23
    7e62:	4303      	orrs	r3, r0
    7e64:	0252      	lsls	r2, r2, #9
    7e66:	4313      	orrs	r3, r2
    7e68:	01e2      	lsls	r2, r4, #7
    7e6a:	d556      	bpl.n	7f1a <__aeabi_dmul+0x426>
    7e6c:	2001      	movs	r0, #1
    7e6e:	085a      	lsrs	r2, r3, #1
    7e70:	4003      	ands	r3, r0
    7e72:	4313      	orrs	r3, r2
    7e74:	07e2      	lsls	r2, r4, #31
    7e76:	4313      	orrs	r3, r2
    7e78:	0864      	lsrs	r4, r4, #1
    7e7a:	485a      	ldr	r0, [pc, #360]	; (7fe4 <__aeabi_dmul+0x4f0>)
    7e7c:	4460      	add	r0, ip
    7e7e:	2800      	cmp	r0, #0
    7e80:	dd4d      	ble.n	7f1e <__aeabi_dmul+0x42a>
    7e82:	075a      	lsls	r2, r3, #29
    7e84:	d009      	beq.n	7e9a <__aeabi_dmul+0x3a6>
    7e86:	220f      	movs	r2, #15
    7e88:	401a      	ands	r2, r3
    7e8a:	2a04      	cmp	r2, #4
    7e8c:	d005      	beq.n	7e9a <__aeabi_dmul+0x3a6>
    7e8e:	1d1a      	adds	r2, r3, #4
    7e90:	429a      	cmp	r2, r3
    7e92:	419b      	sbcs	r3, r3
    7e94:	425b      	negs	r3, r3
    7e96:	18e4      	adds	r4, r4, r3
    7e98:	0013      	movs	r3, r2
    7e9a:	01e2      	lsls	r2, r4, #7
    7e9c:	d504      	bpl.n	7ea8 <__aeabi_dmul+0x3b4>
    7e9e:	2080      	movs	r0, #128	; 0x80
    7ea0:	4a51      	ldr	r2, [pc, #324]	; (7fe8 <__aeabi_dmul+0x4f4>)
    7ea2:	00c0      	lsls	r0, r0, #3
    7ea4:	4014      	ands	r4, r2
    7ea6:	4460      	add	r0, ip
    7ea8:	4a50      	ldr	r2, [pc, #320]	; (7fec <__aeabi_dmul+0x4f8>)
    7eaa:	4290      	cmp	r0, r2
    7eac:	dd00      	ble.n	7eb0 <__aeabi_dmul+0x3bc>
    7eae:	e6e3      	b.n	7c78 <__aeabi_dmul+0x184>
    7eb0:	2501      	movs	r5, #1
    7eb2:	08db      	lsrs	r3, r3, #3
    7eb4:	0762      	lsls	r2, r4, #29
    7eb6:	431a      	orrs	r2, r3
    7eb8:	0264      	lsls	r4, r4, #9
    7eba:	9b01      	ldr	r3, [sp, #4]
    7ebc:	4691      	mov	r9, r2
    7ebe:	0b22      	lsrs	r2, r4, #12
    7ec0:	0544      	lsls	r4, r0, #21
    7ec2:	0d64      	lsrs	r4, r4, #21
    7ec4:	401d      	ands	r5, r3
    7ec6:	e67c      	b.n	7bc2 <__aeabi_dmul+0xce>
    7ec8:	2280      	movs	r2, #128	; 0x80
    7eca:	4659      	mov	r1, fp
    7ecc:	0312      	lsls	r2, r2, #12
    7ece:	4211      	tst	r1, r2
    7ed0:	d008      	beq.n	7ee4 <__aeabi_dmul+0x3f0>
    7ed2:	4214      	tst	r4, r2
    7ed4:	d106      	bne.n	7ee4 <__aeabi_dmul+0x3f0>
    7ed6:	4322      	orrs	r2, r4
    7ed8:	0312      	lsls	r2, r2, #12
    7eda:	0b12      	lsrs	r2, r2, #12
    7edc:	4645      	mov	r5, r8
    7ede:	4699      	mov	r9, r3
    7ee0:	4c43      	ldr	r4, [pc, #268]	; (7ff0 <__aeabi_dmul+0x4fc>)
    7ee2:	e66e      	b.n	7bc2 <__aeabi_dmul+0xce>
    7ee4:	465b      	mov	r3, fp
    7ee6:	431a      	orrs	r2, r3
    7ee8:	0312      	lsls	r2, r2, #12
    7eea:	0b12      	lsrs	r2, r2, #12
    7eec:	4c40      	ldr	r4, [pc, #256]	; (7ff0 <__aeabi_dmul+0x4fc>)
    7eee:	e668      	b.n	7bc2 <__aeabi_dmul+0xce>
    7ef0:	0003      	movs	r3, r0
    7ef2:	4654      	mov	r4, sl
    7ef4:	3b28      	subs	r3, #40	; 0x28
    7ef6:	409c      	lsls	r4, r3
    7ef8:	2300      	movs	r3, #0
    7efa:	e6b9      	b.n	7c70 <__aeabi_dmul+0x17c>
    7efc:	f000 fcd8 	bl	88b0 <__clzsi2>
    7f00:	3020      	adds	r0, #32
    7f02:	e6a6      	b.n	7c52 <__aeabi_dmul+0x15e>
    7f04:	0003      	movs	r3, r0
    7f06:	3b28      	subs	r3, #40	; 0x28
    7f08:	409f      	lsls	r7, r3
    7f0a:	2300      	movs	r3, #0
    7f0c:	46bb      	mov	fp, r7
    7f0e:	4699      	mov	r9, r3
    7f10:	e68a      	b.n	7c28 <__aeabi_dmul+0x134>
    7f12:	f000 fccd 	bl	88b0 <__clzsi2>
    7f16:	3020      	adds	r0, #32
    7f18:	e674      	b.n	7c04 <__aeabi_dmul+0x110>
    7f1a:	46b4      	mov	ip, r6
    7f1c:	e7ad      	b.n	7e7a <__aeabi_dmul+0x386>
    7f1e:	2501      	movs	r5, #1
    7f20:	1a2a      	subs	r2, r5, r0
    7f22:	2a38      	cmp	r2, #56	; 0x38
    7f24:	dd06      	ble.n	7f34 <__aeabi_dmul+0x440>
    7f26:	9b01      	ldr	r3, [sp, #4]
    7f28:	2400      	movs	r4, #0
    7f2a:	401d      	ands	r5, r3
    7f2c:	2300      	movs	r3, #0
    7f2e:	2200      	movs	r2, #0
    7f30:	4699      	mov	r9, r3
    7f32:	e646      	b.n	7bc2 <__aeabi_dmul+0xce>
    7f34:	2a1f      	cmp	r2, #31
    7f36:	dc21      	bgt.n	7f7c <__aeabi_dmul+0x488>
    7f38:	2520      	movs	r5, #32
    7f3a:	0020      	movs	r0, r4
    7f3c:	1aad      	subs	r5, r5, r2
    7f3e:	001e      	movs	r6, r3
    7f40:	40ab      	lsls	r3, r5
    7f42:	40a8      	lsls	r0, r5
    7f44:	40d6      	lsrs	r6, r2
    7f46:	1e5d      	subs	r5, r3, #1
    7f48:	41ab      	sbcs	r3, r5
    7f4a:	4330      	orrs	r0, r6
    7f4c:	4318      	orrs	r0, r3
    7f4e:	40d4      	lsrs	r4, r2
    7f50:	0743      	lsls	r3, r0, #29
    7f52:	d009      	beq.n	7f68 <__aeabi_dmul+0x474>
    7f54:	230f      	movs	r3, #15
    7f56:	4003      	ands	r3, r0
    7f58:	2b04      	cmp	r3, #4
    7f5a:	d005      	beq.n	7f68 <__aeabi_dmul+0x474>
    7f5c:	0003      	movs	r3, r0
    7f5e:	1d18      	adds	r0, r3, #4
    7f60:	4298      	cmp	r0, r3
    7f62:	419b      	sbcs	r3, r3
    7f64:	425b      	negs	r3, r3
    7f66:	18e4      	adds	r4, r4, r3
    7f68:	0223      	lsls	r3, r4, #8
    7f6a:	d521      	bpl.n	7fb0 <__aeabi_dmul+0x4bc>
    7f6c:	2501      	movs	r5, #1
    7f6e:	9b01      	ldr	r3, [sp, #4]
    7f70:	2401      	movs	r4, #1
    7f72:	401d      	ands	r5, r3
    7f74:	2300      	movs	r3, #0
    7f76:	2200      	movs	r2, #0
    7f78:	4699      	mov	r9, r3
    7f7a:	e622      	b.n	7bc2 <__aeabi_dmul+0xce>
    7f7c:	251f      	movs	r5, #31
    7f7e:	0021      	movs	r1, r4
    7f80:	426d      	negs	r5, r5
    7f82:	1a28      	subs	r0, r5, r0
    7f84:	40c1      	lsrs	r1, r0
    7f86:	0008      	movs	r0, r1
    7f88:	2a20      	cmp	r2, #32
    7f8a:	d01d      	beq.n	7fc8 <__aeabi_dmul+0x4d4>
    7f8c:	355f      	adds	r5, #95	; 0x5f
    7f8e:	1aaa      	subs	r2, r5, r2
    7f90:	4094      	lsls	r4, r2
    7f92:	4323      	orrs	r3, r4
    7f94:	1e5c      	subs	r4, r3, #1
    7f96:	41a3      	sbcs	r3, r4
    7f98:	2507      	movs	r5, #7
    7f9a:	4303      	orrs	r3, r0
    7f9c:	401d      	ands	r5, r3
    7f9e:	2200      	movs	r2, #0
    7fa0:	2d00      	cmp	r5, #0
    7fa2:	d009      	beq.n	7fb8 <__aeabi_dmul+0x4c4>
    7fa4:	220f      	movs	r2, #15
    7fa6:	2400      	movs	r4, #0
    7fa8:	401a      	ands	r2, r3
    7faa:	0018      	movs	r0, r3
    7fac:	2a04      	cmp	r2, #4
    7fae:	d1d6      	bne.n	7f5e <__aeabi_dmul+0x46a>
    7fb0:	0003      	movs	r3, r0
    7fb2:	0765      	lsls	r5, r4, #29
    7fb4:	0264      	lsls	r4, r4, #9
    7fb6:	0b22      	lsrs	r2, r4, #12
    7fb8:	08db      	lsrs	r3, r3, #3
    7fba:	432b      	orrs	r3, r5
    7fbc:	2501      	movs	r5, #1
    7fbe:	4699      	mov	r9, r3
    7fc0:	9b01      	ldr	r3, [sp, #4]
    7fc2:	2400      	movs	r4, #0
    7fc4:	401d      	ands	r5, r3
    7fc6:	e5fc      	b.n	7bc2 <__aeabi_dmul+0xce>
    7fc8:	2400      	movs	r4, #0
    7fca:	e7e2      	b.n	7f92 <__aeabi_dmul+0x49e>
    7fcc:	2280      	movs	r2, #128	; 0x80
    7fce:	2501      	movs	r5, #1
    7fd0:	0312      	lsls	r2, r2, #12
    7fd2:	4322      	orrs	r2, r4
    7fd4:	9901      	ldr	r1, [sp, #4]
    7fd6:	0312      	lsls	r2, r2, #12
    7fd8:	0b12      	lsrs	r2, r2, #12
    7fda:	400d      	ands	r5, r1
    7fdc:	4699      	mov	r9, r3
    7fde:	4c04      	ldr	r4, [pc, #16]	; (7ff0 <__aeabi_dmul+0x4fc>)
    7fe0:	e5ef      	b.n	7bc2 <__aeabi_dmul+0xce>
    7fe2:	46c0      	nop			; (mov r8, r8)
    7fe4:	000003ff 	.word	0x000003ff
    7fe8:	feffffff 	.word	0xfeffffff
    7fec:	000007fe 	.word	0x000007fe
    7ff0:	000007ff 	.word	0x000007ff

00007ff4 <__aeabi_dsub>:
    7ff4:	b5f0      	push	{r4, r5, r6, r7, lr}
    7ff6:	4646      	mov	r6, r8
    7ff8:	46d6      	mov	lr, sl
    7ffa:	464f      	mov	r7, r9
    7ffc:	030c      	lsls	r4, r1, #12
    7ffe:	b5c0      	push	{r6, r7, lr}
    8000:	0fcd      	lsrs	r5, r1, #31
    8002:	004e      	lsls	r6, r1, #1
    8004:	0a61      	lsrs	r1, r4, #9
    8006:	0f44      	lsrs	r4, r0, #29
    8008:	430c      	orrs	r4, r1
    800a:	00c1      	lsls	r1, r0, #3
    800c:	0058      	lsls	r0, r3, #1
    800e:	0d40      	lsrs	r0, r0, #21
    8010:	4684      	mov	ip, r0
    8012:	468a      	mov	sl, r1
    8014:	000f      	movs	r7, r1
    8016:	0319      	lsls	r1, r3, #12
    8018:	0f50      	lsrs	r0, r2, #29
    801a:	0a49      	lsrs	r1, r1, #9
    801c:	4301      	orrs	r1, r0
    801e:	48c6      	ldr	r0, [pc, #792]	; (8338 <__aeabi_dsub+0x344>)
    8020:	0d76      	lsrs	r6, r6, #21
    8022:	46a8      	mov	r8, r5
    8024:	0fdb      	lsrs	r3, r3, #31
    8026:	00d2      	lsls	r2, r2, #3
    8028:	4584      	cmp	ip, r0
    802a:	d100      	bne.n	802e <__aeabi_dsub+0x3a>
    802c:	e0d8      	b.n	81e0 <__aeabi_dsub+0x1ec>
    802e:	2001      	movs	r0, #1
    8030:	4043      	eors	r3, r0
    8032:	42ab      	cmp	r3, r5
    8034:	d100      	bne.n	8038 <__aeabi_dsub+0x44>
    8036:	e0a6      	b.n	8186 <__aeabi_dsub+0x192>
    8038:	4660      	mov	r0, ip
    803a:	1a35      	subs	r5, r6, r0
    803c:	2d00      	cmp	r5, #0
    803e:	dc00      	bgt.n	8042 <__aeabi_dsub+0x4e>
    8040:	e105      	b.n	824e <__aeabi_dsub+0x25a>
    8042:	2800      	cmp	r0, #0
    8044:	d110      	bne.n	8068 <__aeabi_dsub+0x74>
    8046:	000b      	movs	r3, r1
    8048:	4313      	orrs	r3, r2
    804a:	d100      	bne.n	804e <__aeabi_dsub+0x5a>
    804c:	e0d7      	b.n	81fe <__aeabi_dsub+0x20a>
    804e:	1e6b      	subs	r3, r5, #1
    8050:	2b00      	cmp	r3, #0
    8052:	d000      	beq.n	8056 <__aeabi_dsub+0x62>
    8054:	e14b      	b.n	82ee <__aeabi_dsub+0x2fa>
    8056:	4653      	mov	r3, sl
    8058:	1a9f      	subs	r7, r3, r2
    805a:	45ba      	cmp	sl, r7
    805c:	4180      	sbcs	r0, r0
    805e:	1a64      	subs	r4, r4, r1
    8060:	4240      	negs	r0, r0
    8062:	1a24      	subs	r4, r4, r0
    8064:	2601      	movs	r6, #1
    8066:	e01e      	b.n	80a6 <__aeabi_dsub+0xb2>
    8068:	4bb3      	ldr	r3, [pc, #716]	; (8338 <__aeabi_dsub+0x344>)
    806a:	429e      	cmp	r6, r3
    806c:	d048      	beq.n	8100 <__aeabi_dsub+0x10c>
    806e:	2380      	movs	r3, #128	; 0x80
    8070:	041b      	lsls	r3, r3, #16
    8072:	4319      	orrs	r1, r3
    8074:	2d38      	cmp	r5, #56	; 0x38
    8076:	dd00      	ble.n	807a <__aeabi_dsub+0x86>
    8078:	e119      	b.n	82ae <__aeabi_dsub+0x2ba>
    807a:	2d1f      	cmp	r5, #31
    807c:	dd00      	ble.n	8080 <__aeabi_dsub+0x8c>
    807e:	e14c      	b.n	831a <__aeabi_dsub+0x326>
    8080:	2320      	movs	r3, #32
    8082:	000f      	movs	r7, r1
    8084:	1b5b      	subs	r3, r3, r5
    8086:	0010      	movs	r0, r2
    8088:	409a      	lsls	r2, r3
    808a:	409f      	lsls	r7, r3
    808c:	40e8      	lsrs	r0, r5
    808e:	1e53      	subs	r3, r2, #1
    8090:	419a      	sbcs	r2, r3
    8092:	40e9      	lsrs	r1, r5
    8094:	4307      	orrs	r7, r0
    8096:	4317      	orrs	r7, r2
    8098:	4653      	mov	r3, sl
    809a:	1bdf      	subs	r7, r3, r7
    809c:	1a61      	subs	r1, r4, r1
    809e:	45ba      	cmp	sl, r7
    80a0:	41a4      	sbcs	r4, r4
    80a2:	4264      	negs	r4, r4
    80a4:	1b0c      	subs	r4, r1, r4
    80a6:	0223      	lsls	r3, r4, #8
    80a8:	d400      	bmi.n	80ac <__aeabi_dsub+0xb8>
    80aa:	e0c5      	b.n	8238 <__aeabi_dsub+0x244>
    80ac:	0264      	lsls	r4, r4, #9
    80ae:	0a65      	lsrs	r5, r4, #9
    80b0:	2d00      	cmp	r5, #0
    80b2:	d100      	bne.n	80b6 <__aeabi_dsub+0xc2>
    80b4:	e0f6      	b.n	82a4 <__aeabi_dsub+0x2b0>
    80b6:	0028      	movs	r0, r5
    80b8:	f000 fbfa 	bl	88b0 <__clzsi2>
    80bc:	0003      	movs	r3, r0
    80be:	3b08      	subs	r3, #8
    80c0:	2b1f      	cmp	r3, #31
    80c2:	dd00      	ble.n	80c6 <__aeabi_dsub+0xd2>
    80c4:	e0e9      	b.n	829a <__aeabi_dsub+0x2a6>
    80c6:	2220      	movs	r2, #32
    80c8:	003c      	movs	r4, r7
    80ca:	1ad2      	subs	r2, r2, r3
    80cc:	409d      	lsls	r5, r3
    80ce:	40d4      	lsrs	r4, r2
    80d0:	409f      	lsls	r7, r3
    80d2:	4325      	orrs	r5, r4
    80d4:	429e      	cmp	r6, r3
    80d6:	dd00      	ble.n	80da <__aeabi_dsub+0xe6>
    80d8:	e0db      	b.n	8292 <__aeabi_dsub+0x29e>
    80da:	1b9e      	subs	r6, r3, r6
    80dc:	1c73      	adds	r3, r6, #1
    80de:	2b1f      	cmp	r3, #31
    80e0:	dd00      	ble.n	80e4 <__aeabi_dsub+0xf0>
    80e2:	e10a      	b.n	82fa <__aeabi_dsub+0x306>
    80e4:	2220      	movs	r2, #32
    80e6:	0038      	movs	r0, r7
    80e8:	1ad2      	subs	r2, r2, r3
    80ea:	0029      	movs	r1, r5
    80ec:	4097      	lsls	r7, r2
    80ee:	002c      	movs	r4, r5
    80f0:	4091      	lsls	r1, r2
    80f2:	40d8      	lsrs	r0, r3
    80f4:	1e7a      	subs	r2, r7, #1
    80f6:	4197      	sbcs	r7, r2
    80f8:	40dc      	lsrs	r4, r3
    80fa:	2600      	movs	r6, #0
    80fc:	4301      	orrs	r1, r0
    80fe:	430f      	orrs	r7, r1
    8100:	077b      	lsls	r3, r7, #29
    8102:	d009      	beq.n	8118 <__aeabi_dsub+0x124>
    8104:	230f      	movs	r3, #15
    8106:	403b      	ands	r3, r7
    8108:	2b04      	cmp	r3, #4
    810a:	d005      	beq.n	8118 <__aeabi_dsub+0x124>
    810c:	1d3b      	adds	r3, r7, #4
    810e:	42bb      	cmp	r3, r7
    8110:	41bf      	sbcs	r7, r7
    8112:	427f      	negs	r7, r7
    8114:	19e4      	adds	r4, r4, r7
    8116:	001f      	movs	r7, r3
    8118:	0223      	lsls	r3, r4, #8
    811a:	d525      	bpl.n	8168 <__aeabi_dsub+0x174>
    811c:	4b86      	ldr	r3, [pc, #536]	; (8338 <__aeabi_dsub+0x344>)
    811e:	3601      	adds	r6, #1
    8120:	429e      	cmp	r6, r3
    8122:	d100      	bne.n	8126 <__aeabi_dsub+0x132>
    8124:	e0af      	b.n	8286 <__aeabi_dsub+0x292>
    8126:	4b85      	ldr	r3, [pc, #532]	; (833c <__aeabi_dsub+0x348>)
    8128:	2501      	movs	r5, #1
    812a:	401c      	ands	r4, r3
    812c:	4643      	mov	r3, r8
    812e:	0762      	lsls	r2, r4, #29
    8130:	08ff      	lsrs	r7, r7, #3
    8132:	0264      	lsls	r4, r4, #9
    8134:	0576      	lsls	r6, r6, #21
    8136:	4317      	orrs	r7, r2
    8138:	0b24      	lsrs	r4, r4, #12
    813a:	0d76      	lsrs	r6, r6, #21
    813c:	401d      	ands	r5, r3
    813e:	2100      	movs	r1, #0
    8140:	0324      	lsls	r4, r4, #12
    8142:	0b23      	lsrs	r3, r4, #12
    8144:	0d0c      	lsrs	r4, r1, #20
    8146:	4a7e      	ldr	r2, [pc, #504]	; (8340 <__aeabi_dsub+0x34c>)
    8148:	0524      	lsls	r4, r4, #20
    814a:	431c      	orrs	r4, r3
    814c:	4014      	ands	r4, r2
    814e:	0533      	lsls	r3, r6, #20
    8150:	4323      	orrs	r3, r4
    8152:	005b      	lsls	r3, r3, #1
    8154:	07ed      	lsls	r5, r5, #31
    8156:	085b      	lsrs	r3, r3, #1
    8158:	432b      	orrs	r3, r5
    815a:	0038      	movs	r0, r7
    815c:	0019      	movs	r1, r3
    815e:	bc1c      	pop	{r2, r3, r4}
    8160:	4690      	mov	r8, r2
    8162:	4699      	mov	r9, r3
    8164:	46a2      	mov	sl, r4
    8166:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8168:	2501      	movs	r5, #1
    816a:	4643      	mov	r3, r8
    816c:	0762      	lsls	r2, r4, #29
    816e:	08ff      	lsrs	r7, r7, #3
    8170:	4317      	orrs	r7, r2
    8172:	08e4      	lsrs	r4, r4, #3
    8174:	401d      	ands	r5, r3
    8176:	4b70      	ldr	r3, [pc, #448]	; (8338 <__aeabi_dsub+0x344>)
    8178:	429e      	cmp	r6, r3
    817a:	d036      	beq.n	81ea <__aeabi_dsub+0x1f6>
    817c:	0324      	lsls	r4, r4, #12
    817e:	0576      	lsls	r6, r6, #21
    8180:	0b24      	lsrs	r4, r4, #12
    8182:	0d76      	lsrs	r6, r6, #21
    8184:	e7db      	b.n	813e <__aeabi_dsub+0x14a>
    8186:	4663      	mov	r3, ip
    8188:	1af3      	subs	r3, r6, r3
    818a:	2b00      	cmp	r3, #0
    818c:	dc00      	bgt.n	8190 <__aeabi_dsub+0x19c>
    818e:	e094      	b.n	82ba <__aeabi_dsub+0x2c6>
    8190:	4660      	mov	r0, ip
    8192:	2800      	cmp	r0, #0
    8194:	d035      	beq.n	8202 <__aeabi_dsub+0x20e>
    8196:	4868      	ldr	r0, [pc, #416]	; (8338 <__aeabi_dsub+0x344>)
    8198:	4286      	cmp	r6, r0
    819a:	d0b1      	beq.n	8100 <__aeabi_dsub+0x10c>
    819c:	2780      	movs	r7, #128	; 0x80
    819e:	043f      	lsls	r7, r7, #16
    81a0:	4339      	orrs	r1, r7
    81a2:	2b38      	cmp	r3, #56	; 0x38
    81a4:	dc00      	bgt.n	81a8 <__aeabi_dsub+0x1b4>
    81a6:	e0fd      	b.n	83a4 <__aeabi_dsub+0x3b0>
    81a8:	430a      	orrs	r2, r1
    81aa:	0017      	movs	r7, r2
    81ac:	2100      	movs	r1, #0
    81ae:	1e7a      	subs	r2, r7, #1
    81b0:	4197      	sbcs	r7, r2
    81b2:	4457      	add	r7, sl
    81b4:	4557      	cmp	r7, sl
    81b6:	4180      	sbcs	r0, r0
    81b8:	1909      	adds	r1, r1, r4
    81ba:	4244      	negs	r4, r0
    81bc:	190c      	adds	r4, r1, r4
    81be:	0223      	lsls	r3, r4, #8
    81c0:	d53a      	bpl.n	8238 <__aeabi_dsub+0x244>
    81c2:	4b5d      	ldr	r3, [pc, #372]	; (8338 <__aeabi_dsub+0x344>)
    81c4:	3601      	adds	r6, #1
    81c6:	429e      	cmp	r6, r3
    81c8:	d100      	bne.n	81cc <__aeabi_dsub+0x1d8>
    81ca:	e14b      	b.n	8464 <__aeabi_dsub+0x470>
    81cc:	2201      	movs	r2, #1
    81ce:	4b5b      	ldr	r3, [pc, #364]	; (833c <__aeabi_dsub+0x348>)
    81d0:	401c      	ands	r4, r3
    81d2:	087b      	lsrs	r3, r7, #1
    81d4:	4017      	ands	r7, r2
    81d6:	431f      	orrs	r7, r3
    81d8:	07e2      	lsls	r2, r4, #31
    81da:	4317      	orrs	r7, r2
    81dc:	0864      	lsrs	r4, r4, #1
    81de:	e78f      	b.n	8100 <__aeabi_dsub+0x10c>
    81e0:	0008      	movs	r0, r1
    81e2:	4310      	orrs	r0, r2
    81e4:	d000      	beq.n	81e8 <__aeabi_dsub+0x1f4>
    81e6:	e724      	b.n	8032 <__aeabi_dsub+0x3e>
    81e8:	e721      	b.n	802e <__aeabi_dsub+0x3a>
    81ea:	0023      	movs	r3, r4
    81ec:	433b      	orrs	r3, r7
    81ee:	d100      	bne.n	81f2 <__aeabi_dsub+0x1fe>
    81f0:	e1b9      	b.n	8566 <__aeabi_dsub+0x572>
    81f2:	2280      	movs	r2, #128	; 0x80
    81f4:	0312      	lsls	r2, r2, #12
    81f6:	4314      	orrs	r4, r2
    81f8:	0324      	lsls	r4, r4, #12
    81fa:	0b24      	lsrs	r4, r4, #12
    81fc:	e79f      	b.n	813e <__aeabi_dsub+0x14a>
    81fe:	002e      	movs	r6, r5
    8200:	e77e      	b.n	8100 <__aeabi_dsub+0x10c>
    8202:	0008      	movs	r0, r1
    8204:	4310      	orrs	r0, r2
    8206:	d100      	bne.n	820a <__aeabi_dsub+0x216>
    8208:	e0ca      	b.n	83a0 <__aeabi_dsub+0x3ac>
    820a:	1e58      	subs	r0, r3, #1
    820c:	4684      	mov	ip, r0
    820e:	2800      	cmp	r0, #0
    8210:	d000      	beq.n	8214 <__aeabi_dsub+0x220>
    8212:	e0e7      	b.n	83e4 <__aeabi_dsub+0x3f0>
    8214:	4452      	add	r2, sl
    8216:	4552      	cmp	r2, sl
    8218:	4180      	sbcs	r0, r0
    821a:	1864      	adds	r4, r4, r1
    821c:	4240      	negs	r0, r0
    821e:	1824      	adds	r4, r4, r0
    8220:	0017      	movs	r7, r2
    8222:	2601      	movs	r6, #1
    8224:	0223      	lsls	r3, r4, #8
    8226:	d507      	bpl.n	8238 <__aeabi_dsub+0x244>
    8228:	2602      	movs	r6, #2
    822a:	e7cf      	b.n	81cc <__aeabi_dsub+0x1d8>
    822c:	4664      	mov	r4, ip
    822e:	432c      	orrs	r4, r5
    8230:	d100      	bne.n	8234 <__aeabi_dsub+0x240>
    8232:	e1b3      	b.n	859c <__aeabi_dsub+0x5a8>
    8234:	002c      	movs	r4, r5
    8236:	4667      	mov	r7, ip
    8238:	077b      	lsls	r3, r7, #29
    823a:	d000      	beq.n	823e <__aeabi_dsub+0x24a>
    823c:	e762      	b.n	8104 <__aeabi_dsub+0x110>
    823e:	0763      	lsls	r3, r4, #29
    8240:	08ff      	lsrs	r7, r7, #3
    8242:	431f      	orrs	r7, r3
    8244:	2501      	movs	r5, #1
    8246:	4643      	mov	r3, r8
    8248:	08e4      	lsrs	r4, r4, #3
    824a:	401d      	ands	r5, r3
    824c:	e793      	b.n	8176 <__aeabi_dsub+0x182>
    824e:	2d00      	cmp	r5, #0
    8250:	d178      	bne.n	8344 <__aeabi_dsub+0x350>
    8252:	1c75      	adds	r5, r6, #1
    8254:	056d      	lsls	r5, r5, #21
    8256:	0d6d      	lsrs	r5, r5, #21
    8258:	2d01      	cmp	r5, #1
    825a:	dc00      	bgt.n	825e <__aeabi_dsub+0x26a>
    825c:	e0f2      	b.n	8444 <__aeabi_dsub+0x450>
    825e:	4650      	mov	r0, sl
    8260:	1a80      	subs	r0, r0, r2
    8262:	4582      	cmp	sl, r0
    8264:	41bf      	sbcs	r7, r7
    8266:	1a65      	subs	r5, r4, r1
    8268:	427f      	negs	r7, r7
    826a:	1bed      	subs	r5, r5, r7
    826c:	4684      	mov	ip, r0
    826e:	0228      	lsls	r0, r5, #8
    8270:	d400      	bmi.n	8274 <__aeabi_dsub+0x280>
    8272:	e08c      	b.n	838e <__aeabi_dsub+0x39a>
    8274:	4650      	mov	r0, sl
    8276:	1a17      	subs	r7, r2, r0
    8278:	42ba      	cmp	r2, r7
    827a:	4192      	sbcs	r2, r2
    827c:	1b0c      	subs	r4, r1, r4
    827e:	4255      	negs	r5, r2
    8280:	1b65      	subs	r5, r4, r5
    8282:	4698      	mov	r8, r3
    8284:	e714      	b.n	80b0 <__aeabi_dsub+0xbc>
    8286:	2501      	movs	r5, #1
    8288:	4643      	mov	r3, r8
    828a:	2400      	movs	r4, #0
    828c:	401d      	ands	r5, r3
    828e:	2700      	movs	r7, #0
    8290:	e755      	b.n	813e <__aeabi_dsub+0x14a>
    8292:	4c2a      	ldr	r4, [pc, #168]	; (833c <__aeabi_dsub+0x348>)
    8294:	1af6      	subs	r6, r6, r3
    8296:	402c      	ands	r4, r5
    8298:	e732      	b.n	8100 <__aeabi_dsub+0x10c>
    829a:	003d      	movs	r5, r7
    829c:	3828      	subs	r0, #40	; 0x28
    829e:	4085      	lsls	r5, r0
    82a0:	2700      	movs	r7, #0
    82a2:	e717      	b.n	80d4 <__aeabi_dsub+0xe0>
    82a4:	0038      	movs	r0, r7
    82a6:	f000 fb03 	bl	88b0 <__clzsi2>
    82aa:	3020      	adds	r0, #32
    82ac:	e706      	b.n	80bc <__aeabi_dsub+0xc8>
    82ae:	430a      	orrs	r2, r1
    82b0:	0017      	movs	r7, r2
    82b2:	2100      	movs	r1, #0
    82b4:	1e7a      	subs	r2, r7, #1
    82b6:	4197      	sbcs	r7, r2
    82b8:	e6ee      	b.n	8098 <__aeabi_dsub+0xa4>
    82ba:	2b00      	cmp	r3, #0
    82bc:	d000      	beq.n	82c0 <__aeabi_dsub+0x2cc>
    82be:	e0e5      	b.n	848c <__aeabi_dsub+0x498>
    82c0:	1c73      	adds	r3, r6, #1
    82c2:	469c      	mov	ip, r3
    82c4:	055b      	lsls	r3, r3, #21
    82c6:	0d5b      	lsrs	r3, r3, #21
    82c8:	2b01      	cmp	r3, #1
    82ca:	dc00      	bgt.n	82ce <__aeabi_dsub+0x2da>
    82cc:	e09f      	b.n	840e <__aeabi_dsub+0x41a>
    82ce:	4b1a      	ldr	r3, [pc, #104]	; (8338 <__aeabi_dsub+0x344>)
    82d0:	459c      	cmp	ip, r3
    82d2:	d100      	bne.n	82d6 <__aeabi_dsub+0x2e2>
    82d4:	e0c5      	b.n	8462 <__aeabi_dsub+0x46e>
    82d6:	4452      	add	r2, sl
    82d8:	4552      	cmp	r2, sl
    82da:	4180      	sbcs	r0, r0
    82dc:	1864      	adds	r4, r4, r1
    82de:	4240      	negs	r0, r0
    82e0:	1824      	adds	r4, r4, r0
    82e2:	07e7      	lsls	r7, r4, #31
    82e4:	0852      	lsrs	r2, r2, #1
    82e6:	4317      	orrs	r7, r2
    82e8:	0864      	lsrs	r4, r4, #1
    82ea:	4666      	mov	r6, ip
    82ec:	e708      	b.n	8100 <__aeabi_dsub+0x10c>
    82ee:	4812      	ldr	r0, [pc, #72]	; (8338 <__aeabi_dsub+0x344>)
    82f0:	4285      	cmp	r5, r0
    82f2:	d100      	bne.n	82f6 <__aeabi_dsub+0x302>
    82f4:	e085      	b.n	8402 <__aeabi_dsub+0x40e>
    82f6:	001d      	movs	r5, r3
    82f8:	e6bc      	b.n	8074 <__aeabi_dsub+0x80>
    82fa:	0029      	movs	r1, r5
    82fc:	3e1f      	subs	r6, #31
    82fe:	40f1      	lsrs	r1, r6
    8300:	2b20      	cmp	r3, #32
    8302:	d100      	bne.n	8306 <__aeabi_dsub+0x312>
    8304:	e07f      	b.n	8406 <__aeabi_dsub+0x412>
    8306:	2240      	movs	r2, #64	; 0x40
    8308:	1ad3      	subs	r3, r2, r3
    830a:	409d      	lsls	r5, r3
    830c:	432f      	orrs	r7, r5
    830e:	1e7d      	subs	r5, r7, #1
    8310:	41af      	sbcs	r7, r5
    8312:	2400      	movs	r4, #0
    8314:	430f      	orrs	r7, r1
    8316:	2600      	movs	r6, #0
    8318:	e78e      	b.n	8238 <__aeabi_dsub+0x244>
    831a:	002b      	movs	r3, r5
    831c:	000f      	movs	r7, r1
    831e:	3b20      	subs	r3, #32
    8320:	40df      	lsrs	r7, r3
    8322:	2d20      	cmp	r5, #32
    8324:	d071      	beq.n	840a <__aeabi_dsub+0x416>
    8326:	2340      	movs	r3, #64	; 0x40
    8328:	1b5d      	subs	r5, r3, r5
    832a:	40a9      	lsls	r1, r5
    832c:	430a      	orrs	r2, r1
    832e:	1e51      	subs	r1, r2, #1
    8330:	418a      	sbcs	r2, r1
    8332:	2100      	movs	r1, #0
    8334:	4317      	orrs	r7, r2
    8336:	e6af      	b.n	8098 <__aeabi_dsub+0xa4>
    8338:	000007ff 	.word	0x000007ff
    833c:	ff7fffff 	.word	0xff7fffff
    8340:	800fffff 	.word	0x800fffff
    8344:	2e00      	cmp	r6, #0
    8346:	d03e      	beq.n	83c6 <__aeabi_dsub+0x3d2>
    8348:	4eb3      	ldr	r6, [pc, #716]	; (8618 <__aeabi_dsub+0x624>)
    834a:	45b4      	cmp	ip, r6
    834c:	d045      	beq.n	83da <__aeabi_dsub+0x3e6>
    834e:	2680      	movs	r6, #128	; 0x80
    8350:	0436      	lsls	r6, r6, #16
    8352:	426d      	negs	r5, r5
    8354:	4334      	orrs	r4, r6
    8356:	2d38      	cmp	r5, #56	; 0x38
    8358:	dd00      	ble.n	835c <__aeabi_dsub+0x368>
    835a:	e0a8      	b.n	84ae <__aeabi_dsub+0x4ba>
    835c:	2d1f      	cmp	r5, #31
    835e:	dd00      	ble.n	8362 <__aeabi_dsub+0x36e>
    8360:	e11f      	b.n	85a2 <__aeabi_dsub+0x5ae>
    8362:	2620      	movs	r6, #32
    8364:	0027      	movs	r7, r4
    8366:	4650      	mov	r0, sl
    8368:	1b76      	subs	r6, r6, r5
    836a:	40b7      	lsls	r7, r6
    836c:	40e8      	lsrs	r0, r5
    836e:	4307      	orrs	r7, r0
    8370:	4650      	mov	r0, sl
    8372:	40b0      	lsls	r0, r6
    8374:	1e46      	subs	r6, r0, #1
    8376:	41b0      	sbcs	r0, r6
    8378:	40ec      	lsrs	r4, r5
    837a:	4338      	orrs	r0, r7
    837c:	1a17      	subs	r7, r2, r0
    837e:	42ba      	cmp	r2, r7
    8380:	4192      	sbcs	r2, r2
    8382:	1b0c      	subs	r4, r1, r4
    8384:	4252      	negs	r2, r2
    8386:	1aa4      	subs	r4, r4, r2
    8388:	4666      	mov	r6, ip
    838a:	4698      	mov	r8, r3
    838c:	e68b      	b.n	80a6 <__aeabi_dsub+0xb2>
    838e:	4664      	mov	r4, ip
    8390:	4667      	mov	r7, ip
    8392:	432c      	orrs	r4, r5
    8394:	d000      	beq.n	8398 <__aeabi_dsub+0x3a4>
    8396:	e68b      	b.n	80b0 <__aeabi_dsub+0xbc>
    8398:	2500      	movs	r5, #0
    839a:	2600      	movs	r6, #0
    839c:	2700      	movs	r7, #0
    839e:	e6ea      	b.n	8176 <__aeabi_dsub+0x182>
    83a0:	001e      	movs	r6, r3
    83a2:	e6ad      	b.n	8100 <__aeabi_dsub+0x10c>
    83a4:	2b1f      	cmp	r3, #31
    83a6:	dc60      	bgt.n	846a <__aeabi_dsub+0x476>
    83a8:	2720      	movs	r7, #32
    83aa:	1af8      	subs	r0, r7, r3
    83ac:	000f      	movs	r7, r1
    83ae:	4684      	mov	ip, r0
    83b0:	4087      	lsls	r7, r0
    83b2:	0010      	movs	r0, r2
    83b4:	40d8      	lsrs	r0, r3
    83b6:	4307      	orrs	r7, r0
    83b8:	4660      	mov	r0, ip
    83ba:	4082      	lsls	r2, r0
    83bc:	1e50      	subs	r0, r2, #1
    83be:	4182      	sbcs	r2, r0
    83c0:	40d9      	lsrs	r1, r3
    83c2:	4317      	orrs	r7, r2
    83c4:	e6f5      	b.n	81b2 <__aeabi_dsub+0x1be>
    83c6:	0026      	movs	r6, r4
    83c8:	4650      	mov	r0, sl
    83ca:	4306      	orrs	r6, r0
    83cc:	d005      	beq.n	83da <__aeabi_dsub+0x3e6>
    83ce:	43ed      	mvns	r5, r5
    83d0:	2d00      	cmp	r5, #0
    83d2:	d0d3      	beq.n	837c <__aeabi_dsub+0x388>
    83d4:	4e90      	ldr	r6, [pc, #576]	; (8618 <__aeabi_dsub+0x624>)
    83d6:	45b4      	cmp	ip, r6
    83d8:	d1bd      	bne.n	8356 <__aeabi_dsub+0x362>
    83da:	000c      	movs	r4, r1
    83dc:	0017      	movs	r7, r2
    83de:	4666      	mov	r6, ip
    83e0:	4698      	mov	r8, r3
    83e2:	e68d      	b.n	8100 <__aeabi_dsub+0x10c>
    83e4:	488c      	ldr	r0, [pc, #560]	; (8618 <__aeabi_dsub+0x624>)
    83e6:	4283      	cmp	r3, r0
    83e8:	d00b      	beq.n	8402 <__aeabi_dsub+0x40e>
    83ea:	4663      	mov	r3, ip
    83ec:	e6d9      	b.n	81a2 <__aeabi_dsub+0x1ae>
    83ee:	2d00      	cmp	r5, #0
    83f0:	d000      	beq.n	83f4 <__aeabi_dsub+0x400>
    83f2:	e096      	b.n	8522 <__aeabi_dsub+0x52e>
    83f4:	0008      	movs	r0, r1
    83f6:	4310      	orrs	r0, r2
    83f8:	d100      	bne.n	83fc <__aeabi_dsub+0x408>
    83fa:	e0e2      	b.n	85c2 <__aeabi_dsub+0x5ce>
    83fc:	000c      	movs	r4, r1
    83fe:	0017      	movs	r7, r2
    8400:	4698      	mov	r8, r3
    8402:	4e85      	ldr	r6, [pc, #532]	; (8618 <__aeabi_dsub+0x624>)
    8404:	e67c      	b.n	8100 <__aeabi_dsub+0x10c>
    8406:	2500      	movs	r5, #0
    8408:	e780      	b.n	830c <__aeabi_dsub+0x318>
    840a:	2100      	movs	r1, #0
    840c:	e78e      	b.n	832c <__aeabi_dsub+0x338>
    840e:	0023      	movs	r3, r4
    8410:	4650      	mov	r0, sl
    8412:	4303      	orrs	r3, r0
    8414:	2e00      	cmp	r6, #0
    8416:	d000      	beq.n	841a <__aeabi_dsub+0x426>
    8418:	e0a8      	b.n	856c <__aeabi_dsub+0x578>
    841a:	2b00      	cmp	r3, #0
    841c:	d100      	bne.n	8420 <__aeabi_dsub+0x42c>
    841e:	e0de      	b.n	85de <__aeabi_dsub+0x5ea>
    8420:	000b      	movs	r3, r1
    8422:	4313      	orrs	r3, r2
    8424:	d100      	bne.n	8428 <__aeabi_dsub+0x434>
    8426:	e66b      	b.n	8100 <__aeabi_dsub+0x10c>
    8428:	4452      	add	r2, sl
    842a:	4552      	cmp	r2, sl
    842c:	4180      	sbcs	r0, r0
    842e:	1864      	adds	r4, r4, r1
    8430:	4240      	negs	r0, r0
    8432:	1824      	adds	r4, r4, r0
    8434:	0017      	movs	r7, r2
    8436:	0223      	lsls	r3, r4, #8
    8438:	d400      	bmi.n	843c <__aeabi_dsub+0x448>
    843a:	e6fd      	b.n	8238 <__aeabi_dsub+0x244>
    843c:	4b77      	ldr	r3, [pc, #476]	; (861c <__aeabi_dsub+0x628>)
    843e:	4666      	mov	r6, ip
    8440:	401c      	ands	r4, r3
    8442:	e65d      	b.n	8100 <__aeabi_dsub+0x10c>
    8444:	0025      	movs	r5, r4
    8446:	4650      	mov	r0, sl
    8448:	4305      	orrs	r5, r0
    844a:	2e00      	cmp	r6, #0
    844c:	d1cf      	bne.n	83ee <__aeabi_dsub+0x3fa>
    844e:	2d00      	cmp	r5, #0
    8450:	d14f      	bne.n	84f2 <__aeabi_dsub+0x4fe>
    8452:	000c      	movs	r4, r1
    8454:	4314      	orrs	r4, r2
    8456:	d100      	bne.n	845a <__aeabi_dsub+0x466>
    8458:	e0a0      	b.n	859c <__aeabi_dsub+0x5a8>
    845a:	000c      	movs	r4, r1
    845c:	0017      	movs	r7, r2
    845e:	4698      	mov	r8, r3
    8460:	e64e      	b.n	8100 <__aeabi_dsub+0x10c>
    8462:	4666      	mov	r6, ip
    8464:	2400      	movs	r4, #0
    8466:	2700      	movs	r7, #0
    8468:	e685      	b.n	8176 <__aeabi_dsub+0x182>
    846a:	001f      	movs	r7, r3
    846c:	0008      	movs	r0, r1
    846e:	3f20      	subs	r7, #32
    8470:	40f8      	lsrs	r0, r7
    8472:	0007      	movs	r7, r0
    8474:	2b20      	cmp	r3, #32
    8476:	d100      	bne.n	847a <__aeabi_dsub+0x486>
    8478:	e08e      	b.n	8598 <__aeabi_dsub+0x5a4>
    847a:	2040      	movs	r0, #64	; 0x40
    847c:	1ac3      	subs	r3, r0, r3
    847e:	4099      	lsls	r1, r3
    8480:	430a      	orrs	r2, r1
    8482:	1e51      	subs	r1, r2, #1
    8484:	418a      	sbcs	r2, r1
    8486:	2100      	movs	r1, #0
    8488:	4317      	orrs	r7, r2
    848a:	e692      	b.n	81b2 <__aeabi_dsub+0x1be>
    848c:	2e00      	cmp	r6, #0
    848e:	d114      	bne.n	84ba <__aeabi_dsub+0x4c6>
    8490:	0026      	movs	r6, r4
    8492:	4650      	mov	r0, sl
    8494:	4306      	orrs	r6, r0
    8496:	d062      	beq.n	855e <__aeabi_dsub+0x56a>
    8498:	43db      	mvns	r3, r3
    849a:	2b00      	cmp	r3, #0
    849c:	d15c      	bne.n	8558 <__aeabi_dsub+0x564>
    849e:	1887      	adds	r7, r0, r2
    84a0:	4297      	cmp	r7, r2
    84a2:	4192      	sbcs	r2, r2
    84a4:	1864      	adds	r4, r4, r1
    84a6:	4252      	negs	r2, r2
    84a8:	18a4      	adds	r4, r4, r2
    84aa:	4666      	mov	r6, ip
    84ac:	e687      	b.n	81be <__aeabi_dsub+0x1ca>
    84ae:	4650      	mov	r0, sl
    84b0:	4320      	orrs	r0, r4
    84b2:	1e44      	subs	r4, r0, #1
    84b4:	41a0      	sbcs	r0, r4
    84b6:	2400      	movs	r4, #0
    84b8:	e760      	b.n	837c <__aeabi_dsub+0x388>
    84ba:	4e57      	ldr	r6, [pc, #348]	; (8618 <__aeabi_dsub+0x624>)
    84bc:	45b4      	cmp	ip, r6
    84be:	d04e      	beq.n	855e <__aeabi_dsub+0x56a>
    84c0:	2680      	movs	r6, #128	; 0x80
    84c2:	0436      	lsls	r6, r6, #16
    84c4:	425b      	negs	r3, r3
    84c6:	4334      	orrs	r4, r6
    84c8:	2b38      	cmp	r3, #56	; 0x38
    84ca:	dd00      	ble.n	84ce <__aeabi_dsub+0x4da>
    84cc:	e07f      	b.n	85ce <__aeabi_dsub+0x5da>
    84ce:	2b1f      	cmp	r3, #31
    84d0:	dd00      	ble.n	84d4 <__aeabi_dsub+0x4e0>
    84d2:	e08b      	b.n	85ec <__aeabi_dsub+0x5f8>
    84d4:	2620      	movs	r6, #32
    84d6:	0027      	movs	r7, r4
    84d8:	4650      	mov	r0, sl
    84da:	1af6      	subs	r6, r6, r3
    84dc:	40b7      	lsls	r7, r6
    84de:	40d8      	lsrs	r0, r3
    84e0:	4307      	orrs	r7, r0
    84e2:	4650      	mov	r0, sl
    84e4:	40b0      	lsls	r0, r6
    84e6:	1e46      	subs	r6, r0, #1
    84e8:	41b0      	sbcs	r0, r6
    84ea:	4307      	orrs	r7, r0
    84ec:	40dc      	lsrs	r4, r3
    84ee:	18bf      	adds	r7, r7, r2
    84f0:	e7d6      	b.n	84a0 <__aeabi_dsub+0x4ac>
    84f2:	000d      	movs	r5, r1
    84f4:	4315      	orrs	r5, r2
    84f6:	d100      	bne.n	84fa <__aeabi_dsub+0x506>
    84f8:	e602      	b.n	8100 <__aeabi_dsub+0x10c>
    84fa:	4650      	mov	r0, sl
    84fc:	1a80      	subs	r0, r0, r2
    84fe:	4582      	cmp	sl, r0
    8500:	41bf      	sbcs	r7, r7
    8502:	1a65      	subs	r5, r4, r1
    8504:	427f      	negs	r7, r7
    8506:	1bed      	subs	r5, r5, r7
    8508:	4684      	mov	ip, r0
    850a:	0228      	lsls	r0, r5, #8
    850c:	d400      	bmi.n	8510 <__aeabi_dsub+0x51c>
    850e:	e68d      	b.n	822c <__aeabi_dsub+0x238>
    8510:	4650      	mov	r0, sl
    8512:	1a17      	subs	r7, r2, r0
    8514:	42ba      	cmp	r2, r7
    8516:	4192      	sbcs	r2, r2
    8518:	1b0c      	subs	r4, r1, r4
    851a:	4252      	negs	r2, r2
    851c:	1aa4      	subs	r4, r4, r2
    851e:	4698      	mov	r8, r3
    8520:	e5ee      	b.n	8100 <__aeabi_dsub+0x10c>
    8522:	000d      	movs	r5, r1
    8524:	4315      	orrs	r5, r2
    8526:	d100      	bne.n	852a <__aeabi_dsub+0x536>
    8528:	e76b      	b.n	8402 <__aeabi_dsub+0x40e>
    852a:	4650      	mov	r0, sl
    852c:	0767      	lsls	r7, r4, #29
    852e:	08c0      	lsrs	r0, r0, #3
    8530:	4307      	orrs	r7, r0
    8532:	2080      	movs	r0, #128	; 0x80
    8534:	08e4      	lsrs	r4, r4, #3
    8536:	0300      	lsls	r0, r0, #12
    8538:	4204      	tst	r4, r0
    853a:	d007      	beq.n	854c <__aeabi_dsub+0x558>
    853c:	08cd      	lsrs	r5, r1, #3
    853e:	4205      	tst	r5, r0
    8540:	d104      	bne.n	854c <__aeabi_dsub+0x558>
    8542:	002c      	movs	r4, r5
    8544:	4698      	mov	r8, r3
    8546:	08d7      	lsrs	r7, r2, #3
    8548:	0749      	lsls	r1, r1, #29
    854a:	430f      	orrs	r7, r1
    854c:	0f7b      	lsrs	r3, r7, #29
    854e:	00e4      	lsls	r4, r4, #3
    8550:	431c      	orrs	r4, r3
    8552:	00ff      	lsls	r7, r7, #3
    8554:	4e30      	ldr	r6, [pc, #192]	; (8618 <__aeabi_dsub+0x624>)
    8556:	e5d3      	b.n	8100 <__aeabi_dsub+0x10c>
    8558:	4e2f      	ldr	r6, [pc, #188]	; (8618 <__aeabi_dsub+0x624>)
    855a:	45b4      	cmp	ip, r6
    855c:	d1b4      	bne.n	84c8 <__aeabi_dsub+0x4d4>
    855e:	000c      	movs	r4, r1
    8560:	0017      	movs	r7, r2
    8562:	4666      	mov	r6, ip
    8564:	e5cc      	b.n	8100 <__aeabi_dsub+0x10c>
    8566:	2700      	movs	r7, #0
    8568:	2400      	movs	r4, #0
    856a:	e5e8      	b.n	813e <__aeabi_dsub+0x14a>
    856c:	2b00      	cmp	r3, #0
    856e:	d039      	beq.n	85e4 <__aeabi_dsub+0x5f0>
    8570:	000b      	movs	r3, r1
    8572:	4313      	orrs	r3, r2
    8574:	d100      	bne.n	8578 <__aeabi_dsub+0x584>
    8576:	e744      	b.n	8402 <__aeabi_dsub+0x40e>
    8578:	08c0      	lsrs	r0, r0, #3
    857a:	0767      	lsls	r7, r4, #29
    857c:	4307      	orrs	r7, r0
    857e:	2080      	movs	r0, #128	; 0x80
    8580:	08e4      	lsrs	r4, r4, #3
    8582:	0300      	lsls	r0, r0, #12
    8584:	4204      	tst	r4, r0
    8586:	d0e1      	beq.n	854c <__aeabi_dsub+0x558>
    8588:	08cb      	lsrs	r3, r1, #3
    858a:	4203      	tst	r3, r0
    858c:	d1de      	bne.n	854c <__aeabi_dsub+0x558>
    858e:	08d7      	lsrs	r7, r2, #3
    8590:	0749      	lsls	r1, r1, #29
    8592:	430f      	orrs	r7, r1
    8594:	001c      	movs	r4, r3
    8596:	e7d9      	b.n	854c <__aeabi_dsub+0x558>
    8598:	2100      	movs	r1, #0
    859a:	e771      	b.n	8480 <__aeabi_dsub+0x48c>
    859c:	2500      	movs	r5, #0
    859e:	2700      	movs	r7, #0
    85a0:	e5e9      	b.n	8176 <__aeabi_dsub+0x182>
    85a2:	002e      	movs	r6, r5
    85a4:	0027      	movs	r7, r4
    85a6:	3e20      	subs	r6, #32
    85a8:	40f7      	lsrs	r7, r6
    85aa:	2d20      	cmp	r5, #32
    85ac:	d02f      	beq.n	860e <__aeabi_dsub+0x61a>
    85ae:	2640      	movs	r6, #64	; 0x40
    85b0:	1b75      	subs	r5, r6, r5
    85b2:	40ac      	lsls	r4, r5
    85b4:	4650      	mov	r0, sl
    85b6:	4320      	orrs	r0, r4
    85b8:	1e44      	subs	r4, r0, #1
    85ba:	41a0      	sbcs	r0, r4
    85bc:	2400      	movs	r4, #0
    85be:	4338      	orrs	r0, r7
    85c0:	e6dc      	b.n	837c <__aeabi_dsub+0x388>
    85c2:	2480      	movs	r4, #128	; 0x80
    85c4:	2500      	movs	r5, #0
    85c6:	0324      	lsls	r4, r4, #12
    85c8:	4e13      	ldr	r6, [pc, #76]	; (8618 <__aeabi_dsub+0x624>)
    85ca:	2700      	movs	r7, #0
    85cc:	e5d3      	b.n	8176 <__aeabi_dsub+0x182>
    85ce:	4650      	mov	r0, sl
    85d0:	4320      	orrs	r0, r4
    85d2:	0007      	movs	r7, r0
    85d4:	1e78      	subs	r0, r7, #1
    85d6:	4187      	sbcs	r7, r0
    85d8:	2400      	movs	r4, #0
    85da:	18bf      	adds	r7, r7, r2
    85dc:	e760      	b.n	84a0 <__aeabi_dsub+0x4ac>
    85de:	000c      	movs	r4, r1
    85e0:	0017      	movs	r7, r2
    85e2:	e58d      	b.n	8100 <__aeabi_dsub+0x10c>
    85e4:	000c      	movs	r4, r1
    85e6:	0017      	movs	r7, r2
    85e8:	4e0b      	ldr	r6, [pc, #44]	; (8618 <__aeabi_dsub+0x624>)
    85ea:	e589      	b.n	8100 <__aeabi_dsub+0x10c>
    85ec:	001e      	movs	r6, r3
    85ee:	0027      	movs	r7, r4
    85f0:	3e20      	subs	r6, #32
    85f2:	40f7      	lsrs	r7, r6
    85f4:	2b20      	cmp	r3, #32
    85f6:	d00c      	beq.n	8612 <__aeabi_dsub+0x61e>
    85f8:	2640      	movs	r6, #64	; 0x40
    85fa:	1af3      	subs	r3, r6, r3
    85fc:	409c      	lsls	r4, r3
    85fe:	4650      	mov	r0, sl
    8600:	4320      	orrs	r0, r4
    8602:	1e44      	subs	r4, r0, #1
    8604:	41a0      	sbcs	r0, r4
    8606:	4307      	orrs	r7, r0
    8608:	2400      	movs	r4, #0
    860a:	18bf      	adds	r7, r7, r2
    860c:	e748      	b.n	84a0 <__aeabi_dsub+0x4ac>
    860e:	2400      	movs	r4, #0
    8610:	e7d0      	b.n	85b4 <__aeabi_dsub+0x5c0>
    8612:	2400      	movs	r4, #0
    8614:	e7f3      	b.n	85fe <__aeabi_dsub+0x60a>
    8616:	46c0      	nop			; (mov r8, r8)
    8618:	000007ff 	.word	0x000007ff
    861c:	ff7fffff 	.word	0xff7fffff

00008620 <__aeabi_d2iz>:
    8620:	b530      	push	{r4, r5, lr}
    8622:	4d13      	ldr	r5, [pc, #76]	; (8670 <__aeabi_d2iz+0x50>)
    8624:	030a      	lsls	r2, r1, #12
    8626:	004b      	lsls	r3, r1, #1
    8628:	0b12      	lsrs	r2, r2, #12
    862a:	0d5b      	lsrs	r3, r3, #21
    862c:	0fc9      	lsrs	r1, r1, #31
    862e:	2400      	movs	r4, #0
    8630:	42ab      	cmp	r3, r5
    8632:	dd10      	ble.n	8656 <__aeabi_d2iz+0x36>
    8634:	4c0f      	ldr	r4, [pc, #60]	; (8674 <__aeabi_d2iz+0x54>)
    8636:	42a3      	cmp	r3, r4
    8638:	dc0f      	bgt.n	865a <__aeabi_d2iz+0x3a>
    863a:	2480      	movs	r4, #128	; 0x80
    863c:	4d0e      	ldr	r5, [pc, #56]	; (8678 <__aeabi_d2iz+0x58>)
    863e:	0364      	lsls	r4, r4, #13
    8640:	4322      	orrs	r2, r4
    8642:	1aed      	subs	r5, r5, r3
    8644:	2d1f      	cmp	r5, #31
    8646:	dd0b      	ble.n	8660 <__aeabi_d2iz+0x40>
    8648:	480c      	ldr	r0, [pc, #48]	; (867c <__aeabi_d2iz+0x5c>)
    864a:	1ac3      	subs	r3, r0, r3
    864c:	40da      	lsrs	r2, r3
    864e:	4254      	negs	r4, r2
    8650:	2900      	cmp	r1, #0
    8652:	d100      	bne.n	8656 <__aeabi_d2iz+0x36>
    8654:	0014      	movs	r4, r2
    8656:	0020      	movs	r0, r4
    8658:	bd30      	pop	{r4, r5, pc}
    865a:	4b09      	ldr	r3, [pc, #36]	; (8680 <__aeabi_d2iz+0x60>)
    865c:	18cc      	adds	r4, r1, r3
    865e:	e7fa      	b.n	8656 <__aeabi_d2iz+0x36>
    8660:	4c08      	ldr	r4, [pc, #32]	; (8684 <__aeabi_d2iz+0x64>)
    8662:	40e8      	lsrs	r0, r5
    8664:	46a4      	mov	ip, r4
    8666:	4463      	add	r3, ip
    8668:	409a      	lsls	r2, r3
    866a:	4302      	orrs	r2, r0
    866c:	e7ef      	b.n	864e <__aeabi_d2iz+0x2e>
    866e:	46c0      	nop			; (mov r8, r8)
    8670:	000003fe 	.word	0x000003fe
    8674:	0000041d 	.word	0x0000041d
    8678:	00000433 	.word	0x00000433
    867c:	00000413 	.word	0x00000413
    8680:	7fffffff 	.word	0x7fffffff
    8684:	fffffbed 	.word	0xfffffbed

00008688 <__aeabi_ui2d>:
    8688:	b510      	push	{r4, lr}
    868a:	1e04      	subs	r4, r0, #0
    868c:	d028      	beq.n	86e0 <__aeabi_ui2d+0x58>
    868e:	f000 f90f 	bl	88b0 <__clzsi2>
    8692:	4b15      	ldr	r3, [pc, #84]	; (86e8 <__aeabi_ui2d+0x60>)
    8694:	4a15      	ldr	r2, [pc, #84]	; (86ec <__aeabi_ui2d+0x64>)
    8696:	1a1b      	subs	r3, r3, r0
    8698:	1ad2      	subs	r2, r2, r3
    869a:	2a1f      	cmp	r2, #31
    869c:	dd15      	ble.n	86ca <__aeabi_ui2d+0x42>
    869e:	4a14      	ldr	r2, [pc, #80]	; (86f0 <__aeabi_ui2d+0x68>)
    86a0:	1ad2      	subs	r2, r2, r3
    86a2:	4094      	lsls	r4, r2
    86a4:	2200      	movs	r2, #0
    86a6:	0324      	lsls	r4, r4, #12
    86a8:	055b      	lsls	r3, r3, #21
    86aa:	0b24      	lsrs	r4, r4, #12
    86ac:	0d5b      	lsrs	r3, r3, #21
    86ae:	2100      	movs	r1, #0
    86b0:	0010      	movs	r0, r2
    86b2:	0324      	lsls	r4, r4, #12
    86b4:	0d0a      	lsrs	r2, r1, #20
    86b6:	0b24      	lsrs	r4, r4, #12
    86b8:	0512      	lsls	r2, r2, #20
    86ba:	4322      	orrs	r2, r4
    86bc:	4c0d      	ldr	r4, [pc, #52]	; (86f4 <__aeabi_ui2d+0x6c>)
    86be:	051b      	lsls	r3, r3, #20
    86c0:	4022      	ands	r2, r4
    86c2:	4313      	orrs	r3, r2
    86c4:	005b      	lsls	r3, r3, #1
    86c6:	0859      	lsrs	r1, r3, #1
    86c8:	bd10      	pop	{r4, pc}
    86ca:	0021      	movs	r1, r4
    86cc:	4091      	lsls	r1, r2
    86ce:	000a      	movs	r2, r1
    86d0:	210b      	movs	r1, #11
    86d2:	1a08      	subs	r0, r1, r0
    86d4:	40c4      	lsrs	r4, r0
    86d6:	055b      	lsls	r3, r3, #21
    86d8:	0324      	lsls	r4, r4, #12
    86da:	0b24      	lsrs	r4, r4, #12
    86dc:	0d5b      	lsrs	r3, r3, #21
    86de:	e7e6      	b.n	86ae <__aeabi_ui2d+0x26>
    86e0:	2300      	movs	r3, #0
    86e2:	2400      	movs	r4, #0
    86e4:	2200      	movs	r2, #0
    86e6:	e7e2      	b.n	86ae <__aeabi_ui2d+0x26>
    86e8:	0000041e 	.word	0x0000041e
    86ec:	00000433 	.word	0x00000433
    86f0:	00000413 	.word	0x00000413
    86f4:	800fffff 	.word	0x800fffff

000086f8 <__aeabi_f2d>:
    86f8:	0041      	lsls	r1, r0, #1
    86fa:	0e09      	lsrs	r1, r1, #24
    86fc:	1c4b      	adds	r3, r1, #1
    86fe:	b570      	push	{r4, r5, r6, lr}
    8700:	b2db      	uxtb	r3, r3
    8702:	0246      	lsls	r6, r0, #9
    8704:	0a75      	lsrs	r5, r6, #9
    8706:	0fc4      	lsrs	r4, r0, #31
    8708:	2b01      	cmp	r3, #1
    870a:	dd14      	ble.n	8736 <__aeabi_f2d+0x3e>
    870c:	23e0      	movs	r3, #224	; 0xe0
    870e:	009b      	lsls	r3, r3, #2
    8710:	076d      	lsls	r5, r5, #29
    8712:	0b36      	lsrs	r6, r6, #12
    8714:	18cb      	adds	r3, r1, r3
    8716:	2100      	movs	r1, #0
    8718:	0d0a      	lsrs	r2, r1, #20
    871a:	0028      	movs	r0, r5
    871c:	0512      	lsls	r2, r2, #20
    871e:	4d1c      	ldr	r5, [pc, #112]	; (8790 <__aeabi_f2d+0x98>)
    8720:	4332      	orrs	r2, r6
    8722:	055b      	lsls	r3, r3, #21
    8724:	402a      	ands	r2, r5
    8726:	085b      	lsrs	r3, r3, #1
    8728:	4313      	orrs	r3, r2
    872a:	005b      	lsls	r3, r3, #1
    872c:	07e4      	lsls	r4, r4, #31
    872e:	085b      	lsrs	r3, r3, #1
    8730:	4323      	orrs	r3, r4
    8732:	0019      	movs	r1, r3
    8734:	bd70      	pop	{r4, r5, r6, pc}
    8736:	2900      	cmp	r1, #0
    8738:	d114      	bne.n	8764 <__aeabi_f2d+0x6c>
    873a:	2d00      	cmp	r5, #0
    873c:	d01e      	beq.n	877c <__aeabi_f2d+0x84>
    873e:	0028      	movs	r0, r5
    8740:	f000 f8b6 	bl	88b0 <__clzsi2>
    8744:	280a      	cmp	r0, #10
    8746:	dc1c      	bgt.n	8782 <__aeabi_f2d+0x8a>
    8748:	230b      	movs	r3, #11
    874a:	002a      	movs	r2, r5
    874c:	1a1b      	subs	r3, r3, r0
    874e:	40da      	lsrs	r2, r3
    8750:	0003      	movs	r3, r0
    8752:	3315      	adds	r3, #21
    8754:	409d      	lsls	r5, r3
    8756:	4b0f      	ldr	r3, [pc, #60]	; (8794 <__aeabi_f2d+0x9c>)
    8758:	0312      	lsls	r2, r2, #12
    875a:	1a1b      	subs	r3, r3, r0
    875c:	055b      	lsls	r3, r3, #21
    875e:	0b16      	lsrs	r6, r2, #12
    8760:	0d5b      	lsrs	r3, r3, #21
    8762:	e7d8      	b.n	8716 <__aeabi_f2d+0x1e>
    8764:	2d00      	cmp	r5, #0
    8766:	d006      	beq.n	8776 <__aeabi_f2d+0x7e>
    8768:	0b32      	lsrs	r2, r6, #12
    876a:	2680      	movs	r6, #128	; 0x80
    876c:	0336      	lsls	r6, r6, #12
    876e:	076d      	lsls	r5, r5, #29
    8770:	4316      	orrs	r6, r2
    8772:	4b09      	ldr	r3, [pc, #36]	; (8798 <__aeabi_f2d+0xa0>)
    8774:	e7cf      	b.n	8716 <__aeabi_f2d+0x1e>
    8776:	4b08      	ldr	r3, [pc, #32]	; (8798 <__aeabi_f2d+0xa0>)
    8778:	2600      	movs	r6, #0
    877a:	e7cc      	b.n	8716 <__aeabi_f2d+0x1e>
    877c:	2300      	movs	r3, #0
    877e:	2600      	movs	r6, #0
    8780:	e7c9      	b.n	8716 <__aeabi_f2d+0x1e>
    8782:	0003      	movs	r3, r0
    8784:	002a      	movs	r2, r5
    8786:	3b0b      	subs	r3, #11
    8788:	409a      	lsls	r2, r3
    878a:	2500      	movs	r5, #0
    878c:	e7e3      	b.n	8756 <__aeabi_f2d+0x5e>
    878e:	46c0      	nop			; (mov r8, r8)
    8790:	800fffff 	.word	0x800fffff
    8794:	00000389 	.word	0x00000389
    8798:	000007ff 	.word	0x000007ff

0000879c <__aeabi_d2f>:
    879c:	b5f0      	push	{r4, r5, r6, r7, lr}
    879e:	004c      	lsls	r4, r1, #1
    87a0:	0d64      	lsrs	r4, r4, #21
    87a2:	030b      	lsls	r3, r1, #12
    87a4:	1c62      	adds	r2, r4, #1
    87a6:	0f45      	lsrs	r5, r0, #29
    87a8:	0a5b      	lsrs	r3, r3, #9
    87aa:	0552      	lsls	r2, r2, #21
    87ac:	432b      	orrs	r3, r5
    87ae:	0fc9      	lsrs	r1, r1, #31
    87b0:	00c5      	lsls	r5, r0, #3
    87b2:	0d52      	lsrs	r2, r2, #21
    87b4:	2a01      	cmp	r2, #1
    87b6:	dd28      	ble.n	880a <__aeabi_d2f+0x6e>
    87b8:	4a3a      	ldr	r2, [pc, #232]	; (88a4 <__aeabi_d2f+0x108>)
    87ba:	18a6      	adds	r6, r4, r2
    87bc:	2efe      	cmp	r6, #254	; 0xfe
    87be:	dc1b      	bgt.n	87f8 <__aeabi_d2f+0x5c>
    87c0:	2e00      	cmp	r6, #0
    87c2:	dd3e      	ble.n	8842 <__aeabi_d2f+0xa6>
    87c4:	0180      	lsls	r0, r0, #6
    87c6:	0002      	movs	r2, r0
    87c8:	1e50      	subs	r0, r2, #1
    87ca:	4182      	sbcs	r2, r0
    87cc:	0f6d      	lsrs	r5, r5, #29
    87ce:	432a      	orrs	r2, r5
    87d0:	00db      	lsls	r3, r3, #3
    87d2:	4313      	orrs	r3, r2
    87d4:	075a      	lsls	r2, r3, #29
    87d6:	d004      	beq.n	87e2 <__aeabi_d2f+0x46>
    87d8:	220f      	movs	r2, #15
    87da:	401a      	ands	r2, r3
    87dc:	2a04      	cmp	r2, #4
    87de:	d000      	beq.n	87e2 <__aeabi_d2f+0x46>
    87e0:	3304      	adds	r3, #4
    87e2:	2280      	movs	r2, #128	; 0x80
    87e4:	04d2      	lsls	r2, r2, #19
    87e6:	401a      	ands	r2, r3
    87e8:	d05a      	beq.n	88a0 <__aeabi_d2f+0x104>
    87ea:	3601      	adds	r6, #1
    87ec:	2eff      	cmp	r6, #255	; 0xff
    87ee:	d003      	beq.n	87f8 <__aeabi_d2f+0x5c>
    87f0:	019b      	lsls	r3, r3, #6
    87f2:	0a5b      	lsrs	r3, r3, #9
    87f4:	b2f4      	uxtb	r4, r6
    87f6:	e001      	b.n	87fc <__aeabi_d2f+0x60>
    87f8:	24ff      	movs	r4, #255	; 0xff
    87fa:	2300      	movs	r3, #0
    87fc:	0258      	lsls	r0, r3, #9
    87fe:	05e4      	lsls	r4, r4, #23
    8800:	0a40      	lsrs	r0, r0, #9
    8802:	07c9      	lsls	r1, r1, #31
    8804:	4320      	orrs	r0, r4
    8806:	4308      	orrs	r0, r1
    8808:	bdf0      	pop	{r4, r5, r6, r7, pc}
    880a:	2c00      	cmp	r4, #0
    880c:	d007      	beq.n	881e <__aeabi_d2f+0x82>
    880e:	431d      	orrs	r5, r3
    8810:	d0f2      	beq.n	87f8 <__aeabi_d2f+0x5c>
    8812:	2080      	movs	r0, #128	; 0x80
    8814:	00db      	lsls	r3, r3, #3
    8816:	0480      	lsls	r0, r0, #18
    8818:	4303      	orrs	r3, r0
    881a:	26ff      	movs	r6, #255	; 0xff
    881c:	e7da      	b.n	87d4 <__aeabi_d2f+0x38>
    881e:	432b      	orrs	r3, r5
    8820:	d003      	beq.n	882a <__aeabi_d2f+0x8e>
    8822:	2305      	movs	r3, #5
    8824:	08db      	lsrs	r3, r3, #3
    8826:	2cff      	cmp	r4, #255	; 0xff
    8828:	d003      	beq.n	8832 <__aeabi_d2f+0x96>
    882a:	025b      	lsls	r3, r3, #9
    882c:	0a5b      	lsrs	r3, r3, #9
    882e:	b2e4      	uxtb	r4, r4
    8830:	e7e4      	b.n	87fc <__aeabi_d2f+0x60>
    8832:	2b00      	cmp	r3, #0
    8834:	d032      	beq.n	889c <__aeabi_d2f+0x100>
    8836:	2080      	movs	r0, #128	; 0x80
    8838:	03c0      	lsls	r0, r0, #15
    883a:	4303      	orrs	r3, r0
    883c:	025b      	lsls	r3, r3, #9
    883e:	0a5b      	lsrs	r3, r3, #9
    8840:	e7dc      	b.n	87fc <__aeabi_d2f+0x60>
    8842:	0032      	movs	r2, r6
    8844:	3217      	adds	r2, #23
    8846:	db14      	blt.n	8872 <__aeabi_d2f+0xd6>
    8848:	2280      	movs	r2, #128	; 0x80
    884a:	271e      	movs	r7, #30
    884c:	0412      	lsls	r2, r2, #16
    884e:	4313      	orrs	r3, r2
    8850:	1bbf      	subs	r7, r7, r6
    8852:	2f1f      	cmp	r7, #31
    8854:	dc0f      	bgt.n	8876 <__aeabi_d2f+0xda>
    8856:	4a14      	ldr	r2, [pc, #80]	; (88a8 <__aeabi_d2f+0x10c>)
    8858:	4694      	mov	ip, r2
    885a:	4464      	add	r4, ip
    885c:	002a      	movs	r2, r5
    885e:	40a5      	lsls	r5, r4
    8860:	002e      	movs	r6, r5
    8862:	40a3      	lsls	r3, r4
    8864:	1e75      	subs	r5, r6, #1
    8866:	41ae      	sbcs	r6, r5
    8868:	40fa      	lsrs	r2, r7
    886a:	4333      	orrs	r3, r6
    886c:	4313      	orrs	r3, r2
    886e:	2600      	movs	r6, #0
    8870:	e7b0      	b.n	87d4 <__aeabi_d2f+0x38>
    8872:	2400      	movs	r4, #0
    8874:	e7d5      	b.n	8822 <__aeabi_d2f+0x86>
    8876:	2202      	movs	r2, #2
    8878:	4252      	negs	r2, r2
    887a:	1b96      	subs	r6, r2, r6
    887c:	001a      	movs	r2, r3
    887e:	40f2      	lsrs	r2, r6
    8880:	2f20      	cmp	r7, #32
    8882:	d009      	beq.n	8898 <__aeabi_d2f+0xfc>
    8884:	4809      	ldr	r0, [pc, #36]	; (88ac <__aeabi_d2f+0x110>)
    8886:	4684      	mov	ip, r0
    8888:	4464      	add	r4, ip
    888a:	40a3      	lsls	r3, r4
    888c:	432b      	orrs	r3, r5
    888e:	1e5d      	subs	r5, r3, #1
    8890:	41ab      	sbcs	r3, r5
    8892:	2600      	movs	r6, #0
    8894:	4313      	orrs	r3, r2
    8896:	e79d      	b.n	87d4 <__aeabi_d2f+0x38>
    8898:	2300      	movs	r3, #0
    889a:	e7f7      	b.n	888c <__aeabi_d2f+0xf0>
    889c:	2300      	movs	r3, #0
    889e:	e7ad      	b.n	87fc <__aeabi_d2f+0x60>
    88a0:	0034      	movs	r4, r6
    88a2:	e7bf      	b.n	8824 <__aeabi_d2f+0x88>
    88a4:	fffffc80 	.word	0xfffffc80
    88a8:	fffffc82 	.word	0xfffffc82
    88ac:	fffffca2 	.word	0xfffffca2

000088b0 <__clzsi2>:
    88b0:	211c      	movs	r1, #28
    88b2:	2301      	movs	r3, #1
    88b4:	041b      	lsls	r3, r3, #16
    88b6:	4298      	cmp	r0, r3
    88b8:	d301      	bcc.n	88be <__clzsi2+0xe>
    88ba:	0c00      	lsrs	r0, r0, #16
    88bc:	3910      	subs	r1, #16
    88be:	0a1b      	lsrs	r3, r3, #8
    88c0:	4298      	cmp	r0, r3
    88c2:	d301      	bcc.n	88c8 <__clzsi2+0x18>
    88c4:	0a00      	lsrs	r0, r0, #8
    88c6:	3908      	subs	r1, #8
    88c8:	091b      	lsrs	r3, r3, #4
    88ca:	4298      	cmp	r0, r3
    88cc:	d301      	bcc.n	88d2 <__clzsi2+0x22>
    88ce:	0900      	lsrs	r0, r0, #4
    88d0:	3904      	subs	r1, #4
    88d2:	a202      	add	r2, pc, #8	; (adr r2, 88dc <__clzsi2+0x2c>)
    88d4:	5c10      	ldrb	r0, [r2, r0]
    88d6:	1840      	adds	r0, r0, r1
    88d8:	4770      	bx	lr
    88da:	46c0      	nop			; (mov r8, r8)
    88dc:	02020304 	.word	0x02020304
    88e0:	01010101 	.word	0x01010101
	...

000088ec <__clzdi2>:
    88ec:	b510      	push	{r4, lr}
    88ee:	2900      	cmp	r1, #0
    88f0:	d103      	bne.n	88fa <__clzdi2+0xe>
    88f2:	f7ff ffdd 	bl	88b0 <__clzsi2>
    88f6:	3020      	adds	r0, #32
    88f8:	e002      	b.n	8900 <__clzdi2+0x14>
    88fa:	1c08      	adds	r0, r1, #0
    88fc:	f7ff ffd8 	bl	88b0 <__clzsi2>
    8900:	bd10      	pop	{r4, pc}
    8902:	46c0      	nop			; (mov r8, r8)

00008904 <__libc_init_array>:
    8904:	b570      	push	{r4, r5, r6, lr}
    8906:	2600      	movs	r6, #0
    8908:	4d0c      	ldr	r5, [pc, #48]	; (893c <__libc_init_array+0x38>)
    890a:	4c0d      	ldr	r4, [pc, #52]	; (8940 <__libc_init_array+0x3c>)
    890c:	1b64      	subs	r4, r4, r5
    890e:	10a4      	asrs	r4, r4, #2
    8910:	42a6      	cmp	r6, r4
    8912:	d109      	bne.n	8928 <__libc_init_array+0x24>
    8914:	2600      	movs	r6, #0
    8916:	f000 ff29 	bl	976c <_init>
    891a:	4d0a      	ldr	r5, [pc, #40]	; (8944 <__libc_init_array+0x40>)
    891c:	4c0a      	ldr	r4, [pc, #40]	; (8948 <__libc_init_array+0x44>)
    891e:	1b64      	subs	r4, r4, r5
    8920:	10a4      	asrs	r4, r4, #2
    8922:	42a6      	cmp	r6, r4
    8924:	d105      	bne.n	8932 <__libc_init_array+0x2e>
    8926:	bd70      	pop	{r4, r5, r6, pc}
    8928:	00b3      	lsls	r3, r6, #2
    892a:	58eb      	ldr	r3, [r5, r3]
    892c:	4798      	blx	r3
    892e:	3601      	adds	r6, #1
    8930:	e7ee      	b.n	8910 <__libc_init_array+0xc>
    8932:	00b3      	lsls	r3, r6, #2
    8934:	58eb      	ldr	r3, [r5, r3]
    8936:	4798      	blx	r3
    8938:	3601      	adds	r6, #1
    893a:	e7f2      	b.n	8922 <__libc_init_array+0x1e>
    893c:	00009778 	.word	0x00009778
    8940:	00009778 	.word	0x00009778
    8944:	00009778 	.word	0x00009778
    8948:	0000977c 	.word	0x0000977c

0000894c <malloc>:
    894c:	b510      	push	{r4, lr}
    894e:	4b03      	ldr	r3, [pc, #12]	; (895c <malloc+0x10>)
    8950:	0001      	movs	r1, r0
    8952:	6818      	ldr	r0, [r3, #0]
    8954:	f000 f860 	bl	8a18 <_malloc_r>
    8958:	bd10      	pop	{r4, pc}
    895a:	46c0      	nop			; (mov r8, r8)
    895c:	20000038 	.word	0x20000038

00008960 <memcpy>:
    8960:	2300      	movs	r3, #0
    8962:	b510      	push	{r4, lr}
    8964:	429a      	cmp	r2, r3
    8966:	d100      	bne.n	896a <memcpy+0xa>
    8968:	bd10      	pop	{r4, pc}
    896a:	5ccc      	ldrb	r4, [r1, r3]
    896c:	54c4      	strb	r4, [r0, r3]
    896e:	3301      	adds	r3, #1
    8970:	e7f8      	b.n	8964 <memcpy+0x4>

00008972 <memset>:
    8972:	0003      	movs	r3, r0
    8974:	1882      	adds	r2, r0, r2
    8976:	4293      	cmp	r3, r2
    8978:	d100      	bne.n	897c <memset+0xa>
    897a:	4770      	bx	lr
    897c:	7019      	strb	r1, [r3, #0]
    897e:	3301      	adds	r3, #1
    8980:	e7f9      	b.n	8976 <memset+0x4>
	...

00008984 <_free_r>:
    8984:	b570      	push	{r4, r5, r6, lr}
    8986:	0005      	movs	r5, r0
    8988:	2900      	cmp	r1, #0
    898a:	d010      	beq.n	89ae <_free_r+0x2a>
    898c:	1f0c      	subs	r4, r1, #4
    898e:	6823      	ldr	r3, [r4, #0]
    8990:	2b00      	cmp	r3, #0
    8992:	da00      	bge.n	8996 <_free_r+0x12>
    8994:	18e4      	adds	r4, r4, r3
    8996:	0028      	movs	r0, r5
    8998:	f000 f8df 	bl	8b5a <__malloc_lock>
    899c:	4a1d      	ldr	r2, [pc, #116]	; (8a14 <_free_r+0x90>)
    899e:	6813      	ldr	r3, [r2, #0]
    89a0:	2b00      	cmp	r3, #0
    89a2:	d105      	bne.n	89b0 <_free_r+0x2c>
    89a4:	6063      	str	r3, [r4, #4]
    89a6:	6014      	str	r4, [r2, #0]
    89a8:	0028      	movs	r0, r5
    89aa:	f000 f8d7 	bl	8b5c <__malloc_unlock>
    89ae:	bd70      	pop	{r4, r5, r6, pc}
    89b0:	42a3      	cmp	r3, r4
    89b2:	d909      	bls.n	89c8 <_free_r+0x44>
    89b4:	6821      	ldr	r1, [r4, #0]
    89b6:	1860      	adds	r0, r4, r1
    89b8:	4283      	cmp	r3, r0
    89ba:	d1f3      	bne.n	89a4 <_free_r+0x20>
    89bc:	6818      	ldr	r0, [r3, #0]
    89be:	685b      	ldr	r3, [r3, #4]
    89c0:	1841      	adds	r1, r0, r1
    89c2:	6021      	str	r1, [r4, #0]
    89c4:	e7ee      	b.n	89a4 <_free_r+0x20>
    89c6:	0013      	movs	r3, r2
    89c8:	685a      	ldr	r2, [r3, #4]
    89ca:	2a00      	cmp	r2, #0
    89cc:	d001      	beq.n	89d2 <_free_r+0x4e>
    89ce:	42a2      	cmp	r2, r4
    89d0:	d9f9      	bls.n	89c6 <_free_r+0x42>
    89d2:	6819      	ldr	r1, [r3, #0]
    89d4:	1858      	adds	r0, r3, r1
    89d6:	42a0      	cmp	r0, r4
    89d8:	d10b      	bne.n	89f2 <_free_r+0x6e>
    89da:	6820      	ldr	r0, [r4, #0]
    89dc:	1809      	adds	r1, r1, r0
    89de:	1858      	adds	r0, r3, r1
    89e0:	6019      	str	r1, [r3, #0]
    89e2:	4282      	cmp	r2, r0
    89e4:	d1e0      	bne.n	89a8 <_free_r+0x24>
    89e6:	6810      	ldr	r0, [r2, #0]
    89e8:	6852      	ldr	r2, [r2, #4]
    89ea:	1841      	adds	r1, r0, r1
    89ec:	6019      	str	r1, [r3, #0]
    89ee:	605a      	str	r2, [r3, #4]
    89f0:	e7da      	b.n	89a8 <_free_r+0x24>
    89f2:	42a0      	cmp	r0, r4
    89f4:	d902      	bls.n	89fc <_free_r+0x78>
    89f6:	230c      	movs	r3, #12
    89f8:	602b      	str	r3, [r5, #0]
    89fa:	e7d5      	b.n	89a8 <_free_r+0x24>
    89fc:	6821      	ldr	r1, [r4, #0]
    89fe:	1860      	adds	r0, r4, r1
    8a00:	4282      	cmp	r2, r0
    8a02:	d103      	bne.n	8a0c <_free_r+0x88>
    8a04:	6810      	ldr	r0, [r2, #0]
    8a06:	6852      	ldr	r2, [r2, #4]
    8a08:	1841      	adds	r1, r0, r1
    8a0a:	6021      	str	r1, [r4, #0]
    8a0c:	6062      	str	r2, [r4, #4]
    8a0e:	605c      	str	r4, [r3, #4]
    8a10:	e7ca      	b.n	89a8 <_free_r+0x24>
    8a12:	46c0      	nop			; (mov r8, r8)
    8a14:	200018b0 	.word	0x200018b0

00008a18 <_malloc_r>:
    8a18:	2303      	movs	r3, #3
    8a1a:	b570      	push	{r4, r5, r6, lr}
    8a1c:	1ccd      	adds	r5, r1, #3
    8a1e:	439d      	bics	r5, r3
    8a20:	3508      	adds	r5, #8
    8a22:	0006      	movs	r6, r0
    8a24:	2d0c      	cmp	r5, #12
    8a26:	d21e      	bcs.n	8a66 <_malloc_r+0x4e>
    8a28:	250c      	movs	r5, #12
    8a2a:	42a9      	cmp	r1, r5
    8a2c:	d81d      	bhi.n	8a6a <_malloc_r+0x52>
    8a2e:	0030      	movs	r0, r6
    8a30:	f000 f893 	bl	8b5a <__malloc_lock>
    8a34:	4a25      	ldr	r2, [pc, #148]	; (8acc <_malloc_r+0xb4>)
    8a36:	6814      	ldr	r4, [r2, #0]
    8a38:	0021      	movs	r1, r4
    8a3a:	2900      	cmp	r1, #0
    8a3c:	d119      	bne.n	8a72 <_malloc_r+0x5a>
    8a3e:	4c24      	ldr	r4, [pc, #144]	; (8ad0 <_malloc_r+0xb8>)
    8a40:	6823      	ldr	r3, [r4, #0]
    8a42:	2b00      	cmp	r3, #0
    8a44:	d103      	bne.n	8a4e <_malloc_r+0x36>
    8a46:	0030      	movs	r0, r6
    8a48:	f000 f844 	bl	8ad4 <_sbrk_r>
    8a4c:	6020      	str	r0, [r4, #0]
    8a4e:	0029      	movs	r1, r5
    8a50:	0030      	movs	r0, r6
    8a52:	f000 f83f 	bl	8ad4 <_sbrk_r>
    8a56:	1c43      	adds	r3, r0, #1
    8a58:	d12c      	bne.n	8ab4 <_malloc_r+0x9c>
    8a5a:	230c      	movs	r3, #12
    8a5c:	0030      	movs	r0, r6
    8a5e:	6033      	str	r3, [r6, #0]
    8a60:	f000 f87c 	bl	8b5c <__malloc_unlock>
    8a64:	e003      	b.n	8a6e <_malloc_r+0x56>
    8a66:	2d00      	cmp	r5, #0
    8a68:	dadf      	bge.n	8a2a <_malloc_r+0x12>
    8a6a:	230c      	movs	r3, #12
    8a6c:	6033      	str	r3, [r6, #0]
    8a6e:	2000      	movs	r0, #0
    8a70:	bd70      	pop	{r4, r5, r6, pc}
    8a72:	680b      	ldr	r3, [r1, #0]
    8a74:	1b5b      	subs	r3, r3, r5
    8a76:	d41a      	bmi.n	8aae <_malloc_r+0x96>
    8a78:	2b0b      	cmp	r3, #11
    8a7a:	d903      	bls.n	8a84 <_malloc_r+0x6c>
    8a7c:	600b      	str	r3, [r1, #0]
    8a7e:	18cc      	adds	r4, r1, r3
    8a80:	6025      	str	r5, [r4, #0]
    8a82:	e003      	b.n	8a8c <_malloc_r+0x74>
    8a84:	428c      	cmp	r4, r1
    8a86:	d10e      	bne.n	8aa6 <_malloc_r+0x8e>
    8a88:	6863      	ldr	r3, [r4, #4]
    8a8a:	6013      	str	r3, [r2, #0]
    8a8c:	0030      	movs	r0, r6
    8a8e:	f000 f865 	bl	8b5c <__malloc_unlock>
    8a92:	0020      	movs	r0, r4
    8a94:	2207      	movs	r2, #7
    8a96:	300b      	adds	r0, #11
    8a98:	1d23      	adds	r3, r4, #4
    8a9a:	4390      	bics	r0, r2
    8a9c:	1ac3      	subs	r3, r0, r3
    8a9e:	d0e7      	beq.n	8a70 <_malloc_r+0x58>
    8aa0:	425a      	negs	r2, r3
    8aa2:	50e2      	str	r2, [r4, r3]
    8aa4:	e7e4      	b.n	8a70 <_malloc_r+0x58>
    8aa6:	684b      	ldr	r3, [r1, #4]
    8aa8:	6063      	str	r3, [r4, #4]
    8aaa:	000c      	movs	r4, r1
    8aac:	e7ee      	b.n	8a8c <_malloc_r+0x74>
    8aae:	000c      	movs	r4, r1
    8ab0:	6849      	ldr	r1, [r1, #4]
    8ab2:	e7c2      	b.n	8a3a <_malloc_r+0x22>
    8ab4:	2303      	movs	r3, #3
    8ab6:	1cc4      	adds	r4, r0, #3
    8ab8:	439c      	bics	r4, r3
    8aba:	42a0      	cmp	r0, r4
    8abc:	d0e0      	beq.n	8a80 <_malloc_r+0x68>
    8abe:	1a21      	subs	r1, r4, r0
    8ac0:	0030      	movs	r0, r6
    8ac2:	f000 f807 	bl	8ad4 <_sbrk_r>
    8ac6:	1c43      	adds	r3, r0, #1
    8ac8:	d1da      	bne.n	8a80 <_malloc_r+0x68>
    8aca:	e7c6      	b.n	8a5a <_malloc_r+0x42>
    8acc:	200018b0 	.word	0x200018b0
    8ad0:	200018b4 	.word	0x200018b4

00008ad4 <_sbrk_r>:
    8ad4:	2300      	movs	r3, #0
    8ad6:	b570      	push	{r4, r5, r6, lr}
    8ad8:	4c06      	ldr	r4, [pc, #24]	; (8af4 <_sbrk_r+0x20>)
    8ada:	0005      	movs	r5, r0
    8adc:	0008      	movs	r0, r1
    8ade:	6023      	str	r3, [r4, #0]
    8ae0:	f7fc fb1c 	bl	511c <_sbrk>
    8ae4:	1c43      	adds	r3, r0, #1
    8ae6:	d103      	bne.n	8af0 <_sbrk_r+0x1c>
    8ae8:	6823      	ldr	r3, [r4, #0]
    8aea:	2b00      	cmp	r3, #0
    8aec:	d000      	beq.n	8af0 <_sbrk_r+0x1c>
    8aee:	602b      	str	r3, [r5, #0]
    8af0:	bd70      	pop	{r4, r5, r6, pc}
    8af2:	46c0      	nop			; (mov r8, r8)
    8af4:	20002738 	.word	0x20002738

00008af8 <siprintf>:
    8af8:	b40e      	push	{r1, r2, r3}
    8afa:	b510      	push	{r4, lr}
    8afc:	b09d      	sub	sp, #116	; 0x74
    8afe:	a902      	add	r1, sp, #8
    8b00:	9002      	str	r0, [sp, #8]
    8b02:	6108      	str	r0, [r1, #16]
    8b04:	480b      	ldr	r0, [pc, #44]	; (8b34 <siprintf+0x3c>)
    8b06:	2482      	movs	r4, #130	; 0x82
    8b08:	6088      	str	r0, [r1, #8]
    8b0a:	6148      	str	r0, [r1, #20]
    8b0c:	2001      	movs	r0, #1
    8b0e:	4240      	negs	r0, r0
    8b10:	ab1f      	add	r3, sp, #124	; 0x7c
    8b12:	81c8      	strh	r0, [r1, #14]
    8b14:	4808      	ldr	r0, [pc, #32]	; (8b38 <siprintf+0x40>)
    8b16:	cb04      	ldmia	r3!, {r2}
    8b18:	00a4      	lsls	r4, r4, #2
    8b1a:	6800      	ldr	r0, [r0, #0]
    8b1c:	9301      	str	r3, [sp, #4]
    8b1e:	818c      	strh	r4, [r1, #12]
    8b20:	f000 f880 	bl	8c24 <_svfiprintf_r>
    8b24:	2300      	movs	r3, #0
    8b26:	9a02      	ldr	r2, [sp, #8]
    8b28:	7013      	strb	r3, [r2, #0]
    8b2a:	b01d      	add	sp, #116	; 0x74
    8b2c:	bc10      	pop	{r4}
    8b2e:	bc08      	pop	{r3}
    8b30:	b003      	add	sp, #12
    8b32:	4718      	bx	r3
    8b34:	7fffffff 	.word	0x7fffffff
    8b38:	20000038 	.word	0x20000038

00008b3c <strcpy>:
    8b3c:	1c03      	adds	r3, r0, #0
    8b3e:	780a      	ldrb	r2, [r1, #0]
    8b40:	3101      	adds	r1, #1
    8b42:	701a      	strb	r2, [r3, #0]
    8b44:	3301      	adds	r3, #1
    8b46:	2a00      	cmp	r2, #0
    8b48:	d1f9      	bne.n	8b3e <strcpy+0x2>
    8b4a:	4770      	bx	lr

00008b4c <strlen>:
    8b4c:	2300      	movs	r3, #0
    8b4e:	5cc2      	ldrb	r2, [r0, r3]
    8b50:	3301      	adds	r3, #1
    8b52:	2a00      	cmp	r2, #0
    8b54:	d1fb      	bne.n	8b4e <strlen+0x2>
    8b56:	1e58      	subs	r0, r3, #1
    8b58:	4770      	bx	lr

00008b5a <__malloc_lock>:
    8b5a:	4770      	bx	lr

00008b5c <__malloc_unlock>:
    8b5c:	4770      	bx	lr
	...

00008b60 <__ssputs_r>:
    8b60:	b5f0      	push	{r4, r5, r6, r7, lr}
    8b62:	688e      	ldr	r6, [r1, #8]
    8b64:	b085      	sub	sp, #20
    8b66:	0007      	movs	r7, r0
    8b68:	000c      	movs	r4, r1
    8b6a:	9203      	str	r2, [sp, #12]
    8b6c:	9301      	str	r3, [sp, #4]
    8b6e:	429e      	cmp	r6, r3
    8b70:	d839      	bhi.n	8be6 <__ssputs_r+0x86>
    8b72:	2390      	movs	r3, #144	; 0x90
    8b74:	898a      	ldrh	r2, [r1, #12]
    8b76:	00db      	lsls	r3, r3, #3
    8b78:	421a      	tst	r2, r3
    8b7a:	d034      	beq.n	8be6 <__ssputs_r+0x86>
    8b7c:	2503      	movs	r5, #3
    8b7e:	6909      	ldr	r1, [r1, #16]
    8b80:	6823      	ldr	r3, [r4, #0]
    8b82:	1a5b      	subs	r3, r3, r1
    8b84:	9302      	str	r3, [sp, #8]
    8b86:	6963      	ldr	r3, [r4, #20]
    8b88:	9802      	ldr	r0, [sp, #8]
    8b8a:	435d      	muls	r5, r3
    8b8c:	0feb      	lsrs	r3, r5, #31
    8b8e:	195d      	adds	r5, r3, r5
    8b90:	9b01      	ldr	r3, [sp, #4]
    8b92:	106d      	asrs	r5, r5, #1
    8b94:	3301      	adds	r3, #1
    8b96:	181b      	adds	r3, r3, r0
    8b98:	42ab      	cmp	r3, r5
    8b9a:	d900      	bls.n	8b9e <__ssputs_r+0x3e>
    8b9c:	001d      	movs	r5, r3
    8b9e:	0553      	lsls	r3, r2, #21
    8ba0:	d532      	bpl.n	8c08 <__ssputs_r+0xa8>
    8ba2:	0029      	movs	r1, r5
    8ba4:	0038      	movs	r0, r7
    8ba6:	f7ff ff37 	bl	8a18 <_malloc_r>
    8baa:	1e06      	subs	r6, r0, #0
    8bac:	d109      	bne.n	8bc2 <__ssputs_r+0x62>
    8bae:	230c      	movs	r3, #12
    8bb0:	603b      	str	r3, [r7, #0]
    8bb2:	2340      	movs	r3, #64	; 0x40
    8bb4:	2001      	movs	r0, #1
    8bb6:	89a2      	ldrh	r2, [r4, #12]
    8bb8:	4240      	negs	r0, r0
    8bba:	4313      	orrs	r3, r2
    8bbc:	81a3      	strh	r3, [r4, #12]
    8bbe:	b005      	add	sp, #20
    8bc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8bc2:	9a02      	ldr	r2, [sp, #8]
    8bc4:	6921      	ldr	r1, [r4, #16]
    8bc6:	f7ff fecb 	bl	8960 <memcpy>
    8bca:	89a3      	ldrh	r3, [r4, #12]
    8bcc:	4a14      	ldr	r2, [pc, #80]	; (8c20 <__ssputs_r+0xc0>)
    8bce:	401a      	ands	r2, r3
    8bd0:	2380      	movs	r3, #128	; 0x80
    8bd2:	4313      	orrs	r3, r2
    8bd4:	81a3      	strh	r3, [r4, #12]
    8bd6:	9b02      	ldr	r3, [sp, #8]
    8bd8:	6126      	str	r6, [r4, #16]
    8bda:	18f6      	adds	r6, r6, r3
    8bdc:	6026      	str	r6, [r4, #0]
    8bde:	6165      	str	r5, [r4, #20]
    8be0:	9e01      	ldr	r6, [sp, #4]
    8be2:	1aed      	subs	r5, r5, r3
    8be4:	60a5      	str	r5, [r4, #8]
    8be6:	9b01      	ldr	r3, [sp, #4]
    8be8:	42b3      	cmp	r3, r6
    8bea:	d200      	bcs.n	8bee <__ssputs_r+0x8e>
    8bec:	001e      	movs	r6, r3
    8bee:	0032      	movs	r2, r6
    8bf0:	9903      	ldr	r1, [sp, #12]
    8bf2:	6820      	ldr	r0, [r4, #0]
    8bf4:	f000 faad 	bl	9152 <memmove>
    8bf8:	68a3      	ldr	r3, [r4, #8]
    8bfa:	2000      	movs	r0, #0
    8bfc:	1b9b      	subs	r3, r3, r6
    8bfe:	60a3      	str	r3, [r4, #8]
    8c00:	6823      	ldr	r3, [r4, #0]
    8c02:	199e      	adds	r6, r3, r6
    8c04:	6026      	str	r6, [r4, #0]
    8c06:	e7da      	b.n	8bbe <__ssputs_r+0x5e>
    8c08:	002a      	movs	r2, r5
    8c0a:	0038      	movs	r0, r7
    8c0c:	f000 fab3 	bl	9176 <_realloc_r>
    8c10:	1e06      	subs	r6, r0, #0
    8c12:	d1e0      	bne.n	8bd6 <__ssputs_r+0x76>
    8c14:	6921      	ldr	r1, [r4, #16]
    8c16:	0038      	movs	r0, r7
    8c18:	f7ff feb4 	bl	8984 <_free_r>
    8c1c:	e7c7      	b.n	8bae <__ssputs_r+0x4e>
    8c1e:	46c0      	nop			; (mov r8, r8)
    8c20:	fffffb7f 	.word	0xfffffb7f

00008c24 <_svfiprintf_r>:
    8c24:	b5f0      	push	{r4, r5, r6, r7, lr}
    8c26:	b09f      	sub	sp, #124	; 0x7c
    8c28:	9002      	str	r0, [sp, #8]
    8c2a:	9305      	str	r3, [sp, #20]
    8c2c:	898b      	ldrh	r3, [r1, #12]
    8c2e:	000f      	movs	r7, r1
    8c30:	0016      	movs	r6, r2
    8c32:	061b      	lsls	r3, r3, #24
    8c34:	d511      	bpl.n	8c5a <_svfiprintf_r+0x36>
    8c36:	690b      	ldr	r3, [r1, #16]
    8c38:	2b00      	cmp	r3, #0
    8c3a:	d10e      	bne.n	8c5a <_svfiprintf_r+0x36>
    8c3c:	2140      	movs	r1, #64	; 0x40
    8c3e:	f7ff feeb 	bl	8a18 <_malloc_r>
    8c42:	6038      	str	r0, [r7, #0]
    8c44:	6138      	str	r0, [r7, #16]
    8c46:	2800      	cmp	r0, #0
    8c48:	d105      	bne.n	8c56 <_svfiprintf_r+0x32>
    8c4a:	230c      	movs	r3, #12
    8c4c:	9a02      	ldr	r2, [sp, #8]
    8c4e:	3801      	subs	r0, #1
    8c50:	6013      	str	r3, [r2, #0]
    8c52:	b01f      	add	sp, #124	; 0x7c
    8c54:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8c56:	2340      	movs	r3, #64	; 0x40
    8c58:	617b      	str	r3, [r7, #20]
    8c5a:	2300      	movs	r3, #0
    8c5c:	ad06      	add	r5, sp, #24
    8c5e:	616b      	str	r3, [r5, #20]
    8c60:	3320      	adds	r3, #32
    8c62:	766b      	strb	r3, [r5, #25]
    8c64:	3310      	adds	r3, #16
    8c66:	76ab      	strb	r3, [r5, #26]
    8c68:	0034      	movs	r4, r6
    8c6a:	7823      	ldrb	r3, [r4, #0]
    8c6c:	2b00      	cmp	r3, #0
    8c6e:	d147      	bne.n	8d00 <_svfiprintf_r+0xdc>
    8c70:	1ba3      	subs	r3, r4, r6
    8c72:	9304      	str	r3, [sp, #16]
    8c74:	d00d      	beq.n	8c92 <_svfiprintf_r+0x6e>
    8c76:	1ba3      	subs	r3, r4, r6
    8c78:	0032      	movs	r2, r6
    8c7a:	0039      	movs	r1, r7
    8c7c:	9802      	ldr	r0, [sp, #8]
    8c7e:	f7ff ff6f 	bl	8b60 <__ssputs_r>
    8c82:	1c43      	adds	r3, r0, #1
    8c84:	d100      	bne.n	8c88 <_svfiprintf_r+0x64>
    8c86:	e0b5      	b.n	8df4 <_svfiprintf_r+0x1d0>
    8c88:	696a      	ldr	r2, [r5, #20]
    8c8a:	9b04      	ldr	r3, [sp, #16]
    8c8c:	4694      	mov	ip, r2
    8c8e:	4463      	add	r3, ip
    8c90:	616b      	str	r3, [r5, #20]
    8c92:	7823      	ldrb	r3, [r4, #0]
    8c94:	2b00      	cmp	r3, #0
    8c96:	d100      	bne.n	8c9a <_svfiprintf_r+0x76>
    8c98:	e0ac      	b.n	8df4 <_svfiprintf_r+0x1d0>
    8c9a:	2201      	movs	r2, #1
    8c9c:	2300      	movs	r3, #0
    8c9e:	4252      	negs	r2, r2
    8ca0:	606a      	str	r2, [r5, #4]
    8ca2:	a902      	add	r1, sp, #8
    8ca4:	3254      	adds	r2, #84	; 0x54
    8ca6:	1852      	adds	r2, r2, r1
    8ca8:	3401      	adds	r4, #1
    8caa:	602b      	str	r3, [r5, #0]
    8cac:	60eb      	str	r3, [r5, #12]
    8cae:	60ab      	str	r3, [r5, #8]
    8cb0:	7013      	strb	r3, [r2, #0]
    8cb2:	65ab      	str	r3, [r5, #88]	; 0x58
    8cb4:	4e58      	ldr	r6, [pc, #352]	; (8e18 <_svfiprintf_r+0x1f4>)
    8cb6:	2205      	movs	r2, #5
    8cb8:	7821      	ldrb	r1, [r4, #0]
    8cba:	0030      	movs	r0, r6
    8cbc:	f000 fa3e 	bl	913c <memchr>
    8cc0:	1c62      	adds	r2, r4, #1
    8cc2:	2800      	cmp	r0, #0
    8cc4:	d120      	bne.n	8d08 <_svfiprintf_r+0xe4>
    8cc6:	6829      	ldr	r1, [r5, #0]
    8cc8:	06cb      	lsls	r3, r1, #27
    8cca:	d504      	bpl.n	8cd6 <_svfiprintf_r+0xb2>
    8ccc:	2353      	movs	r3, #83	; 0x53
    8cce:	ae02      	add	r6, sp, #8
    8cd0:	3020      	adds	r0, #32
    8cd2:	199b      	adds	r3, r3, r6
    8cd4:	7018      	strb	r0, [r3, #0]
    8cd6:	070b      	lsls	r3, r1, #28
    8cd8:	d504      	bpl.n	8ce4 <_svfiprintf_r+0xc0>
    8cda:	2353      	movs	r3, #83	; 0x53
    8cdc:	202b      	movs	r0, #43	; 0x2b
    8cde:	ae02      	add	r6, sp, #8
    8ce0:	199b      	adds	r3, r3, r6
    8ce2:	7018      	strb	r0, [r3, #0]
    8ce4:	7823      	ldrb	r3, [r4, #0]
    8ce6:	2b2a      	cmp	r3, #42	; 0x2a
    8ce8:	d016      	beq.n	8d18 <_svfiprintf_r+0xf4>
    8cea:	2000      	movs	r0, #0
    8cec:	210a      	movs	r1, #10
    8cee:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8cf0:	7822      	ldrb	r2, [r4, #0]
    8cf2:	3a30      	subs	r2, #48	; 0x30
    8cf4:	2a09      	cmp	r2, #9
    8cf6:	d955      	bls.n	8da4 <_svfiprintf_r+0x180>
    8cf8:	2800      	cmp	r0, #0
    8cfa:	d015      	beq.n	8d28 <_svfiprintf_r+0x104>
    8cfc:	9309      	str	r3, [sp, #36]	; 0x24
    8cfe:	e013      	b.n	8d28 <_svfiprintf_r+0x104>
    8d00:	2b25      	cmp	r3, #37	; 0x25
    8d02:	d0b5      	beq.n	8c70 <_svfiprintf_r+0x4c>
    8d04:	3401      	adds	r4, #1
    8d06:	e7b0      	b.n	8c6a <_svfiprintf_r+0x46>
    8d08:	2301      	movs	r3, #1
    8d0a:	1b80      	subs	r0, r0, r6
    8d0c:	4083      	lsls	r3, r0
    8d0e:	6829      	ldr	r1, [r5, #0]
    8d10:	0014      	movs	r4, r2
    8d12:	430b      	orrs	r3, r1
    8d14:	602b      	str	r3, [r5, #0]
    8d16:	e7cd      	b.n	8cb4 <_svfiprintf_r+0x90>
    8d18:	9b05      	ldr	r3, [sp, #20]
    8d1a:	1d18      	adds	r0, r3, #4
    8d1c:	681b      	ldr	r3, [r3, #0]
    8d1e:	9005      	str	r0, [sp, #20]
    8d20:	2b00      	cmp	r3, #0
    8d22:	db39      	blt.n	8d98 <_svfiprintf_r+0x174>
    8d24:	9309      	str	r3, [sp, #36]	; 0x24
    8d26:	0014      	movs	r4, r2
    8d28:	7823      	ldrb	r3, [r4, #0]
    8d2a:	2b2e      	cmp	r3, #46	; 0x2e
    8d2c:	d10b      	bne.n	8d46 <_svfiprintf_r+0x122>
    8d2e:	7863      	ldrb	r3, [r4, #1]
    8d30:	1c62      	adds	r2, r4, #1
    8d32:	2b2a      	cmp	r3, #42	; 0x2a
    8d34:	d13e      	bne.n	8db4 <_svfiprintf_r+0x190>
    8d36:	9b05      	ldr	r3, [sp, #20]
    8d38:	3402      	adds	r4, #2
    8d3a:	1d1a      	adds	r2, r3, #4
    8d3c:	681b      	ldr	r3, [r3, #0]
    8d3e:	9205      	str	r2, [sp, #20]
    8d40:	2b00      	cmp	r3, #0
    8d42:	db34      	blt.n	8dae <_svfiprintf_r+0x18a>
    8d44:	9307      	str	r3, [sp, #28]
    8d46:	4e35      	ldr	r6, [pc, #212]	; (8e1c <_svfiprintf_r+0x1f8>)
    8d48:	7821      	ldrb	r1, [r4, #0]
    8d4a:	2203      	movs	r2, #3
    8d4c:	0030      	movs	r0, r6
    8d4e:	f000 f9f5 	bl	913c <memchr>
    8d52:	2800      	cmp	r0, #0
    8d54:	d006      	beq.n	8d64 <_svfiprintf_r+0x140>
    8d56:	2340      	movs	r3, #64	; 0x40
    8d58:	1b80      	subs	r0, r0, r6
    8d5a:	4083      	lsls	r3, r0
    8d5c:	682a      	ldr	r2, [r5, #0]
    8d5e:	3401      	adds	r4, #1
    8d60:	4313      	orrs	r3, r2
    8d62:	602b      	str	r3, [r5, #0]
    8d64:	7821      	ldrb	r1, [r4, #0]
    8d66:	2206      	movs	r2, #6
    8d68:	482d      	ldr	r0, [pc, #180]	; (8e20 <_svfiprintf_r+0x1fc>)
    8d6a:	1c66      	adds	r6, r4, #1
    8d6c:	7629      	strb	r1, [r5, #24]
    8d6e:	f000 f9e5 	bl	913c <memchr>
    8d72:	2800      	cmp	r0, #0
    8d74:	d046      	beq.n	8e04 <_svfiprintf_r+0x1e0>
    8d76:	4b2b      	ldr	r3, [pc, #172]	; (8e24 <_svfiprintf_r+0x200>)
    8d78:	2b00      	cmp	r3, #0
    8d7a:	d12f      	bne.n	8ddc <_svfiprintf_r+0x1b8>
    8d7c:	6829      	ldr	r1, [r5, #0]
    8d7e:	9b05      	ldr	r3, [sp, #20]
    8d80:	2207      	movs	r2, #7
    8d82:	05c9      	lsls	r1, r1, #23
    8d84:	d528      	bpl.n	8dd8 <_svfiprintf_r+0x1b4>
    8d86:	189b      	adds	r3, r3, r2
    8d88:	4393      	bics	r3, r2
    8d8a:	3308      	adds	r3, #8
    8d8c:	9305      	str	r3, [sp, #20]
    8d8e:	696b      	ldr	r3, [r5, #20]
    8d90:	9a03      	ldr	r2, [sp, #12]
    8d92:	189b      	adds	r3, r3, r2
    8d94:	616b      	str	r3, [r5, #20]
    8d96:	e767      	b.n	8c68 <_svfiprintf_r+0x44>
    8d98:	425b      	negs	r3, r3
    8d9a:	60eb      	str	r3, [r5, #12]
    8d9c:	2302      	movs	r3, #2
    8d9e:	430b      	orrs	r3, r1
    8da0:	602b      	str	r3, [r5, #0]
    8da2:	e7c0      	b.n	8d26 <_svfiprintf_r+0x102>
    8da4:	434b      	muls	r3, r1
    8da6:	3401      	adds	r4, #1
    8da8:	189b      	adds	r3, r3, r2
    8daa:	2001      	movs	r0, #1
    8dac:	e7a0      	b.n	8cf0 <_svfiprintf_r+0xcc>
    8dae:	2301      	movs	r3, #1
    8db0:	425b      	negs	r3, r3
    8db2:	e7c7      	b.n	8d44 <_svfiprintf_r+0x120>
    8db4:	2300      	movs	r3, #0
    8db6:	0014      	movs	r4, r2
    8db8:	200a      	movs	r0, #10
    8dba:	001a      	movs	r2, r3
    8dbc:	606b      	str	r3, [r5, #4]
    8dbe:	7821      	ldrb	r1, [r4, #0]
    8dc0:	3930      	subs	r1, #48	; 0x30
    8dc2:	2909      	cmp	r1, #9
    8dc4:	d903      	bls.n	8dce <_svfiprintf_r+0x1aa>
    8dc6:	2b00      	cmp	r3, #0
    8dc8:	d0bd      	beq.n	8d46 <_svfiprintf_r+0x122>
    8dca:	9207      	str	r2, [sp, #28]
    8dcc:	e7bb      	b.n	8d46 <_svfiprintf_r+0x122>
    8dce:	4342      	muls	r2, r0
    8dd0:	3401      	adds	r4, #1
    8dd2:	1852      	adds	r2, r2, r1
    8dd4:	2301      	movs	r3, #1
    8dd6:	e7f2      	b.n	8dbe <_svfiprintf_r+0x19a>
    8dd8:	3307      	adds	r3, #7
    8dda:	e7d5      	b.n	8d88 <_svfiprintf_r+0x164>
    8ddc:	ab05      	add	r3, sp, #20
    8dde:	9300      	str	r3, [sp, #0]
    8de0:	003a      	movs	r2, r7
    8de2:	4b11      	ldr	r3, [pc, #68]	; (8e28 <_svfiprintf_r+0x204>)
    8de4:	0029      	movs	r1, r5
    8de6:	9802      	ldr	r0, [sp, #8]
    8de8:	e000      	b.n	8dec <_svfiprintf_r+0x1c8>
    8dea:	bf00      	nop
    8dec:	9003      	str	r0, [sp, #12]
    8dee:	9b03      	ldr	r3, [sp, #12]
    8df0:	3301      	adds	r3, #1
    8df2:	d1cc      	bne.n	8d8e <_svfiprintf_r+0x16a>
    8df4:	89bb      	ldrh	r3, [r7, #12]
    8df6:	980b      	ldr	r0, [sp, #44]	; 0x2c
    8df8:	065b      	lsls	r3, r3, #25
    8dfa:	d400      	bmi.n	8dfe <_svfiprintf_r+0x1da>
    8dfc:	e729      	b.n	8c52 <_svfiprintf_r+0x2e>
    8dfe:	2001      	movs	r0, #1
    8e00:	4240      	negs	r0, r0
    8e02:	e726      	b.n	8c52 <_svfiprintf_r+0x2e>
    8e04:	ab05      	add	r3, sp, #20
    8e06:	9300      	str	r3, [sp, #0]
    8e08:	003a      	movs	r2, r7
    8e0a:	4b07      	ldr	r3, [pc, #28]	; (8e28 <_svfiprintf_r+0x204>)
    8e0c:	0029      	movs	r1, r5
    8e0e:	9802      	ldr	r0, [sp, #8]
    8e10:	f000 f87a 	bl	8f08 <_printf_i>
    8e14:	e7ea      	b.n	8dec <_svfiprintf_r+0x1c8>
    8e16:	46c0      	nop			; (mov r8, r8)
    8e18:	00009738 	.word	0x00009738
    8e1c:	0000973e 	.word	0x0000973e
    8e20:	00009742 	.word	0x00009742
    8e24:	00000000 	.word	0x00000000
    8e28:	00008b61 	.word	0x00008b61

00008e2c <_printf_common>:
    8e2c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    8e2e:	0015      	movs	r5, r2
    8e30:	9301      	str	r3, [sp, #4]
    8e32:	688a      	ldr	r2, [r1, #8]
    8e34:	690b      	ldr	r3, [r1, #16]
    8e36:	9000      	str	r0, [sp, #0]
    8e38:	000c      	movs	r4, r1
    8e3a:	4293      	cmp	r3, r2
    8e3c:	da00      	bge.n	8e40 <_printf_common+0x14>
    8e3e:	0013      	movs	r3, r2
    8e40:	0022      	movs	r2, r4
    8e42:	602b      	str	r3, [r5, #0]
    8e44:	3243      	adds	r2, #67	; 0x43
    8e46:	7812      	ldrb	r2, [r2, #0]
    8e48:	2a00      	cmp	r2, #0
    8e4a:	d001      	beq.n	8e50 <_printf_common+0x24>
    8e4c:	3301      	adds	r3, #1
    8e4e:	602b      	str	r3, [r5, #0]
    8e50:	6823      	ldr	r3, [r4, #0]
    8e52:	069b      	lsls	r3, r3, #26
    8e54:	d502      	bpl.n	8e5c <_printf_common+0x30>
    8e56:	682b      	ldr	r3, [r5, #0]
    8e58:	3302      	adds	r3, #2
    8e5a:	602b      	str	r3, [r5, #0]
    8e5c:	2706      	movs	r7, #6
    8e5e:	6823      	ldr	r3, [r4, #0]
    8e60:	401f      	ands	r7, r3
    8e62:	d027      	beq.n	8eb4 <_printf_common+0x88>
    8e64:	0023      	movs	r3, r4
    8e66:	3343      	adds	r3, #67	; 0x43
    8e68:	781b      	ldrb	r3, [r3, #0]
    8e6a:	1e5a      	subs	r2, r3, #1
    8e6c:	4193      	sbcs	r3, r2
    8e6e:	6822      	ldr	r2, [r4, #0]
    8e70:	0692      	lsls	r2, r2, #26
    8e72:	d430      	bmi.n	8ed6 <_printf_common+0xaa>
    8e74:	0022      	movs	r2, r4
    8e76:	9901      	ldr	r1, [sp, #4]
    8e78:	3243      	adds	r2, #67	; 0x43
    8e7a:	9800      	ldr	r0, [sp, #0]
    8e7c:	9e08      	ldr	r6, [sp, #32]
    8e7e:	47b0      	blx	r6
    8e80:	1c43      	adds	r3, r0, #1
    8e82:	d025      	beq.n	8ed0 <_printf_common+0xa4>
    8e84:	2306      	movs	r3, #6
    8e86:	6820      	ldr	r0, [r4, #0]
    8e88:	682a      	ldr	r2, [r5, #0]
    8e8a:	68e1      	ldr	r1, [r4, #12]
    8e8c:	4003      	ands	r3, r0
    8e8e:	2500      	movs	r5, #0
    8e90:	2b04      	cmp	r3, #4
    8e92:	d103      	bne.n	8e9c <_printf_common+0x70>
    8e94:	1a8d      	subs	r5, r1, r2
    8e96:	43eb      	mvns	r3, r5
    8e98:	17db      	asrs	r3, r3, #31
    8e9a:	401d      	ands	r5, r3
    8e9c:	68a3      	ldr	r3, [r4, #8]
    8e9e:	6922      	ldr	r2, [r4, #16]
    8ea0:	4293      	cmp	r3, r2
    8ea2:	dd01      	ble.n	8ea8 <_printf_common+0x7c>
    8ea4:	1a9b      	subs	r3, r3, r2
    8ea6:	18ed      	adds	r5, r5, r3
    8ea8:	2700      	movs	r7, #0
    8eaa:	42bd      	cmp	r5, r7
    8eac:	d120      	bne.n	8ef0 <_printf_common+0xc4>
    8eae:	2000      	movs	r0, #0
    8eb0:	e010      	b.n	8ed4 <_printf_common+0xa8>
    8eb2:	3701      	adds	r7, #1
    8eb4:	68e3      	ldr	r3, [r4, #12]
    8eb6:	682a      	ldr	r2, [r5, #0]
    8eb8:	1a9b      	subs	r3, r3, r2
    8eba:	429f      	cmp	r7, r3
    8ebc:	dad2      	bge.n	8e64 <_printf_common+0x38>
    8ebe:	0022      	movs	r2, r4
    8ec0:	2301      	movs	r3, #1
    8ec2:	3219      	adds	r2, #25
    8ec4:	9901      	ldr	r1, [sp, #4]
    8ec6:	9800      	ldr	r0, [sp, #0]
    8ec8:	9e08      	ldr	r6, [sp, #32]
    8eca:	47b0      	blx	r6
    8ecc:	1c43      	adds	r3, r0, #1
    8ece:	d1f0      	bne.n	8eb2 <_printf_common+0x86>
    8ed0:	2001      	movs	r0, #1
    8ed2:	4240      	negs	r0, r0
    8ed4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    8ed6:	2030      	movs	r0, #48	; 0x30
    8ed8:	18e1      	adds	r1, r4, r3
    8eda:	3143      	adds	r1, #67	; 0x43
    8edc:	7008      	strb	r0, [r1, #0]
    8ede:	0021      	movs	r1, r4
    8ee0:	1c5a      	adds	r2, r3, #1
    8ee2:	3145      	adds	r1, #69	; 0x45
    8ee4:	7809      	ldrb	r1, [r1, #0]
    8ee6:	18a2      	adds	r2, r4, r2
    8ee8:	3243      	adds	r2, #67	; 0x43
    8eea:	3302      	adds	r3, #2
    8eec:	7011      	strb	r1, [r2, #0]
    8eee:	e7c1      	b.n	8e74 <_printf_common+0x48>
    8ef0:	0022      	movs	r2, r4
    8ef2:	2301      	movs	r3, #1
    8ef4:	321a      	adds	r2, #26
    8ef6:	9901      	ldr	r1, [sp, #4]
    8ef8:	9800      	ldr	r0, [sp, #0]
    8efa:	9e08      	ldr	r6, [sp, #32]
    8efc:	47b0      	blx	r6
    8efe:	1c43      	adds	r3, r0, #1
    8f00:	d0e6      	beq.n	8ed0 <_printf_common+0xa4>
    8f02:	3701      	adds	r7, #1
    8f04:	e7d1      	b.n	8eaa <_printf_common+0x7e>
	...

00008f08 <_printf_i>:
    8f08:	b5f0      	push	{r4, r5, r6, r7, lr}
    8f0a:	b08b      	sub	sp, #44	; 0x2c
    8f0c:	9206      	str	r2, [sp, #24]
    8f0e:	000a      	movs	r2, r1
    8f10:	3243      	adds	r2, #67	; 0x43
    8f12:	9307      	str	r3, [sp, #28]
    8f14:	9005      	str	r0, [sp, #20]
    8f16:	9204      	str	r2, [sp, #16]
    8f18:	7e0a      	ldrb	r2, [r1, #24]
    8f1a:	000c      	movs	r4, r1
    8f1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
    8f1e:	2a6e      	cmp	r2, #110	; 0x6e
    8f20:	d100      	bne.n	8f24 <_printf_i+0x1c>
    8f22:	e08f      	b.n	9044 <_printf_i+0x13c>
    8f24:	d817      	bhi.n	8f56 <_printf_i+0x4e>
    8f26:	2a63      	cmp	r2, #99	; 0x63
    8f28:	d02c      	beq.n	8f84 <_printf_i+0x7c>
    8f2a:	d808      	bhi.n	8f3e <_printf_i+0x36>
    8f2c:	2a00      	cmp	r2, #0
    8f2e:	d100      	bne.n	8f32 <_printf_i+0x2a>
    8f30:	e099      	b.n	9066 <_printf_i+0x15e>
    8f32:	2a58      	cmp	r2, #88	; 0x58
    8f34:	d054      	beq.n	8fe0 <_printf_i+0xd8>
    8f36:	0026      	movs	r6, r4
    8f38:	3642      	adds	r6, #66	; 0x42
    8f3a:	7032      	strb	r2, [r6, #0]
    8f3c:	e029      	b.n	8f92 <_printf_i+0x8a>
    8f3e:	2a64      	cmp	r2, #100	; 0x64
    8f40:	d001      	beq.n	8f46 <_printf_i+0x3e>
    8f42:	2a69      	cmp	r2, #105	; 0x69
    8f44:	d1f7      	bne.n	8f36 <_printf_i+0x2e>
    8f46:	6821      	ldr	r1, [r4, #0]
    8f48:	681a      	ldr	r2, [r3, #0]
    8f4a:	0608      	lsls	r0, r1, #24
    8f4c:	d523      	bpl.n	8f96 <_printf_i+0x8e>
    8f4e:	1d11      	adds	r1, r2, #4
    8f50:	6019      	str	r1, [r3, #0]
    8f52:	6815      	ldr	r5, [r2, #0]
    8f54:	e025      	b.n	8fa2 <_printf_i+0x9a>
    8f56:	2a73      	cmp	r2, #115	; 0x73
    8f58:	d100      	bne.n	8f5c <_printf_i+0x54>
    8f5a:	e088      	b.n	906e <_printf_i+0x166>
    8f5c:	d808      	bhi.n	8f70 <_printf_i+0x68>
    8f5e:	2a6f      	cmp	r2, #111	; 0x6f
    8f60:	d029      	beq.n	8fb6 <_printf_i+0xae>
    8f62:	2a70      	cmp	r2, #112	; 0x70
    8f64:	d1e7      	bne.n	8f36 <_printf_i+0x2e>
    8f66:	2220      	movs	r2, #32
    8f68:	6809      	ldr	r1, [r1, #0]
    8f6a:	430a      	orrs	r2, r1
    8f6c:	6022      	str	r2, [r4, #0]
    8f6e:	e003      	b.n	8f78 <_printf_i+0x70>
    8f70:	2a75      	cmp	r2, #117	; 0x75
    8f72:	d020      	beq.n	8fb6 <_printf_i+0xae>
    8f74:	2a78      	cmp	r2, #120	; 0x78
    8f76:	d1de      	bne.n	8f36 <_printf_i+0x2e>
    8f78:	0022      	movs	r2, r4
    8f7a:	2178      	movs	r1, #120	; 0x78
    8f7c:	3245      	adds	r2, #69	; 0x45
    8f7e:	7011      	strb	r1, [r2, #0]
    8f80:	4a6c      	ldr	r2, [pc, #432]	; (9134 <_printf_i+0x22c>)
    8f82:	e030      	b.n	8fe6 <_printf_i+0xde>
    8f84:	000e      	movs	r6, r1
    8f86:	681a      	ldr	r2, [r3, #0]
    8f88:	3642      	adds	r6, #66	; 0x42
    8f8a:	1d11      	adds	r1, r2, #4
    8f8c:	6019      	str	r1, [r3, #0]
    8f8e:	6813      	ldr	r3, [r2, #0]
    8f90:	7033      	strb	r3, [r6, #0]
    8f92:	2301      	movs	r3, #1
    8f94:	e079      	b.n	908a <_printf_i+0x182>
    8f96:	0649      	lsls	r1, r1, #25
    8f98:	d5d9      	bpl.n	8f4e <_printf_i+0x46>
    8f9a:	1d11      	adds	r1, r2, #4
    8f9c:	6019      	str	r1, [r3, #0]
    8f9e:	2300      	movs	r3, #0
    8fa0:	5ed5      	ldrsh	r5, [r2, r3]
    8fa2:	2d00      	cmp	r5, #0
    8fa4:	da03      	bge.n	8fae <_printf_i+0xa6>
    8fa6:	232d      	movs	r3, #45	; 0x2d
    8fa8:	9a04      	ldr	r2, [sp, #16]
    8faa:	426d      	negs	r5, r5
    8fac:	7013      	strb	r3, [r2, #0]
    8fae:	4b62      	ldr	r3, [pc, #392]	; (9138 <_printf_i+0x230>)
    8fb0:	270a      	movs	r7, #10
    8fb2:	9303      	str	r3, [sp, #12]
    8fb4:	e02f      	b.n	9016 <_printf_i+0x10e>
    8fb6:	6820      	ldr	r0, [r4, #0]
    8fb8:	6819      	ldr	r1, [r3, #0]
    8fba:	0605      	lsls	r5, r0, #24
    8fbc:	d503      	bpl.n	8fc6 <_printf_i+0xbe>
    8fbe:	1d08      	adds	r0, r1, #4
    8fc0:	6018      	str	r0, [r3, #0]
    8fc2:	680d      	ldr	r5, [r1, #0]
    8fc4:	e005      	b.n	8fd2 <_printf_i+0xca>
    8fc6:	0640      	lsls	r0, r0, #25
    8fc8:	d5f9      	bpl.n	8fbe <_printf_i+0xb6>
    8fca:	680d      	ldr	r5, [r1, #0]
    8fcc:	1d08      	adds	r0, r1, #4
    8fce:	6018      	str	r0, [r3, #0]
    8fd0:	b2ad      	uxth	r5, r5
    8fd2:	4b59      	ldr	r3, [pc, #356]	; (9138 <_printf_i+0x230>)
    8fd4:	2708      	movs	r7, #8
    8fd6:	9303      	str	r3, [sp, #12]
    8fd8:	2a6f      	cmp	r2, #111	; 0x6f
    8fda:	d018      	beq.n	900e <_printf_i+0x106>
    8fdc:	270a      	movs	r7, #10
    8fde:	e016      	b.n	900e <_printf_i+0x106>
    8fe0:	3145      	adds	r1, #69	; 0x45
    8fe2:	700a      	strb	r2, [r1, #0]
    8fe4:	4a54      	ldr	r2, [pc, #336]	; (9138 <_printf_i+0x230>)
    8fe6:	9203      	str	r2, [sp, #12]
    8fe8:	681a      	ldr	r2, [r3, #0]
    8fea:	6821      	ldr	r1, [r4, #0]
    8fec:	1d10      	adds	r0, r2, #4
    8fee:	6018      	str	r0, [r3, #0]
    8ff0:	6815      	ldr	r5, [r2, #0]
    8ff2:	0608      	lsls	r0, r1, #24
    8ff4:	d522      	bpl.n	903c <_printf_i+0x134>
    8ff6:	07cb      	lsls	r3, r1, #31
    8ff8:	d502      	bpl.n	9000 <_printf_i+0xf8>
    8ffa:	2320      	movs	r3, #32
    8ffc:	4319      	orrs	r1, r3
    8ffe:	6021      	str	r1, [r4, #0]
    9000:	2710      	movs	r7, #16
    9002:	2d00      	cmp	r5, #0
    9004:	d103      	bne.n	900e <_printf_i+0x106>
    9006:	2320      	movs	r3, #32
    9008:	6822      	ldr	r2, [r4, #0]
    900a:	439a      	bics	r2, r3
    900c:	6022      	str	r2, [r4, #0]
    900e:	0023      	movs	r3, r4
    9010:	2200      	movs	r2, #0
    9012:	3343      	adds	r3, #67	; 0x43
    9014:	701a      	strb	r2, [r3, #0]
    9016:	6863      	ldr	r3, [r4, #4]
    9018:	60a3      	str	r3, [r4, #8]
    901a:	2b00      	cmp	r3, #0
    901c:	db5c      	blt.n	90d8 <_printf_i+0x1d0>
    901e:	2204      	movs	r2, #4
    9020:	6821      	ldr	r1, [r4, #0]
    9022:	4391      	bics	r1, r2
    9024:	6021      	str	r1, [r4, #0]
    9026:	2d00      	cmp	r5, #0
    9028:	d158      	bne.n	90dc <_printf_i+0x1d4>
    902a:	9e04      	ldr	r6, [sp, #16]
    902c:	2b00      	cmp	r3, #0
    902e:	d064      	beq.n	90fa <_printf_i+0x1f2>
    9030:	0026      	movs	r6, r4
    9032:	9b03      	ldr	r3, [sp, #12]
    9034:	3642      	adds	r6, #66	; 0x42
    9036:	781b      	ldrb	r3, [r3, #0]
    9038:	7033      	strb	r3, [r6, #0]
    903a:	e05e      	b.n	90fa <_printf_i+0x1f2>
    903c:	0648      	lsls	r0, r1, #25
    903e:	d5da      	bpl.n	8ff6 <_printf_i+0xee>
    9040:	b2ad      	uxth	r5, r5
    9042:	e7d8      	b.n	8ff6 <_printf_i+0xee>
    9044:	6809      	ldr	r1, [r1, #0]
    9046:	681a      	ldr	r2, [r3, #0]
    9048:	0608      	lsls	r0, r1, #24
    904a:	d505      	bpl.n	9058 <_printf_i+0x150>
    904c:	1d11      	adds	r1, r2, #4
    904e:	6019      	str	r1, [r3, #0]
    9050:	6813      	ldr	r3, [r2, #0]
    9052:	6962      	ldr	r2, [r4, #20]
    9054:	601a      	str	r2, [r3, #0]
    9056:	e006      	b.n	9066 <_printf_i+0x15e>
    9058:	0649      	lsls	r1, r1, #25
    905a:	d5f7      	bpl.n	904c <_printf_i+0x144>
    905c:	1d11      	adds	r1, r2, #4
    905e:	6019      	str	r1, [r3, #0]
    9060:	6813      	ldr	r3, [r2, #0]
    9062:	8aa2      	ldrh	r2, [r4, #20]
    9064:	801a      	strh	r2, [r3, #0]
    9066:	2300      	movs	r3, #0
    9068:	9e04      	ldr	r6, [sp, #16]
    906a:	6123      	str	r3, [r4, #16]
    906c:	e054      	b.n	9118 <_printf_i+0x210>
    906e:	681a      	ldr	r2, [r3, #0]
    9070:	1d11      	adds	r1, r2, #4
    9072:	6019      	str	r1, [r3, #0]
    9074:	6816      	ldr	r6, [r2, #0]
    9076:	2100      	movs	r1, #0
    9078:	6862      	ldr	r2, [r4, #4]
    907a:	0030      	movs	r0, r6
    907c:	f000 f85e 	bl	913c <memchr>
    9080:	2800      	cmp	r0, #0
    9082:	d001      	beq.n	9088 <_printf_i+0x180>
    9084:	1b80      	subs	r0, r0, r6
    9086:	6060      	str	r0, [r4, #4]
    9088:	6863      	ldr	r3, [r4, #4]
    908a:	6123      	str	r3, [r4, #16]
    908c:	2300      	movs	r3, #0
    908e:	9a04      	ldr	r2, [sp, #16]
    9090:	7013      	strb	r3, [r2, #0]
    9092:	e041      	b.n	9118 <_printf_i+0x210>
    9094:	6923      	ldr	r3, [r4, #16]
    9096:	0032      	movs	r2, r6
    9098:	9906      	ldr	r1, [sp, #24]
    909a:	9805      	ldr	r0, [sp, #20]
    909c:	9d07      	ldr	r5, [sp, #28]
    909e:	47a8      	blx	r5
    90a0:	1c43      	adds	r3, r0, #1
    90a2:	d043      	beq.n	912c <_printf_i+0x224>
    90a4:	6823      	ldr	r3, [r4, #0]
    90a6:	2500      	movs	r5, #0
    90a8:	079b      	lsls	r3, r3, #30
    90aa:	d40f      	bmi.n	90cc <_printf_i+0x1c4>
    90ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
    90ae:	68e0      	ldr	r0, [r4, #12]
    90b0:	4298      	cmp	r0, r3
    90b2:	da3d      	bge.n	9130 <_printf_i+0x228>
    90b4:	0018      	movs	r0, r3
    90b6:	e03b      	b.n	9130 <_printf_i+0x228>
    90b8:	0022      	movs	r2, r4
    90ba:	2301      	movs	r3, #1
    90bc:	3219      	adds	r2, #25
    90be:	9906      	ldr	r1, [sp, #24]
    90c0:	9805      	ldr	r0, [sp, #20]
    90c2:	9e07      	ldr	r6, [sp, #28]
    90c4:	47b0      	blx	r6
    90c6:	1c43      	adds	r3, r0, #1
    90c8:	d030      	beq.n	912c <_printf_i+0x224>
    90ca:	3501      	adds	r5, #1
    90cc:	68e3      	ldr	r3, [r4, #12]
    90ce:	9a09      	ldr	r2, [sp, #36]	; 0x24
    90d0:	1a9b      	subs	r3, r3, r2
    90d2:	429d      	cmp	r5, r3
    90d4:	dbf0      	blt.n	90b8 <_printf_i+0x1b0>
    90d6:	e7e9      	b.n	90ac <_printf_i+0x1a4>
    90d8:	2d00      	cmp	r5, #0
    90da:	d0a9      	beq.n	9030 <_printf_i+0x128>
    90dc:	9e04      	ldr	r6, [sp, #16]
    90de:	0028      	movs	r0, r5
    90e0:	0039      	movs	r1, r7
    90e2:	f7fd f947 	bl	6374 <__aeabi_uidivmod>
    90e6:	9b03      	ldr	r3, [sp, #12]
    90e8:	3e01      	subs	r6, #1
    90ea:	5c5b      	ldrb	r3, [r3, r1]
    90ec:	0028      	movs	r0, r5
    90ee:	7033      	strb	r3, [r6, #0]
    90f0:	0039      	movs	r1, r7
    90f2:	f7fd f8b9 	bl	6268 <__udivsi3>
    90f6:	1e05      	subs	r5, r0, #0
    90f8:	d1f1      	bne.n	90de <_printf_i+0x1d6>
    90fa:	2f08      	cmp	r7, #8
    90fc:	d109      	bne.n	9112 <_printf_i+0x20a>
    90fe:	6823      	ldr	r3, [r4, #0]
    9100:	07db      	lsls	r3, r3, #31
    9102:	d506      	bpl.n	9112 <_printf_i+0x20a>
    9104:	6863      	ldr	r3, [r4, #4]
    9106:	6922      	ldr	r2, [r4, #16]
    9108:	4293      	cmp	r3, r2
    910a:	dc02      	bgt.n	9112 <_printf_i+0x20a>
    910c:	2330      	movs	r3, #48	; 0x30
    910e:	3e01      	subs	r6, #1
    9110:	7033      	strb	r3, [r6, #0]
    9112:	9b04      	ldr	r3, [sp, #16]
    9114:	1b9b      	subs	r3, r3, r6
    9116:	6123      	str	r3, [r4, #16]
    9118:	9b07      	ldr	r3, [sp, #28]
    911a:	aa09      	add	r2, sp, #36	; 0x24
    911c:	9300      	str	r3, [sp, #0]
    911e:	0021      	movs	r1, r4
    9120:	9b06      	ldr	r3, [sp, #24]
    9122:	9805      	ldr	r0, [sp, #20]
    9124:	f7ff fe82 	bl	8e2c <_printf_common>
    9128:	1c43      	adds	r3, r0, #1
    912a:	d1b3      	bne.n	9094 <_printf_i+0x18c>
    912c:	2001      	movs	r0, #1
    912e:	4240      	negs	r0, r0
    9130:	b00b      	add	sp, #44	; 0x2c
    9132:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9134:	0000975a 	.word	0x0000975a
    9138:	00009749 	.word	0x00009749

0000913c <memchr>:
    913c:	b2c9      	uxtb	r1, r1
    913e:	1882      	adds	r2, r0, r2
    9140:	4290      	cmp	r0, r2
    9142:	d101      	bne.n	9148 <memchr+0xc>
    9144:	2000      	movs	r0, #0
    9146:	4770      	bx	lr
    9148:	7803      	ldrb	r3, [r0, #0]
    914a:	428b      	cmp	r3, r1
    914c:	d0fb      	beq.n	9146 <memchr+0xa>
    914e:	3001      	adds	r0, #1
    9150:	e7f6      	b.n	9140 <memchr+0x4>

00009152 <memmove>:
    9152:	b510      	push	{r4, lr}
    9154:	4288      	cmp	r0, r1
    9156:	d902      	bls.n	915e <memmove+0xc>
    9158:	188b      	adds	r3, r1, r2
    915a:	4298      	cmp	r0, r3
    915c:	d308      	bcc.n	9170 <memmove+0x1e>
    915e:	2300      	movs	r3, #0
    9160:	429a      	cmp	r2, r3
    9162:	d007      	beq.n	9174 <memmove+0x22>
    9164:	5ccc      	ldrb	r4, [r1, r3]
    9166:	54c4      	strb	r4, [r0, r3]
    9168:	3301      	adds	r3, #1
    916a:	e7f9      	b.n	9160 <memmove+0xe>
    916c:	5c8b      	ldrb	r3, [r1, r2]
    916e:	5483      	strb	r3, [r0, r2]
    9170:	3a01      	subs	r2, #1
    9172:	d2fb      	bcs.n	916c <memmove+0x1a>
    9174:	bd10      	pop	{r4, pc}

00009176 <_realloc_r>:
    9176:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9178:	0007      	movs	r7, r0
    917a:	000d      	movs	r5, r1
    917c:	0016      	movs	r6, r2
    917e:	2900      	cmp	r1, #0
    9180:	d105      	bne.n	918e <_realloc_r+0x18>
    9182:	0011      	movs	r1, r2
    9184:	f7ff fc48 	bl	8a18 <_malloc_r>
    9188:	0004      	movs	r4, r0
    918a:	0020      	movs	r0, r4
    918c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    918e:	2a00      	cmp	r2, #0
    9190:	d103      	bne.n	919a <_realloc_r+0x24>
    9192:	f7ff fbf7 	bl	8984 <_free_r>
    9196:	0034      	movs	r4, r6
    9198:	e7f7      	b.n	918a <_realloc_r+0x14>
    919a:	f000 f812 	bl	91c2 <_malloc_usable_size_r>
    919e:	002c      	movs	r4, r5
    91a0:	4286      	cmp	r6, r0
    91a2:	d9f2      	bls.n	918a <_realloc_r+0x14>
    91a4:	0031      	movs	r1, r6
    91a6:	0038      	movs	r0, r7
    91a8:	f7ff fc36 	bl	8a18 <_malloc_r>
    91ac:	1e04      	subs	r4, r0, #0
    91ae:	d0ec      	beq.n	918a <_realloc_r+0x14>
    91b0:	0029      	movs	r1, r5
    91b2:	0032      	movs	r2, r6
    91b4:	f7ff fbd4 	bl	8960 <memcpy>
    91b8:	0029      	movs	r1, r5
    91ba:	0038      	movs	r0, r7
    91bc:	f7ff fbe2 	bl	8984 <_free_r>
    91c0:	e7e3      	b.n	918a <_realloc_r+0x14>

000091c2 <_malloc_usable_size_r>:
    91c2:	1f0b      	subs	r3, r1, #4
    91c4:	681b      	ldr	r3, [r3, #0]
    91c6:	1f18      	subs	r0, r3, #4
    91c8:	2b00      	cmp	r3, #0
    91ca:	da01      	bge.n	91d0 <_malloc_usable_size_r+0xe>
    91cc:	580b      	ldr	r3, [r1, r0]
    91ce:	18c0      	adds	r0, r0, r3
    91d0:	4770      	bx	lr
    91d2:	0000      	movs	r0, r0
    91d4:	00000000 	.word	0x00000000
    91d8:	00000040 	.word	0x00000040
    91dc:	00000014 	.word	0x00000014
    91e0:	00000054 	.word	0x00000054
    91e4:	000005b4 	.word	0x000005b4
    91e8:	000005cc 	.word	0x000005cc
    91ec:	0000060a 	.word	0x0000060a
    91f0:	0000064a 	.word	0x0000064a
    91f4:	00000676 	.word	0x00000676
    91f8:	000006b2 	.word	0x000006b2
    91fc:	42003000 	.word	0x42003000
    9200:	42003400 	.word	0x42003400
    9204:	42003800 	.word	0x42003800
    9208:	42003c00 	.word	0x42003c00
    920c:	42004000 	.word	0x42004000
    9210:	00000002 	.word	0x00000002
    9214:	00001000 	.word	0x00001000
    9218:	00000002 	.word	0x00000002
    921c:	00002000 	.word	0x00002000
    9220:	00000002 	.word	0x00000002
    9224:	00004000 	.word	0x00004000
    9228:	00000002 	.word	0x00000002
    922c:	00008000 	.word	0x00008000
    9230:	00000002 	.word	0x00000002
    9234:	00010000 	.word	0x00010000
    9238:	0000101c 	.word	0x0000101c
    923c:	00001284 	.word	0x00001284
    9240:	00001284 	.word	0x00001284
    9244:	00001284 	.word	0x00001284
    9248:	00001284 	.word	0x00001284
    924c:	00001284 	.word	0x00001284
    9250:	00001284 	.word	0x00001284
    9254:	00001284 	.word	0x00001284
    9258:	00001284 	.word	0x00001284
    925c:	00001284 	.word	0x00001284
    9260:	00001284 	.word	0x00001284
    9264:	00001284 	.word	0x00001284
    9268:	00001284 	.word	0x00001284
    926c:	00001284 	.word	0x00001284
    9270:	00001284 	.word	0x00001284
    9274:	00001284 	.word	0x00001284
    9278:	00001004 	.word	0x00001004
    927c:	00001284 	.word	0x00001284
    9280:	00001284 	.word	0x00001284
    9284:	00001284 	.word	0x00001284
    9288:	00001284 	.word	0x00001284
    928c:	00001284 	.word	0x00001284
    9290:	00001284 	.word	0x00001284
    9294:	00001284 	.word	0x00001284
    9298:	00001284 	.word	0x00001284
    929c:	00001284 	.word	0x00001284
    92a0:	00001284 	.word	0x00001284
    92a4:	00001284 	.word	0x00001284
    92a8:	00001284 	.word	0x00001284
    92ac:	00001284 	.word	0x00001284
    92b0:	00001284 	.word	0x00001284
    92b4:	00001284 	.word	0x00001284
    92b8:	00001014 	.word	0x00001014
    92bc:	00001284 	.word	0x00001284
    92c0:	00001284 	.word	0x00001284
    92c4:	00001284 	.word	0x00001284
    92c8:	00001284 	.word	0x00001284
    92cc:	00001284 	.word	0x00001284
    92d0:	00001284 	.word	0x00001284
    92d4:	00001284 	.word	0x00001284
    92d8:	00001284 	.word	0x00001284
    92dc:	00001284 	.word	0x00001284
    92e0:	00001284 	.word	0x00001284
    92e4:	00001284 	.word	0x00001284
    92e8:	00001284 	.word	0x00001284
    92ec:	00001284 	.word	0x00001284
    92f0:	00001284 	.word	0x00001284
    92f4:	00001284 	.word	0x00001284
    92f8:	0000100c 	.word	0x0000100c
    92fc:	00001054 	.word	0x00001054
    9300:	00000fec 	.word	0x00000fec
    9304:	00000ffc 	.word	0x00000ffc
    9308:	00000ff4 	.word	0x00000ff4
    930c:	00000002 	.word	0x00000002
    9310:	00000003 	.word	0x00000003
    9314:	00000028 	.word	0x00000028
    9318:	00000029 	.word	0x00000029
    931c:	00000004 	.word	0x00000004
    9320:	00000005 	.word	0x00000005
    9324:	00000006 	.word	0x00000006
    9328:	00000007 	.word	0x00000007
    932c:	00000008 	.word	0x00000008
    9330:	00000009 	.word	0x00000009
    9334:	0000000a 	.word	0x0000000a
    9338:	0000000b 	.word	0x0000000b
    933c:	00000020 	.word	0x00000020
    9340:	00000021 	.word	0x00000021
    9344:	00000022 	.word	0x00000022
    9348:	00000023 	.word	0x00000023
    934c:	00000028 	.word	0x00000028
    9350:	00000029 	.word	0x00000029
    9354:	00000024 	.word	0x00000024
    9358:	00000025 	.word	0x00000025
    935c:	00000026 	.word	0x00000026
    9360:	00000027 	.word	0x00000027
    9364:	00000008 	.word	0x00000008
    9368:	00000009 	.word	0x00000009

0000936c <_adc_apbcmasks>:
    936c:	00020000 00040000                       ........

00009374 <_adc_biascomp_addr>:
    9374:	00806020 00806020                        `.. `..

0000937c <_adc_biascomp_pos>:
    937c:	00000903                                ....

00009380 <_adc_biasrefbuf_addr>:
    9380:	00806020 00806020                        `.. `..

00009388 <_adc_biasrefbuf_pos>:
    9388:	00000600                                ....

0000938c <_adc_extchannel_msb>:
    938c:	0000000b 0000000b                       ........

00009394 <_adc_gclk_ids>:
    9394:	00002221 54504d45 64252059 00000000     !"..EMPTY %d....
    93a4:	45564153 00642520 42000400 42000800     SAVE %d....B...B
    93b4:	42000c00 42001000 42001400 42001800     ...B...B...B...B

000093c4 <_tcc_apbcmasks>:
    93c4:	00000200 00000400 00000800              ............

000093d0 <_tcc_cc_nums>:
    93d0:	00020204                                ....

000093d4 <_tcc_gclk_ids>:
    93d4:	001d1c1c                                ....

000093d8 <_tcc_maxs>:
    93d8:	00ffffff 00ffffff 0000ffff              ............

000093e4 <_tcc_ow_nums>:
    93e4:	00020408                                ....

000093e8 <_tcc_intflag>:
    93e8:	00000001 00000002 00000004 00000008     ................
    93f8:	00001000 00002000 00004000 00008000     ..... ...@......
    9408:	00010000 00020000 00040000 00080000     ................

00009418 <tcc_interrupt_vectors.14047>:
    9418:	00131211                                ....

0000941c <adc_interrupt_vectors.14143>:
    941c:	00001a19 00003ee8 00003f28 00003f38     .....>..(?..8?..
    942c:	00003f4e 00003f48 00003f90 00003f5c     N?..H?...?..\?..
    943c:	00003f90 00003f7e 00003f62 00003f70     .?..~?..b?..p?..
    944c:	000041f8 00004218 00004238 00004258     .A...B..8B..XB..
    945c:	00004282 000041f8 00004282 000041f8     .B...A...B...A..
    946c:	000041f8 000041f8 000041f8 000042c6     .A...A...A...B..
    947c:	000042e6 00004306 00004326 00004368     .B...C..&C..hC..
    948c:	000042c6 00004368 000042c6 000042c6     .B..hC...B...B..
    949c:	000042c6 000042c6 2e756c25 6c333025     .B...B..%lu.%03l
    94ac:	00000075 00006425 00756c25 4f525245     u...%d..%lu.ERRO
    94bc:	00393952 2d256325 25733031 00007339     R99.%c%-10s%9s..
    94cc:	30312d25 30312573 00000073 2d256325     %-10s%10s...%c%-
    94dc:	25733031 32257337 00000073 30312d25     10s%7s%2s...%-10
    94ec:	73382573 00733225 000048ea 000048e6     s%8s%2s..H...H..
    94fc:	000048e6 00004918 00004918 00004902     .H...I...I...I..
    950c:	000048f0 00004908 00004b3c 00004b1c     .H...I..<K...K..
    951c:	00004b1c 00004b72 00004b2e 00004b4a     .K..rK...K..JK..
    952c:	00004b20 00004b58 00534559 00004f4e      K..XK..YES.NO..
    953c:	0046464f 00004e4f 00584d44 4944494d     OFF.ON..DMX.MIDI
    954c:	00000000 48544f42 00000000 00525245     ....BOTH....ERR.
    955c:	54544553 53474e49 00000000 4e414843     SETTINGS....CHAN
    956c:	204c454e 00000031 4e414843 204c454e     NEL 1...CHANNEL 
    957c:	00000032 4e414843 204c454e 00000033     2...CHANNEL 3...
    958c:	4e414843 204c454e 00000034 4e414843     CHANNEL 4...CHAN
    959c:	204c454e 00000035 544e4f43 54534152     NEL 5...CONTRAST
    95ac:	00000000 47495242 454e5448 00005353     ....BRIGHTNESS..
    95bc:	45444f4d 00000000 44414f4c 56415320     MODE....LOAD SAV
    95cc:	00000045 45564153 00000000 4d524f46     E...SAVE....FORM
    95dc:	00005441 20434146 45534552 00000054     AT..FAC RESET...
    95ec:	4b434142 00000000 25584d44 00000064     BACK....DMX%d...
    95fc:	25584d44 64252d64 00000000 54415453     DMX%d-%d....STAT
    960c:	435f4349 00000048 42414e45 0000454c     IC_CH...ENABLE..
    961c:	55504e49 00000054 20584d44 4e414843     INPUT...DMX CHAN
    962c:	00000000 4556454c 0000004c 0000736d     ....LEVEL...ms..
    963c:	41545441 00004b43 41434544 00000059     ATTACK..DECAY...
    964c:	54535553 004e4941 454c5f53 004c4556     SUSTAIN.S_LEVEL.
    965c:	454c4552 00455341 4944494d 00484320     RELEASE.MIDI CH.
    966c:	4944494d 544f4e20 00000045 000068b4     MIDI NOTE....h..
    967c:	00006804 00006804 00006802 000068a6     .h...h...h...h..
    968c:	000068a6 0000689c 00006802 000068a6     .h...h...h...h..
    969c:	0000689c 000068a6 00006802 000068ac     .h...h...h...h..
    96ac:	000068ac 000068ac 0000693c 00007684     .h...h..<i...v..
    96bc:	00007666 00007620 0000753e 00007620     fv.. v..>u.. v..
    96cc:	00007658 00007620 0000753e 00007666     Xv.. v..>u..fv..
    96dc:	00007666 00007658 0000753e 00007536     fv..Xv..>u..6u..
    96ec:	00007536 00007536 0000789c 00007ce4     6u..6u...x...|..
    96fc:	00007ba4 00007ba4 00007ba0 00007cbc     .{...{...{...|..
    970c:	00007cbc 00007cae 00007ba0 00007cbc     .|...|...{...|..
    971c:	00007cae 00007cbc 00007ba0 00007cc4     .|...|...{...|..
    972c:	00007cc4 00007cc4 00007ec8 2b302d23     .|...|...~..#-0+
    973c:	6c680020 6665004c 47464567 32313000      .hlL.efgEFG.012
    974c:	36353433 41393837 45444342 31300046     3456789ABCDEF.01
    975c:	35343332 39383736 64636261 00006665     23456789abcdef..

0000976c <_init>:
    976c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    976e:	46c0      	nop			; (mov r8, r8)
    9770:	bcf8      	pop	{r3, r4, r5, r6, r7}
    9772:	bc08      	pop	{r3}
    9774:	469e      	mov	lr, r3
    9776:	4770      	bx	lr

00009778 <__init_array_start>:
    9778:	000000e5 	.word	0x000000e5

0000977c <_fini>:
    977c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    977e:	46c0      	nop			; (mov r8, r8)
    9780:	bcf8      	pop	{r3, r4, r5, r6, r7}
    9782:	bc08      	pop	{r3}
    9784:	469e      	mov	lr, r3
    9786:	4770      	bx	lr

00009788 <__fini_array_start>:
    9788:	000000bd 	.word	0x000000bd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	2800      	cmp	r0, #0
20000008:	d1fa      	bne.n	20000000 <portable_delay_cycles>
2000000a:	4770      	bx	lr

2000000c <cycles_per_ms>:
2000000c:	1f40 0000                                   @...

20000010 <cycles_per_us>:
20000010:	0008 0000                                   ....

20000014 <g_interrupt_enabled>:
20000014:	0001 0000                                   ....

20000018 <device_settings>:
20000018:	1008 0000                                   ....

2000001c <key_pressed>:
2000001c:	0001 0000                                   ....

20000020 <p_to_menus>:
20000020:	0128 2000 0418 2000 0708 2000 09f8 2000     (.. ... ... ... 
20000030:	0ce8 2000                                   ... 

20000034 <selected_menu>:
20000034:	0fdc 2000                                   ... 

20000038 <_impure_ptr>:
20000038:	003c 2000                                   <.. 

2000003c <impure_data>:
	...
