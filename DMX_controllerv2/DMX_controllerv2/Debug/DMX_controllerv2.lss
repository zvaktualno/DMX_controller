
DMX_controllerv2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000942c  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0000942c  0000942c  0001942c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000002bc  20000000  00009434  00020000  2**2
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00002734  200002bc  000096f0  000202bc  2**2
                  ALLOC
  4 .stack        00002000  200029f0  0000be24  000202bc  2**0
                  ALLOC
  5 .ARM.attributes 00000028  00000000  00000000  000202bc  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000202e4  2**0
                  CONTENTS, READONLY
  7 .debug_info   0006f31b  00000000  00000000  0002033d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00008ce3  00000000  00000000  0008f658  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000df61  00000000  00000000  0009833b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000ef0  00000000  00000000  000a629c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00001240  00000000  00000000  000a718c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00029803  00000000  00000000  000a83cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00020bf9  00000000  00000000  000d1bcf  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000a6e33  00000000  00000000  000f27c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002b4c  00000000  00000000  001995fc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	f0 49 00 20 05 4f 00 00 01 51 00 00 05 51 00 00     .I. .O...Q...Q..
	...
      2c:	09 51 00 00 00 00 00 00 00 00 00 00 0d 51 00 00     .Q...........Q..
      3c:	11 51 00 00 01 4f 00 00 01 4f 00 00 01 4f 00 00     .Q...O...O...O..
      4c:	e9 13 00 00 01 4f 00 00 01 4f 00 00 01 4f 00 00     .....O...O...O..
      5c:	01 4f 00 00 01 4f 00 00 f1 33 00 00 01 34 00 00     .O...O...3...4..
      6c:	11 34 00 00 21 34 00 00 31 34 00 00 41 34 00 00     .4..!4..14..A4..
      7c:	01 4f 00 00 01 4f 00 00 19 2d 00 00 29 2d 00 00     .O...O...-..)-..
      8c:	39 2d 00 00 b5 07 00 00 c5 07 00 00 d5 07 00 00     9-..............
      9c:	e5 07 00 00 f5 07 00 00 69 13 00 00 79 13 00 00     ........i...y...
      ac:	f1 34 00 00 f1 22 00 00 01 4f 00 00 01 4f 00 00     .4..."...O...O..

000000bc <__do_global_dtors_aux>:
      bc:	b510      	push	{r4, lr}
      be:	4c06      	ldr	r4, [pc, #24]	; (d8 <__do_global_dtors_aux+0x1c>)
      c0:	7823      	ldrb	r3, [r4, #0]
      c2:	2b00      	cmp	r3, #0
      c4:	d107      	bne.n	d6 <__do_global_dtors_aux+0x1a>
      c6:	4b05      	ldr	r3, [pc, #20]	; (dc <__do_global_dtors_aux+0x20>)
      c8:	2b00      	cmp	r3, #0
      ca:	d002      	beq.n	d2 <__do_global_dtors_aux+0x16>
      cc:	4804      	ldr	r0, [pc, #16]	; (e0 <__do_global_dtors_aux+0x24>)
      ce:	e000      	b.n	d2 <__do_global_dtors_aux+0x16>
      d0:	bf00      	nop
      d2:	2301      	movs	r3, #1
      d4:	7023      	strb	r3, [r4, #0]
      d6:	bd10      	pop	{r4, pc}
      d8:	200002bc 	.word	0x200002bc
      dc:	00000000 	.word	0x00000000
      e0:	00009434 	.word	0x00009434

000000e4 <frame_dummy>:
      e4:	4b08      	ldr	r3, [pc, #32]	; (108 <frame_dummy+0x24>)
      e6:	b510      	push	{r4, lr}
      e8:	2b00      	cmp	r3, #0
      ea:	d003      	beq.n	f4 <frame_dummy+0x10>
      ec:	4907      	ldr	r1, [pc, #28]	; (10c <frame_dummy+0x28>)
      ee:	4808      	ldr	r0, [pc, #32]	; (110 <frame_dummy+0x2c>)
      f0:	e000      	b.n	f4 <frame_dummy+0x10>
      f2:	bf00      	nop
      f4:	4807      	ldr	r0, [pc, #28]	; (114 <frame_dummy+0x30>)
      f6:	6803      	ldr	r3, [r0, #0]
      f8:	2b00      	cmp	r3, #0
      fa:	d100      	bne.n	fe <frame_dummy+0x1a>
      fc:	bd10      	pop	{r4, pc}
      fe:	4b06      	ldr	r3, [pc, #24]	; (118 <frame_dummy+0x34>)
     100:	2b00      	cmp	r3, #0
     102:	d0fb      	beq.n	fc <frame_dummy+0x18>
     104:	4798      	blx	r3
     106:	e7f9      	b.n	fc <frame_dummy+0x18>
     108:	00000000 	.word	0x00000000
     10c:	200002c0 	.word	0x200002c0
     110:	00009434 	.word	0x00009434
     114:	00009434 	.word	0x00009434
     118:	00000000 	.word	0x00000000

0000011c <lcd_pulseEnable>:
    port_pin_set_output_level(PIN_LCD_D6, (value >> 6) & 0x01);
    port_pin_set_output_level(PIN_LCD_D7, (value >> 7) & 0x01);
    lcd_pulseEnable();
}

void lcd_pulseEnable(void) {
     11c:	b5f0      	push	{r4, r5, r6, r7, lr}
     11e:	46d6      	mov	lr, sl
     120:	464f      	mov	r7, r9
     122:	4646      	mov	r6, r8
     124:	b5c0      	push	{r6, r7, lr}
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));

	/* Set the pin to high or low atomically based on the requested level */
	if (level) {
		port_base->OUTSET.reg = pin_mask;
     126:	2680      	movs	r6, #128	; 0x80
     128:	2382      	movs	r3, #130	; 0x82
     12a:	05db      	lsls	r3, r3, #23
     12c:	4698      	mov	r8, r3
     12e:	44b0      	add	r8, r6
     130:	4643      	mov	r3, r8
     132:	619e      	str	r6, [r3, #24]
    port_pin_set_output_level(PIN_LCD_EN, 1);
    delay_us(1);
     134:	2000      	movs	r0, #0
     136:	4f13      	ldr	r7, [pc, #76]	; (184 <lcd_pulseEnable+0x68>)
     138:	47b8      	blx	r7
     13a:	0002      	movs	r2, r0
     13c:	2300      	movs	r3, #0
     13e:	4c12      	ldr	r4, [pc, #72]	; (188 <lcd_pulseEnable+0x6c>)
     140:	2500      	movs	r5, #0
     142:	1912      	adds	r2, r2, r4
     144:	416b      	adcs	r3, r5
     146:	0010      	movs	r0, r2
     148:	0019      	movs	r1, r3
     14a:	4b10      	ldr	r3, [pc, #64]	; (18c <lcd_pulseEnable+0x70>)
     14c:	4699      	mov	r9, r3
     14e:	4a10      	ldr	r2, [pc, #64]	; (190 <lcd_pulseEnable+0x74>)
     150:	2300      	movs	r3, #0
     152:	47c8      	blx	r9
     154:	4b0f      	ldr	r3, [pc, #60]	; (194 <lcd_pulseEnable+0x78>)
     156:	469a      	mov	sl, r3
     158:	4798      	blx	r3
	} else {
		port_base->OUTCLR.reg = pin_mask;
     15a:	4643      	mov	r3, r8
     15c:	615e      	str	r6, [r3, #20]
    port_pin_set_output_level(PIN_LCD_EN, 0);
    delay_us(50);
     15e:	2000      	movs	r0, #0
     160:	47b8      	blx	r7
     162:	2232      	movs	r2, #50	; 0x32
     164:	2300      	movs	r3, #0
     166:	2100      	movs	r1, #0
     168:	4e0b      	ldr	r6, [pc, #44]	; (198 <lcd_pulseEnable+0x7c>)
     16a:	47b0      	blx	r6
     16c:	1900      	adds	r0, r0, r4
     16e:	4169      	adcs	r1, r5
     170:	4a07      	ldr	r2, [pc, #28]	; (190 <lcd_pulseEnable+0x74>)
     172:	2300      	movs	r3, #0
     174:	47c8      	blx	r9
     176:	47d0      	blx	sl
}
     178:	bc1c      	pop	{r2, r3, r4}
     17a:	4690      	mov	r8, r2
     17c:	4699      	mov	r9, r3
     17e:	46a2      	mov	sl, r4
     180:	bdf0      	pop	{r4, r5, r6, r7, pc}
     182:	46c0      	nop			; (mov r8, r8)
     184:	00004ccd 	.word	0x00004ccd
     188:	006acfbf 	.word	0x006acfbf
     18c:	000060e5 	.word	0x000060e5
     190:	006acfc0 	.word	0x006acfc0
     194:	20000001 	.word	0x20000001
     198:	00006125 	.word	0x00006125

0000019c <lcd_write8bits>:
void lcd_write8bits(uint8_t value) {
     19c:	b510      	push	{r4, lr}
	if (level) {
     19e:	07c3      	lsls	r3, r0, #31
     1a0:	d529      	bpl.n	1f6 <lcd_write8bits+0x5a>
		port_base->OUTSET.reg = pin_mask;
     1a2:	2240      	movs	r2, #64	; 0x40
     1a4:	4b24      	ldr	r3, [pc, #144]	; (238 <lcd_write8bits+0x9c>)
     1a6:	619a      	str	r2, [r3, #24]
	if (level) {
     1a8:	0783      	lsls	r3, r0, #30
     1aa:	d528      	bpl.n	1fe <lcd_write8bits+0x62>
		port_base->OUTSET.reg = pin_mask;
     1ac:	2220      	movs	r2, #32
     1ae:	4b22      	ldr	r3, [pc, #136]	; (238 <lcd_write8bits+0x9c>)
     1b0:	619a      	str	r2, [r3, #24]
	if (level) {
     1b2:	0743      	lsls	r3, r0, #29
     1b4:	d527      	bpl.n	206 <lcd_write8bits+0x6a>
		port_base->OUTSET.reg = pin_mask;
     1b6:	2210      	movs	r2, #16
     1b8:	4b1f      	ldr	r3, [pc, #124]	; (238 <lcd_write8bits+0x9c>)
     1ba:	619a      	str	r2, [r3, #24]
	if (level) {
     1bc:	0703      	lsls	r3, r0, #28
     1be:	d526      	bpl.n	20e <lcd_write8bits+0x72>
		port_base->OUTSET.reg = pin_mask;
     1c0:	2208      	movs	r2, #8
     1c2:	4b1d      	ldr	r3, [pc, #116]	; (238 <lcd_write8bits+0x9c>)
     1c4:	619a      	str	r2, [r3, #24]
	if (level) {
     1c6:	06c3      	lsls	r3, r0, #27
     1c8:	d525      	bpl.n	216 <lcd_write8bits+0x7a>
		port_base->OUTSET.reg = pin_mask;
     1ca:	2204      	movs	r2, #4
     1cc:	4b1a      	ldr	r3, [pc, #104]	; (238 <lcd_write8bits+0x9c>)
     1ce:	619a      	str	r2, [r3, #24]
	if (level) {
     1d0:	0683      	lsls	r3, r0, #26
     1d2:	d524      	bpl.n	21e <lcd_write8bits+0x82>
		port_base->OUTSET.reg = pin_mask;
     1d4:	2202      	movs	r2, #2
     1d6:	4b18      	ldr	r3, [pc, #96]	; (238 <lcd_write8bits+0x9c>)
     1d8:	619a      	str	r2, [r3, #24]
	if (level) {
     1da:	0643      	lsls	r3, r0, #25
     1dc:	d523      	bpl.n	226 <lcd_write8bits+0x8a>
		port_base->OUTSET.reg = pin_mask;
     1de:	2201      	movs	r2, #1
     1e0:	4b15      	ldr	r3, [pc, #84]	; (238 <lcd_write8bits+0x9c>)
     1e2:	619a      	str	r2, [r3, #24]
	if (level) {
     1e4:	09c0      	lsrs	r0, r0, #7
     1e6:	d122      	bne.n	22e <lcd_write8bits+0x92>
		port_base->OUTCLR.reg = pin_mask;
     1e8:	2280      	movs	r2, #128	; 0x80
     1ea:	0612      	lsls	r2, r2, #24
     1ec:	4b12      	ldr	r3, [pc, #72]	; (238 <lcd_write8bits+0x9c>)
     1ee:	615a      	str	r2, [r3, #20]
    lcd_pulseEnable();
     1f0:	4b12      	ldr	r3, [pc, #72]	; (23c <lcd_write8bits+0xa0>)
     1f2:	4798      	blx	r3
}
     1f4:	bd10      	pop	{r4, pc}
     1f6:	2240      	movs	r2, #64	; 0x40
     1f8:	4b0f      	ldr	r3, [pc, #60]	; (238 <lcd_write8bits+0x9c>)
     1fa:	615a      	str	r2, [r3, #20]
     1fc:	e7d4      	b.n	1a8 <lcd_write8bits+0xc>
     1fe:	2220      	movs	r2, #32
     200:	4b0d      	ldr	r3, [pc, #52]	; (238 <lcd_write8bits+0x9c>)
     202:	615a      	str	r2, [r3, #20]
     204:	e7d5      	b.n	1b2 <lcd_write8bits+0x16>
     206:	2210      	movs	r2, #16
     208:	4b0b      	ldr	r3, [pc, #44]	; (238 <lcd_write8bits+0x9c>)
     20a:	615a      	str	r2, [r3, #20]
     20c:	e7d6      	b.n	1bc <lcd_write8bits+0x20>
     20e:	2208      	movs	r2, #8
     210:	4b09      	ldr	r3, [pc, #36]	; (238 <lcd_write8bits+0x9c>)
     212:	615a      	str	r2, [r3, #20]
     214:	e7d7      	b.n	1c6 <lcd_write8bits+0x2a>
     216:	2204      	movs	r2, #4
     218:	4b07      	ldr	r3, [pc, #28]	; (238 <lcd_write8bits+0x9c>)
     21a:	615a      	str	r2, [r3, #20]
     21c:	e7d8      	b.n	1d0 <lcd_write8bits+0x34>
     21e:	2202      	movs	r2, #2
     220:	4b05      	ldr	r3, [pc, #20]	; (238 <lcd_write8bits+0x9c>)
     222:	615a      	str	r2, [r3, #20]
     224:	e7d9      	b.n	1da <lcd_write8bits+0x3e>
     226:	2201      	movs	r2, #1
     228:	4b03      	ldr	r3, [pc, #12]	; (238 <lcd_write8bits+0x9c>)
     22a:	615a      	str	r2, [r3, #20]
     22c:	e7da      	b.n	1e4 <lcd_write8bits+0x48>
		port_base->OUTSET.reg = pin_mask;
     22e:	2280      	movs	r2, #128	; 0x80
     230:	0612      	lsls	r2, r2, #24
     232:	4b01      	ldr	r3, [pc, #4]	; (238 <lcd_write8bits+0x9c>)
     234:	619a      	str	r2, [r3, #24]
     236:	e7db      	b.n	1f0 <lcd_write8bits+0x54>
     238:	41000080 	.word	0x41000080
     23c:	0000011d 	.word	0x0000011d

00000240 <lcd_send>:
void lcd_send(uint8_t value, uint8_t mode) {
     240:	b510      	push	{r4, lr}
	if (level) {
     242:	2900      	cmp	r1, #0
     244:	d118      	bne.n	278 <lcd_send+0x38>
		port_base->OUTCLR.reg = pin_mask;
     246:	2280      	movs	r2, #128	; 0x80
     248:	0092      	lsls	r2, r2, #2
     24a:	4b0e      	ldr	r3, [pc, #56]	; (284 <lcd_send+0x44>)
     24c:	615a      	str	r2, [r3, #20]
    lcd_write8bits(value);
     24e:	4b0e      	ldr	r3, [pc, #56]	; (288 <lcd_send+0x48>)
     250:	4798      	blx	r3
    delay_us(50);
     252:	2000      	movs	r0, #0
     254:	4b0d      	ldr	r3, [pc, #52]	; (28c <lcd_send+0x4c>)
     256:	4798      	blx	r3
     258:	2232      	movs	r2, #50	; 0x32
     25a:	2300      	movs	r3, #0
     25c:	2100      	movs	r1, #0
     25e:	4c0c      	ldr	r4, [pc, #48]	; (290 <lcd_send+0x50>)
     260:	47a0      	blx	r4
     262:	4a0c      	ldr	r2, [pc, #48]	; (294 <lcd_send+0x54>)
     264:	2300      	movs	r3, #0
     266:	1880      	adds	r0, r0, r2
     268:	4159      	adcs	r1, r3
     26a:	4a0b      	ldr	r2, [pc, #44]	; (298 <lcd_send+0x58>)
     26c:	2300      	movs	r3, #0
     26e:	4c0b      	ldr	r4, [pc, #44]	; (29c <lcd_send+0x5c>)
     270:	47a0      	blx	r4
     272:	4b0b      	ldr	r3, [pc, #44]	; (2a0 <lcd_send+0x60>)
     274:	4798      	blx	r3
}
     276:	bd10      	pop	{r4, pc}
		port_base->OUTSET.reg = pin_mask;
     278:	2280      	movs	r2, #128	; 0x80
     27a:	0092      	lsls	r2, r2, #2
     27c:	4b01      	ldr	r3, [pc, #4]	; (284 <lcd_send+0x44>)
     27e:	619a      	str	r2, [r3, #24]
     280:	e7e5      	b.n	24e <lcd_send+0xe>
     282:	46c0      	nop			; (mov r8, r8)
     284:	41000080 	.word	0x41000080
     288:	0000019d 	.word	0x0000019d
     28c:	00004ccd 	.word	0x00004ccd
     290:	00006125 	.word	0x00006125
     294:	006acfbf 	.word	0x006acfbf
     298:	006acfc0 	.word	0x006acfc0
     29c:	000060e5 	.word	0x000060e5
     2a0:	20000001 	.word	0x20000001

000002a4 <lcd_command>:
void lcd_command(uint8_t value) {
     2a4:	b510      	push	{r4, lr}
    lcd_send(value, 0);
     2a6:	2100      	movs	r1, #0
     2a8:	4b01      	ldr	r3, [pc, #4]	; (2b0 <lcd_command+0xc>)
     2aa:	4798      	blx	r3
}
     2ac:	bd10      	pop	{r4, pc}
     2ae:	46c0      	nop			; (mov r8, r8)
     2b0:	00000241 	.word	0x00000241

000002b4 <lcd_clear>:
void lcd_clear() {
     2b4:	b510      	push	{r4, lr}
    lcd_command(LCD_CLEARDISPLAY);
     2b6:	2001      	movs	r0, #1
     2b8:	4b0b      	ldr	r3, [pc, #44]	; (2e8 <lcd_clear+0x34>)
     2ba:	4798      	blx	r3
    delay_us(3);
     2bc:	2000      	movs	r0, #0
     2be:	4b0b      	ldr	r3, [pc, #44]	; (2ec <lcd_clear+0x38>)
     2c0:	4798      	blx	r3
     2c2:	0002      	movs	r2, r0
     2c4:	2300      	movs	r3, #0
     2c6:	0019      	movs	r1, r3
     2c8:	1880      	adds	r0, r0, r2
     2ca:	4159      	adcs	r1, r3
     2cc:	1880      	adds	r0, r0, r2
     2ce:	4159      	adcs	r1, r3
     2d0:	4a07      	ldr	r2, [pc, #28]	; (2f0 <lcd_clear+0x3c>)
     2d2:	2300      	movs	r3, #0
     2d4:	1880      	adds	r0, r0, r2
     2d6:	4159      	adcs	r1, r3
     2d8:	4a06      	ldr	r2, [pc, #24]	; (2f4 <lcd_clear+0x40>)
     2da:	2300      	movs	r3, #0
     2dc:	4c06      	ldr	r4, [pc, #24]	; (2f8 <lcd_clear+0x44>)
     2de:	47a0      	blx	r4
     2e0:	4b06      	ldr	r3, [pc, #24]	; (2fc <lcd_clear+0x48>)
     2e2:	4798      	blx	r3
}
     2e4:	bd10      	pop	{r4, pc}
     2e6:	46c0      	nop			; (mov r8, r8)
     2e8:	000002a5 	.word	0x000002a5
     2ec:	00004ccd 	.word	0x00004ccd
     2f0:	006acfbf 	.word	0x006acfbf
     2f4:	006acfc0 	.word	0x006acfc0
     2f8:	000060e5 	.word	0x000060e5
     2fc:	20000001 	.word	0x20000001

00000300 <lcd_home>:
void lcd_home() {
     300:	b510      	push	{r4, lr}
    lcd_command(LCD_RETURNHOME);
     302:	2002      	movs	r0, #2
     304:	4b0b      	ldr	r3, [pc, #44]	; (334 <lcd_home+0x34>)
     306:	4798      	blx	r3
    delay_us(3);
     308:	2000      	movs	r0, #0
     30a:	4b0b      	ldr	r3, [pc, #44]	; (338 <lcd_home+0x38>)
     30c:	4798      	blx	r3
     30e:	0002      	movs	r2, r0
     310:	2300      	movs	r3, #0
     312:	0019      	movs	r1, r3
     314:	1880      	adds	r0, r0, r2
     316:	4159      	adcs	r1, r3
     318:	1880      	adds	r0, r0, r2
     31a:	4159      	adcs	r1, r3
     31c:	4a07      	ldr	r2, [pc, #28]	; (33c <lcd_home+0x3c>)
     31e:	2300      	movs	r3, #0
     320:	1880      	adds	r0, r0, r2
     322:	4159      	adcs	r1, r3
     324:	4a06      	ldr	r2, [pc, #24]	; (340 <lcd_home+0x40>)
     326:	2300      	movs	r3, #0
     328:	4c06      	ldr	r4, [pc, #24]	; (344 <lcd_home+0x44>)
     32a:	47a0      	blx	r4
     32c:	4b06      	ldr	r3, [pc, #24]	; (348 <lcd_home+0x48>)
     32e:	4798      	blx	r3
}
     330:	bd10      	pop	{r4, pc}
     332:	46c0      	nop			; (mov r8, r8)
     334:	000002a5 	.word	0x000002a5
     338:	00004ccd 	.word	0x00004ccd
     33c:	006acfbf 	.word	0x006acfbf
     340:	006acfc0 	.word	0x006acfc0
     344:	000060e5 	.word	0x000060e5
     348:	20000001 	.word	0x20000001

0000034c <lcd_begin>:
void lcd_begin(void) {
     34c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     34e:	46de      	mov	lr, fp
     350:	4657      	mov	r7, sl
     352:	464e      	mov	r6, r9
     354:	4645      	mov	r5, r8
     356:	b5e0      	push	{r5, r6, r7, lr}
    _displayfunction = LCD_2LINE | LCD_8BITMODE | LCD_5x8DOTS;
     358:	4d38      	ldr	r5, [pc, #224]	; (43c <lcd_begin+0xf0>)
     35a:	2318      	movs	r3, #24
     35c:	702b      	strb	r3, [r5, #0]
    delay_ms(50);
     35e:	2000      	movs	r0, #0
     360:	4b37      	ldr	r3, [pc, #220]	; (440 <lcd_begin+0xf4>)
     362:	469b      	mov	fp, r3
     364:	4798      	blx	r3
     366:	4b37      	ldr	r3, [pc, #220]	; (444 <lcd_begin+0xf8>)
     368:	469a      	mov	sl, r3
     36a:	2232      	movs	r2, #50	; 0x32
     36c:	2300      	movs	r3, #0
     36e:	2100      	movs	r1, #0
     370:	47d0      	blx	sl
     372:	4e35      	ldr	r6, [pc, #212]	; (448 <lcd_begin+0xfc>)
     374:	2700      	movs	r7, #0
     376:	1980      	adds	r0, r0, r6
     378:	4179      	adcs	r1, r7
     37a:	4b34      	ldr	r3, [pc, #208]	; (44c <lcd_begin+0x100>)
     37c:	4699      	mov	r9, r3
     37e:	4a34      	ldr	r2, [pc, #208]	; (450 <lcd_begin+0x104>)
     380:	2300      	movs	r3, #0
     382:	47c8      	blx	r9
     384:	4b33      	ldr	r3, [pc, #204]	; (454 <lcd_begin+0x108>)
     386:	4698      	mov	r8, r3
     388:	4798      	blx	r3
		port_base->OUTCLR.reg = pin_mask;
     38a:	2280      	movs	r2, #128	; 0x80
     38c:	2382      	movs	r3, #130	; 0x82
     38e:	05db      	lsls	r3, r3, #23
     390:	18d3      	adds	r3, r2, r3
     392:	2180      	movs	r1, #128	; 0x80
     394:	0089      	lsls	r1, r1, #2
     396:	6159      	str	r1, [r3, #20]
     398:	3901      	subs	r1, #1
     39a:	39ff      	subs	r1, #255	; 0xff
     39c:	6159      	str	r1, [r3, #20]
     39e:	615a      	str	r2, [r3, #20]
    delay_ms(50);
     3a0:	2000      	movs	r0, #0
     3a2:	47d8      	blx	fp
     3a4:	2232      	movs	r2, #50	; 0x32
     3a6:	2300      	movs	r3, #0
     3a8:	2100      	movs	r1, #0
     3aa:	47d0      	blx	sl
     3ac:	1980      	adds	r0, r0, r6
     3ae:	4179      	adcs	r1, r7
     3b0:	4a27      	ldr	r2, [pc, #156]	; (450 <lcd_begin+0x104>)
     3b2:	2300      	movs	r3, #0
     3b4:	47c8      	blx	r9
     3b6:	47c0      	blx	r8
    lcd_command(LCD_FUNCTIONSET | _displayfunction);
     3b8:	2620      	movs	r6, #32
     3ba:	7828      	ldrb	r0, [r5, #0]
     3bc:	4330      	orrs	r0, r6
     3be:	b2c0      	uxtb	r0, r0
     3c0:	4c25      	ldr	r4, [pc, #148]	; (458 <lcd_begin+0x10c>)
     3c2:	47a0      	blx	r4
    delay_us(4500);
     3c4:	2000      	movs	r0, #0
     3c6:	47d8      	blx	fp
     3c8:	4a24      	ldr	r2, [pc, #144]	; (45c <lcd_begin+0x110>)
     3ca:	2300      	movs	r3, #0
     3cc:	2100      	movs	r1, #0
     3ce:	47d0      	blx	sl
     3d0:	4a23      	ldr	r2, [pc, #140]	; (460 <lcd_begin+0x114>)
     3d2:	2300      	movs	r3, #0
     3d4:	1880      	adds	r0, r0, r2
     3d6:	4159      	adcs	r1, r3
     3d8:	4a22      	ldr	r2, [pc, #136]	; (464 <lcd_begin+0x118>)
     3da:	2300      	movs	r3, #0
     3dc:	47c8      	blx	r9
     3de:	47c0      	blx	r8
    lcd_command(LCD_FUNCTIONSET | _displayfunction);
     3e0:	7828      	ldrb	r0, [r5, #0]
     3e2:	4330      	orrs	r0, r6
     3e4:	b2c0      	uxtb	r0, r0
     3e6:	47a0      	blx	r4
    delay_us(150);
     3e8:	2000      	movs	r0, #0
     3ea:	47d8      	blx	fp
     3ec:	2296      	movs	r2, #150	; 0x96
     3ee:	2300      	movs	r3, #0
     3f0:	2100      	movs	r1, #0
     3f2:	47d0      	blx	sl
     3f4:	4a1a      	ldr	r2, [pc, #104]	; (460 <lcd_begin+0x114>)
     3f6:	2300      	movs	r3, #0
     3f8:	1880      	adds	r0, r0, r2
     3fa:	4159      	adcs	r1, r3
     3fc:	4a19      	ldr	r2, [pc, #100]	; (464 <lcd_begin+0x118>)
     3fe:	2300      	movs	r3, #0
     400:	47c8      	blx	r9
     402:	47c0      	blx	r8
    lcd_command(LCD_FUNCTIONSET | _displayfunction);
     404:	7828      	ldrb	r0, [r5, #0]
     406:	4330      	orrs	r0, r6
     408:	b2c0      	uxtb	r0, r0
     40a:	47a0      	blx	r4
    lcd_command(LCD_FUNCTIONSET | _displayfunction);
     40c:	7828      	ldrb	r0, [r5, #0]
     40e:	4330      	orrs	r0, r6
     410:	b2c0      	uxtb	r0, r0
     412:	47a0      	blx	r4
    _displaycontrol = LCD_DISPLAYON | LCD_CURSORON | LCD_BLINKOFF;
     414:	2206      	movs	r2, #6
     416:	4b14      	ldr	r3, [pc, #80]	; (468 <lcd_begin+0x11c>)
     418:	701a      	strb	r2, [r3, #0]
    lcd_command(LCD_DISPLAYCONTROL | _displaycontrol);
     41a:	200e      	movs	r0, #14
     41c:	47a0      	blx	r4
    lcd_clear();
     41e:	4b13      	ldr	r3, [pc, #76]	; (46c <lcd_begin+0x120>)
     420:	4798      	blx	r3
    _displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
     422:	2202      	movs	r2, #2
     424:	4b12      	ldr	r3, [pc, #72]	; (470 <lcd_begin+0x124>)
     426:	701a      	strb	r2, [r3, #0]
    lcd_command(LCD_ENTRYMODESET | _displaymode);
     428:	2006      	movs	r0, #6
     42a:	47a0      	blx	r4
    lcd_home();
     42c:	4b11      	ldr	r3, [pc, #68]	; (474 <lcd_begin+0x128>)
     42e:	4798      	blx	r3
}
     430:	bc3c      	pop	{r2, r3, r4, r5}
     432:	4690      	mov	r8, r2
     434:	4699      	mov	r9, r3
     436:	46a2      	mov	sl, r4
     438:	46ab      	mov	fp, r5
     43a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     43c:	200002d9 	.word	0x200002d9
     440:	00004ccd 	.word	0x00004ccd
     444:	00006125 	.word	0x00006125
     448:	00001b57 	.word	0x00001b57
     44c:	000060e5 	.word	0x000060e5
     450:	00001b58 	.word	0x00001b58
     454:	20000001 	.word	0x20000001
     458:	000002a5 	.word	0x000002a5
     45c:	00001194 	.word	0x00001194
     460:	006acfbf 	.word	0x006acfbf
     464:	006acfc0 	.word	0x006acfc0
     468:	200002d8 	.word	0x200002d8
     46c:	000002b5 	.word	0x000002b5
     470:	200002da 	.word	0x200002da
     474:	00000301 	.word	0x00000301

00000478 <lcd_setCursor>:
void lcd_setCursor(uint8_t col, uint8_t row) {
     478:	b570      	push	{r4, r5, r6, lr}
     47a:	b084      	sub	sp, #16
    int row_offsets[] = {0x00, 0x40, 0x14, 0x54};
     47c:	466a      	mov	r2, sp
     47e:	4b0b      	ldr	r3, [pc, #44]	; (4ac <lcd_setCursor+0x34>)
     480:	cb70      	ldmia	r3!, {r4, r5, r6}
     482:	c270      	stmia	r2!, {r4, r5, r6}
     484:	681b      	ldr	r3, [r3, #0]
     486:	6013      	str	r3, [r2, #0]
    if (row > 3 || col > 19)
     488:	2903      	cmp	r1, #3
     48a:	d801      	bhi.n	490 <lcd_setCursor+0x18>
     48c:	2813      	cmp	r0, #19
     48e:	d901      	bls.n	494 <lcd_setCursor+0x1c>
}
     490:	b004      	add	sp, #16
     492:	bd70      	pop	{r4, r5, r6, pc}
    lcd_command(LCD_SETDDRAMADDR | (col + row_offsets[row]));
     494:	0089      	lsls	r1, r1, #2
     496:	466b      	mov	r3, sp
     498:	58cb      	ldr	r3, [r1, r3]
     49a:	18c0      	adds	r0, r0, r3
     49c:	2380      	movs	r3, #128	; 0x80
     49e:	425b      	negs	r3, r3
     4a0:	4318      	orrs	r0, r3
     4a2:	b2c0      	uxtb	r0, r0
     4a4:	4b02      	ldr	r3, [pc, #8]	; (4b0 <lcd_setCursor+0x38>)
     4a6:	4798      	blx	r3
     4a8:	e7f2      	b.n	490 <lcd_setCursor+0x18>
     4aa:	46c0      	nop			; (mov r8, r8)
     4ac:	00008ec4 	.word	0x00008ec4
     4b0:	000002a5 	.word	0x000002a5

000004b4 <lcd_noCursor>:
void lcd_noCursor(void) {
     4b4:	b510      	push	{r4, lr}
    _displaycontrol &= ~LCD_CURSORON;
     4b6:	4b05      	ldr	r3, [pc, #20]	; (4cc <lcd_noCursor+0x18>)
     4b8:	7818      	ldrb	r0, [r3, #0]
     4ba:	2202      	movs	r2, #2
     4bc:	4390      	bics	r0, r2
     4be:	7018      	strb	r0, [r3, #0]
    lcd_command(LCD_DISPLAYCONTROL | _displaycontrol);
     4c0:	2308      	movs	r3, #8
     4c2:	4318      	orrs	r0, r3
     4c4:	4b02      	ldr	r3, [pc, #8]	; (4d0 <lcd_noCursor+0x1c>)
     4c6:	4798      	blx	r3
}
     4c8:	bd10      	pop	{r4, pc}
     4ca:	46c0      	nop			; (mov r8, r8)
     4cc:	200002d8 	.word	0x200002d8
     4d0:	000002a5 	.word	0x000002a5

000004d4 <lcd_write>:
void lcd_write(uint8_t value) {
     4d4:	b510      	push	{r4, lr}
    lcd_send(value, 1);
     4d6:	2101      	movs	r1, #1
     4d8:	4b01      	ldr	r3, [pc, #4]	; (4e0 <lcd_write+0xc>)
     4da:	4798      	blx	r3
}
     4dc:	bd10      	pop	{r4, pc}
     4de:	46c0      	nop			; (mov r8, r8)
     4e0:	00000241 	.word	0x00000241

000004e4 <lcd_createChar>:
void lcd_createChar(uint8_t location, uint8_t charmap[]) {
     4e4:	b570      	push	{r4, r5, r6, lr}
     4e6:	0003      	movs	r3, r0
     4e8:	000d      	movs	r5, r1
    lcd_command(LCD_SETCGRAMADDR | (location << 3));
     4ea:	2007      	movs	r0, #7
     4ec:	4018      	ands	r0, r3
     4ee:	00c0      	lsls	r0, r0, #3
     4f0:	2340      	movs	r3, #64	; 0x40
     4f2:	4318      	orrs	r0, r3
     4f4:	4b05      	ldr	r3, [pc, #20]	; (50c <lcd_createChar+0x28>)
     4f6:	4798      	blx	r3
     4f8:	002c      	movs	r4, r5
     4fa:	3508      	adds	r5, #8
        lcd_write(charmap[i]);
     4fc:	4e04      	ldr	r6, [pc, #16]	; (510 <lcd_createChar+0x2c>)
     4fe:	7820      	ldrb	r0, [r4, #0]
     500:	47b0      	blx	r6
     502:	3401      	adds	r4, #1
    for (int i = 0; i < 8; i++) {
     504:	42ac      	cmp	r4, r5
     506:	d1fa      	bne.n	4fe <lcd_createChar+0x1a>
}
     508:	bd70      	pop	{r4, r5, r6, pc}
     50a:	46c0      	nop			; (mov r8, r8)
     50c:	000002a5 	.word	0x000002a5
     510:	000004d5 	.word	0x000004d5

00000514 <lcd_printstr>:

void lcd_setBacklight(uint8_t new_val) {
    /*manka*/
}

void lcd_printstr(char *str) {
     514:	b570      	push	{r4, r5, r6, lr}
     516:	0004      	movs	r4, r0
    while (*str) {
     518:	7800      	ldrb	r0, [r0, #0]
     51a:	2800      	cmp	r0, #0
     51c:	d005      	beq.n	52a <lcd_printstr+0x16>
        lcd_write(*str++);
     51e:	4d03      	ldr	r5, [pc, #12]	; (52c <lcd_printstr+0x18>)
     520:	3401      	adds	r4, #1
     522:	47a8      	blx	r5
    while (*str) {
     524:	7820      	ldrb	r0, [r4, #0]
     526:	2800      	cmp	r0, #0
     528:	d1fa      	bne.n	520 <lcd_printstr+0xc>
    }
}
     52a:	bd70      	pop	{r4, r5, r6, pc}
     52c:	000004d5 	.word	0x000004d5

00000530 <lcd_create_bar_charts>:
void lcd_create_bar_charts(void) {
     530:	b5f0      	push	{r4, r5, r6, r7, lr}
     532:	46c6      	mov	lr, r8
     534:	b500      	push	{lr}
     536:	b082      	sub	sp, #8
     538:	2300      	movs	r3, #0
    uint8_t char_arr[8];
    for(uint8_t i = 0; i < 8; i++) {
        char_arr[i] = 0;
     53a:	2200      	movs	r2, #0
     53c:	4669      	mov	r1, sp
     53e:	545a      	strb	r2, [r3, r1]
     540:	3301      	adds	r3, #1
    for(uint8_t i = 0; i < 8; i++) {
     542:	2b08      	cmp	r3, #8
     544:	d1fa      	bne.n	53c <lcd_create_bar_charts+0xc>
     546:	2605      	movs	r6, #5
     548:	2500      	movs	r5, #0
    }
    for(uint8_t i = 0; i < 5; i++) {
        for(uint8_t j = 0; j < 8; j++) {
            char_arr[j] |= 1 << 5 - i;
     54a:	3b07      	subs	r3, #7
     54c:	4698      	mov	r8, r3
     54e:	ac02      	add	r4, sp, #8
        }
        lcd_createChar(i + 1, char_arr);
     550:	4f0b      	ldr	r7, [pc, #44]	; (580 <lcd_create_bar_charts+0x50>)
            char_arr[j] |= 1 << 5 - i;
     552:	4641      	mov	r1, r8
     554:	40b1      	lsls	r1, r6
     556:	b249      	sxtb	r1, r1
     558:	466b      	mov	r3, sp
     55a:	781a      	ldrb	r2, [r3, #0]
     55c:	430a      	orrs	r2, r1
     55e:	701a      	strb	r2, [r3, #0]
     560:	3301      	adds	r3, #1
        for(uint8_t j = 0; j < 8; j++) {
     562:	429c      	cmp	r4, r3
     564:	d1f9      	bne.n	55a <lcd_create_bar_charts+0x2a>
        lcd_createChar(i + 1, char_arr);
     566:	3501      	adds	r5, #1
     568:	b2ed      	uxtb	r5, r5
     56a:	4669      	mov	r1, sp
     56c:	0028      	movs	r0, r5
     56e:	47b8      	blx	r7
     570:	3e01      	subs	r6, #1
    for(uint8_t i = 0; i < 5; i++) {
     572:	2d05      	cmp	r5, #5
     574:	d1ed      	bne.n	552 <lcd_create_bar_charts+0x22>
    }
}
     576:	b002      	add	sp, #8
     578:	bc04      	pop	{r2}
     57a:	4690      	mov	r8, r2
     57c:	bdf0      	pop	{r4, r5, r6, r7, pc}
     57e:	46c0      	nop			; (mov r8, r8)
     580:	000004e5 	.word	0x000004e5

00000584 <adsr_process>:

#define MAX_32BIT_VALUE 0xFFFFFFFFUL
uint8_t trigger_flags = 0;
extern ADSR adsr_channels[5];

void adsr_process(ADSR *adsr) {
     584:	b5f0      	push	{r4, r5, r6, r7, lr}
     586:	46c6      	mov	lr, r8
     588:	b500      	push	{lr}
     58a:	0004      	movs	r4, r0
    if(adsr->debounce_timer >= adsr->interval)
     58c:	232d      	movs	r3, #45	; 0x2d
     58e:	5cc3      	ldrb	r3, [r0, r3]
     590:	6845      	ldr	r5, [r0, #4]
     592:	42ab      	cmp	r3, r5
     594:	d30a      	bcc.n	5ac <adsr_process+0x28>
        adsr->debounce_timer -= adsr->interval;
     596:	1b5b      	subs	r3, r3, r5
     598:	222d      	movs	r2, #45	; 0x2d
     59a:	5483      	strb	r3, [r0, r2]
    else
        adsr->debounce_timer = 0;
    switch(adsr->state) {
     59c:	232c      	movs	r3, #44	; 0x2c
     59e:	5ce2      	ldrb	r2, [r4, r3]
     5a0:	2a05      	cmp	r2, #5
     5a2:	d810      	bhi.n	5c6 <adsr_process+0x42>
     5a4:	0093      	lsls	r3, r2, #2
     5a6:	4a44      	ldr	r2, [pc, #272]	; (6b8 <adsr_process+0x134>)
     5a8:	58d3      	ldr	r3, [r2, r3]
     5aa:	469f      	mov	pc, r3
        adsr->debounce_timer = 0;
     5ac:	2200      	movs	r2, #0
     5ae:	232d      	movs	r3, #45	; 0x2d
     5b0:	54c2      	strb	r2, [r0, r3]
     5b2:	e7f3      	b.n	59c <adsr_process+0x18>
        case START:
            adsr->attack_counter = 0;
     5b4:	2300      	movs	r3, #0
     5b6:	60e3      	str	r3, [r4, #12]
            adsr->sustain_counter = 0;
     5b8:	6223      	str	r3, [r4, #32]
            adsr->decay_counter = 0;
     5ba:	6163      	str	r3, [r4, #20]
            adsr->release_counter = 0;
     5bc:	62a3      	str	r3, [r4, #40]	; 0x28
            adsr->state = ATTACK;
     5be:	2101      	movs	r1, #1
     5c0:	222c      	movs	r2, #44	; 0x2c
     5c2:	54a1      	strb	r1, [r4, r2]
            adsr->value = 0;
     5c4:	6023      	str	r3, [r4, #0]
            break;
        case END:
            adsr->value = 0;
            break;
    }
}
     5c6:	bc04      	pop	{r2}
     5c8:	4690      	mov	r8, r2
     5ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
            if(adsr->attack == 0) {
     5cc:	68a7      	ldr	r7, [r4, #8]
     5ce:	2f00      	cmp	r7, #0
     5d0:	d014      	beq.n	5fc <adsr_process+0x78>
            adsr->value = MAX_32BIT_VALUE / adsr->attack  * adsr->attack_counter;
     5d2:	68e6      	ldr	r6, [r4, #12]
     5d4:	0039      	movs	r1, r7
     5d6:	2001      	movs	r0, #1
     5d8:	4240      	negs	r0, r0
     5da:	4b38      	ldr	r3, [pc, #224]	; (6bc <adsr_process+0x138>)
     5dc:	4798      	blx	r3
     5de:	4370      	muls	r0, r6
     5e0:	6020      	str	r0, [r4, #0]
            adsr->attack_counter += adsr->interval;
     5e2:	19ad      	adds	r5, r5, r6
     5e4:	60e5      	str	r5, [r4, #12]
            if(adsr->attack_counter > adsr->attack) {
     5e6:	42af      	cmp	r7, r5
     5e8:	d2ed      	bcs.n	5c6 <adsr_process+0x42>
                adsr->value = MAX_32BIT_VALUE; //max value
     5ea:	2301      	movs	r3, #1
     5ec:	425b      	negs	r3, r3
     5ee:	6023      	str	r3, [r4, #0]
                adsr->state = DECAY;
     5f0:	2202      	movs	r2, #2
     5f2:	332d      	adds	r3, #45	; 0x2d
     5f4:	54e2      	strb	r2, [r4, r3]
                adsr->attack_counter = 0;
     5f6:	2300      	movs	r3, #0
     5f8:	60e3      	str	r3, [r4, #12]
     5fa:	e7e4      	b.n	5c6 <adsr_process+0x42>
                adsr->value = MAX_32BIT_VALUE;
     5fc:	2301      	movs	r3, #1
     5fe:	425b      	negs	r3, r3
     600:	6023      	str	r3, [r4, #0]
                adsr->state = DECAY;
     602:	2202      	movs	r2, #2
     604:	332d      	adds	r3, #45	; 0x2d
     606:	54e2      	strb	r2, [r4, r3]
                break;
     608:	e7dd      	b.n	5c6 <adsr_process+0x42>
            if(adsr->decay == 0) {
     60a:	6927      	ldr	r7, [r4, #16]
     60c:	2f00      	cmp	r7, #0
     60e:	d016      	beq.n	63e <adsr_process+0xba>
            adsr->value =  MAX_32BIT_VALUE - (MAX_32BIT_VALUE - (adsr->sustain_level << 24)) / adsr->decay * adsr->decay_counter ;
     610:	69e3      	ldr	r3, [r4, #28]
     612:	061b      	lsls	r3, r3, #24
     614:	4698      	mov	r8, r3
     616:	6966      	ldr	r6, [r4, #20]
     618:	43d8      	mvns	r0, r3
     61a:	0039      	movs	r1, r7
     61c:	4b27      	ldr	r3, [pc, #156]	; (6bc <adsr_process+0x138>)
     61e:	4798      	blx	r3
     620:	4370      	muls	r0, r6
     622:	43c0      	mvns	r0, r0
     624:	6020      	str	r0, [r4, #0]
            adsr->decay_counter += adsr->interval;
     626:	19ad      	adds	r5, r5, r6
     628:	6165      	str	r5, [r4, #20]
            if(adsr->decay_counter > adsr->decay) {
     62a:	42af      	cmp	r7, r5
     62c:	d2cb      	bcs.n	5c6 <adsr_process+0x42>
                adsr->value = adsr->sustain_level << 24;
     62e:	4643      	mov	r3, r8
     630:	6023      	str	r3, [r4, #0]
                adsr->state = SUSTAIN;
     632:	2203      	movs	r2, #3
     634:	232c      	movs	r3, #44	; 0x2c
     636:	54e2      	strb	r2, [r4, r3]
                adsr->decay_counter = 0;
     638:	2300      	movs	r3, #0
     63a:	6163      	str	r3, [r4, #20]
     63c:	e7c3      	b.n	5c6 <adsr_process+0x42>
                adsr->value = adsr->sustain_level;
     63e:	69e3      	ldr	r3, [r4, #28]
     640:	6023      	str	r3, [r4, #0]
                adsr->state = SUSTAIN;
     642:	2203      	movs	r2, #3
     644:	232c      	movs	r3, #44	; 0x2c
     646:	54e2      	strb	r2, [r4, r3]
                break;
     648:	e7bd      	b.n	5c6 <adsr_process+0x42>
            if(adsr->sustain == 0) {
     64a:	69a3      	ldr	r3, [r4, #24]
     64c:	2b00      	cmp	r3, #0
     64e:	d00e      	beq.n	66e <adsr_process+0xea>
            adsr->value = adsr->sustain_level << 24;
     650:	69e2      	ldr	r2, [r4, #28]
     652:	0612      	lsls	r2, r2, #24
     654:	6022      	str	r2, [r4, #0]
            adsr->sustain_counter += adsr->interval;
     656:	6a22      	ldr	r2, [r4, #32]
     658:	4694      	mov	ip, r2
     65a:	4465      	add	r5, ip
     65c:	6225      	str	r5, [r4, #32]
            if(adsr->sustain_counter > adsr->sustain) {
     65e:	42ab      	cmp	r3, r5
     660:	d2b1      	bcs.n	5c6 <adsr_process+0x42>
                adsr->state = RELEASE;
     662:	2204      	movs	r2, #4
     664:	232c      	movs	r3, #44	; 0x2c
     666:	54e2      	strb	r2, [r4, r3]
                adsr->sustain_counter = 0;
     668:	2300      	movs	r3, #0
     66a:	6223      	str	r3, [r4, #32]
     66c:	e7ab      	b.n	5c6 <adsr_process+0x42>
                adsr->state = RELEASE;
     66e:	2204      	movs	r2, #4
     670:	332c      	adds	r3, #44	; 0x2c
     672:	54e2      	strb	r2, [r4, r3]
                break;
     674:	e7a7      	b.n	5c6 <adsr_process+0x42>
            if(adsr->release == 0) {
     676:	6a67      	ldr	r7, [r4, #36]	; 0x24
     678:	2f00      	cmp	r7, #0
     67a:	d016      	beq.n	6aa <adsr_process+0x126>
            adsr->value = ((adsr->sustain_level << 24) - (adsr->sustain_level << 24) / adsr->release * adsr->release_counter);
     67c:	69e3      	ldr	r3, [r4, #28]
     67e:	061e      	lsls	r6, r3, #24
     680:	6aa3      	ldr	r3, [r4, #40]	; 0x28
     682:	4698      	mov	r8, r3
     684:	0039      	movs	r1, r7
     686:	0030      	movs	r0, r6
     688:	4b0c      	ldr	r3, [pc, #48]	; (6bc <adsr_process+0x138>)
     68a:	4798      	blx	r3
     68c:	4643      	mov	r3, r8
     68e:	4358      	muls	r0, r3
     690:	1a36      	subs	r6, r6, r0
     692:	6026      	str	r6, [r4, #0]
            adsr->release_counter += adsr->interval;
     694:	4445      	add	r5, r8
     696:	62a5      	str	r5, [r4, #40]	; 0x28
            if(adsr->release_counter > adsr->release) {
     698:	42af      	cmp	r7, r5
     69a:	d294      	bcs.n	5c6 <adsr_process+0x42>
                adsr->value = 0;
     69c:	2300      	movs	r3, #0
     69e:	6023      	str	r3, [r4, #0]
                adsr->state = END;
     6a0:	2105      	movs	r1, #5
     6a2:	222c      	movs	r2, #44	; 0x2c
     6a4:	54a1      	strb	r1, [r4, r2]
                adsr->release_counter = 0;
     6a6:	62a3      	str	r3, [r4, #40]	; 0x28
     6a8:	e78d      	b.n	5c6 <adsr_process+0x42>
                adsr->state = END;
     6aa:	2205      	movs	r2, #5
     6ac:	232c      	movs	r3, #44	; 0x2c
     6ae:	54e2      	strb	r2, [r4, r3]
                break;
     6b0:	e789      	b.n	5c6 <adsr_process+0x42>
            adsr->value = 0;
     6b2:	2300      	movs	r3, #0
     6b4:	6023      	str	r3, [r4, #0]
}
     6b6:	e786      	b.n	5c6 <adsr_process+0x42>
     6b8:	00008ed4 	.word	0x00008ed4
     6bc:	00005f59 	.word	0x00005f59

000006c0 <adsr_get_value>:
uint8_t adsr_get_value(ADSR *adsr) {
    return adsr->value >> 24;
     6c0:	78c0      	ldrb	r0, [r0, #3]
}
     6c2:	4770      	bx	lr

000006c4 <adsr_trigger>:

void adsr_trigger(ADSR *adsr) {
     6c4:	b510      	push	{r4, lr}
     6c6:	0004      	movs	r4, r0
    if(!adsr->debounce_timer) {
     6c8:	232d      	movs	r3, #45	; 0x2d
     6ca:	5cc3      	ldrb	r3, [r0, r3]
     6cc:	2b00      	cmp	r3, #0
     6ce:	d113      	bne.n	6f8 <adsr_trigger+0x34>
        adsr->debounce_timer = 100 / adsr->interval;
     6d0:	6841      	ldr	r1, [r0, #4]
     6d2:	2064      	movs	r0, #100	; 0x64
     6d4:	4b09      	ldr	r3, [pc, #36]	; (6fc <adsr_trigger+0x38>)
     6d6:	4798      	blx	r3
     6d8:	232d      	movs	r3, #45	; 0x2d
     6da:	54e0      	strb	r0, [r4, r3]
        adsr->state = START;
     6dc:	2200      	movs	r2, #0
     6de:	3b01      	subs	r3, #1
     6e0:	54e2      	strb	r2, [r4, r3]
        trigger_flags |= (1 << adsr - adsr_channels);
     6e2:	4a07      	ldr	r2, [pc, #28]	; (700 <adsr_trigger+0x3c>)
     6e4:	4b07      	ldr	r3, [pc, #28]	; (704 <adsr_trigger+0x40>)
     6e6:	1ae4      	subs	r4, r4, r3
     6e8:	1124      	asrs	r4, r4, #4
     6ea:	4b07      	ldr	r3, [pc, #28]	; (708 <adsr_trigger+0x44>)
     6ec:	435c      	muls	r4, r3
     6ee:	2301      	movs	r3, #1
     6f0:	40a3      	lsls	r3, r4
     6f2:	7811      	ldrb	r1, [r2, #0]
     6f4:	430b      	orrs	r3, r1
     6f6:	7013      	strb	r3, [r2, #0]
    }
}
     6f8:	bd10      	pop	{r4, pc}
     6fa:	46c0      	nop			; (mov r8, r8)
     6fc:	00005f59 	.word	0x00005f59
     700:	200002db 	.word	0x200002db
     704:	2000275c 	.word	0x2000275c
     708:	aaaaaaab 	.word	0xaaaaaaab

0000070c <get_trigger_flags>:

uint8_t get_trigger_flags(void) {
    return trigger_flags;
     70c:	4b01      	ldr	r3, [pc, #4]	; (714 <get_trigger_flags+0x8>)
     70e:	7818      	ldrb	r0, [r3, #0]
}
     710:	4770      	bx	lr
     712:	46c0      	nop			; (mov r8, r8)
     714:	200002db 	.word	0x200002db

00000718 <clear_trigger_flags>:

void clear_trigger_flags(void) {
    trigger_flags = 0;
     718:	2200      	movs	r2, #0
     71a:	4b01      	ldr	r3, [pc, #4]	; (720 <clear_trigger_flags+0x8>)
     71c:	701a      	strb	r2, [r3, #0]
}
     71e:	4770      	bx	lr
     720:	200002db 	.word	0x200002db

00000724 <adsr_init>:
void adsr_init(ADSR *adsr, uint32_t interval) {
     724:	b510      	push	{r4, lr}
    adsr->attack_counter = 0;
     726:	2300      	movs	r3, #0
     728:	60c3      	str	r3, [r0, #12]
    adsr->decay_counter = 0;
     72a:	6143      	str	r3, [r0, #20]
    adsr->sustain_counter = 0;
     72c:	6203      	str	r3, [r0, #32]
    adsr->release_counter = 0;
     72e:	6283      	str	r3, [r0, #40]	; 0x28
    adsr->value = 0;
     730:	6003      	str	r3, [r0, #0]
    adsr->state = END;
     732:	2405      	movs	r4, #5
     734:	222c      	movs	r2, #44	; 0x2c
     736:	5484      	strb	r4, [r0, r2]
    adsr->interval = interval;
     738:	6041      	str	r1, [r0, #4]
    adsr->attack = 100;
     73a:	3238      	adds	r2, #56	; 0x38
     73c:	6082      	str	r2, [r0, #8]
    adsr->decay = 100;
     73e:	6102      	str	r2, [r0, #16]
    adsr->sustain = 100;
     740:	6182      	str	r2, [r0, #24]
    adsr->release = 100;
     742:	6242      	str	r2, [r0, #36]	; 0x24
    adsr->sustain_level = 128;
     744:	321c      	adds	r2, #28
     746:	61c2      	str	r2, [r0, #28]
    adsr->debounce_timer = 0;
     748:	3a53      	subs	r2, #83	; 0x53
     74a:	5483      	strb	r3, [r0, r2]
     74c:	bd10      	pop	{r4, pc}
	...

00000750 <_tc_interrupt_handler>:
     750:	b570      	push	{r4, r5, r6, lr}
     752:	0080      	lsls	r0, r0, #2
     754:	4b16      	ldr	r3, [pc, #88]	; (7b0 <_tc_interrupt_handler+0x60>)
     756:	58c4      	ldr	r4, [r0, r3]
     758:	6823      	ldr	r3, [r4, #0]
     75a:	7a9d      	ldrb	r5, [r3, #10]
     75c:	7e22      	ldrb	r2, [r4, #24]
     75e:	7e63      	ldrb	r3, [r4, #25]
     760:	4013      	ands	r3, r2
     762:	401d      	ands	r5, r3
     764:	07eb      	lsls	r3, r5, #31
     766:	d406      	bmi.n	776 <_tc_interrupt_handler+0x26>
     768:	07ab      	lsls	r3, r5, #30
     76a:	d40b      	bmi.n	784 <_tc_interrupt_handler+0x34>
     76c:	06eb      	lsls	r3, r5, #27
     76e:	d410      	bmi.n	792 <_tc_interrupt_handler+0x42>
     770:	06ab      	lsls	r3, r5, #26
     772:	d415      	bmi.n	7a0 <_tc_interrupt_handler+0x50>
     774:	bd70      	pop	{r4, r5, r6, pc}
     776:	0020      	movs	r0, r4
     778:	68a3      	ldr	r3, [r4, #8]
     77a:	4798      	blx	r3
     77c:	2301      	movs	r3, #1
     77e:	6822      	ldr	r2, [r4, #0]
     780:	7293      	strb	r3, [r2, #10]
     782:	e7f1      	b.n	768 <_tc_interrupt_handler+0x18>
     784:	0020      	movs	r0, r4
     786:	68e3      	ldr	r3, [r4, #12]
     788:	4798      	blx	r3
     78a:	2302      	movs	r3, #2
     78c:	6822      	ldr	r2, [r4, #0]
     78e:	7293      	strb	r3, [r2, #10]
     790:	e7ec      	b.n	76c <_tc_interrupt_handler+0x1c>
     792:	0020      	movs	r0, r4
     794:	6923      	ldr	r3, [r4, #16]
     796:	4798      	blx	r3
     798:	2310      	movs	r3, #16
     79a:	6822      	ldr	r2, [r4, #0]
     79c:	7293      	strb	r3, [r2, #10]
     79e:	e7e7      	b.n	770 <_tc_interrupt_handler+0x20>
     7a0:	0020      	movs	r0, r4
     7a2:	6963      	ldr	r3, [r4, #20]
     7a4:	4798      	blx	r3
     7a6:	6823      	ldr	r3, [r4, #0]
     7a8:	2220      	movs	r2, #32
     7aa:	729a      	strb	r2, [r3, #10]
     7ac:	e7e2      	b.n	774 <_tc_interrupt_handler+0x24>
     7ae:	46c0      	nop			; (mov r8, r8)
     7b0:	20001ad0 	.word	0x20001ad0

000007b4 <TC0_Handler>:
     7b4:	b510      	push	{r4, lr}
     7b6:	2000      	movs	r0, #0
     7b8:	4b01      	ldr	r3, [pc, #4]	; (7c0 <TC0_Handler+0xc>)
     7ba:	4798      	blx	r3
     7bc:	bd10      	pop	{r4, pc}
     7be:	46c0      	nop			; (mov r8, r8)
     7c0:	00000751 	.word	0x00000751

000007c4 <TC1_Handler>:
     7c4:	b510      	push	{r4, lr}
     7c6:	2001      	movs	r0, #1
     7c8:	4b01      	ldr	r3, [pc, #4]	; (7d0 <TC1_Handler+0xc>)
     7ca:	4798      	blx	r3
     7cc:	bd10      	pop	{r4, pc}
     7ce:	46c0      	nop			; (mov r8, r8)
     7d0:	00000751 	.word	0x00000751

000007d4 <TC2_Handler>:
     7d4:	b510      	push	{r4, lr}
     7d6:	2002      	movs	r0, #2
     7d8:	4b01      	ldr	r3, [pc, #4]	; (7e0 <TC2_Handler+0xc>)
     7da:	4798      	blx	r3
     7dc:	bd10      	pop	{r4, pc}
     7de:	46c0      	nop			; (mov r8, r8)
     7e0:	00000751 	.word	0x00000751

000007e4 <TC3_Handler>:
     7e4:	b510      	push	{r4, lr}
     7e6:	2003      	movs	r0, #3
     7e8:	4b01      	ldr	r3, [pc, #4]	; (7f0 <TC3_Handler+0xc>)
     7ea:	4798      	blx	r3
     7ec:	bd10      	pop	{r4, pc}
     7ee:	46c0      	nop			; (mov r8, r8)
     7f0:	00000751 	.word	0x00000751

000007f4 <TC4_Handler>:
     7f4:	b510      	push	{r4, lr}
     7f6:	2004      	movs	r0, #4
     7f8:	4b01      	ldr	r3, [pc, #4]	; (800 <TC4_Handler+0xc>)
     7fa:	4798      	blx	r3
     7fc:	bd10      	pop	{r4, pc}
     7fe:	46c0      	nop			; (mov r8, r8)
     800:	00000751 	.word	0x00000751

00000804 <_tc_get_inst_index>:
     804:	b530      	push	{r4, r5, lr}
     806:	b087      	sub	sp, #28
     808:	a901      	add	r1, sp, #4
     80a:	4b0c      	ldr	r3, [pc, #48]	; (83c <_tc_get_inst_index+0x38>)
     80c:	000a      	movs	r2, r1
     80e:	cb32      	ldmia	r3!, {r1, r4, r5}
     810:	c232      	stmia	r2!, {r1, r4, r5}
     812:	cb12      	ldmia	r3!, {r1, r4}
     814:	c212      	stmia	r2!, {r1, r4}
     816:	9b01      	ldr	r3, [sp, #4]
     818:	4298      	cmp	r0, r3
     81a:	d00b      	beq.n	834 <_tc_get_inst_index+0x30>
     81c:	2301      	movs	r3, #1
     81e:	a901      	add	r1, sp, #4
     820:	009a      	lsls	r2, r3, #2
     822:	5852      	ldr	r2, [r2, r1]
     824:	4282      	cmp	r2, r0
     826:	d006      	beq.n	836 <_tc_get_inst_index+0x32>
     828:	3301      	adds	r3, #1
     82a:	2b05      	cmp	r3, #5
     82c:	d1f8      	bne.n	820 <_tc_get_inst_index+0x1c>
     82e:	2000      	movs	r0, #0
     830:	b007      	add	sp, #28
     832:	bd30      	pop	{r4, r5, pc}
     834:	2300      	movs	r3, #0
     836:	b2d8      	uxtb	r0, r3
     838:	e7fa      	b.n	830 <_tc_get_inst_index+0x2c>
     83a:	46c0      	nop			; (mov r8, r8)
     83c:	00008eec 	.word	0x00008eec

00000840 <tc_init>:
     840:	b5f0      	push	{r4, r5, r6, r7, lr}
     842:	46c6      	mov	lr, r8
     844:	b500      	push	{lr}
     846:	b08e      	sub	sp, #56	; 0x38
     848:	0004      	movs	r4, r0
     84a:	000d      	movs	r5, r1
     84c:	0016      	movs	r6, r2
     84e:	0008      	movs	r0, r1
     850:	4ba7      	ldr	r3, [pc, #668]	; (af0 <tc_init+0x2b0>)
     852:	4798      	blx	r3
     854:	4680      	mov	r8, r0
     856:	ab0c      	add	r3, sp, #48	; 0x30
     858:	221e      	movs	r2, #30
     85a:	701a      	strb	r2, [r3, #0]
     85c:	705a      	strb	r2, [r3, #1]
     85e:	3201      	adds	r2, #1
     860:	709a      	strb	r2, [r3, #2]
     862:	70da      	strb	r2, [r3, #3]
     864:	3201      	adds	r2, #1
     866:	711a      	strb	r2, [r3, #4]
     868:	a902      	add	r1, sp, #8
     86a:	4ba2      	ldr	r3, [pc, #648]	; (af4 <tc_init+0x2b4>)
     86c:	3314      	adds	r3, #20
     86e:	000a      	movs	r2, r1
     870:	cb83      	ldmia	r3!, {r0, r1, r7}
     872:	c283      	stmia	r2!, {r0, r1, r7}
     874:	cb83      	ldmia	r3!, {r0, r1, r7}
     876:	c283      	stmia	r2!, {r0, r1, r7}
     878:	cb83      	ldmia	r3!, {r0, r1, r7}
     87a:	c283      	stmia	r2!, {r0, r1, r7}
     87c:	681b      	ldr	r3, [r3, #0]
     87e:	6013      	str	r3, [r2, #0]
     880:	2300      	movs	r3, #0
     882:	60a3      	str	r3, [r4, #8]
     884:	60e3      	str	r3, [r4, #12]
     886:	6123      	str	r3, [r4, #16]
     888:	6163      	str	r3, [r4, #20]
     88a:	7623      	strb	r3, [r4, #24]
     88c:	7663      	strb	r3, [r4, #25]
     88e:	4643      	mov	r3, r8
     890:	009a      	lsls	r2, r3, #2
     892:	4b99      	ldr	r3, [pc, #612]	; (af8 <tc_init+0x2b8>)
     894:	50d4      	str	r4, [r2, r3]
     896:	6025      	str	r5, [r4, #0]
     898:	2334      	movs	r3, #52	; 0x34
     89a:	5cf3      	ldrb	r3, [r6, r3]
     89c:	76a3      	strb	r3, [r4, #26]
     89e:	78f3      	ldrb	r3, [r6, #3]
     8a0:	2b08      	cmp	r3, #8
     8a2:	d008      	beq.n	8b6 <tc_init+0x76>
     8a4:	7123      	strb	r3, [r4, #4]
     8a6:	682b      	ldr	r3, [r5, #0]
     8a8:	2005      	movs	r0, #5
     8aa:	07db      	lsls	r3, r3, #31
     8ac:	d508      	bpl.n	8c0 <tc_init+0x80>
     8ae:	b00e      	add	sp, #56	; 0x38
     8b0:	bc04      	pop	{r2}
     8b2:	4690      	mov	r8, r2
     8b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
     8b6:	2017      	movs	r0, #23
     8b8:	4642      	mov	r2, r8
     8ba:	07d2      	lsls	r2, r2, #31
     8bc:	d4f7      	bmi.n	8ae <tc_init+0x6e>
     8be:	e7f1      	b.n	8a4 <tc_init+0x64>
     8c0:	7aeb      	ldrb	r3, [r5, #11]
     8c2:	3017      	adds	r0, #23
     8c4:	079b      	lsls	r3, r3, #30
     8c6:	d4f2      	bmi.n	8ae <tc_init+0x6e>
     8c8:	682b      	ldr	r3, [r5, #0]
     8ca:	079b      	lsls	r3, r3, #30
     8cc:	d4ef      	bmi.n	8ae <tc_init+0x6e>
     8ce:	7c33      	ldrb	r3, [r6, #16]
     8d0:	2b00      	cmp	r3, #0
     8d2:	d000      	beq.n	8d6 <tc_init+0x96>
     8d4:	e08e      	b.n	9f4 <tc_init+0x1b4>
     8d6:	7f33      	ldrb	r3, [r6, #28]
     8d8:	2b00      	cmp	r3, #0
     8da:	d000      	beq.n	8de <tc_init+0x9e>
     8dc:	e096      	b.n	a0c <tc_init+0x1cc>
     8de:	4643      	mov	r3, r8
     8e0:	005a      	lsls	r2, r3, #1
     8e2:	a902      	add	r1, sp, #8
     8e4:	1c53      	adds	r3, r2, #1
     8e6:	009b      	lsls	r3, r3, #2
     8e8:	5858      	ldr	r0, [r3, r1]
     8ea:	4643      	mov	r3, r8
     8ec:	00db      	lsls	r3, r3, #3
     8ee:	585b      	ldr	r3, [r3, r1]
     8f0:	b2d9      	uxtb	r1, r3
     8f2:	2901      	cmp	r1, #1
     8f4:	d100      	bne.n	8f8 <tc_init+0xb8>
     8f6:	e09e      	b.n	a36 <tc_init+0x1f6>
     8f8:	2900      	cmp	r1, #0
     8fa:	d100      	bne.n	8fe <tc_init+0xbe>
     8fc:	e096      	b.n	a2c <tc_init+0x1ec>
     8fe:	2902      	cmp	r1, #2
     900:	d100      	bne.n	904 <tc_init+0xc4>
     902:	e09d      	b.n	a40 <tc_init+0x200>
     904:	78f3      	ldrb	r3, [r6, #3]
     906:	2b08      	cmp	r3, #8
     908:	d100      	bne.n	90c <tc_init+0xcc>
     90a:	e09e      	b.n	a4a <tc_init+0x20a>
     90c:	7833      	ldrb	r3, [r6, #0]
     90e:	466a      	mov	r2, sp
     910:	7013      	strb	r3, [r2, #0]
     912:	ab0c      	add	r3, sp, #48	; 0x30
     914:	4642      	mov	r2, r8
     916:	5c9f      	ldrb	r7, [r3, r2]
     918:	4669      	mov	r1, sp
     91a:	0038      	movs	r0, r7
     91c:	4b77      	ldr	r3, [pc, #476]	; (afc <tc_init+0x2bc>)
     91e:	4798      	blx	r3
     920:	0038      	movs	r0, r7
     922:	4b77      	ldr	r3, [pc, #476]	; (b00 <tc_init+0x2c0>)
     924:	4798      	blx	r3
     926:	78f3      	ldrb	r3, [r6, #3]
     928:	79f2      	ldrb	r2, [r6, #7]
     92a:	4313      	orrs	r3, r2
     92c:	88b2      	ldrh	r2, [r6, #4]
     92e:	4313      	orrs	r3, r2
     930:	7a72      	ldrb	r2, [r6, #9]
     932:	2a00      	cmp	r2, #0
     934:	d002      	beq.n	93c <tc_init+0xfc>
     936:	2280      	movs	r2, #128	; 0x80
     938:	0252      	lsls	r2, r2, #9
     93a:	4313      	orrs	r3, r2
     93c:	7ab2      	ldrb	r2, [r6, #10]
     93e:	2a00      	cmp	r2, #0
     940:	d002      	beq.n	948 <tc_init+0x108>
     942:	2280      	movs	r2, #128	; 0x80
     944:	0292      	lsls	r2, r2, #10
     946:	4313      	orrs	r3, r2
     948:	7af2      	ldrb	r2, [r6, #11]
     94a:	2a00      	cmp	r2, #0
     94c:	d002      	beq.n	954 <tc_init+0x114>
     94e:	2280      	movs	r2, #128	; 0x80
     950:	0352      	lsls	r2, r2, #13
     952:	4313      	orrs	r3, r2
     954:	7b32      	ldrb	r2, [r6, #12]
     956:	2a00      	cmp	r2, #0
     958:	d002      	beq.n	960 <tc_init+0x120>
     95a:	2280      	movs	r2, #128	; 0x80
     95c:	0392      	lsls	r2, r2, #14
     95e:	4313      	orrs	r3, r2
     960:	7871      	ldrb	r1, [r6, #1]
     962:	0189      	lsls	r1, r1, #6
     964:	78b2      	ldrb	r2, [r6, #2]
     966:	01d2      	lsls	r2, r2, #7
     968:	4311      	orrs	r1, r2
     96a:	4319      	orrs	r1, r3
     96c:	6822      	ldr	r2, [r4, #0]
     96e:	6913      	ldr	r3, [r2, #16]
     970:	2b00      	cmp	r3, #0
     972:	d1fc      	bne.n	96e <tc_init+0x12e>
     974:	6029      	str	r1, [r5, #0]
     976:	6822      	ldr	r2, [r4, #0]
     978:	6913      	ldr	r3, [r2, #16]
     97a:	2b00      	cmp	r3, #0
     97c:	d1fc      	bne.n	978 <tc_init+0x138>
     97e:	79b3      	ldrb	r3, [r6, #6]
     980:	732b      	strb	r3, [r5, #12]
     982:	7b71      	ldrb	r1, [r6, #13]
     984:	1e4b      	subs	r3, r1, #1
     986:	4199      	sbcs	r1, r3
     988:	0089      	lsls	r1, r1, #2
     98a:	7bb3      	ldrb	r3, [r6, #14]
     98c:	2b00      	cmp	r3, #0
     98e:	d001      	beq.n	994 <tc_init+0x154>
     990:	2301      	movs	r3, #1
     992:	4319      	orrs	r1, r3
     994:	6822      	ldr	r2, [r4, #0]
     996:	6913      	ldr	r3, [r2, #16]
     998:	2b00      	cmp	r3, #0
     99a:	d1fc      	bne.n	996 <tc_init+0x156>
     99c:	33ff      	adds	r3, #255	; 0xff
     99e:	712b      	strb	r3, [r5, #4]
     9a0:	2900      	cmp	r1, #0
     9a2:	d004      	beq.n	9ae <tc_init+0x16e>
     9a4:	6822      	ldr	r2, [r4, #0]
     9a6:	6913      	ldr	r3, [r2, #16]
     9a8:	2b00      	cmp	r3, #0
     9aa:	d1fc      	bne.n	9a6 <tc_init+0x166>
     9ac:	7169      	strb	r1, [r5, #5]
     9ae:	7a33      	ldrb	r3, [r6, #8]
     9b0:	736b      	strb	r3, [r5, #13]
     9b2:	6822      	ldr	r2, [r4, #0]
     9b4:	6913      	ldr	r3, [r2, #16]
     9b6:	2b00      	cmp	r3, #0
     9b8:	d1fc      	bne.n	9b4 <tc_init+0x174>
     9ba:	7923      	ldrb	r3, [r4, #4]
     9bc:	2b04      	cmp	r3, #4
     9be:	d067      	beq.n	a90 <tc_init+0x250>
     9c0:	2b08      	cmp	r3, #8
     9c2:	d100      	bne.n	9c6 <tc_init+0x186>
     9c4:	e081      	b.n	aca <tc_init+0x28a>
     9c6:	2017      	movs	r0, #23
     9c8:	2b00      	cmp	r3, #0
     9ca:	d000      	beq.n	9ce <tc_init+0x18e>
     9cc:	e76f      	b.n	8ae <tc_init+0x6e>
     9ce:	6913      	ldr	r3, [r2, #16]
     9d0:	2b00      	cmp	r3, #0
     9d2:	d1fc      	bne.n	9ce <tc_init+0x18e>
     9d4:	8d33      	ldrh	r3, [r6, #40]	; 0x28
     9d6:	82ab      	strh	r3, [r5, #20]
     9d8:	6822      	ldr	r2, [r4, #0]
     9da:	6913      	ldr	r3, [r2, #16]
     9dc:	2b00      	cmp	r3, #0
     9de:	d1fc      	bne.n	9da <tc_init+0x19a>
     9e0:	8d73      	ldrh	r3, [r6, #42]	; 0x2a
     9e2:	83ab      	strh	r3, [r5, #28]
     9e4:	6822      	ldr	r2, [r4, #0]
     9e6:	6913      	ldr	r3, [r2, #16]
     9e8:	2b00      	cmp	r3, #0
     9ea:	d1fc      	bne.n	9e6 <tc_init+0x1a6>
     9ec:	8db3      	ldrh	r3, [r6, #44]	; 0x2c
     9ee:	83eb      	strh	r3, [r5, #30]
     9f0:	2000      	movs	r0, #0
     9f2:	e75c      	b.n	8ae <tc_init+0x6e>
     9f4:	a901      	add	r1, sp, #4
     9f6:	2301      	movs	r3, #1
     9f8:	708b      	strb	r3, [r1, #2]
     9fa:	2200      	movs	r2, #0
     9fc:	70ca      	strb	r2, [r1, #3]
     9fe:	7e32      	ldrb	r2, [r6, #24]
     a00:	700a      	strb	r2, [r1, #0]
     a02:	704b      	strb	r3, [r1, #1]
     a04:	7d30      	ldrb	r0, [r6, #20]
     a06:	4b3f      	ldr	r3, [pc, #252]	; (b04 <tc_init+0x2c4>)
     a08:	4798      	blx	r3
     a0a:	e764      	b.n	8d6 <tc_init+0x96>
     a0c:	a901      	add	r1, sp, #4
     a0e:	2301      	movs	r3, #1
     a10:	708b      	strb	r3, [r1, #2]
     a12:	2200      	movs	r2, #0
     a14:	70ca      	strb	r2, [r1, #3]
     a16:	3224      	adds	r2, #36	; 0x24
     a18:	18b2      	adds	r2, r6, r2
     a1a:	7812      	ldrb	r2, [r2, #0]
     a1c:	700a      	strb	r2, [r1, #0]
     a1e:	704b      	strb	r3, [r1, #1]
     a20:	331f      	adds	r3, #31
     a22:	18f3      	adds	r3, r6, r3
     a24:	7818      	ldrb	r0, [r3, #0]
     a26:	4b37      	ldr	r3, [pc, #220]	; (b04 <tc_init+0x2c4>)
     a28:	4798      	blx	r3
     a2a:	e758      	b.n	8de <tc_init+0x9e>
     a2c:	4936      	ldr	r1, [pc, #216]	; (b08 <tc_init+0x2c8>)
     a2e:	694b      	ldr	r3, [r1, #20]
     a30:	4318      	orrs	r0, r3
     a32:	6148      	str	r0, [r1, #20]
     a34:	e766      	b.n	904 <tc_init+0xc4>
     a36:	4934      	ldr	r1, [pc, #208]	; (b08 <tc_init+0x2c8>)
     a38:	698b      	ldr	r3, [r1, #24]
     a3a:	4318      	orrs	r0, r3
     a3c:	6188      	str	r0, [r1, #24]
     a3e:	e761      	b.n	904 <tc_init+0xc4>
     a40:	4b31      	ldr	r3, [pc, #196]	; (b08 <tc_init+0x2c8>)
     a42:	69d9      	ldr	r1, [r3, #28]
     a44:	4308      	orrs	r0, r1
     a46:	61d8      	str	r0, [r3, #28]
     a48:	e75c      	b.n	904 <tc_init+0xc4>
     a4a:	4643      	mov	r3, r8
     a4c:	3301      	adds	r3, #1
     a4e:	2b04      	cmp	r3, #4
     a50:	dd00      	ble.n	a54 <tc_init+0x214>
     a52:	e75b      	b.n	90c <tc_init+0xcc>
     a54:	ab02      	add	r3, sp, #8
     a56:	1cd1      	adds	r1, r2, #3
     a58:	0089      	lsls	r1, r1, #2
     a5a:	58c9      	ldr	r1, [r1, r3]
     a5c:	3202      	adds	r2, #2
     a5e:	0092      	lsls	r2, r2, #2
     a60:	58d3      	ldr	r3, [r2, r3]
     a62:	b2da      	uxtb	r2, r3
     a64:	2a01      	cmp	r2, #1
     a66:	d00e      	beq.n	a86 <tc_init+0x246>
     a68:	2a00      	cmp	r2, #0
     a6a:	d007      	beq.n	a7c <tc_init+0x23c>
     a6c:	2a02      	cmp	r2, #2
     a6e:	d000      	beq.n	a72 <tc_init+0x232>
     a70:	e74c      	b.n	90c <tc_init+0xcc>
     a72:	4b25      	ldr	r3, [pc, #148]	; (b08 <tc_init+0x2c8>)
     a74:	69da      	ldr	r2, [r3, #28]
     a76:	4311      	orrs	r1, r2
     a78:	61d9      	str	r1, [r3, #28]
     a7a:	e747      	b.n	90c <tc_init+0xcc>
     a7c:	4a22      	ldr	r2, [pc, #136]	; (b08 <tc_init+0x2c8>)
     a7e:	6953      	ldr	r3, [r2, #20]
     a80:	4319      	orrs	r1, r3
     a82:	6151      	str	r1, [r2, #20]
     a84:	e742      	b.n	90c <tc_init+0xcc>
     a86:	4a20      	ldr	r2, [pc, #128]	; (b08 <tc_init+0x2c8>)
     a88:	6993      	ldr	r3, [r2, #24]
     a8a:	4319      	orrs	r1, r3
     a8c:	6191      	str	r1, [r2, #24]
     a8e:	e73d      	b.n	90c <tc_init+0xcc>
     a90:	6913      	ldr	r3, [r2, #16]
     a92:	2b00      	cmp	r3, #0
     a94:	d1fc      	bne.n	a90 <tc_init+0x250>
     a96:	3328      	adds	r3, #40	; 0x28
     a98:	5cf3      	ldrb	r3, [r6, r3]
     a9a:	752b      	strb	r3, [r5, #20]
     a9c:	6822      	ldr	r2, [r4, #0]
     a9e:	6913      	ldr	r3, [r2, #16]
     aa0:	2b00      	cmp	r3, #0
     aa2:	d1fc      	bne.n	a9e <tc_init+0x25e>
     aa4:	3329      	adds	r3, #41	; 0x29
     aa6:	5cf3      	ldrb	r3, [r6, r3]
     aa8:	76eb      	strb	r3, [r5, #27]
     aaa:	6822      	ldr	r2, [r4, #0]
     aac:	6913      	ldr	r3, [r2, #16]
     aae:	2b00      	cmp	r3, #0
     ab0:	d1fc      	bne.n	aac <tc_init+0x26c>
     ab2:	332a      	adds	r3, #42	; 0x2a
     ab4:	5cf3      	ldrb	r3, [r6, r3]
     ab6:	772b      	strb	r3, [r5, #28]
     ab8:	6822      	ldr	r2, [r4, #0]
     aba:	6913      	ldr	r3, [r2, #16]
     abc:	2b00      	cmp	r3, #0
     abe:	d1fc      	bne.n	aba <tc_init+0x27a>
     ac0:	332b      	adds	r3, #43	; 0x2b
     ac2:	5cf3      	ldrb	r3, [r6, r3]
     ac4:	776b      	strb	r3, [r5, #29]
     ac6:	2000      	movs	r0, #0
     ac8:	e6f1      	b.n	8ae <tc_init+0x6e>
     aca:	6913      	ldr	r3, [r2, #16]
     acc:	2b00      	cmp	r3, #0
     ace:	d1fc      	bne.n	aca <tc_init+0x28a>
     ad0:	6ab3      	ldr	r3, [r6, #40]	; 0x28
     ad2:	616b      	str	r3, [r5, #20]
     ad4:	6822      	ldr	r2, [r4, #0]
     ad6:	6913      	ldr	r3, [r2, #16]
     ad8:	2b00      	cmp	r3, #0
     ada:	d1fc      	bne.n	ad6 <tc_init+0x296>
     adc:	6af3      	ldr	r3, [r6, #44]	; 0x2c
     ade:	61eb      	str	r3, [r5, #28]
     ae0:	6822      	ldr	r2, [r4, #0]
     ae2:	6913      	ldr	r3, [r2, #16]
     ae4:	2b00      	cmp	r3, #0
     ae6:	d1fc      	bne.n	ae2 <tc_init+0x2a2>
     ae8:	6b33      	ldr	r3, [r6, #48]	; 0x30
     aea:	622b      	str	r3, [r5, #32]
     aec:	2000      	movs	r0, #0
     aee:	e6de      	b.n	8ae <tc_init+0x6e>
     af0:	00000805 	.word	0x00000805
     af4:	00008eec 	.word	0x00008eec
     af8:	20001ad0 	.word	0x20001ad0
     afc:	00004da9 	.word	0x00004da9
     b00:	00004d39 	.word	0x00004d39
     b04:	00004ea5 	.word	0x00004ea5
     b08:	40000800 	.word	0x40000800

00000b0c <tc_set_compare_value>:
     b0c:	b510      	push	{r4, lr}
     b0e:	6804      	ldr	r4, [r0, #0]
     b10:	6923      	ldr	r3, [r4, #16]
     b12:	2b00      	cmp	r3, #0
     b14:	d1fc      	bne.n	b10 <tc_set_compare_value+0x4>
     b16:	7903      	ldrb	r3, [r0, #4]
     b18:	2b04      	cmp	r3, #4
     b1a:	d006      	beq.n	b2a <tc_set_compare_value+0x1e>
     b1c:	2b08      	cmp	r3, #8
     b1e:	d028      	beq.n	b72 <tc_set_compare_value+0x66>
     b20:	2b00      	cmp	r3, #0
     b22:	d013      	beq.n	b4c <tc_set_compare_value+0x40>
     b24:	2317      	movs	r3, #23
     b26:	0018      	movs	r0, r3
     b28:	bd10      	pop	{r4, pc}
     b2a:	2317      	movs	r3, #23
     b2c:	2901      	cmp	r1, #1
     b2e:	d8fa      	bhi.n	b26 <tc_set_compare_value+0x1a>
     b30:	7e83      	ldrb	r3, [r0, #26]
     b32:	2b00      	cmp	r3, #0
     b34:	d005      	beq.n	b42 <tc_set_compare_value+0x36>
     b36:	b2d2      	uxtb	r2, r2
     b38:	1861      	adds	r1, r4, r1
     b3a:	3130      	adds	r1, #48	; 0x30
     b3c:	700a      	strb	r2, [r1, #0]
     b3e:	2300      	movs	r3, #0
     b40:	e7f1      	b.n	b26 <tc_set_compare_value+0x1a>
     b42:	b2d2      	uxtb	r2, r2
     b44:	1864      	adds	r4, r4, r1
     b46:	7722      	strb	r2, [r4, #28]
     b48:	2300      	movs	r3, #0
     b4a:	e7ec      	b.n	b26 <tc_set_compare_value+0x1a>
     b4c:	2317      	movs	r3, #23
     b4e:	2901      	cmp	r1, #1
     b50:	d8e9      	bhi.n	b26 <tc_set_compare_value+0x1a>
     b52:	7e83      	ldrb	r3, [r0, #26]
     b54:	2b00      	cmp	r3, #0
     b56:	d005      	beq.n	b64 <tc_set_compare_value+0x58>
     b58:	b292      	uxth	r2, r2
     b5a:	3118      	adds	r1, #24
     b5c:	0049      	lsls	r1, r1, #1
     b5e:	530a      	strh	r2, [r1, r4]
     b60:	2300      	movs	r3, #0
     b62:	e7e0      	b.n	b26 <tc_set_compare_value+0x1a>
     b64:	b292      	uxth	r2, r2
     b66:	310c      	adds	r1, #12
     b68:	0049      	lsls	r1, r1, #1
     b6a:	1864      	adds	r4, r4, r1
     b6c:	80a2      	strh	r2, [r4, #4]
     b6e:	2300      	movs	r3, #0
     b70:	e7d9      	b.n	b26 <tc_set_compare_value+0x1a>
     b72:	2317      	movs	r3, #23
     b74:	2901      	cmp	r1, #1
     b76:	d8d6      	bhi.n	b26 <tc_set_compare_value+0x1a>
     b78:	7e83      	ldrb	r3, [r0, #26]
     b7a:	2b00      	cmp	r3, #0
     b7c:	d105      	bne.n	b8a <tc_set_compare_value+0x7e>
     b7e:	3106      	adds	r1, #6
     b80:	0089      	lsls	r1, r1, #2
     b82:	1864      	adds	r4, r4, r1
     b84:	6062      	str	r2, [r4, #4]
     b86:	2300      	movs	r3, #0
     b88:	e7cd      	b.n	b26 <tc_set_compare_value+0x1a>
     b8a:	310c      	adds	r1, #12
     b8c:	0089      	lsls	r1, r1, #2
     b8e:	510a      	str	r2, [r1, r4]
     b90:	2300      	movs	r3, #0
     b92:	e7c8      	b.n	b26 <tc_set_compare_value+0x1a>

00000b94 <tc_set_top_value>:
     b94:	6802      	ldr	r2, [r0, #0]
     b96:	6913      	ldr	r3, [r2, #16]
     b98:	2b00      	cmp	r3, #0
     b9a:	d1fc      	bne.n	b96 <tc_set_top_value+0x2>
     b9c:	7903      	ldrb	r3, [r0, #4]
     b9e:	2b04      	cmp	r3, #4
     ba0:	d005      	beq.n	bae <tc_set_top_value+0x1a>
     ba2:	2b08      	cmp	r3, #8
     ba4:	d01a      	beq.n	bdc <tc_set_top_value+0x48>
     ba6:	2b00      	cmp	r3, #0
     ba8:	d00d      	beq.n	bc6 <tc_set_top_value+0x32>
     baa:	2017      	movs	r0, #23
     bac:	4770      	bx	lr
     bae:	7e83      	ldrb	r3, [r0, #26]
     bb0:	2b00      	cmp	r3, #0
     bb2:	d004      	beq.n	bbe <tc_set_top_value+0x2a>
     bb4:	b2c9      	uxtb	r1, r1
     bb6:	232f      	movs	r3, #47	; 0x2f
     bb8:	54d1      	strb	r1, [r2, r3]
     bba:	2000      	movs	r0, #0
     bbc:	e7f6      	b.n	bac <tc_set_top_value+0x18>
     bbe:	b2c9      	uxtb	r1, r1
     bc0:	76d1      	strb	r1, [r2, #27]
     bc2:	2000      	movs	r0, #0
     bc4:	e7f2      	b.n	bac <tc_set_top_value+0x18>
     bc6:	7e83      	ldrb	r3, [r0, #26]
     bc8:	2b00      	cmp	r3, #0
     bca:	d003      	beq.n	bd4 <tc_set_top_value+0x40>
     bcc:	b289      	uxth	r1, r1
     bce:	8611      	strh	r1, [r2, #48]	; 0x30
     bd0:	2000      	movs	r0, #0
     bd2:	e7eb      	b.n	bac <tc_set_top_value+0x18>
     bd4:	b289      	uxth	r1, r1
     bd6:	8391      	strh	r1, [r2, #28]
     bd8:	2000      	movs	r0, #0
     bda:	e7e7      	b.n	bac <tc_set_top_value+0x18>
     bdc:	7e83      	ldrb	r3, [r0, #26]
     bde:	2b00      	cmp	r3, #0
     be0:	d102      	bne.n	be8 <tc_set_top_value+0x54>
     be2:	61d1      	str	r1, [r2, #28]
     be4:	2000      	movs	r0, #0
     be6:	e7e1      	b.n	bac <tc_set_top_value+0x18>
     be8:	6311      	str	r1, [r2, #48]	; 0x30
     bea:	2000      	movs	r0, #0
     bec:	e7de      	b.n	bac <tc_set_top_value+0x18>
	...

00000bf0 <button_read>:
{
    //button_state |= (port_pin_get_input_level(PIN_SW2)<<1)|(!port_pin_get_input_level(PIN_SW1)<<0);
}

TIPKA button_read(void)
{
     bf0:	b510      	push	{r4, lr}
	return (port_base->IN.reg & pin_mask);
     bf2:	2282      	movs	r2, #130	; 0x82
     bf4:	05d2      	lsls	r2, r2, #23
     bf6:	6a13      	ldr	r3, [r2, #32]
     bf8:	6a12      	ldr	r2, [r2, #32]
     bfa:	0b5b      	lsrs	r3, r3, #13
     bfc:	2101      	movs	r1, #1
     bfe:	400b      	ands	r3, r1
    button_state = (port_pin_get_input_level(PIN_SW2)<<1) | (!port_pin_get_input_level(PIN_SW1)<<0);
     c00:	005b      	lsls	r3, r3, #1
     c02:	0b12      	lsrs	r2, r2, #12
     c04:	404a      	eors	r2, r1
     c06:	400a      	ands	r2, r1
     c08:	4313      	orrs	r3, r2
     c0a:	4a06      	ldr	r2, [pc, #24]	; (c24 <button_read+0x34>)
     c0c:	7013      	strb	r3, [r2, #0]

    uint8_t pressed_keys = (button_state ^ previous_button_state) & button_state;
     c0e:	4806      	ldr	r0, [pc, #24]	; (c28 <button_read+0x38>)
     c10:	7802      	ldrb	r2, [r0, #0]
     c12:	001c      	movs	r4, r3
     c14:	4394      	bics	r4, r2
    uint8_t released_keys = (button_state ^ previous_button_state) & previous_button_state;
    previous_button_state=button_state;
     c16:	7003      	strb	r3, [r0, #0]
    if(pressed_keys & (1<<0)) {
        return BUTTON_1;
     c18:	2001      	movs	r0, #1
    if(pressed_keys & (1<<0)) {
     c1a:	4221      	tst	r1, r4
     c1c:	d101      	bne.n	c22 <button_read+0x32>
    if(pressed_keys & (1<<1)) {
        return BUTTON_2;
    }

    pressed_keys &=~(released_keys);
    return BUTTON_NONE;
     c1e:	0862      	lsrs	r2, r4, #1
     c20:	0050      	lsls	r0, r2, #1
    if((button_state>>1)&1) {
        button_state &=~(1<<1);
        return BUTTON_2;
    }
    return BUTTON_NONE;*/
     c22:	bd10      	pop	{r4, pc}
     c24:	200002dc 	.word	0x200002dc
     c28:	200002dd 	.word	0x200002dd

00000c2c <delay_init>:
     c2c:	b570      	push	{r4, r5, r6, lr}
     c2e:	2000      	movs	r0, #0
     c30:	4b08      	ldr	r3, [pc, #32]	; (c54 <delay_init+0x28>)
     c32:	4798      	blx	r3
     c34:	0005      	movs	r5, r0
     c36:	4c08      	ldr	r4, [pc, #32]	; (c58 <delay_init+0x2c>)
     c38:	21fa      	movs	r1, #250	; 0xfa
     c3a:	0089      	lsls	r1, r1, #2
     c3c:	47a0      	blx	r4
     c3e:	4b07      	ldr	r3, [pc, #28]	; (c5c <delay_init+0x30>)
     c40:	6018      	str	r0, [r3, #0]
     c42:	4907      	ldr	r1, [pc, #28]	; (c60 <delay_init+0x34>)
     c44:	0028      	movs	r0, r5
     c46:	47a0      	blx	r4
     c48:	4b06      	ldr	r3, [pc, #24]	; (c64 <delay_init+0x38>)
     c4a:	6018      	str	r0, [r3, #0]
     c4c:	2205      	movs	r2, #5
     c4e:	4b06      	ldr	r3, [pc, #24]	; (c68 <delay_init+0x3c>)
     c50:	601a      	str	r2, [r3, #0]
     c52:	bd70      	pop	{r4, r5, r6, pc}
     c54:	00004ccd 	.word	0x00004ccd
     c58:	00005f59 	.word	0x00005f59
     c5c:	2000000c 	.word	0x2000000c
     c60:	000f4240 	.word	0x000f4240
     c64:	20000010 	.word	0x20000010
     c68:	e000e010 	.word	0xe000e010

00000c6c <ac_init>:
 *                          application
 */
enum status_code ac_init(
    struct ac_module *const module_inst,
    Ac *const hw,
    struct ac_config *const config) {
     c6c:	b510      	push	{r4, lr}
     c6e:	b082      	sub	sp, #8
    Assert(module_inst);
    Assert(hw);
    Assert(config);

    /* Initialize device instance */
    module_inst->hw = hw;
     c70:	6001      	str	r1, [r0, #0]
		case SYSTEM_CLOCK_APB_APBB:
			MCLK->APBBMASK.reg |= mask;
			break;

		case SYSTEM_CLOCK_APB_APBC:
			MCLK->APBCMASK.reg |= mask;
     c72:	490e      	ldr	r1, [pc, #56]	; (cac <ac_init+0x40>)
     c74:	69cc      	ldr	r4, [r1, #28]
     c76:	2380      	movs	r3, #128	; 0x80
     c78:	035b      	lsls	r3, r3, #13
     c7a:	4323      	orrs	r3, r4
     c7c:	61cb      	str	r3, [r1, #28]
#endif

#if AC_CALLBACK_MODE == true
    /* Initialize parameters */
    for (uint8_t i = 0; i < AC_CALLBACK_N; i++) {
        module_inst->callback[i]        = NULL;
     c7e:	2300      	movs	r3, #0
     c80:	6043      	str	r3, [r0, #4]
     c82:	6083      	str	r3, [r0, #8]
     c84:	60c3      	str	r3, [r0, #12]
     c86:	6103      	str	r3, [r0, #16]
     c88:	6143      	str	r3, [r0, #20]
     c8a:	6183      	str	r3, [r0, #24]
    }

    /* Initialize software flags*/
    module_inst->register_callback_mask = 0x00;
     c8c:	7703      	strb	r3, [r0, #28]
    module_inst->enable_callback_mask   = 0x00;
     c8e:	7743      	strb	r3, [r0, #29]

#  if (AC_INST_NUM == 1)
    _ac_instance[0] = module_inst;
     c90:	4b07      	ldr	r3, [pc, #28]	; (cb0 <ac_init+0x44>)
     c92:	6018      	str	r0, [r3, #0]
    gclk_chan_conf.source_generator = config->source_generator;
     c94:	a901      	add	r1, sp, #4
     c96:	7813      	ldrb	r3, [r2, #0]
     c98:	700b      	strb	r3, [r1, #0]
    system_gclk_chan_set_config(AC_GCLK_ID, &gclk_chan_conf);
     c9a:	2028      	movs	r0, #40	; 0x28
     c9c:	4b05      	ldr	r3, [pc, #20]	; (cb4 <ac_init+0x48>)
     c9e:	4798      	blx	r3
    system_gclk_chan_enable(AC_GCLK_ID);
     ca0:	2028      	movs	r0, #40	; 0x28
     ca2:	4b05      	ldr	r3, [pc, #20]	; (cb8 <ac_init+0x4c>)
     ca4:	4798      	blx	r3
#  endif
#endif

    /* Write configuration to module */
    return _ac_set_config(module_inst, config);
}
     ca6:	2000      	movs	r0, #0
     ca8:	b002      	add	sp, #8
     caa:	bd10      	pop	{r4, pc}
     cac:	40000800 	.word	0x40000800
     cb0:	20001fa8 	.word	0x20001fa8
     cb4:	00004da9 	.word	0x00004da9
     cb8:	00004d39 	.word	0x00004d39

00000cbc <ac_chan_set_config>:
 *  \param[in] config       Pointer to the channel configuration struct
 */
enum status_code ac_chan_set_config(
    struct ac_module *const module_inst,
    const enum ac_chan_channel channel,
    struct ac_chan_config *const config) {
     cbc:	b570      	push	{r4, r5, r6, lr}
    /* Sanity check arguments */
    Assert(module_inst);
    Assert(module_inst->hw);
    Assert(config);

    Ac *const ac_module = module_inst->hw;
     cbe:	6800      	ldr	r0, [r0, #0]

    /* Use a temporary variable to compute the comparator configuration */
    uint32_t compctrl_temp = 0;

    /* Enable output filter mode */
    compctrl_temp |= config->filter;
     cc0:	6854      	ldr	r4, [r2, #4]

    /* Comparators should be enabled during sleep */
    if (config->run_in_standby == true) {
     cc2:	7a53      	ldrb	r3, [r2, #9]
    compctrl_temp |= config->filter;
     cc4:	0025      	movs	r5, r4
    if (config->run_in_standby == true) {
     cc6:	2b00      	cmp	r3, #0
     cc8:	d001      	beq.n	cce <ac_chan_set_config+0x12>
        compctrl_temp |= AC_COMPCTRL_RUNSTDBY;
     cca:	2540      	movs	r5, #64	; 0x40
     ccc:	4325      	orrs	r5, r4

    /* Set sampling mode (single shot or continuous) */
    compctrl_temp |= config->sample_mode;

    /* Set channel interrupt selection */
    compctrl_temp |= config->interrupt_selection;
     cce:	7813      	ldrb	r3, [r2, #0]
     cd0:	7d54      	ldrb	r4, [r2, #21]
     cd2:	4323      	orrs	r3, r4
        (uint32_t)config->positive_input |
     cd4:	8a14      	ldrh	r4, [r2, #16]
     cd6:	8a56      	ldrh	r6, [r2, #18]
     cd8:	4334      	orrs	r4, r6
    compctrl_temp |= config->interrupt_selection;
     cda:	4323      	orrs	r3, r4
     cdc:	68d4      	ldr	r4, [r2, #12]
     cde:	4323      	orrs	r3, r4
     ce0:	432b      	orrs	r3, r5
    Assert(module_inst);

    Ac *const ac_module = module_inst->hw;

#ifdef FEATURE_AC_SYNCBUSY_SCHEME_VERSION_2
    if (ac_module->SYNCBUSY.reg & AC_SYNCBUSY_MASK) {
     ce2:	257f      	movs	r5, #127	; 0x7f
     ce4:	6a04      	ldr	r4, [r0, #32]

    while (ac_is_syncing(module_inst)) {
     ce6:	4225      	tst	r5, r4
     ce8:	d1fc      	bne.n	ce4 <ac_chan_set_config+0x28>
        /* Wait until synchronization is complete */
    }

    /* Write the final configuration to the module's control register */
    ac_module->COMPCTRL[(uint8_t)channel].reg = compctrl_temp;
     cea:	1d0c      	adds	r4, r1, #4
     cec:	00a4      	lsls	r4, r4, #2
     cee:	5023      	str	r3, [r4, r0]

    /* Configure VCC voltage scaling for the comparator */
    ac_module->SCALER[(uint8_t)channel].reg   = config->vcc_scale_factor - 1;
     cf0:	7d13      	ldrb	r3, [r2, #20]
     cf2:	3b01      	subs	r3, #1
     cf4:	b2db      	uxtb	r3, r3
     cf6:	1840      	adds	r0, r0, r1
     cf8:	7303      	strb	r3, [r0, #12]

    return STATUS_OK;
}
     cfa:	2000      	movs	r0, #0
     cfc:	bd70      	pop	{r4, r5, r6, pc}
	...

00000d00 <_adc_get_inst_index>:
     d00:	4b06      	ldr	r3, [pc, #24]	; (d1c <_adc_get_inst_index+0x1c>)
     d02:	4298      	cmp	r0, r3
     d04:	d008      	beq.n	d18 <_adc_get_inst_index+0x18>
     d06:	4a06      	ldr	r2, [pc, #24]	; (d20 <_adc_get_inst_index+0x20>)
     d08:	2300      	movs	r3, #0
     d0a:	4290      	cmp	r0, r2
     d0c:	d001      	beq.n	d12 <_adc_get_inst_index+0x12>
     d0e:	0018      	movs	r0, r3
     d10:	4770      	bx	lr
     d12:	3301      	adds	r3, #1
     d14:	b2db      	uxtb	r3, r3
     d16:	e7fa      	b.n	d0e <_adc_get_inst_index+0xe>
     d18:	2300      	movs	r3, #0
     d1a:	e7fb      	b.n	d14 <_adc_get_inst_index+0x14>
     d1c:	42004400 	.word	0x42004400
     d20:	42004800 	.word	0x42004800

00000d24 <adc_get_config_defaults>:
     d24:	b510      	push	{r4, lr}
     d26:	2300      	movs	r3, #0
     d28:	2200      	movs	r2, #0
     d2a:	7003      	strb	r3, [r0, #0]
     d2c:	7043      	strb	r3, [r0, #1]
     d2e:	7083      	strb	r3, [r0, #2]
     d30:	70c3      	strb	r3, [r0, #3]
     d32:	2100      	movs	r1, #0
     d34:	8303      	strh	r3, [r0, #24]
     d36:	6203      	str	r3, [r0, #32]
     d38:	61c3      	str	r3, [r0, #28]
     d3a:	2401      	movs	r4, #1
     d3c:	7104      	strb	r4, [r0, #4]
     d3e:	24c0      	movs	r4, #192	; 0xc0
     d40:	0164      	lsls	r4, r4, #5
     d42:	80c4      	strh	r4, [r0, #6]
     d44:	7201      	strb	r1, [r0, #8]
     d46:	7242      	strb	r2, [r0, #9]
     d48:	7282      	strb	r2, [r0, #10]
     d4a:	72c2      	strb	r2, [r0, #11]
     d4c:	7302      	strb	r2, [r0, #12]
     d4e:	242a      	movs	r4, #42	; 0x2a
     d50:	5502      	strb	r2, [r0, r4]
     d52:	7342      	strb	r2, [r0, #13]
     d54:	7382      	strb	r2, [r0, #14]
     d56:	73c2      	strb	r2, [r0, #15]
     d58:	6103      	str	r3, [r0, #16]
     d5a:	7502      	strb	r2, [r0, #20]
     d5c:	3c06      	subs	r4, #6
     d5e:	5502      	strb	r2, [r0, r4]
     d60:	84c3      	strh	r3, [r0, #38]	; 0x26
     d62:	8503      	strh	r3, [r0, #40]	; 0x28
     d64:	7541      	strb	r1, [r0, #21]
     d66:	bd10      	pop	{r4, pc}

00000d68 <adc_set_window_mode>:
     d68:	b570      	push	{r4, r5, r6, lr}
     d6a:	6805      	ldr	r5, [r0, #0]
     d6c:	8c2c      	ldrh	r4, [r5, #32]
     d6e:	b2a4      	uxth	r4, r4
     d70:	2c00      	cmp	r4, #0
     d72:	d1fb      	bne.n	d6c <adc_set_window_mode+0x4>
     d74:	896c      	ldrh	r4, [r5, #10]
     d76:	4e0c      	ldr	r6, [pc, #48]	; (da8 <adc_set_window_mode+0x40>)
     d78:	4034      	ands	r4, r6
     d7a:	4321      	orrs	r1, r4
     d7c:	8169      	strh	r1, [r5, #10]
     d7e:	6804      	ldr	r4, [r0, #0]
     d80:	8c21      	ldrh	r1, [r4, #32]
     d82:	b289      	uxth	r1, r1
     d84:	2900      	cmp	r1, #0
     d86:	d1fb      	bne.n	d80 <adc_set_window_mode+0x18>
     d88:	b292      	uxth	r2, r2
     d8a:	81ea      	strh	r2, [r5, #14]
     d8c:	6801      	ldr	r1, [r0, #0]
     d8e:	8c0a      	ldrh	r2, [r1, #32]
     d90:	b292      	uxth	r2, r2
     d92:	2a00      	cmp	r2, #0
     d94:	d1fb      	bne.n	d8e <adc_set_window_mode+0x26>
     d96:	b29b      	uxth	r3, r3
     d98:	822b      	strh	r3, [r5, #16]
     d9a:	6802      	ldr	r2, [r0, #0]
     d9c:	8c13      	ldrh	r3, [r2, #32]
     d9e:	b29b      	uxth	r3, r3
     da0:	2b00      	cmp	r3, #0
     da2:	d1fb      	bne.n	d9c <adc_set_window_mode+0x34>
     da4:	bd70      	pop	{r4, r5, r6, pc}
     da6:	46c0      	nop			; (mov r8, r8)
     da8:	fffff8ff 	.word	0xfffff8ff

00000dac <adc_init>:
     dac:	b5f0      	push	{r4, r5, r6, r7, lr}
     dae:	46de      	mov	lr, fp
     db0:	4657      	mov	r7, sl
     db2:	464e      	mov	r6, r9
     db4:	4645      	mov	r5, r8
     db6:	b5e0      	push	{r5, r6, r7, lr}
     db8:	b09f      	sub	sp, #124	; 0x7c
     dba:	0005      	movs	r5, r0
     dbc:	000e      	movs	r6, r1
     dbe:	0017      	movs	r7, r2
     dc0:	0008      	movs	r0, r1
     dc2:	4b98      	ldr	r3, [pc, #608]	; (1024 <adc_init+0x278>)
     dc4:	4798      	blx	r3
     dc6:	0004      	movs	r4, r0
     dc8:	9001      	str	r0, [sp, #4]
     dca:	602e      	str	r6, [r5, #0]
     dcc:	4a96      	ldr	r2, [pc, #600]	; (1028 <adc_init+0x27c>)
     dce:	69d3      	ldr	r3, [r2, #28]
     dd0:	0080      	lsls	r0, r0, #2
     dd2:	4996      	ldr	r1, [pc, #600]	; (102c <adc_init+0x280>)
     dd4:	5841      	ldr	r1, [r0, r1]
     dd6:	430b      	orrs	r3, r1
     dd8:	61d3      	str	r3, [r2, #28]
     dda:	7833      	ldrb	r3, [r6, #0]
     ddc:	2005      	movs	r0, #5
     dde:	07db      	lsls	r3, r3, #31
     de0:	d506      	bpl.n	df0 <adc_init+0x44>
     de2:	b01f      	add	sp, #124	; 0x7c
     de4:	bc3c      	pop	{r2, r3, r4, r5}
     de6:	4690      	mov	r8, r2
     de8:	4699      	mov	r9, r3
     dea:	46a2      	mov	sl, r4
     dec:	46ab      	mov	fp, r5
     dee:	bdf0      	pop	{r4, r5, r6, r7, pc}
     df0:	682a      	ldr	r2, [r5, #0]
     df2:	8c13      	ldrh	r3, [r2, #32]
     df4:	b29b      	uxth	r3, r3
     df6:	2b00      	cmp	r3, #0
     df8:	d1fb      	bne.n	df2 <adc_init+0x46>
     dfa:	7833      	ldrb	r3, [r6, #0]
     dfc:	201c      	movs	r0, #28
     dfe:	079b      	lsls	r3, r3, #30
     e00:	d4ef      	bmi.n	de2 <adc_init+0x36>
     e02:	787b      	ldrb	r3, [r7, #1]
     e04:	712b      	strb	r3, [r5, #4]
     e06:	2b00      	cmp	r3, #0
     e08:	d104      	bne.n	e14 <adc_init+0x68>
     e0a:	4a89      	ldr	r2, [pc, #548]	; (1030 <adc_init+0x284>)
     e0c:	69d3      	ldr	r3, [r2, #28]
     e0e:	2104      	movs	r1, #4
     e10:	430b      	orrs	r3, r1
     e12:	61d3      	str	r3, [r2, #28]
     e14:	2300      	movs	r3, #0
     e16:	60ab      	str	r3, [r5, #8]
     e18:	60eb      	str	r3, [r5, #12]
     e1a:	612b      	str	r3, [r5, #16]
     e1c:	76ab      	strb	r3, [r5, #26]
     e1e:	76eb      	strb	r3, [r5, #27]
     e20:	832b      	strh	r3, [r5, #24]
     e22:	772b      	strb	r3, [r5, #28]
     e24:	00a3      	lsls	r3, r4, #2
     e26:	4a83      	ldr	r2, [pc, #524]	; (1034 <adc_init+0x288>)
     e28:	509d      	str	r5, [r3, r2]
     e2a:	232a      	movs	r3, #42	; 0x2a
     e2c:	5cfb      	ldrb	r3, [r7, r3]
     e2e:	2b00      	cmp	r3, #0
     e30:	d105      	bne.n	e3e <adc_init+0x92>
     e32:	7b3b      	ldrb	r3, [r7, #12]
     e34:	2b00      	cmp	r3, #0
     e36:	d102      	bne.n	e3e <adc_init+0x92>
     e38:	3301      	adds	r3, #1
     e3a:	776b      	strb	r3, [r5, #29]
     e3c:	e001      	b.n	e42 <adc_init+0x96>
     e3e:	2300      	movs	r3, #0
     e40:	776b      	strb	r3, [r5, #29]
     e42:	682b      	ldr	r3, [r5, #0]
     e44:	469a      	mov	sl, r3
     e46:	783b      	ldrb	r3, [r7, #0]
     e48:	aa04      	add	r2, sp, #16
     e4a:	7013      	strb	r3, [r2, #0]
     e4c:	4b7a      	ldr	r3, [pc, #488]	; (1038 <adc_init+0x28c>)
     e4e:	5d1e      	ldrb	r6, [r3, r4]
     e50:	0011      	movs	r1, r2
     e52:	0030      	movs	r0, r6
     e54:	4b79      	ldr	r3, [pc, #484]	; (103c <adc_init+0x290>)
     e56:	4798      	blx	r3
     e58:	0030      	movs	r0, r6
     e5a:	4b79      	ldr	r3, [pc, #484]	; (1040 <adc_init+0x294>)
     e5c:	4798      	blx	r3
     e5e:	793b      	ldrb	r3, [r7, #4]
     e60:	4698      	mov	r8, r3
     e62:	ae06      	add	r6, sp, #24
     e64:	4b77      	ldr	r3, [pc, #476]	; (1044 <adc_init+0x298>)
     e66:	469c      	mov	ip, r3
     e68:	0032      	movs	r2, r6
     e6a:	0019      	movs	r1, r3
     e6c:	c949      	ldmia	r1!, {r0, r3, r6}
     e6e:	c249      	stmia	r2!, {r0, r3, r6}
     e70:	c949      	ldmia	r1!, {r0, r3, r6}
     e72:	c249      	stmia	r2!, {r0, r3, r6}
     e74:	c949      	ldmia	r1!, {r0, r3, r6}
     e76:	c249      	stmia	r2!, {r0, r3, r6}
     e78:	c949      	ldmia	r1!, {r0, r3, r6}
     e7a:	c249      	stmia	r2!, {r0, r3, r6}
     e7c:	a912      	add	r1, sp, #72	; 0x48
     e7e:	4663      	mov	r3, ip
     e80:	3330      	adds	r3, #48	; 0x30
     e82:	000a      	movs	r2, r1
     e84:	cb43      	ldmia	r3!, {r0, r1, r6}
     e86:	c243      	stmia	r2!, {r0, r1, r6}
     e88:	cb43      	ldmia	r3!, {r0, r1, r6}
     e8a:	c243      	stmia	r2!, {r0, r1, r6}
     e8c:	cb43      	ldmia	r3!, {r0, r1, r6}
     e8e:	c243      	stmia	r2!, {r0, r1, r6}
     e90:	cb43      	ldmia	r3!, {r0, r1, r6}
     e92:	c243      	stmia	r2!, {r0, r1, r6}
     e94:	9b01      	ldr	r3, [sp, #4]
     e96:	2b00      	cmp	r3, #0
     e98:	d004      	beq.n	ea4 <adc_init+0xf8>
     e9a:	a912      	add	r1, sp, #72	; 0x48
     e9c:	2b01      	cmp	r3, #1
     e9e:	d002      	beq.n	ea6 <adc_init+0xfa>
     ea0:	2100      	movs	r1, #0
     ea2:	e000      	b.n	ea6 <adc_init+0xfa>
     ea4:	a906      	add	r1, sp, #24
     ea6:	00a3      	lsls	r3, r4, #2
     ea8:	4a67      	ldr	r2, [pc, #412]	; (1048 <adc_init+0x29c>)
     eaa:	589b      	ldr	r3, [r3, r2]
     eac:	469b      	mov	fp, r3
     eae:	4598      	cmp	r8, r3
     eb0:	d922      	bls.n	ef8 <adc_init+0x14c>
     eb2:	88fb      	ldrh	r3, [r7, #6]
     eb4:	4698      	mov	r8, r3
     eb6:	ae06      	add	r6, sp, #24
     eb8:	4b62      	ldr	r3, [pc, #392]	; (1044 <adc_init+0x298>)
     eba:	469c      	mov	ip, r3
     ebc:	0032      	movs	r2, r6
     ebe:	0019      	movs	r1, r3
     ec0:	c949      	ldmia	r1!, {r0, r3, r6}
     ec2:	c249      	stmia	r2!, {r0, r3, r6}
     ec4:	c949      	ldmia	r1!, {r0, r3, r6}
     ec6:	c249      	stmia	r2!, {r0, r3, r6}
     ec8:	c949      	ldmia	r1!, {r0, r3, r6}
     eca:	c249      	stmia	r2!, {r0, r3, r6}
     ecc:	c949      	ldmia	r1!, {r0, r3, r6}
     ece:	c249      	stmia	r2!, {r0, r3, r6}
     ed0:	a912      	add	r1, sp, #72	; 0x48
     ed2:	4663      	mov	r3, ip
     ed4:	3330      	adds	r3, #48	; 0x30
     ed6:	000a      	movs	r2, r1
     ed8:	cb43      	ldmia	r3!, {r0, r1, r6}
     eda:	c243      	stmia	r2!, {r0, r1, r6}
     edc:	cb43      	ldmia	r3!, {r0, r1, r6}
     ede:	c243      	stmia	r2!, {r0, r1, r6}
     ee0:	cb43      	ldmia	r3!, {r0, r1, r6}
     ee2:	c243      	stmia	r2!, {r0, r1, r6}
     ee4:	cb43      	ldmia	r3!, {r0, r1, r6}
     ee6:	c243      	stmia	r2!, {r0, r1, r6}
     ee8:	9a01      	ldr	r2, [sp, #4]
     eea:	2a00      	cmp	r2, #0
     eec:	d012      	beq.n	f14 <adc_init+0x168>
     eee:	ab12      	add	r3, sp, #72	; 0x48
     ef0:	2a01      	cmp	r2, #1
     ef2:	d010      	beq.n	f16 <adc_init+0x16a>
     ef4:	2300      	movs	r3, #0
     ef6:	e00e      	b.n	f16 <adc_init+0x16a>
     ef8:	4643      	mov	r3, r8
     efa:	0098      	lsls	r0, r3, #2
     efc:	5840      	ldr	r0, [r0, r1]
     efe:	a905      	add	r1, sp, #20
     f00:	2300      	movs	r3, #0
     f02:	704b      	strb	r3, [r1, #1]
     f04:	70cb      	strb	r3, [r1, #3]
     f06:	708b      	strb	r3, [r1, #2]
     f08:	3301      	adds	r3, #1
     f0a:	700b      	strb	r3, [r1, #0]
     f0c:	b2c0      	uxtb	r0, r0
     f0e:	4b4f      	ldr	r3, [pc, #316]	; (104c <adc_init+0x2a0>)
     f10:	4798      	blx	r3
     f12:	e7ce      	b.n	eb2 <adc_init+0x106>
     f14:	ab06      	add	r3, sp, #24
     f16:	45d8      	cmp	r8, fp
     f18:	d90a      	bls.n	f30 <adc_init+0x184>
     f1a:	2100      	movs	r1, #0
     f1c:	2600      	movs	r6, #0
     f1e:	2301      	movs	r3, #1
     f20:	4699      	mov	r9, r3
     f22:	4b48      	ldr	r3, [pc, #288]	; (1044 <adc_init+0x298>)
     f24:	4698      	mov	r8, r3
     f26:	9403      	str	r4, [sp, #12]
     f28:	465b      	mov	r3, fp
     f2a:	9302      	str	r3, [sp, #8]
     f2c:	46ab      	mov	fp, r5
     f2e:	e020      	b.n	f72 <adc_init+0x1c6>
     f30:	4642      	mov	r2, r8
     f32:	0090      	lsls	r0, r2, #2
     f34:	58c0      	ldr	r0, [r0, r3]
     f36:	a905      	add	r1, sp, #20
     f38:	2300      	movs	r3, #0
     f3a:	704b      	strb	r3, [r1, #1]
     f3c:	70cb      	strb	r3, [r1, #3]
     f3e:	708b      	strb	r3, [r1, #2]
     f40:	3301      	adds	r3, #1
     f42:	700b      	strb	r3, [r1, #0]
     f44:	b2c0      	uxtb	r0, r0
     f46:	4b41      	ldr	r3, [pc, #260]	; (104c <adc_init+0x2a0>)
     f48:	4798      	blx	r3
     f4a:	e7e6      	b.n	f1a <adc_init+0x16e>
     f4c:	ab06      	add	r3, sp, #24
     f4e:	0089      	lsls	r1, r1, #2
     f50:	58c8      	ldr	r0, [r1, r3]
     f52:	a905      	add	r1, sp, #20
     f54:	2300      	movs	r3, #0
     f56:	704b      	strb	r3, [r1, #1]
     f58:	70cb      	strb	r3, [r1, #3]
     f5a:	708b      	strb	r3, [r1, #2]
     f5c:	464b      	mov	r3, r9
     f5e:	700b      	strb	r3, [r1, #0]
     f60:	b2c0      	uxtb	r0, r0
     f62:	4b3a      	ldr	r3, [pc, #232]	; (104c <adc_init+0x2a0>)
     f64:	4798      	blx	r3
     f66:	3601      	adds	r6, #1
     f68:	b2f6      	uxtb	r6, r6
     f6a:	0031      	movs	r1, r6
     f6c:	9b02      	ldr	r3, [sp, #8]
     f6e:	429e      	cmp	r6, r3
     f70:	d823      	bhi.n	fba <adc_init+0x20e>
     f72:	464b      	mov	r3, r9
     f74:	40b3      	lsls	r3, r6
     f76:	693a      	ldr	r2, [r7, #16]
     f78:	421a      	tst	r2, r3
     f7a:	d0f4      	beq.n	f66 <adc_init+0x1ba>
     f7c:	a806      	add	r0, sp, #24
     f7e:	0003      	movs	r3, r0
     f80:	4642      	mov	r2, r8
     f82:	ca31      	ldmia	r2!, {r0, r4, r5}
     f84:	c331      	stmia	r3!, {r0, r4, r5}
     f86:	ca31      	ldmia	r2!, {r0, r4, r5}
     f88:	c331      	stmia	r3!, {r0, r4, r5}
     f8a:	ca31      	ldmia	r2!, {r0, r4, r5}
     f8c:	c331      	stmia	r3!, {r0, r4, r5}
     f8e:	ca31      	ldmia	r2!, {r0, r4, r5}
     f90:	c331      	stmia	r3!, {r0, r4, r5}
     f92:	a812      	add	r0, sp, #72	; 0x48
     f94:	4643      	mov	r3, r8
     f96:	3330      	adds	r3, #48	; 0x30
     f98:	0002      	movs	r2, r0
     f9a:	cb31      	ldmia	r3!, {r0, r4, r5}
     f9c:	c231      	stmia	r2!, {r0, r4, r5}
     f9e:	cb31      	ldmia	r3!, {r0, r4, r5}
     fa0:	c231      	stmia	r2!, {r0, r4, r5}
     fa2:	cb31      	ldmia	r3!, {r0, r4, r5}
     fa4:	c231      	stmia	r2!, {r0, r4, r5}
     fa6:	cb31      	ldmia	r3!, {r0, r4, r5}
     fa8:	c231      	stmia	r2!, {r0, r4, r5}
     faa:	9a01      	ldr	r2, [sp, #4]
     fac:	2a00      	cmp	r2, #0
     fae:	d0cd      	beq.n	f4c <adc_init+0x1a0>
     fb0:	ab12      	add	r3, sp, #72	; 0x48
     fb2:	2a01      	cmp	r2, #1
     fb4:	d0cb      	beq.n	f4e <adc_init+0x1a2>
     fb6:	2300      	movs	r3, #0
     fb8:	e7c9      	b.n	f4e <adc_init+0x1a2>
     fba:	465d      	mov	r5, fp
     fbc:	9c03      	ldr	r4, [sp, #12]
     fbe:	7b7b      	ldrb	r3, [r7, #13]
     fc0:	019b      	lsls	r3, r3, #6
     fc2:	7bba      	ldrb	r2, [r7, #14]
     fc4:	01d2      	lsls	r2, r2, #7
     fc6:	4313      	orrs	r3, r2
     fc8:	b2db      	uxtb	r3, r3
     fca:	4652      	mov	r2, sl
     fcc:	7013      	strb	r3, [r2, #0]
     fce:	7d3b      	ldrb	r3, [r7, #20]
     fd0:	01db      	lsls	r3, r3, #7
     fd2:	787a      	ldrb	r2, [r7, #1]
     fd4:	4313      	orrs	r3, r2
     fd6:	b2db      	uxtb	r3, r3
     fd8:	4652      	mov	r2, sl
     fda:	7093      	strb	r3, [r2, #2]
     fdc:	78fb      	ldrb	r3, [r7, #3]
     fde:	2b34      	cmp	r3, #52	; 0x34
     fe0:	d900      	bls.n	fe4 <adc_init+0x238>
     fe2:	e14f      	b.n	1284 <adc_init+0x4d8>
     fe4:	009b      	lsls	r3, r3, #2
     fe6:	4a1a      	ldr	r2, [pc, #104]	; (1050 <adc_init+0x2a4>)
     fe8:	58d3      	ldr	r3, [r2, r3]
     fea:	469f      	mov	pc, r3
     fec:	2204      	movs	r2, #4
     fee:	2610      	movs	r6, #16
     ff0:	2102      	movs	r1, #2
     ff2:	e032      	b.n	105a <adc_init+0x2ae>
     ff4:	7a79      	ldrb	r1, [r7, #9]
     ff6:	7a3a      	ldrb	r2, [r7, #8]
     ff8:	2610      	movs	r6, #16
     ffa:	e02e      	b.n	105a <adc_init+0x2ae>
     ffc:	2206      	movs	r2, #6
     ffe:	2610      	movs	r6, #16
    1000:	2101      	movs	r1, #1
    1002:	e02a      	b.n	105a <adc_init+0x2ae>
    1004:	2208      	movs	r2, #8
    1006:	2610      	movs	r6, #16
    1008:	2100      	movs	r1, #0
    100a:	e026      	b.n	105a <adc_init+0x2ae>
    100c:	2200      	movs	r2, #0
    100e:	2630      	movs	r6, #48	; 0x30
    1010:	2100      	movs	r1, #0
    1012:	e022      	b.n	105a <adc_init+0x2ae>
    1014:	2200      	movs	r2, #0
    1016:	2620      	movs	r6, #32
    1018:	2100      	movs	r1, #0
    101a:	e01e      	b.n	105a <adc_init+0x2ae>
    101c:	2200      	movs	r2, #0
    101e:	2600      	movs	r6, #0
    1020:	2100      	movs	r1, #0
    1022:	e01a      	b.n	105a <adc_init+0x2ae>
    1024:	00000d01 	.word	0x00000d01
    1028:	40000800 	.word	0x40000800
    102c:	0000905c 	.word	0x0000905c
    1030:	40001800 	.word	0x40001800
    1034:	20001ae4 	.word	0x20001ae4
    1038:	00009084 	.word	0x00009084
    103c:	00004da9 	.word	0x00004da9
    1040:	00004d39 	.word	0x00004d39
    1044:	00008ffc 	.word	0x00008ffc
    1048:	0000907c 	.word	0x0000907c
    104c:	00004ea5 	.word	0x00004ea5
    1050:	00008f28 	.word	0x00008f28
    1054:	2202      	movs	r2, #2
    1056:	2610      	movs	r6, #16
    1058:	2101      	movs	r1, #1
    105a:	0109      	lsls	r1, r1, #4
    105c:	2370      	movs	r3, #112	; 0x70
    105e:	400b      	ands	r3, r1
    1060:	4313      	orrs	r3, r2
    1062:	4652      	mov	r2, sl
    1064:	7313      	strb	r3, [r2, #12]
    1066:	682a      	ldr	r2, [r5, #0]
    1068:	8c13      	ldrh	r3, [r2, #32]
    106a:	b29b      	uxth	r3, r3
    106c:	2b00      	cmp	r3, #0
    106e:	d1fb      	bne.n	1068 <adc_init+0x2bc>
    1070:	7d7b      	ldrb	r3, [r7, #21]
    1072:	2017      	movs	r0, #23
    1074:	2b3f      	cmp	r3, #63	; 0x3f
    1076:	d900      	bls.n	107a <adc_init+0x2ce>
    1078:	e6b3      	b.n	de2 <adc_init+0x36>
    107a:	7bfa      	ldrb	r2, [r7, #15]
    107c:	01d2      	lsls	r2, r2, #7
    107e:	4313      	orrs	r3, r2
    1080:	b2db      	uxtb	r3, r3
    1082:	4652      	mov	r2, sl
    1084:	7353      	strb	r3, [r2, #13]
    1086:	682a      	ldr	r2, [r5, #0]
    1088:	8c13      	ldrh	r3, [r2, #32]
    108a:	b29b      	uxth	r3, r3
    108c:	2b00      	cmp	r3, #0
    108e:	d1fb      	bne.n	1088 <adc_init+0x2dc>
    1090:	78bb      	ldrb	r3, [r7, #2]
    1092:	4652      	mov	r2, sl
    1094:	7053      	strb	r3, [r2, #1]
    1096:	2324      	movs	r3, #36	; 0x24
    1098:	5cfb      	ldrb	r3, [r7, r3]
    109a:	00db      	lsls	r3, r3, #3
    109c:	7b3a      	ldrb	r2, [r7, #12]
    109e:	0092      	lsls	r2, r2, #2
    10a0:	431a      	orrs	r2, r3
    10a2:	7afb      	ldrb	r3, [r7, #11]
    10a4:	4313      	orrs	r3, r2
    10a6:	7aba      	ldrb	r2, [r7, #10]
    10a8:	0052      	lsls	r2, r2, #1
    10aa:	4313      	orrs	r3, r2
    10ac:	4333      	orrs	r3, r6
    10ae:	4652      	mov	r2, sl
    10b0:	8153      	strh	r3, [r2, #10]
    10b2:	682a      	ldr	r2, [r5, #0]
    10b4:	8c13      	ldrh	r3, [r2, #32]
    10b6:	b29b      	uxth	r3, r3
    10b8:	2b00      	cmp	r3, #0
    10ba:	d1fb      	bne.n	10b4 <adc_init+0x308>
    10bc:	8b3b      	ldrh	r3, [r7, #24]
    10be:	2b00      	cmp	r3, #0
    10c0:	d020      	beq.n	1104 <adc_init+0x358>
    10c2:	2e10      	cmp	r6, #16
    10c4:	d100      	bne.n	10c8 <adc_init+0x31c>
    10c6:	e0bf      	b.n	1248 <adc_init+0x49c>
    10c8:	d800      	bhi.n	10cc <adc_init+0x320>
    10ca:	e07f      	b.n	11cc <adc_init+0x420>
    10cc:	2e20      	cmp	r6, #32
    10ce:	d100      	bne.n	10d2 <adc_init+0x326>
    10d0:	e09c      	b.n	120c <adc_init+0x460>
    10d2:	2e30      	cmp	r6, #48	; 0x30
    10d4:	d116      	bne.n	1104 <adc_init+0x358>
    10d6:	7afa      	ldrb	r2, [r7, #11]
    10d8:	2a00      	cmp	r2, #0
    10da:	d00a      	beq.n	10f2 <adc_init+0x346>
    10dc:	69fa      	ldr	r2, [r7, #28]
    10de:	3280      	adds	r2, #128	; 0x80
    10e0:	2017      	movs	r0, #23
    10e2:	2aff      	cmp	r2, #255	; 0xff
    10e4:	d900      	bls.n	10e8 <adc_init+0x33c>
    10e6:	e67c      	b.n	de2 <adc_init+0x36>
    10e8:	6a3a      	ldr	r2, [r7, #32]
    10ea:	3280      	adds	r2, #128	; 0x80
    10ec:	2aff      	cmp	r2, #255	; 0xff
    10ee:	d900      	bls.n	10f2 <adc_init+0x346>
    10f0:	e677      	b.n	de2 <adc_init+0x36>
    10f2:	2017      	movs	r0, #23
    10f4:	69fa      	ldr	r2, [r7, #28]
    10f6:	2aff      	cmp	r2, #255	; 0xff
    10f8:	dd00      	ble.n	10fc <adc_init+0x350>
    10fa:	e672      	b.n	de2 <adc_init+0x36>
    10fc:	6a3a      	ldr	r2, [r7, #32]
    10fe:	2aff      	cmp	r2, #255	; 0xff
    1100:	dd00      	ble.n	1104 <adc_init+0x358>
    1102:	e66e      	b.n	de2 <adc_init+0x36>
    1104:	4652      	mov	r2, sl
    1106:	8952      	ldrh	r2, [r2, #10]
    1108:	4313      	orrs	r3, r2
    110a:	4652      	mov	r2, sl
    110c:	8153      	strh	r3, [r2, #10]
    110e:	682a      	ldr	r2, [r5, #0]
    1110:	8c13      	ldrh	r3, [r2, #32]
    1112:	b29b      	uxth	r3, r3
    1114:	2b00      	cmp	r3, #0
    1116:	d1fb      	bne.n	1110 <adc_init+0x364>
    1118:	8bbb      	ldrh	r3, [r7, #28]
    111a:	4652      	mov	r2, sl
    111c:	81d3      	strh	r3, [r2, #14]
    111e:	682a      	ldr	r2, [r5, #0]
    1120:	8c13      	ldrh	r3, [r2, #32]
    1122:	b29b      	uxth	r3, r3
    1124:	2b00      	cmp	r3, #0
    1126:	d1fb      	bne.n	1120 <adc_init+0x374>
    1128:	8c3b      	ldrh	r3, [r7, #32]
    112a:	4652      	mov	r2, sl
    112c:	8213      	strh	r3, [r2, #16]
    112e:	682a      	ldr	r2, [r5, #0]
    1130:	8c13      	ldrh	r3, [r2, #32]
    1132:	b29b      	uxth	r3, r3
    1134:	2b00      	cmp	r3, #0
    1136:	d1fb      	bne.n	1130 <adc_init+0x384>
    1138:	793b      	ldrb	r3, [r7, #4]
    113a:	88fa      	ldrh	r2, [r7, #6]
    113c:	4313      	orrs	r3, r2
    113e:	4652      	mov	r2, sl
    1140:	8113      	strh	r3, [r2, #8]
    1142:	682a      	ldr	r2, [r5, #0]
    1144:	8c13      	ldrh	r3, [r2, #32]
    1146:	b29b      	uxth	r3, r3
    1148:	2b00      	cmp	r3, #0
    114a:	d1fb      	bne.n	1144 <adc_init+0x398>
    114c:	332a      	adds	r3, #42	; 0x2a
    114e:	5cfb      	ldrb	r3, [r7, r3]
    1150:	4652      	mov	r2, sl
    1152:	70d3      	strb	r3, [r2, #3]
    1154:	2307      	movs	r3, #7
    1156:	7113      	strb	r3, [r2, #4]
    1158:	331d      	adds	r3, #29
    115a:	5cfb      	ldrb	r3, [r7, r3]
    115c:	2b00      	cmp	r3, #0
    115e:	d01d      	beq.n	119c <adc_init+0x3f0>
    1160:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
    1162:	4a49      	ldr	r2, [pc, #292]	; (1288 <adc_init+0x4dc>)
    1164:	2017      	movs	r0, #23
    1166:	4293      	cmp	r3, r2
    1168:	d900      	bls.n	116c <adc_init+0x3c0>
    116a:	e63a      	b.n	de2 <adc_init+0x36>
    116c:	4652      	mov	r2, sl
    116e:	8253      	strh	r3, [r2, #18]
    1170:	682a      	ldr	r2, [r5, #0]
    1172:	8c13      	ldrh	r3, [r2, #32]
    1174:	b29b      	uxth	r3, r3
    1176:	2b00      	cmp	r3, #0
    1178:	d1fb      	bne.n	1172 <adc_init+0x3c6>
    117a:	8d3a      	ldrh	r2, [r7, #40]	; 0x28
    117c:	2380      	movs	r3, #128	; 0x80
    117e:	011b      	lsls	r3, r3, #4
    1180:	18d3      	adds	r3, r2, r3
    1182:	4941      	ldr	r1, [pc, #260]	; (1288 <adc_init+0x4dc>)
    1184:	b29b      	uxth	r3, r3
    1186:	2017      	movs	r0, #23
    1188:	428b      	cmp	r3, r1
    118a:	d900      	bls.n	118e <adc_init+0x3e2>
    118c:	e629      	b.n	de2 <adc_init+0x36>
    118e:	4653      	mov	r3, sl
    1190:	829a      	strh	r2, [r3, #20]
    1192:	682a      	ldr	r2, [r5, #0]
    1194:	8c13      	ldrh	r3, [r2, #32]
    1196:	b29b      	uxth	r3, r3
    1198:	2b00      	cmp	r3, #0
    119a:	d1fb      	bne.n	1194 <adc_init+0x3e8>
    119c:	00a2      	lsls	r2, r4, #2
    119e:	4b3b      	ldr	r3, [pc, #236]	; (128c <adc_init+0x4e0>)
    11a0:	58d3      	ldr	r3, [r2, r3]
    11a2:	493b      	ldr	r1, [pc, #236]	; (1290 <adc_init+0x4e4>)
    11a4:	5d09      	ldrb	r1, [r1, r4]
    11a6:	681b      	ldr	r3, [r3, #0]
    11a8:	40cb      	lsrs	r3, r1
    11aa:	021b      	lsls	r3, r3, #8
    11ac:	21e0      	movs	r1, #224	; 0xe0
    11ae:	00c9      	lsls	r1, r1, #3
    11b0:	400b      	ands	r3, r1
    11b2:	4938      	ldr	r1, [pc, #224]	; (1294 <adc_init+0x4e8>)
    11b4:	5852      	ldr	r2, [r2, r1]
    11b6:	4938      	ldr	r1, [pc, #224]	; (1298 <adc_init+0x4ec>)
    11b8:	5d09      	ldrb	r1, [r1, r4]
    11ba:	6812      	ldr	r2, [r2, #0]
    11bc:	40ca      	lsrs	r2, r1
    11be:	2107      	movs	r1, #7
    11c0:	400a      	ands	r2, r1
    11c2:	4313      	orrs	r3, r2
    11c4:	4652      	mov	r2, sl
    11c6:	8593      	strh	r3, [r2, #44]	; 0x2c
    11c8:	2000      	movs	r0, #0
    11ca:	e60a      	b.n	de2 <adc_init+0x36>
    11cc:	2e00      	cmp	r6, #0
    11ce:	d199      	bne.n	1104 <adc_init+0x358>
    11d0:	7afa      	ldrb	r2, [r7, #11]
    11d2:	2a00      	cmp	r2, #0
    11d4:	d00f      	beq.n	11f6 <adc_init+0x44a>
    11d6:	69fa      	ldr	r2, [r7, #28]
    11d8:	2180      	movs	r1, #128	; 0x80
    11da:	0109      	lsls	r1, r1, #4
    11dc:	468c      	mov	ip, r1
    11de:	4462      	add	r2, ip
    11e0:	4929      	ldr	r1, [pc, #164]	; (1288 <adc_init+0x4dc>)
    11e2:	2017      	movs	r0, #23
    11e4:	428a      	cmp	r2, r1
    11e6:	d900      	bls.n	11ea <adc_init+0x43e>
    11e8:	e5fb      	b.n	de2 <adc_init+0x36>
    11ea:	6a3a      	ldr	r2, [r7, #32]
    11ec:	4462      	add	r2, ip
    11ee:	4926      	ldr	r1, [pc, #152]	; (1288 <adc_init+0x4dc>)
    11f0:	428a      	cmp	r2, r1
    11f2:	d900      	bls.n	11f6 <adc_init+0x44a>
    11f4:	e5f5      	b.n	de2 <adc_init+0x36>
    11f6:	4a24      	ldr	r2, [pc, #144]	; (1288 <adc_init+0x4dc>)
    11f8:	2017      	movs	r0, #23
    11fa:	69f9      	ldr	r1, [r7, #28]
    11fc:	4291      	cmp	r1, r2
    11fe:	dd00      	ble.n	1202 <adc_init+0x456>
    1200:	e5ef      	b.n	de2 <adc_init+0x36>
    1202:	6a39      	ldr	r1, [r7, #32]
    1204:	4291      	cmp	r1, r2
    1206:	dd00      	ble.n	120a <adc_init+0x45e>
    1208:	e5eb      	b.n	de2 <adc_init+0x36>
    120a:	e77b      	b.n	1104 <adc_init+0x358>
    120c:	7afa      	ldrb	r2, [r7, #11]
    120e:	2a00      	cmp	r2, #0
    1210:	d00f      	beq.n	1232 <adc_init+0x486>
    1212:	69fa      	ldr	r2, [r7, #28]
    1214:	2180      	movs	r1, #128	; 0x80
    1216:	0089      	lsls	r1, r1, #2
    1218:	468c      	mov	ip, r1
    121a:	4462      	add	r2, ip
    121c:	491f      	ldr	r1, [pc, #124]	; (129c <adc_init+0x4f0>)
    121e:	2017      	movs	r0, #23
    1220:	428a      	cmp	r2, r1
    1222:	d900      	bls.n	1226 <adc_init+0x47a>
    1224:	e5dd      	b.n	de2 <adc_init+0x36>
    1226:	6a3a      	ldr	r2, [r7, #32]
    1228:	4462      	add	r2, ip
    122a:	491c      	ldr	r1, [pc, #112]	; (129c <adc_init+0x4f0>)
    122c:	428a      	cmp	r2, r1
    122e:	d900      	bls.n	1232 <adc_init+0x486>
    1230:	e5d7      	b.n	de2 <adc_init+0x36>
    1232:	4a1a      	ldr	r2, [pc, #104]	; (129c <adc_init+0x4f0>)
    1234:	2017      	movs	r0, #23
    1236:	69f9      	ldr	r1, [r7, #28]
    1238:	4291      	cmp	r1, r2
    123a:	dd00      	ble.n	123e <adc_init+0x492>
    123c:	e5d1      	b.n	de2 <adc_init+0x36>
    123e:	6a39      	ldr	r1, [r7, #32]
    1240:	4291      	cmp	r1, r2
    1242:	dd00      	ble.n	1246 <adc_init+0x49a>
    1244:	e5cd      	b.n	de2 <adc_init+0x36>
    1246:	e75d      	b.n	1104 <adc_init+0x358>
    1248:	7afa      	ldrb	r2, [r7, #11]
    124a:	2a00      	cmp	r2, #0
    124c:	d00f      	beq.n	126e <adc_init+0x4c2>
    124e:	69fa      	ldr	r2, [r7, #28]
    1250:	2180      	movs	r1, #128	; 0x80
    1252:	0209      	lsls	r1, r1, #8
    1254:	468c      	mov	ip, r1
    1256:	4462      	add	r2, ip
    1258:	4911      	ldr	r1, [pc, #68]	; (12a0 <adc_init+0x4f4>)
    125a:	2017      	movs	r0, #23
    125c:	428a      	cmp	r2, r1
    125e:	d900      	bls.n	1262 <adc_init+0x4b6>
    1260:	e5bf      	b.n	de2 <adc_init+0x36>
    1262:	6a3a      	ldr	r2, [r7, #32]
    1264:	4462      	add	r2, ip
    1266:	490e      	ldr	r1, [pc, #56]	; (12a0 <adc_init+0x4f4>)
    1268:	428a      	cmp	r2, r1
    126a:	d900      	bls.n	126e <adc_init+0x4c2>
    126c:	e5b9      	b.n	de2 <adc_init+0x36>
    126e:	4a0c      	ldr	r2, [pc, #48]	; (12a0 <adc_init+0x4f4>)
    1270:	2017      	movs	r0, #23
    1272:	69f9      	ldr	r1, [r7, #28]
    1274:	4291      	cmp	r1, r2
    1276:	dd00      	ble.n	127a <adc_init+0x4ce>
    1278:	e5b3      	b.n	de2 <adc_init+0x36>
    127a:	6a39      	ldr	r1, [r7, #32]
    127c:	4291      	cmp	r1, r2
    127e:	dd00      	ble.n	1282 <adc_init+0x4d6>
    1280:	e5af      	b.n	de2 <adc_init+0x36>
    1282:	e73f      	b.n	1104 <adc_init+0x358>
    1284:	2017      	movs	r0, #23
    1286:	e5ac      	b.n	de2 <adc_init+0x36>
    1288:	00000fff 	.word	0x00000fff
    128c:	00009070 	.word	0x00009070
    1290:	00009078 	.word	0x00009078
    1294:	00009064 	.word	0x00009064
    1298:	0000906c 	.word	0x0000906c
    129c:	000003ff 	.word	0x000003ff
    12a0:	0000ffff 	.word	0x0000ffff

000012a4 <_adc_interrupt_handler>:
    12a4:	b570      	push	{r4, r5, r6, lr}
    12a6:	0080      	lsls	r0, r0, #2
    12a8:	4b2e      	ldr	r3, [pc, #184]	; (1364 <_adc_interrupt_handler+0xc0>)
    12aa:	58c4      	ldr	r4, [r0, r3]
    12ac:	6823      	ldr	r3, [r4, #0]
    12ae:	799a      	ldrb	r2, [r3, #6]
    12b0:	795d      	ldrb	r5, [r3, #5]
    12b2:	4015      	ands	r5, r2
    12b4:	07ea      	lsls	r2, r5, #31
    12b6:	d52a      	bpl.n	130e <_adc_interrupt_handler+0x6a>
    12b8:	2201      	movs	r2, #1
    12ba:	719a      	strb	r2, [r3, #6]
    12bc:	6962      	ldr	r2, [r4, #20]
    12be:	1c93      	adds	r3, r2, #2
    12c0:	6163      	str	r3, [r4, #20]
    12c2:	6823      	ldr	r3, [r4, #0]
    12c4:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    12c6:	b29b      	uxth	r3, r3
    12c8:	8013      	strh	r3, [r2, #0]
    12ca:	8b23      	ldrh	r3, [r4, #24]
    12cc:	3b01      	subs	r3, #1
    12ce:	b29b      	uxth	r3, r3
    12d0:	8323      	strh	r3, [r4, #24]
    12d2:	2b00      	cmp	r3, #0
    12d4:	d015      	beq.n	1302 <_adc_interrupt_handler+0x5e>
    12d6:	7f63      	ldrb	r3, [r4, #29]
    12d8:	2b00      	cmp	r3, #0
    12da:	d018      	beq.n	130e <_adc_interrupt_handler+0x6a>
    12dc:	6822      	ldr	r2, [r4, #0]
    12de:	79d3      	ldrb	r3, [r2, #7]
    12e0:	b25b      	sxtb	r3, r3
    12e2:	2b00      	cmp	r3, #0
    12e4:	db13      	blt.n	130e <_adc_interrupt_handler+0x6a>
    12e6:	8c13      	ldrh	r3, [r2, #32]
    12e8:	b29b      	uxth	r3, r3
    12ea:	2b00      	cmp	r3, #0
    12ec:	d1fb      	bne.n	12e6 <_adc_interrupt_handler+0x42>
    12ee:	7e13      	ldrb	r3, [r2, #24]
    12f0:	2102      	movs	r1, #2
    12f2:	430b      	orrs	r3, r1
    12f4:	7613      	strb	r3, [r2, #24]
    12f6:	6822      	ldr	r2, [r4, #0]
    12f8:	8c13      	ldrh	r3, [r2, #32]
    12fa:	b29b      	uxth	r3, r3
    12fc:	2b00      	cmp	r3, #0
    12fe:	d1fb      	bne.n	12f8 <_adc_interrupt_handler+0x54>
    1300:	e005      	b.n	130e <_adc_interrupt_handler+0x6a>
    1302:	2301      	movs	r3, #1
    1304:	6822      	ldr	r2, [r4, #0]
    1306:	7113      	strb	r3, [r2, #4]
    1308:	7f23      	ldrb	r3, [r4, #28]
    130a:	2b05      	cmp	r3, #5
    130c:	d016      	beq.n	133c <_adc_interrupt_handler+0x98>
    130e:	076b      	lsls	r3, r5, #29
    1310:	d508      	bpl.n	1324 <_adc_interrupt_handler+0x80>
    1312:	2304      	movs	r3, #4
    1314:	6822      	ldr	r2, [r4, #0]
    1316:	7193      	strb	r3, [r2, #6]
    1318:	7ee3      	ldrb	r3, [r4, #27]
    131a:	079b      	lsls	r3, r3, #30
    131c:	d502      	bpl.n	1324 <_adc_interrupt_handler+0x80>
    131e:	7ea3      	ldrb	r3, [r4, #26]
    1320:	079b      	lsls	r3, r3, #30
    1322:	d417      	bmi.n	1354 <_adc_interrupt_handler+0xb0>
    1324:	07ab      	lsls	r3, r5, #30
    1326:	d508      	bpl.n	133a <_adc_interrupt_handler+0x96>
    1328:	2302      	movs	r3, #2
    132a:	6822      	ldr	r2, [r4, #0]
    132c:	7193      	strb	r3, [r2, #6]
    132e:	7ee3      	ldrb	r3, [r4, #27]
    1330:	075b      	lsls	r3, r3, #29
    1332:	d502      	bpl.n	133a <_adc_interrupt_handler+0x96>
    1334:	7ea3      	ldrb	r3, [r4, #26]
    1336:	075b      	lsls	r3, r3, #29
    1338:	d410      	bmi.n	135c <_adc_interrupt_handler+0xb8>
    133a:	bd70      	pop	{r4, r5, r6, pc}
    133c:	2300      	movs	r3, #0
    133e:	7723      	strb	r3, [r4, #28]
    1340:	7ee3      	ldrb	r3, [r4, #27]
    1342:	07db      	lsls	r3, r3, #31
    1344:	d5e3      	bpl.n	130e <_adc_interrupt_handler+0x6a>
    1346:	7ea3      	ldrb	r3, [r4, #26]
    1348:	07db      	lsls	r3, r3, #31
    134a:	d5e0      	bpl.n	130e <_adc_interrupt_handler+0x6a>
    134c:	0020      	movs	r0, r4
    134e:	68a3      	ldr	r3, [r4, #8]
    1350:	4798      	blx	r3
    1352:	e7dc      	b.n	130e <_adc_interrupt_handler+0x6a>
    1354:	0020      	movs	r0, r4
    1356:	68e3      	ldr	r3, [r4, #12]
    1358:	4798      	blx	r3
    135a:	e7e3      	b.n	1324 <_adc_interrupt_handler+0x80>
    135c:	6923      	ldr	r3, [r4, #16]
    135e:	0020      	movs	r0, r4
    1360:	4798      	blx	r3
    1362:	e7ea      	b.n	133a <_adc_interrupt_handler+0x96>
    1364:	20001ae4 	.word	0x20001ae4

00001368 <ADC0_Handler>:
    1368:	b510      	push	{r4, lr}
    136a:	2000      	movs	r0, #0
    136c:	4b01      	ldr	r3, [pc, #4]	; (1374 <ADC0_Handler+0xc>)
    136e:	4798      	blx	r3
    1370:	bd10      	pop	{r4, pc}
    1372:	46c0      	nop			; (mov r8, r8)
    1374:	000012a5 	.word	0x000012a5

00001378 <ADC1_Handler>:
    1378:	b510      	push	{r4, lr}
    137a:	2001      	movs	r0, #1
    137c:	4b01      	ldr	r3, [pc, #4]	; (1384 <ADC1_Handler+0xc>)
    137e:	4798      	blx	r3
    1380:	bd10      	pop	{r4, pc}
    1382:	46c0      	nop			; (mov r8, r8)
    1384:	000012a5 	.word	0x000012a5

00001388 <adc_register_callback>:
    1388:	1c93      	adds	r3, r2, #2
    138a:	009b      	lsls	r3, r3, #2
    138c:	5019      	str	r1, [r3, r0]
    138e:	2301      	movs	r3, #1
    1390:	4093      	lsls	r3, r2
    1392:	001a      	movs	r2, r3
    1394:	7e83      	ldrb	r3, [r0, #26]
    1396:	4313      	orrs	r3, r2
    1398:	7683      	strb	r3, [r0, #26]
    139a:	4770      	bx	lr

0000139c <adc_read_buffer_job>:
    139c:	b510      	push	{r4, lr}
    139e:	8b03      	ldrh	r3, [r0, #24]
    13a0:	b29b      	uxth	r3, r3
    13a2:	2405      	movs	r4, #5
    13a4:	2b00      	cmp	r3, #0
    13a6:	d001      	beq.n	13ac <adc_read_buffer_job+0x10>
    13a8:	0020      	movs	r0, r4
    13aa:	bd10      	pop	{r4, pc}
    13ac:	7f03      	ldrb	r3, [r0, #28]
    13ae:	2b05      	cmp	r3, #5
    13b0:	d0fa      	beq.n	13a8 <adc_read_buffer_job+0xc>
    13b2:	2305      	movs	r3, #5
    13b4:	7703      	strb	r3, [r0, #28]
    13b6:	8302      	strh	r2, [r0, #24]
    13b8:	6141      	str	r1, [r0, #20]
    13ba:	3b04      	subs	r3, #4
    13bc:	6802      	ldr	r2, [r0, #0]
    13be:	7153      	strb	r3, [r2, #5]
    13c0:	7f43      	ldrb	r3, [r0, #29]
    13c2:	2400      	movs	r4, #0
    13c4:	2b00      	cmp	r3, #0
    13c6:	d0ef      	beq.n	13a8 <adc_read_buffer_job+0xc>
    13c8:	6802      	ldr	r2, [r0, #0]
    13ca:	8c13      	ldrh	r3, [r2, #32]
    13cc:	b29b      	uxth	r3, r3
    13ce:	2b00      	cmp	r3, #0
    13d0:	d1fb      	bne.n	13ca <adc_read_buffer_job+0x2e>
    13d2:	7e13      	ldrb	r3, [r2, #24]
    13d4:	2102      	movs	r1, #2
    13d6:	430b      	orrs	r3, r1
    13d8:	7613      	strb	r3, [r2, #24]
    13da:	6802      	ldr	r2, [r0, #0]
    13dc:	8c13      	ldrh	r3, [r2, #32]
    13de:	b29b      	uxth	r3, r3
    13e0:	2b00      	cmp	r3, #0
    13e2:	d1fb      	bne.n	13dc <adc_read_buffer_job+0x40>
    13e4:	2400      	movs	r4, #0
    13e6:	e7df      	b.n	13a8 <adc_read_buffer_job+0xc>

000013e8 <EIC_Handler>:
    13e8:	b570      	push	{r4, r5, r6, lr}
    13ea:	2200      	movs	r2, #0
    13ec:	4b10      	ldr	r3, [pc, #64]	; (1430 <EIC_Handler+0x48>)
    13ee:	701a      	strb	r2, [r3, #0]
    13f0:	2300      	movs	r3, #0
    13f2:	4910      	ldr	r1, [pc, #64]	; (1434 <EIC_Handler+0x4c>)
    13f4:	251f      	movs	r5, #31
    13f6:	4e10      	ldr	r6, [pc, #64]	; (1438 <EIC_Handler+0x50>)
    13f8:	4c0d      	ldr	r4, [pc, #52]	; (1430 <EIC_Handler+0x48>)
    13fa:	e00a      	b.n	1412 <EIC_Handler+0x2a>
    13fc:	490d      	ldr	r1, [pc, #52]	; (1434 <EIC_Handler+0x4c>)
    13fe:	e008      	b.n	1412 <EIC_Handler+0x2a>
    1400:	7823      	ldrb	r3, [r4, #0]
    1402:	3301      	adds	r3, #1
    1404:	b2db      	uxtb	r3, r3
    1406:	7023      	strb	r3, [r4, #0]
    1408:	2b0f      	cmp	r3, #15
    140a:	d810      	bhi.n	142e <EIC_Handler+0x46>
    140c:	2100      	movs	r1, #0
    140e:	2b1f      	cmp	r3, #31
    1410:	d9f4      	bls.n	13fc <EIC_Handler+0x14>
    1412:	0028      	movs	r0, r5
    1414:	4018      	ands	r0, r3
    1416:	2201      	movs	r2, #1
    1418:	4082      	lsls	r2, r0
    141a:	6948      	ldr	r0, [r1, #20]
    141c:	4210      	tst	r0, r2
    141e:	d0ef      	beq.n	1400 <EIC_Handler+0x18>
    1420:	614a      	str	r2, [r1, #20]
    1422:	009b      	lsls	r3, r3, #2
    1424:	599b      	ldr	r3, [r3, r6]
    1426:	2b00      	cmp	r3, #0
    1428:	d0ea      	beq.n	1400 <EIC_Handler+0x18>
    142a:	4798      	blx	r3
    142c:	e7e8      	b.n	1400 <EIC_Handler+0x18>
    142e:	bd70      	pop	{r4, r5, r6, pc}
    1430:	20001aec 	.word	0x20001aec
    1434:	40002800 	.word	0x40002800
    1438:	20001af0 	.word	0x20001af0

0000143c <_extint_enable>:
    143c:	4a06      	ldr	r2, [pc, #24]	; (1458 <_extint_enable+0x1c>)
    143e:	7813      	ldrb	r3, [r2, #0]
    1440:	2102      	movs	r1, #2
    1442:	430b      	orrs	r3, r1
    1444:	7013      	strb	r3, [r2, #0]
    1446:	2001      	movs	r0, #1
    1448:	6853      	ldr	r3, [r2, #4]
    144a:	4219      	tst	r1, r3
    144c:	d1fc      	bne.n	1448 <_extint_enable+0xc>
    144e:	6853      	ldr	r3, [r2, #4]
    1450:	4218      	tst	r0, r3
    1452:	d1f9      	bne.n	1448 <_extint_enable+0xc>
    1454:	4770      	bx	lr
    1456:	46c0      	nop			; (mov r8, r8)
    1458:	40002800 	.word	0x40002800

0000145c <_system_extint_init>:
    145c:	b500      	push	{lr}
    145e:	b083      	sub	sp, #12
    1460:	4a17      	ldr	r2, [pc, #92]	; (14c0 <_system_extint_init+0x64>)
    1462:	6951      	ldr	r1, [r2, #20]
    1464:	2380      	movs	r3, #128	; 0x80
    1466:	00db      	lsls	r3, r3, #3
    1468:	430b      	orrs	r3, r1
    146a:	6153      	str	r3, [r2, #20]
    146c:	a901      	add	r1, sp, #4
    146e:	2300      	movs	r3, #0
    1470:	700b      	strb	r3, [r1, #0]
    1472:	2002      	movs	r0, #2
    1474:	4b13      	ldr	r3, [pc, #76]	; (14c4 <_system_extint_init+0x68>)
    1476:	4798      	blx	r3
    1478:	2002      	movs	r0, #2
    147a:	4b13      	ldr	r3, [pc, #76]	; (14c8 <_system_extint_init+0x6c>)
    147c:	4798      	blx	r3
    147e:	4a13      	ldr	r2, [pc, #76]	; (14cc <_system_extint_init+0x70>)
    1480:	7813      	ldrb	r3, [r2, #0]
    1482:	2101      	movs	r1, #1
    1484:	430b      	orrs	r3, r1
    1486:	7013      	strb	r3, [r2, #0]
    1488:	3101      	adds	r1, #1
    148a:	2001      	movs	r0, #1
    148c:	6853      	ldr	r3, [r2, #4]
    148e:	4219      	tst	r1, r3
    1490:	d1fc      	bne.n	148c <_system_extint_init+0x30>
    1492:	6853      	ldr	r3, [r2, #4]
    1494:	4218      	tst	r0, r3
    1496:	d1f9      	bne.n	148c <_system_extint_init+0x30>
    1498:	4a0c      	ldr	r2, [pc, #48]	; (14cc <_system_extint_init+0x70>)
    149a:	7813      	ldrb	r3, [r2, #0]
    149c:	2110      	movs	r1, #16
    149e:	438b      	bics	r3, r1
    14a0:	7013      	strb	r3, [r2, #0]
    14a2:	4b0b      	ldr	r3, [pc, #44]	; (14d0 <_system_extint_init+0x74>)
    14a4:	0019      	movs	r1, r3
    14a6:	3140      	adds	r1, #64	; 0x40
    14a8:	2200      	movs	r2, #0
    14aa:	c304      	stmia	r3!, {r2}
    14ac:	428b      	cmp	r3, r1
    14ae:	d1fc      	bne.n	14aa <_system_extint_init+0x4e>
    14b0:	2208      	movs	r2, #8
    14b2:	4b08      	ldr	r3, [pc, #32]	; (14d4 <_system_extint_init+0x78>)
    14b4:	601a      	str	r2, [r3, #0]
    14b6:	4b08      	ldr	r3, [pc, #32]	; (14d8 <_system_extint_init+0x7c>)
    14b8:	4798      	blx	r3
    14ba:	b003      	add	sp, #12
    14bc:	bd00      	pop	{pc}
    14be:	46c0      	nop			; (mov r8, r8)
    14c0:	40000800 	.word	0x40000800
    14c4:	00004da9 	.word	0x00004da9
    14c8:	00004d39 	.word	0x00004d39
    14cc:	40002800 	.word	0x40002800
    14d0:	20001af0 	.word	0x20001af0
    14d4:	e000e100 	.word	0xe000e100
    14d8:	0000143d 	.word	0x0000143d

000014dc <i2c_master_init>:
    14dc:	b5f0      	push	{r4, r5, r6, r7, lr}
    14de:	46d6      	mov	lr, sl
    14e0:	464f      	mov	r7, r9
    14e2:	4646      	mov	r6, r8
    14e4:	b5c0      	push	{r6, r7, lr}
    14e6:	b08a      	sub	sp, #40	; 0x28
    14e8:	0006      	movs	r6, r0
    14ea:	000f      	movs	r7, r1
    14ec:	0014      	movs	r4, r2
    14ee:	6031      	str	r1, [r6, #0]
    14f0:	0008      	movs	r0, r1
    14f2:	4ba2      	ldr	r3, [pc, #648]	; (177c <i2c_master_init+0x2a0>)
    14f4:	4798      	blx	r3
    14f6:	1c45      	adds	r5, r0, #1
    14f8:	2805      	cmp	r0, #5
    14fa:	d01e      	beq.n	153a <i2c_master_init+0x5e>
    14fc:	3013      	adds	r0, #19
    14fe:	4aa0      	ldr	r2, [pc, #640]	; (1780 <i2c_master_init+0x2a4>)
    1500:	69d1      	ldr	r1, [r2, #28]
    1502:	2301      	movs	r3, #1
    1504:	40ab      	lsls	r3, r5
    1506:	430b      	orrs	r3, r1
    1508:	61d3      	str	r3, [r2, #28]
    150a:	a909      	add	r1, sp, #36	; 0x24
    150c:	7b23      	ldrb	r3, [r4, #12]
    150e:	700b      	strb	r3, [r1, #0]
    1510:	b2c5      	uxtb	r5, r0
    1512:	0028      	movs	r0, r5
    1514:	4b9b      	ldr	r3, [pc, #620]	; (1784 <i2c_master_init+0x2a8>)
    1516:	4798      	blx	r3
    1518:	0028      	movs	r0, r5
    151a:	4b9b      	ldr	r3, [pc, #620]	; (1788 <i2c_master_init+0x2ac>)
    151c:	4798      	blx	r3
    151e:	7b20      	ldrb	r0, [r4, #12]
    1520:	2100      	movs	r1, #0
    1522:	4b9a      	ldr	r3, [pc, #616]	; (178c <i2c_master_init+0x2b0>)
    1524:	4798      	blx	r3
    1526:	683b      	ldr	r3, [r7, #0]
    1528:	201c      	movs	r0, #28
    152a:	079b      	lsls	r3, r3, #30
    152c:	d507      	bpl.n	153e <i2c_master_init+0x62>
    152e:	b00a      	add	sp, #40	; 0x28
    1530:	bc1c      	pop	{r2, r3, r4}
    1532:	4690      	mov	r8, r2
    1534:	4699      	mov	r9, r3
    1536:	46a2      	mov	sl, r4
    1538:	bdf0      	pop	{r4, r5, r6, r7, pc}
    153a:	2019      	movs	r0, #25
    153c:	e7df      	b.n	14fe <i2c_master_init+0x22>
    153e:	683b      	ldr	r3, [r7, #0]
    1540:	3817      	subs	r0, #23
    1542:	07db      	lsls	r3, r3, #31
    1544:	d4f3      	bmi.n	152e <i2c_master_init+0x52>
    1546:	6830      	ldr	r0, [r6, #0]
    1548:	4b8c      	ldr	r3, [pc, #560]	; (177c <i2c_master_init+0x2a0>)
    154a:	4699      	mov	r9, r3
    154c:	4798      	blx	r3
    154e:	0005      	movs	r5, r0
    1550:	498f      	ldr	r1, [pc, #572]	; (1790 <i2c_master_init+0x2b4>)
    1552:	4b90      	ldr	r3, [pc, #576]	; (1794 <i2c_master_init+0x2b8>)
    1554:	4798      	blx	r3
    1556:	00ad      	lsls	r5, r5, #2
    1558:	4b8f      	ldr	r3, [pc, #572]	; (1798 <i2c_master_init+0x2bc>)
    155a:	50ee      	str	r6, [r5, r3]
    155c:	2300      	movs	r3, #0
    155e:	7633      	strb	r3, [r6, #24]
    1560:	7673      	strb	r3, [r6, #25]
    1562:	2500      	movs	r5, #0
    1564:	8373      	strh	r3, [r6, #26]
    1566:	83b3      	strh	r3, [r6, #28]
    1568:	2225      	movs	r2, #37	; 0x25
    156a:	54b5      	strb	r5, [r6, r2]
    156c:	6233      	str	r3, [r6, #32]
    156e:	3314      	adds	r3, #20
    1570:	603b      	str	r3, [r7, #0]
    1572:	6833      	ldr	r3, [r6, #0]
    1574:	4698      	mov	r8, r3
    1576:	0018      	movs	r0, r3
    1578:	47c8      	blx	r9
    157a:	4681      	mov	r9, r0
    157c:	2380      	movs	r3, #128	; 0x80
    157e:	aa08      	add	r2, sp, #32
    1580:	7013      	strb	r3, [r2, #0]
    1582:	7055      	strb	r5, [r2, #1]
    1584:	2301      	movs	r3, #1
    1586:	7093      	strb	r3, [r2, #2]
    1588:	70d5      	strb	r5, [r2, #3]
    158a:	69e0      	ldr	r0, [r4, #28]
    158c:	6a27      	ldr	r7, [r4, #32]
    158e:	2800      	cmp	r0, #0
    1590:	d100      	bne.n	1594 <i2c_master_init+0xb8>
    1592:	e0af      	b.n	16f4 <i2c_master_init+0x218>
    1594:	ab08      	add	r3, sp, #32
    1596:	7018      	strb	r0, [r3, #0]
    1598:	2302      	movs	r3, #2
    159a:	aa08      	add	r2, sp, #32
    159c:	7053      	strb	r3, [r2, #1]
    159e:	0c00      	lsrs	r0, r0, #16
    15a0:	b2c0      	uxtb	r0, r0
    15a2:	0011      	movs	r1, r2
    15a4:	4b7d      	ldr	r3, [pc, #500]	; (179c <i2c_master_init+0x2c0>)
    15a6:	4798      	blx	r3
    15a8:	2f00      	cmp	r7, #0
    15aa:	d100      	bne.n	15ae <i2c_master_init+0xd2>
    15ac:	e0a7      	b.n	16fe <i2c_master_init+0x222>
    15ae:	ab08      	add	r3, sp, #32
    15b0:	701f      	strb	r7, [r3, #0]
    15b2:	2302      	movs	r3, #2
    15b4:	aa08      	add	r2, sp, #32
    15b6:	7053      	strb	r3, [r2, #1]
    15b8:	0c3f      	lsrs	r7, r7, #16
    15ba:	b2f8      	uxtb	r0, r7
    15bc:	0011      	movs	r1, r2
    15be:	4b77      	ldr	r3, [pc, #476]	; (179c <i2c_master_init+0x2c0>)
    15c0:	4798      	blx	r3
    15c2:	8aa3      	ldrh	r3, [r4, #20]
    15c4:	80f3      	strh	r3, [r6, #6]
    15c6:	8ae3      	ldrh	r3, [r4, #22]
    15c8:	8133      	strh	r3, [r6, #8]
    15ca:	7e23      	ldrb	r3, [r4, #24]
    15cc:	2280      	movs	r2, #128	; 0x80
    15ce:	2b00      	cmp	r3, #0
    15d0:	d104      	bne.n	15dc <i2c_master_init+0x100>
    15d2:	4b73      	ldr	r3, [pc, #460]	; (17a0 <i2c_master_init+0x2c4>)
    15d4:	789b      	ldrb	r3, [r3, #2]
    15d6:	079b      	lsls	r3, r3, #30
    15d8:	0fdb      	lsrs	r3, r3, #31
    15da:	01da      	lsls	r2, r3, #7
    15dc:	68a1      	ldr	r1, [r4, #8]
    15de:	6923      	ldr	r3, [r4, #16]
    15e0:	430b      	orrs	r3, r1
    15e2:	4313      	orrs	r3, r2
    15e4:	2224      	movs	r2, #36	; 0x24
    15e6:	5ca2      	ldrb	r2, [r4, r2]
    15e8:	2a00      	cmp	r2, #0
    15ea:	d002      	beq.n	15f2 <i2c_master_init+0x116>
    15ec:	2280      	movs	r2, #128	; 0x80
    15ee:	05d2      	lsls	r2, r2, #23
    15f0:	4313      	orrs	r3, r2
    15f2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    15f4:	4313      	orrs	r3, r2
    15f6:	222c      	movs	r2, #44	; 0x2c
    15f8:	5ca2      	ldrb	r2, [r4, r2]
    15fa:	2a00      	cmp	r2, #0
    15fc:	d103      	bne.n	1606 <i2c_master_init+0x12a>
    15fe:	2280      	movs	r2, #128	; 0x80
    1600:	0492      	lsls	r2, r2, #18
    1602:	4291      	cmp	r1, r2
    1604:	d102      	bne.n	160c <i2c_master_init+0x130>
    1606:	2280      	movs	r2, #128	; 0x80
    1608:	0512      	lsls	r2, r2, #20
    160a:	4313      	orrs	r3, r2
    160c:	222d      	movs	r2, #45	; 0x2d
    160e:	5ca2      	ldrb	r2, [r4, r2]
    1610:	2a00      	cmp	r2, #0
    1612:	d002      	beq.n	161a <i2c_master_init+0x13e>
    1614:	2280      	movs	r2, #128	; 0x80
    1616:	0412      	lsls	r2, r2, #16
    1618:	4313      	orrs	r3, r2
    161a:	222e      	movs	r2, #46	; 0x2e
    161c:	5ca2      	ldrb	r2, [r4, r2]
    161e:	2a00      	cmp	r2, #0
    1620:	d002      	beq.n	1628 <i2c_master_init+0x14c>
    1622:	2280      	movs	r2, #128	; 0x80
    1624:	03d2      	lsls	r2, r2, #15
    1626:	4313      	orrs	r3, r2
    1628:	4642      	mov	r2, r8
    162a:	6812      	ldr	r2, [r2, #0]
    162c:	4313      	orrs	r3, r2
    162e:	4642      	mov	r2, r8
    1630:	6013      	str	r3, [r2, #0]
    1632:	2380      	movs	r3, #128	; 0x80
    1634:	005b      	lsls	r3, r3, #1
    1636:	6053      	str	r3, [r2, #4]
    1638:	464d      	mov	r5, r9
    163a:	3513      	adds	r5, #19
    163c:	b2e8      	uxtb	r0, r5
    163e:	4b59      	ldr	r3, [pc, #356]	; (17a4 <i2c_master_init+0x2c8>)
    1640:	4798      	blx	r3
    1642:	9007      	str	r0, [sp, #28]
    1644:	23fa      	movs	r3, #250	; 0xfa
    1646:	009b      	lsls	r3, r3, #2
    1648:	6822      	ldr	r2, [r4, #0]
    164a:	435a      	muls	r2, r3
    164c:	4691      	mov	r9, r2
    164e:	6863      	ldr	r3, [r4, #4]
    1650:	469a      	mov	sl, r3
    1652:	4d55      	ldr	r5, [pc, #340]	; (17a8 <i2c_master_init+0x2cc>)
    1654:	47a8      	blx	r5
    1656:	9000      	str	r0, [sp, #0]
    1658:	9101      	str	r1, [sp, #4]
    165a:	464b      	mov	r3, r9
    165c:	0058      	lsls	r0, r3, #1
    165e:	47a8      	blx	r5
    1660:	9002      	str	r0, [sp, #8]
    1662:	9103      	str	r1, [sp, #12]
    1664:	8e20      	ldrh	r0, [r4, #48]	; 0x30
    1666:	47a8      	blx	r5
    1668:	9004      	str	r0, [sp, #16]
    166a:	9105      	str	r1, [sp, #20]
    166c:	4f4f      	ldr	r7, [pc, #316]	; (17ac <i2c_master_init+0x2d0>)
    166e:	4a50      	ldr	r2, [pc, #320]	; (17b0 <i2c_master_init+0x2d4>)
    1670:	4b50      	ldr	r3, [pc, #320]	; (17b4 <i2c_master_init+0x2d8>)
    1672:	9800      	ldr	r0, [sp, #0]
    1674:	9901      	ldr	r1, [sp, #4]
    1676:	47b8      	blx	r7
    1678:	0002      	movs	r2, r0
    167a:	000b      	movs	r3, r1
    167c:	9804      	ldr	r0, [sp, #16]
    167e:	9905      	ldr	r1, [sp, #20]
    1680:	47b8      	blx	r7
    1682:	4e4d      	ldr	r6, [pc, #308]	; (17b8 <i2c_master_init+0x2dc>)
    1684:	2200      	movs	r2, #0
    1686:	4b4d      	ldr	r3, [pc, #308]	; (17bc <i2c_master_init+0x2e0>)
    1688:	47b0      	blx	r6
    168a:	9004      	str	r0, [sp, #16]
    168c:	9105      	str	r1, [sp, #20]
    168e:	4648      	mov	r0, r9
    1690:	47a8      	blx	r5
    1692:	0002      	movs	r2, r0
    1694:	000b      	movs	r3, r1
    1696:	9804      	ldr	r0, [sp, #16]
    1698:	9905      	ldr	r1, [sp, #20]
    169a:	47b8      	blx	r7
    169c:	0002      	movs	r2, r0
    169e:	000b      	movs	r3, r1
    16a0:	4d47      	ldr	r5, [pc, #284]	; (17c0 <i2c_master_init+0x2e4>)
    16a2:	9800      	ldr	r0, [sp, #0]
    16a4:	9901      	ldr	r1, [sp, #4]
    16a6:	47a8      	blx	r5
    16a8:	9a02      	ldr	r2, [sp, #8]
    16aa:	9b03      	ldr	r3, [sp, #12]
    16ac:	47b0      	blx	r6
    16ae:	2200      	movs	r2, #0
    16b0:	4b44      	ldr	r3, [pc, #272]	; (17c4 <i2c_master_init+0x2e8>)
    16b2:	47a8      	blx	r5
    16b4:	9a02      	ldr	r2, [sp, #8]
    16b6:	9b03      	ldr	r3, [sp, #12]
    16b8:	4d43      	ldr	r5, [pc, #268]	; (17c8 <i2c_master_init+0x2ec>)
    16ba:	47a8      	blx	r5
    16bc:	4b43      	ldr	r3, [pc, #268]	; (17cc <i2c_master_init+0x2f0>)
    16be:	4798      	blx	r3
    16c0:	0005      	movs	r5, r0
    16c2:	2380      	movs	r3, #128	; 0x80
    16c4:	049b      	lsls	r3, r3, #18
    16c6:	68a2      	ldr	r2, [r4, #8]
    16c8:	429a      	cmp	r2, r3
    16ca:	d01e      	beq.n	170a <i2c_master_init+0x22e>
    16cc:	0003      	movs	r3, r0
    16ce:	2040      	movs	r0, #64	; 0x40
    16d0:	2dff      	cmp	r5, #255	; 0xff
    16d2:	d900      	bls.n	16d6 <i2c_master_init+0x1fa>
    16d4:	e72b      	b.n	152e <i2c_master_init+0x52>
    16d6:	2400      	movs	r4, #0
    16d8:	2000      	movs	r0, #0
    16da:	25ff      	movs	r5, #255	; 0xff
    16dc:	401d      	ands	r5, r3
    16de:	0624      	lsls	r4, r4, #24
    16e0:	4325      	orrs	r5, r4
    16e2:	0400      	lsls	r0, r0, #16
    16e4:	23ff      	movs	r3, #255	; 0xff
    16e6:	041b      	lsls	r3, r3, #16
    16e8:	4018      	ands	r0, r3
    16ea:	4305      	orrs	r5, r0
    16ec:	4643      	mov	r3, r8
    16ee:	60dd      	str	r5, [r3, #12]
    16f0:	2000      	movs	r0, #0
    16f2:	e71c      	b.n	152e <i2c_master_init+0x52>
    16f4:	2100      	movs	r1, #0
    16f6:	4640      	mov	r0, r8
    16f8:	4b35      	ldr	r3, [pc, #212]	; (17d0 <i2c_master_init+0x2f4>)
    16fa:	4798      	blx	r3
    16fc:	e74a      	b.n	1594 <i2c_master_init+0xb8>
    16fe:	2101      	movs	r1, #1
    1700:	4640      	mov	r0, r8
    1702:	4b33      	ldr	r3, [pc, #204]	; (17d0 <i2c_master_init+0x2f4>)
    1704:	4798      	blx	r3
    1706:	0007      	movs	r7, r0
    1708:	e751      	b.n	15ae <i2c_master_init+0xd2>
    170a:	26fa      	movs	r6, #250	; 0xfa
    170c:	00b6      	lsls	r6, r6, #2
    170e:	4653      	mov	r3, sl
    1710:	435e      	muls	r6, r3
    1712:	9800      	ldr	r0, [sp, #0]
    1714:	9901      	ldr	r1, [sp, #4]
    1716:	0002      	movs	r2, r0
    1718:	000b      	movs	r3, r1
    171a:	4c27      	ldr	r4, [pc, #156]	; (17b8 <i2c_master_init+0x2dc>)
    171c:	47a0      	blx	r4
    171e:	9000      	str	r0, [sp, #0]
    1720:	9101      	str	r1, [sp, #4]
    1722:	0030      	movs	r0, r6
    1724:	4b20      	ldr	r3, [pc, #128]	; (17a8 <i2c_master_init+0x2cc>)
    1726:	4798      	blx	r3
    1728:	2200      	movs	r2, #0
    172a:	4b2a      	ldr	r3, [pc, #168]	; (17d4 <i2c_master_init+0x2f8>)
    172c:	47b8      	blx	r7
    172e:	0002      	movs	r2, r0
    1730:	000b      	movs	r3, r1
    1732:	9800      	ldr	r0, [sp, #0]
    1734:	9901      	ldr	r1, [sp, #4]
    1736:	4c24      	ldr	r4, [pc, #144]	; (17c8 <i2c_master_init+0x2ec>)
    1738:	47a0      	blx	r4
    173a:	2200      	movs	r2, #0
    173c:	4b21      	ldr	r3, [pc, #132]	; (17c4 <i2c_master_init+0x2e8>)
    173e:	4c20      	ldr	r4, [pc, #128]	; (17c0 <i2c_master_init+0x2e4>)
    1740:	47a0      	blx	r4
    1742:	4b22      	ldr	r3, [pc, #136]	; (17cc <i2c_master_init+0x2f0>)
    1744:	4798      	blx	r3
    1746:	1e04      	subs	r4, r0, #0
    1748:	d00c      	beq.n	1764 <i2c_master_init+0x288>
    174a:	0031      	movs	r1, r6
    174c:	9807      	ldr	r0, [sp, #28]
    174e:	4b22      	ldr	r3, [pc, #136]	; (17d8 <i2c_master_init+0x2fc>)
    1750:	4798      	blx	r3
    1752:	3802      	subs	r0, #2
    1754:	1b00      	subs	r0, r0, r4
    1756:	002b      	movs	r3, r5
    1758:	2dff      	cmp	r5, #255	; 0xff
    175a:	d80c      	bhi.n	1776 <i2c_master_init+0x29a>
    175c:	28ff      	cmp	r0, #255	; 0xff
    175e:	d9bc      	bls.n	16da <i2c_master_init+0x1fe>
    1760:	2040      	movs	r0, #64	; 0x40
    1762:	e6e4      	b.n	152e <i2c_master_init+0x52>
    1764:	0071      	lsls	r1, r6, #1
    1766:	1e48      	subs	r0, r1, #1
    1768:	9b07      	ldr	r3, [sp, #28]
    176a:	469c      	mov	ip, r3
    176c:	4460      	add	r0, ip
    176e:	4b1a      	ldr	r3, [pc, #104]	; (17d8 <i2c_master_init+0x2fc>)
    1770:	4798      	blx	r3
    1772:	3801      	subs	r0, #1
    1774:	e7ef      	b.n	1756 <i2c_master_init+0x27a>
    1776:	2040      	movs	r0, #64	; 0x40
    1778:	e6d9      	b.n	152e <i2c_master_init+0x52>
    177a:	46c0      	nop			; (mov r8, r8)
    177c:	000026d9 	.word	0x000026d9
    1780:	40000800 	.word	0x40000800
    1784:	00004da9 	.word	0x00004da9
    1788:	00004d39 	.word	0x00004d39
    178c:	00002511 	.word	0x00002511
    1790:	00001ab9 	.word	0x00001ab9
    1794:	00003385 	.word	0x00003385
    1798:	20001f90 	.word	0x20001f90
    179c:	00004ea5 	.word	0x00004ea5
    17a0:	41002000 	.word	0x41002000
    17a4:	00004dcd 	.word	0x00004dcd
    17a8:	00008379 	.word	0x00008379
    17ac:	000077e5 	.word	0x000077e5
    17b0:	e826d695 	.word	0xe826d695
    17b4:	3e112e0b 	.word	0x3e112e0b
    17b8:	00006b5d 	.word	0x00006b5d
    17bc:	40240000 	.word	0x40240000
    17c0:	00007ce5 	.word	0x00007ce5
    17c4:	3ff00000 	.word	0x3ff00000
    17c8:	0000717d 	.word	0x0000717d
    17cc:	00008311 	.word	0x00008311
    17d0:	0000255d 	.word	0x0000255d
    17d4:	40080000 	.word	0x40080000
    17d8:	00005f59 	.word	0x00005f59

000017dc <_i2c_master_address_response>:
    17dc:	6803      	ldr	r3, [r0, #0]
    17de:	7e1a      	ldrb	r2, [r3, #24]
    17e0:	0792      	lsls	r2, r2, #30
    17e2:	d507      	bpl.n	17f4 <_i2c_master_address_response+0x18>
    17e4:	2202      	movs	r2, #2
    17e6:	761a      	strb	r2, [r3, #24]
    17e8:	8b5b      	ldrh	r3, [r3, #26]
    17ea:	079b      	lsls	r3, r3, #30
    17ec:	2041      	movs	r0, #65	; 0x41
    17ee:	17db      	asrs	r3, r3, #31
    17f0:	4018      	ands	r0, r3
    17f2:	4770      	bx	lr
    17f4:	8b5a      	ldrh	r2, [r3, #26]
    17f6:	0752      	lsls	r2, r2, #29
    17f8:	d506      	bpl.n	1808 <_i2c_master_address_response+0x2c>
    17fa:	6859      	ldr	r1, [r3, #4]
    17fc:	22c0      	movs	r2, #192	; 0xc0
    17fe:	0292      	lsls	r2, r2, #10
    1800:	430a      	orrs	r2, r1
    1802:	605a      	str	r2, [r3, #4]
    1804:	2018      	movs	r0, #24
    1806:	e7f4      	b.n	17f2 <_i2c_master_address_response+0x16>
    1808:	2000      	movs	r0, #0
    180a:	e7f2      	b.n	17f2 <_i2c_master_address_response+0x16>

0000180c <_i2c_master_wait_for_bus>:
    180c:	b530      	push	{r4, r5, lr}
    180e:	6802      	ldr	r2, [r0, #0]
    1810:	2300      	movs	r3, #0
    1812:	2401      	movs	r4, #1
    1814:	2502      	movs	r5, #2
    1816:	7e11      	ldrb	r1, [r2, #24]
    1818:	4221      	tst	r1, r4
    181a:	d10b      	bne.n	1834 <_i2c_master_wait_for_bus+0x28>
    181c:	7e11      	ldrb	r1, [r2, #24]
    181e:	4229      	tst	r1, r5
    1820:	d106      	bne.n	1830 <_i2c_master_wait_for_bus+0x24>
    1822:	3301      	adds	r3, #1
    1824:	b29b      	uxth	r3, r3
    1826:	8901      	ldrh	r1, [r0, #8]
    1828:	4299      	cmp	r1, r3
    182a:	d8f4      	bhi.n	1816 <_i2c_master_wait_for_bus+0xa>
    182c:	2012      	movs	r0, #18
    182e:	e002      	b.n	1836 <_i2c_master_wait_for_bus+0x2a>
    1830:	2000      	movs	r0, #0
    1832:	e000      	b.n	1836 <_i2c_master_wait_for_bus+0x2a>
    1834:	2000      	movs	r0, #0
    1836:	bd30      	pop	{r4, r5, pc}

00001838 <_i2c_master_send_hs_master_code>:
    1838:	b510      	push	{r4, lr}
    183a:	6804      	ldr	r4, [r0, #0]
    183c:	6862      	ldr	r2, [r4, #4]
    183e:	2380      	movs	r3, #128	; 0x80
    1840:	02db      	lsls	r3, r3, #11
    1842:	4313      	orrs	r3, r2
    1844:	6063      	str	r3, [r4, #4]
    1846:	6261      	str	r1, [r4, #36]	; 0x24
    1848:	4b02      	ldr	r3, [pc, #8]	; (1854 <_i2c_master_send_hs_master_code+0x1c>)
    184a:	4798      	blx	r3
    184c:	2301      	movs	r3, #1
    184e:	7623      	strb	r3, [r4, #24]
    1850:	bd10      	pop	{r4, pc}
    1852:	46c0      	nop			; (mov r8, r8)
    1854:	0000180d 	.word	0x0000180d

00001858 <_i2c_master_wait_for_sync>:
    1858:	6801      	ldr	r1, [r0, #0]
    185a:	2207      	movs	r2, #7
    185c:	69cb      	ldr	r3, [r1, #28]
    185e:	421a      	tst	r2, r3
    1860:	d1fc      	bne.n	185c <_i2c_master_wait_for_sync+0x4>
    1862:	4770      	bx	lr

00001864 <_i2c_master_read>:
    1864:	b570      	push	{r4, r5, r6, lr}
    1866:	0004      	movs	r4, r0
    1868:	6806      	ldr	r6, [r0, #0]
    186a:	6832      	ldr	r2, [r6, #0]
    186c:	8b45      	ldrh	r5, [r0, #26]
    186e:	8b83      	ldrh	r3, [r0, #28]
    1870:	1aed      	subs	r5, r5, r3
    1872:	b2ad      	uxth	r5, r5
    1874:	8b83      	ldrh	r3, [r0, #28]
    1876:	3b01      	subs	r3, #1
    1878:	b29b      	uxth	r3, r3
    187a:	8383      	strh	r3, [r0, #28]
    187c:	0113      	lsls	r3, r2, #4
    187e:	d51d      	bpl.n	18bc <_i2c_master_read+0x58>
    1880:	7ac3      	ldrb	r3, [r0, #11]
    1882:	2b00      	cmp	r3, #0
    1884:	d003      	beq.n	188e <_i2c_master_read+0x2a>
    1886:	8b83      	ldrh	r3, [r0, #28]
    1888:	b29b      	uxth	r3, r3
    188a:	2b01      	cmp	r3, #1
    188c:	d010      	beq.n	18b0 <_i2c_master_read+0x4c>
    188e:	8ba3      	ldrh	r3, [r4, #28]
    1890:	b29b      	uxth	r3, r3
    1892:	2b00      	cmp	r3, #0
    1894:	d102      	bne.n	189c <_i2c_master_read+0x38>
    1896:	7aa3      	ldrb	r3, [r4, #10]
    1898:	2b00      	cmp	r3, #0
    189a:	d11c      	bne.n	18d6 <_i2c_master_read+0x72>
    189c:	0020      	movs	r0, r4
    189e:	4b12      	ldr	r3, [pc, #72]	; (18e8 <_i2c_master_read+0x84>)
    18a0:	4798      	blx	r3
    18a2:	6a23      	ldr	r3, [r4, #32]
    18a4:	195d      	adds	r5, r3, r5
    18a6:	2328      	movs	r3, #40	; 0x28
    18a8:	5cf3      	ldrb	r3, [r6, r3]
    18aa:	b2db      	uxtb	r3, r3
    18ac:	702b      	strb	r3, [r5, #0]
    18ae:	bd70      	pop	{r4, r5, r6, pc}
    18b0:	6872      	ldr	r2, [r6, #4]
    18b2:	2380      	movs	r3, #128	; 0x80
    18b4:	02db      	lsls	r3, r3, #11
    18b6:	4313      	orrs	r3, r2
    18b8:	6073      	str	r3, [r6, #4]
    18ba:	e7e8      	b.n	188e <_i2c_master_read+0x2a>
    18bc:	7ac3      	ldrb	r3, [r0, #11]
    18be:	2b00      	cmp	r3, #0
    18c0:	d0e5      	beq.n	188e <_i2c_master_read+0x2a>
    18c2:	8b83      	ldrh	r3, [r0, #28]
    18c4:	b29b      	uxth	r3, r3
    18c6:	2b00      	cmp	r3, #0
    18c8:	d1e1      	bne.n	188e <_i2c_master_read+0x2a>
    18ca:	6872      	ldr	r2, [r6, #4]
    18cc:	2380      	movs	r3, #128	; 0x80
    18ce:	02db      	lsls	r3, r3, #11
    18d0:	4313      	orrs	r3, r2
    18d2:	6073      	str	r3, [r6, #4]
    18d4:	e7db      	b.n	188e <_i2c_master_read+0x2a>
    18d6:	0020      	movs	r0, r4
    18d8:	4b03      	ldr	r3, [pc, #12]	; (18e8 <_i2c_master_read+0x84>)
    18da:	4798      	blx	r3
    18dc:	6872      	ldr	r2, [r6, #4]
    18de:	23c0      	movs	r3, #192	; 0xc0
    18e0:	029b      	lsls	r3, r3, #10
    18e2:	4313      	orrs	r3, r2
    18e4:	6073      	str	r3, [r6, #4]
    18e6:	e7d9      	b.n	189c <_i2c_master_read+0x38>
    18e8:	00001859 	.word	0x00001859

000018ec <_i2c_master_write>:
    18ec:	b570      	push	{r4, r5, r6, lr}
    18ee:	0004      	movs	r4, r0
    18f0:	6805      	ldr	r5, [r0, #0]
    18f2:	8b6b      	ldrh	r3, [r5, #26]
    18f4:	075b      	lsls	r3, r3, #29
    18f6:	d503      	bpl.n	1900 <_i2c_master_write+0x14>
    18f8:	221e      	movs	r2, #30
    18fa:	2325      	movs	r3, #37	; 0x25
    18fc:	54c2      	strb	r2, [r0, r3]
    18fe:	bd70      	pop	{r4, r5, r6, pc}
    1900:	8b46      	ldrh	r6, [r0, #26]
    1902:	8b83      	ldrh	r3, [r0, #28]
    1904:	1af6      	subs	r6, r6, r3
    1906:	b2b6      	uxth	r6, r6
    1908:	8b83      	ldrh	r3, [r0, #28]
    190a:	3b01      	subs	r3, #1
    190c:	b29b      	uxth	r3, r3
    190e:	8383      	strh	r3, [r0, #28]
    1910:	4b04      	ldr	r3, [pc, #16]	; (1924 <_i2c_master_write+0x38>)
    1912:	4798      	blx	r3
    1914:	6a23      	ldr	r3, [r4, #32]
    1916:	199e      	adds	r6, r3, r6
    1918:	7833      	ldrb	r3, [r6, #0]
    191a:	b2db      	uxtb	r3, r3
    191c:	2228      	movs	r2, #40	; 0x28
    191e:	54ab      	strb	r3, [r5, r2]
    1920:	e7ed      	b.n	18fe <_i2c_master_write+0x12>
    1922:	46c0      	nop			; (mov r8, r8)
    1924:	00001859 	.word	0x00001859

00001928 <_i2c_master_write_packet>:
    1928:	b570      	push	{r4, r5, r6, lr}
    192a:	0005      	movs	r5, r0
    192c:	000c      	movs	r4, r1
    192e:	6806      	ldr	r6, [r0, #0]
    1930:	7a4b      	ldrb	r3, [r1, #9]
    1932:	2b00      	cmp	r3, #0
    1934:	d11a      	bne.n	196c <_i2c_master_write_packet+0x44>
    1936:	6873      	ldr	r3, [r6, #4]
    1938:	4a13      	ldr	r2, [pc, #76]	; (1988 <_i2c_master_write_packet+0x60>)
    193a:	4013      	ands	r3, r2
    193c:	6073      	str	r3, [r6, #4]
    193e:	6863      	ldr	r3, [r4, #4]
    1940:	622b      	str	r3, [r5, #32]
    1942:	8863      	ldrh	r3, [r4, #2]
    1944:	83ab      	strh	r3, [r5, #28]
    1946:	2200      	movs	r2, #0
    1948:	2324      	movs	r3, #36	; 0x24
    194a:	54ea      	strb	r2, [r5, r3]
    194c:	3205      	adds	r2, #5
    194e:	3301      	adds	r3, #1
    1950:	54ea      	strb	r2, [r5, r3]
    1952:	3b22      	subs	r3, #34	; 0x22
    1954:	75b3      	strb	r3, [r6, #22]
    1956:	7a23      	ldrb	r3, [r4, #8]
    1958:	2b00      	cmp	r3, #0
    195a:	d10b      	bne.n	1974 <_i2c_master_write_packet+0x4c>
    195c:	8823      	ldrh	r3, [r4, #0]
    195e:	005b      	lsls	r3, r3, #1
    1960:	7a62      	ldrb	r2, [r4, #9]
    1962:	0392      	lsls	r2, r2, #14
    1964:	4313      	orrs	r3, r2
    1966:	6273      	str	r3, [r6, #36]	; 0x24
    1968:	2000      	movs	r0, #0
    196a:	bd70      	pop	{r4, r5, r6, pc}
    196c:	7a89      	ldrb	r1, [r1, #10]
    196e:	4b07      	ldr	r3, [pc, #28]	; (198c <_i2c_master_write_packet+0x64>)
    1970:	4798      	blx	r3
    1972:	e7e0      	b.n	1936 <_i2c_master_write_packet+0xe>
    1974:	8823      	ldrh	r3, [r4, #0]
    1976:	005b      	lsls	r3, r3, #1
    1978:	7a62      	ldrb	r2, [r4, #9]
    197a:	0392      	lsls	r2, r2, #14
    197c:	4313      	orrs	r3, r2
    197e:	2280      	movs	r2, #128	; 0x80
    1980:	0212      	lsls	r2, r2, #8
    1982:	4313      	orrs	r3, r2
    1984:	6273      	str	r3, [r6, #36]	; 0x24
    1986:	e7ef      	b.n	1968 <_i2c_master_write_packet+0x40>
    1988:	fffbffff 	.word	0xfffbffff
    198c:	00001839 	.word	0x00001839

00001990 <_i2c_master_read_packet>:
    1990:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1992:	0005      	movs	r5, r0
    1994:	000c      	movs	r4, r1
    1996:	6806      	ldr	r6, [r0, #0]
    1998:	684b      	ldr	r3, [r1, #4]
    199a:	6203      	str	r3, [r0, #32]
    199c:	884b      	ldrh	r3, [r1, #2]
    199e:	8383      	strh	r3, [r0, #28]
    19a0:	2201      	movs	r2, #1
    19a2:	2324      	movs	r3, #36	; 0x24
    19a4:	54c2      	strb	r2, [r0, r3]
    19a6:	3204      	adds	r2, #4
    19a8:	3301      	adds	r3, #1
    19aa:	54c2      	strb	r2, [r0, r3]
    19ac:	6837      	ldr	r7, [r6, #0]
    19ae:	013f      	lsls	r7, r7, #4
    19b0:	0fff      	lsrs	r7, r7, #31
    19b2:	7a4b      	ldrb	r3, [r1, #9]
    19b4:	2b00      	cmp	r3, #0
    19b6:	d117      	bne.n	19e8 <_i2c_master_read_packet+0x58>
    19b8:	2f00      	cmp	r7, #0
    19ba:	d002      	beq.n	19c2 <_i2c_master_read_packet+0x32>
    19bc:	8863      	ldrh	r3, [r4, #2]
    19be:	2b01      	cmp	r3, #1
    19c0:	d016      	beq.n	19f0 <_i2c_master_read_packet+0x60>
    19c2:	6873      	ldr	r3, [r6, #4]
    19c4:	4a20      	ldr	r2, [pc, #128]	; (1a48 <_i2c_master_read_packet+0xb8>)
    19c6:	4013      	ands	r3, r2
    19c8:	6073      	str	r3, [r6, #4]
    19ca:	7a23      	ldrb	r3, [r4, #8]
    19cc:	2b00      	cmp	r3, #0
    19ce:	d115      	bne.n	19fc <_i2c_master_read_packet+0x6c>
    19d0:	2303      	movs	r3, #3
    19d2:	75b3      	strb	r3, [r6, #22]
    19d4:	8823      	ldrh	r3, [r4, #0]
    19d6:	005b      	lsls	r3, r3, #1
    19d8:	7a62      	ldrb	r2, [r4, #9]
    19da:	0392      	lsls	r2, r2, #14
    19dc:	4313      	orrs	r3, r2
    19de:	2201      	movs	r2, #1
    19e0:	4313      	orrs	r3, r2
    19e2:	6273      	str	r3, [r6, #36]	; 0x24
    19e4:	2000      	movs	r0, #0
    19e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    19e8:	7a89      	ldrb	r1, [r1, #10]
    19ea:	4b18      	ldr	r3, [pc, #96]	; (1a4c <_i2c_master_read_packet+0xbc>)
    19ec:	4798      	blx	r3
    19ee:	e7e3      	b.n	19b8 <_i2c_master_read_packet+0x28>
    19f0:	6872      	ldr	r2, [r6, #4]
    19f2:	2380      	movs	r3, #128	; 0x80
    19f4:	02db      	lsls	r3, r3, #11
    19f6:	4313      	orrs	r3, r2
    19f8:	6073      	str	r3, [r6, #4]
    19fa:	e7e6      	b.n	19ca <_i2c_master_read_packet+0x3a>
    19fc:	8823      	ldrh	r3, [r4, #0]
    19fe:	005b      	lsls	r3, r3, #1
    1a00:	7a62      	ldrb	r2, [r4, #9]
    1a02:	0392      	lsls	r2, r2, #14
    1a04:	4313      	orrs	r3, r2
    1a06:	2280      	movs	r2, #128	; 0x80
    1a08:	0212      	lsls	r2, r2, #8
    1a0a:	4313      	orrs	r3, r2
    1a0c:	6273      	str	r3, [r6, #36]	; 0x24
    1a0e:	0028      	movs	r0, r5
    1a10:	4b0f      	ldr	r3, [pc, #60]	; (1a50 <_i2c_master_read_packet+0xc0>)
    1a12:	4798      	blx	r3
    1a14:	6873      	ldr	r3, [r6, #4]
    1a16:	4a0c      	ldr	r2, [pc, #48]	; (1a48 <_i2c_master_read_packet+0xb8>)
    1a18:	4013      	ands	r3, r2
    1a1a:	6073      	str	r3, [r6, #4]
    1a1c:	2800      	cmp	r0, #0
    1a1e:	d1e2      	bne.n	19e6 <_i2c_master_read_packet+0x56>
    1a20:	0028      	movs	r0, r5
    1a22:	4b0c      	ldr	r3, [pc, #48]	; (1a54 <_i2c_master_read_packet+0xc4>)
    1a24:	4798      	blx	r3
    1a26:	2800      	cmp	r0, #0
    1a28:	d1dd      	bne.n	19e6 <_i2c_master_read_packet+0x56>
    1a2a:	2303      	movs	r3, #3
    1a2c:	75b3      	strb	r3, [r6, #22]
    1a2e:	8823      	ldrh	r3, [r4, #0]
    1a30:	0a1b      	lsrs	r3, r3, #8
    1a32:	2278      	movs	r2, #120	; 0x78
    1a34:	4313      	orrs	r3, r2
    1a36:	005b      	lsls	r3, r3, #1
    1a38:	7a62      	ldrb	r2, [r4, #9]
    1a3a:	0392      	lsls	r2, r2, #14
    1a3c:	2101      	movs	r1, #1
    1a3e:	430a      	orrs	r2, r1
    1a40:	4313      	orrs	r3, r2
    1a42:	6273      	str	r3, [r6, #36]	; 0x24
    1a44:	e7cf      	b.n	19e6 <_i2c_master_read_packet+0x56>
    1a46:	46c0      	nop			; (mov r8, r8)
    1a48:	fffbffff 	.word	0xfffbffff
    1a4c:	00001839 	.word	0x00001839
    1a50:	0000180d 	.word	0x0000180d
    1a54:	000017dd 	.word	0x000017dd

00001a58 <i2c_master_register_callback>:
    1a58:	1c93      	adds	r3, r2, #2
    1a5a:	009b      	lsls	r3, r3, #2
    1a5c:	18c3      	adds	r3, r0, r3
    1a5e:	6059      	str	r1, [r3, #4]
    1a60:	7e03      	ldrb	r3, [r0, #24]
    1a62:	2101      	movs	r1, #1
    1a64:	4091      	lsls	r1, r2
    1a66:	430b      	orrs	r3, r1
    1a68:	b2db      	uxtb	r3, r3
    1a6a:	7603      	strb	r3, [r0, #24]
    1a6c:	4770      	bx	lr
	...

00001a70 <i2c_master_read_packet_job>:
    1a70:	b510      	push	{r4, lr}
    1a72:	8b83      	ldrh	r3, [r0, #28]
    1a74:	b29b      	uxth	r3, r3
    1a76:	2205      	movs	r2, #5
    1a78:	2b00      	cmp	r3, #0
    1a7a:	d001      	beq.n	1a80 <i2c_master_read_packet_job+0x10>
    1a7c:	0010      	movs	r0, r2
    1a7e:	bd10      	pop	{r4, pc}
    1a80:	3301      	adds	r3, #1
    1a82:	7283      	strb	r3, [r0, #10]
    1a84:	72c3      	strb	r3, [r0, #11]
    1a86:	4b02      	ldr	r3, [pc, #8]	; (1a90 <i2c_master_read_packet_job+0x20>)
    1a88:	4798      	blx	r3
    1a8a:	0002      	movs	r2, r0
    1a8c:	e7f6      	b.n	1a7c <i2c_master_read_packet_job+0xc>
    1a8e:	46c0      	nop			; (mov r8, r8)
    1a90:	00001991 	.word	0x00001991

00001a94 <i2c_master_write_packet_job>:
    1a94:	b510      	push	{r4, lr}
    1a96:	8b83      	ldrh	r3, [r0, #28]
    1a98:	b29b      	uxth	r3, r3
    1a9a:	2205      	movs	r2, #5
    1a9c:	2b00      	cmp	r3, #0
    1a9e:	d001      	beq.n	1aa4 <i2c_master_write_packet_job+0x10>
    1aa0:	0010      	movs	r0, r2
    1aa2:	bd10      	pop	{r4, pc}
    1aa4:	3301      	adds	r3, #1
    1aa6:	7283      	strb	r3, [r0, #10]
    1aa8:	72c3      	strb	r3, [r0, #11]
    1aaa:	4b02      	ldr	r3, [pc, #8]	; (1ab4 <i2c_master_write_packet_job+0x20>)
    1aac:	4798      	blx	r3
    1aae:	0002      	movs	r2, r0
    1ab0:	e7f6      	b.n	1aa0 <i2c_master_write_packet_job+0xc>
    1ab2:	46c0      	nop			; (mov r8, r8)
    1ab4:	00001929 	.word	0x00001929

00001ab8 <_i2c_master_interrupt_handler>:
    1ab8:	b570      	push	{r4, r5, r6, lr}
    1aba:	0080      	lsls	r0, r0, #2
    1abc:	4b75      	ldr	r3, [pc, #468]	; (1c94 <_i2c_master_interrupt_handler+0x1dc>)
    1abe:	58c4      	ldr	r4, [r0, r3]
    1ac0:	6825      	ldr	r5, [r4, #0]
    1ac2:	682b      	ldr	r3, [r5, #0]
    1ac4:	011b      	lsls	r3, r3, #4
    1ac6:	0fda      	lsrs	r2, r3, #31
    1ac8:	7e63      	ldrb	r3, [r4, #25]
    1aca:	7e26      	ldrb	r6, [r4, #24]
    1acc:	401e      	ands	r6, r3
    1ace:	8b63      	ldrh	r3, [r4, #26]
    1ad0:	b29b      	uxth	r3, r3
    1ad2:	2b00      	cmp	r3, #0
    1ad4:	d103      	bne.n	1ade <_i2c_master_interrupt_handler+0x26>
    1ad6:	8ba3      	ldrh	r3, [r4, #28]
    1ad8:	b29b      	uxth	r3, r3
    1ada:	2b00      	cmp	r3, #0
    1adc:	d123      	bne.n	1b26 <_i2c_master_interrupt_handler+0x6e>
    1ade:	8b63      	ldrh	r3, [r4, #26]
    1ae0:	b29b      	uxth	r3, r3
    1ae2:	2b00      	cmp	r3, #0
    1ae4:	d008      	beq.n	1af8 <_i2c_master_interrupt_handler+0x40>
    1ae6:	8ba3      	ldrh	r3, [r4, #28]
    1ae8:	b29b      	uxth	r3, r3
    1aea:	2b00      	cmp	r3, #0
    1aec:	d104      	bne.n	1af8 <_i2c_master_interrupt_handler+0x40>
    1aee:	3325      	adds	r3, #37	; 0x25
    1af0:	5ce3      	ldrb	r3, [r4, r3]
    1af2:	2b05      	cmp	r3, #5
    1af4:	d100      	bne.n	1af8 <_i2c_master_interrupt_handler+0x40>
    1af6:	e06d      	b.n	1bd4 <_i2c_master_interrupt_handler+0x11c>
    1af8:	8b63      	ldrh	r3, [r4, #26]
    1afa:	b29b      	uxth	r3, r3
    1afc:	2b00      	cmp	r3, #0
    1afe:	d024      	beq.n	1b4a <_i2c_master_interrupt_handler+0x92>
    1b00:	8ba3      	ldrh	r3, [r4, #28]
    1b02:	b29b      	uxth	r3, r3
    1b04:	2b00      	cmp	r3, #0
    1b06:	d020      	beq.n	1b4a <_i2c_master_interrupt_handler+0x92>
    1b08:	8b6b      	ldrh	r3, [r5, #26]
    1b0a:	069b      	lsls	r3, r3, #26
    1b0c:	d500      	bpl.n	1b10 <_i2c_master_interrupt_handler+0x58>
    1b0e:	e081      	b.n	1c14 <_i2c_master_interrupt_handler+0x15c>
    1b10:	2a00      	cmp	r2, #0
    1b12:	d004      	beq.n	1b1e <_i2c_master_interrupt_handler+0x66>
    1b14:	8ba3      	ldrh	r3, [r4, #28]
    1b16:	b29b      	uxth	r3, r3
    1b18:	2b01      	cmp	r3, #1
    1b1a:	d100      	bne.n	1b1e <_i2c_master_interrupt_handler+0x66>
    1b1c:	e07a      	b.n	1c14 <_i2c_master_interrupt_handler+0x15c>
    1b1e:	2241      	movs	r2, #65	; 0x41
    1b20:	2325      	movs	r3, #37	; 0x25
    1b22:	54e2      	strb	r2, [r4, r3]
    1b24:	e011      	b.n	1b4a <_i2c_master_interrupt_handler+0x92>
    1b26:	7e2b      	ldrb	r3, [r5, #24]
    1b28:	07db      	lsls	r3, r3, #31
    1b2a:	d507      	bpl.n	1b3c <_i2c_master_interrupt_handler+0x84>
    1b2c:	2301      	movs	r3, #1
    1b2e:	762b      	strb	r3, [r5, #24]
    1b30:	8b6b      	ldrh	r3, [r5, #26]
    1b32:	079b      	lsls	r3, r3, #30
    1b34:	d52e      	bpl.n	1b94 <_i2c_master_interrupt_handler+0xdc>
    1b36:	2241      	movs	r2, #65	; 0x41
    1b38:	2325      	movs	r3, #37	; 0x25
    1b3a:	54e2      	strb	r2, [r4, r3]
    1b3c:	8ba3      	ldrh	r3, [r4, #28]
    1b3e:	b29b      	uxth	r3, r3
    1b40:	8363      	strh	r3, [r4, #26]
    1b42:	2325      	movs	r3, #37	; 0x25
    1b44:	5ce3      	ldrb	r3, [r4, r3]
    1b46:	2b05      	cmp	r3, #5
    1b48:	d038      	beq.n	1bbc <_i2c_master_interrupt_handler+0x104>
    1b4a:	8b63      	ldrh	r3, [r4, #26]
    1b4c:	b29b      	uxth	r3, r3
    1b4e:	2b00      	cmp	r3, #0
    1b50:	d007      	beq.n	1b62 <_i2c_master_interrupt_handler+0xaa>
    1b52:	8ba3      	ldrh	r3, [r4, #28]
    1b54:	b29b      	uxth	r3, r3
    1b56:	2b00      	cmp	r3, #0
    1b58:	d103      	bne.n	1b62 <_i2c_master_interrupt_handler+0xaa>
    1b5a:	3325      	adds	r3, #37	; 0x25
    1b5c:	5ce3      	ldrb	r3, [r4, r3]
    1b5e:	2b05      	cmp	r3, #5
    1b60:	d064      	beq.n	1c2c <_i2c_master_interrupt_handler+0x174>
    1b62:	2325      	movs	r3, #37	; 0x25
    1b64:	5ce3      	ldrb	r3, [r4, r3]
    1b66:	2b05      	cmp	r3, #5
    1b68:	d013      	beq.n	1b92 <_i2c_master_interrupt_handler+0xda>
    1b6a:	2325      	movs	r3, #37	; 0x25
    1b6c:	5ce3      	ldrb	r3, [r4, r3]
    1b6e:	2b00      	cmp	r3, #0
    1b70:	d00f      	beq.n	1b92 <_i2c_master_interrupt_handler+0xda>
    1b72:	2303      	movs	r3, #3
    1b74:	752b      	strb	r3, [r5, #20]
    1b76:	2300      	movs	r3, #0
    1b78:	8363      	strh	r3, [r4, #26]
    1b7a:	83a3      	strh	r3, [r4, #28]
    1b7c:	3325      	adds	r3, #37	; 0x25
    1b7e:	5ce3      	ldrb	r3, [r4, r3]
    1b80:	2b41      	cmp	r3, #65	; 0x41
    1b82:	d003      	beq.n	1b8c <_i2c_master_interrupt_handler+0xd4>
    1b84:	7aa3      	ldrb	r3, [r4, #10]
    1b86:	2b00      	cmp	r3, #0
    1b88:	d000      	beq.n	1b8c <_i2c_master_interrupt_handler+0xd4>
    1b8a:	e075      	b.n	1c78 <_i2c_master_interrupt_handler+0x1c0>
    1b8c:	0773      	lsls	r3, r6, #29
    1b8e:	d500      	bpl.n	1b92 <_i2c_master_interrupt_handler+0xda>
    1b90:	e07b      	b.n	1c8a <_i2c_master_interrupt_handler+0x1d2>
    1b92:	bd70      	pop	{r4, r5, r6, pc}
    1b94:	8b6b      	ldrh	r3, [r5, #26]
    1b96:	075b      	lsls	r3, r3, #29
    1b98:	d5d0      	bpl.n	1b3c <_i2c_master_interrupt_handler+0x84>
    1b9a:	2218      	movs	r2, #24
    1b9c:	2325      	movs	r3, #37	; 0x25
    1b9e:	54e2      	strb	r2, [r4, r3]
    1ba0:	2300      	movs	r3, #0
    1ba2:	83a3      	strh	r3, [r4, #28]
    1ba4:	7aa3      	ldrb	r3, [r4, #10]
    1ba6:	2b00      	cmp	r3, #0
    1ba8:	d0c8      	beq.n	1b3c <_i2c_master_interrupt_handler+0x84>
    1baa:	0020      	movs	r0, r4
    1bac:	4b3a      	ldr	r3, [pc, #232]	; (1c98 <_i2c_master_interrupt_handler+0x1e0>)
    1bae:	4798      	blx	r3
    1bb0:	686a      	ldr	r2, [r5, #4]
    1bb2:	23c0      	movs	r3, #192	; 0xc0
    1bb4:	029b      	lsls	r3, r3, #10
    1bb6:	4313      	orrs	r3, r2
    1bb8:	606b      	str	r3, [r5, #4]
    1bba:	e7bf      	b.n	1b3c <_i2c_master_interrupt_handler+0x84>
    1bbc:	331f      	adds	r3, #31
    1bbe:	5ce3      	ldrb	r3, [r4, r3]
    1bc0:	2b00      	cmp	r3, #0
    1bc2:	d003      	beq.n	1bcc <_i2c_master_interrupt_handler+0x114>
    1bc4:	0020      	movs	r0, r4
    1bc6:	4b35      	ldr	r3, [pc, #212]	; (1c9c <_i2c_master_interrupt_handler+0x1e4>)
    1bc8:	4798      	blx	r3
    1bca:	e7be      	b.n	1b4a <_i2c_master_interrupt_handler+0x92>
    1bcc:	0020      	movs	r0, r4
    1bce:	4b34      	ldr	r3, [pc, #208]	; (1ca0 <_i2c_master_interrupt_handler+0x1e8>)
    1bd0:	4798      	blx	r3
    1bd2:	e7ba      	b.n	1b4a <_i2c_master_interrupt_handler+0x92>
    1bd4:	331f      	adds	r3, #31
    1bd6:	5ce3      	ldrb	r3, [r4, r3]
    1bd8:	2b00      	cmp	r3, #0
    1bda:	d000      	beq.n	1bde <_i2c_master_interrupt_handler+0x126>
    1bdc:	e78c      	b.n	1af8 <_i2c_master_interrupt_handler+0x40>
    1bde:	3303      	adds	r3, #3
    1be0:	752b      	strb	r3, [r5, #20]
    1be2:	2300      	movs	r3, #0
    1be4:	8363      	strh	r3, [r4, #26]
    1be6:	3325      	adds	r3, #37	; 0x25
    1be8:	2200      	movs	r2, #0
    1bea:	54e2      	strb	r2, [r4, r3]
    1bec:	7aa3      	ldrb	r3, [r4, #10]
    1bee:	2b00      	cmp	r3, #0
    1bf0:	d107      	bne.n	1c02 <_i2c_master_interrupt_handler+0x14a>
    1bf2:	2301      	movs	r3, #1
    1bf4:	762b      	strb	r3, [r5, #24]
    1bf6:	07f3      	lsls	r3, r6, #31
    1bf8:	d5a7      	bpl.n	1b4a <_i2c_master_interrupt_handler+0x92>
    1bfa:	68e3      	ldr	r3, [r4, #12]
    1bfc:	0020      	movs	r0, r4
    1bfe:	4798      	blx	r3
    1c00:	e7a3      	b.n	1b4a <_i2c_master_interrupt_handler+0x92>
    1c02:	0020      	movs	r0, r4
    1c04:	4b24      	ldr	r3, [pc, #144]	; (1c98 <_i2c_master_interrupt_handler+0x1e0>)
    1c06:	4798      	blx	r3
    1c08:	686a      	ldr	r2, [r5, #4]
    1c0a:	23c0      	movs	r3, #192	; 0xc0
    1c0c:	029b      	lsls	r3, r3, #10
    1c0e:	4313      	orrs	r3, r2
    1c10:	606b      	str	r3, [r5, #4]
    1c12:	e7f0      	b.n	1bf6 <_i2c_master_interrupt_handler+0x13e>
    1c14:	2324      	movs	r3, #36	; 0x24
    1c16:	5ce3      	ldrb	r3, [r4, r3]
    1c18:	2b00      	cmp	r3, #0
    1c1a:	d103      	bne.n	1c24 <_i2c_master_interrupt_handler+0x16c>
    1c1c:	0020      	movs	r0, r4
    1c1e:	4b20      	ldr	r3, [pc, #128]	; (1ca0 <_i2c_master_interrupt_handler+0x1e8>)
    1c20:	4798      	blx	r3
    1c22:	e792      	b.n	1b4a <_i2c_master_interrupt_handler+0x92>
    1c24:	0020      	movs	r0, r4
    1c26:	4b1d      	ldr	r3, [pc, #116]	; (1c9c <_i2c_master_interrupt_handler+0x1e4>)
    1c28:	4798      	blx	r3
    1c2a:	e78e      	b.n	1b4a <_i2c_master_interrupt_handler+0x92>
    1c2c:	331f      	adds	r3, #31
    1c2e:	5ce3      	ldrb	r3, [r4, r3]
    1c30:	2b01      	cmp	r3, #1
    1c32:	d196      	bne.n	1b62 <_i2c_master_interrupt_handler+0xaa>
    1c34:	7e2b      	ldrb	r3, [r5, #24]
    1c36:	079b      	lsls	r3, r3, #30
    1c38:	d501      	bpl.n	1c3e <_i2c_master_interrupt_handler+0x186>
    1c3a:	2302      	movs	r3, #2
    1c3c:	762b      	strb	r3, [r5, #24]
    1c3e:	2303      	movs	r3, #3
    1c40:	752b      	strb	r3, [r5, #20]
    1c42:	2300      	movs	r3, #0
    1c44:	8363      	strh	r3, [r4, #26]
    1c46:	3325      	adds	r3, #37	; 0x25
    1c48:	2200      	movs	r2, #0
    1c4a:	54e2      	strb	r2, [r4, r3]
    1c4c:	07b3      	lsls	r3, r6, #30
    1c4e:	d503      	bpl.n	1c58 <_i2c_master_interrupt_handler+0x1a0>
    1c50:	2324      	movs	r3, #36	; 0x24
    1c52:	5ce3      	ldrb	r3, [r4, r3]
    1c54:	2b01      	cmp	r3, #1
    1c56:	d00b      	beq.n	1c70 <_i2c_master_interrupt_handler+0x1b8>
    1c58:	07f3      	lsls	r3, r6, #31
    1c5a:	d400      	bmi.n	1c5e <_i2c_master_interrupt_handler+0x1a6>
    1c5c:	e781      	b.n	1b62 <_i2c_master_interrupt_handler+0xaa>
    1c5e:	2324      	movs	r3, #36	; 0x24
    1c60:	5ce3      	ldrb	r3, [r4, r3]
    1c62:	2b00      	cmp	r3, #0
    1c64:	d000      	beq.n	1c68 <_i2c_master_interrupt_handler+0x1b0>
    1c66:	e77c      	b.n	1b62 <_i2c_master_interrupt_handler+0xaa>
    1c68:	68e3      	ldr	r3, [r4, #12]
    1c6a:	0020      	movs	r0, r4
    1c6c:	4798      	blx	r3
    1c6e:	e778      	b.n	1b62 <_i2c_master_interrupt_handler+0xaa>
    1c70:	6923      	ldr	r3, [r4, #16]
    1c72:	0020      	movs	r0, r4
    1c74:	4798      	blx	r3
    1c76:	e774      	b.n	1b62 <_i2c_master_interrupt_handler+0xaa>
    1c78:	0020      	movs	r0, r4
    1c7a:	4b07      	ldr	r3, [pc, #28]	; (1c98 <_i2c_master_interrupt_handler+0x1e0>)
    1c7c:	4798      	blx	r3
    1c7e:	686a      	ldr	r2, [r5, #4]
    1c80:	23e0      	movs	r3, #224	; 0xe0
    1c82:	02db      	lsls	r3, r3, #11
    1c84:	4313      	orrs	r3, r2
    1c86:	606b      	str	r3, [r5, #4]
    1c88:	e780      	b.n	1b8c <_i2c_master_interrupt_handler+0xd4>
    1c8a:	6963      	ldr	r3, [r4, #20]
    1c8c:	0020      	movs	r0, r4
    1c8e:	4798      	blx	r3
    1c90:	e77f      	b.n	1b92 <_i2c_master_interrupt_handler+0xda>
    1c92:	46c0      	nop			; (mov r8, r8)
    1c94:	20001f90 	.word	0x20001f90
    1c98:	00001859 	.word	0x00001859
    1c9c:	00001865 	.word	0x00001865
    1ca0:	000018ed 	.word	0x000018ed

00001ca4 <DMX_transmit_enable>:
    DMX_flags &= ~(1 << DMX_RXR);
}

void DMX_transmit_enable(void)
{
    DMX_flags |= (1 << DMX_TXR);
    1ca4:	4a02      	ldr	r2, [pc, #8]	; (1cb0 <DMX_transmit_enable+0xc>)
    1ca6:	7813      	ldrb	r3, [r2, #0]
    1ca8:	2104      	movs	r1, #4
    1caa:	430b      	orrs	r3, r1
    1cac:	7013      	strb	r3, [r2, #0]
}
    1cae:	4770      	bx	lr
    1cb0:	20001f40 	.word	0x20001f40

00001cb4 <configure_DMX>:
{
    1cb4:	b530      	push	{r4, r5, lr}
    1cb6:	b093      	sub	sp, #76	; 0x4c
{
	/* Sanity check arguments */
	Assert(config);

	/* Set default config in the config struct */
	config->data_order       = USART_DATAORDER_LSB;
    1cb8:	2380      	movs	r3, #128	; 0x80
    1cba:	05db      	lsls	r3, r3, #23
    1cbc:	9300      	str	r3, [sp, #0]
	config->transfer_mode    = USART_TRANSFER_ASYNCHRONOUSLY;
    1cbe:	2300      	movs	r3, #0
    1cc0:	9301      	str	r3, [sp, #4]
	config->parity           = USART_PARITY_NONE;
    1cc2:	22ff      	movs	r2, #255	; 0xff
    1cc4:	4669      	mov	r1, sp
    1cc6:	810a      	strh	r2, [r1, #8]
	config->stopbits         = USART_STOPBITS_1;
	config->character_size   = USART_CHARACTER_SIZE_8BIT;
    1cc8:	72cb      	strb	r3, [r1, #11]
	config->baudrate         = 9600;
	config->receiver_enable  = true;
    1cca:	2201      	movs	r2, #1
    1ccc:	212c      	movs	r1, #44	; 0x2c
    1cce:	4668      	mov	r0, sp
    1cd0:	5442      	strb	r2, [r0, r1]
	config->transmitter_enable = true;
    1cd2:	3101      	adds	r1, #1
    1cd4:	5442      	strb	r2, [r0, r1]
	config->clock_polarity_inverted = false;
    1cd6:	322d      	adds	r2, #45	; 0x2d
    1cd8:	5483      	strb	r3, [r0, r2]
	config->use_external_clock = false;
    1cda:	3201      	adds	r2, #1
    1cdc:	5483      	strb	r3, [r0, r2]
	config->ext_clock_freq   = 0;
    1cde:	930c      	str	r3, [sp, #48]	; 0x30
	config->mux_setting      = USART_RX_1_TX_2_XCK_3;
	config->run_in_standby   = false;
    1ce0:	3205      	adds	r2, #5
    1ce2:	5483      	strb	r3, [r0, r2]
	config->pinmux_pad0      = PINMUX_DEFAULT;
	config->pinmux_pad1      = PINMUX_DEFAULT;
	config->pinmux_pad2      = PINMUX_DEFAULT;
	config->pinmux_pad3      = PINMUX_DEFAULT;
#ifdef FEATURE_USART_OVER_SAMPLE
	config->sample_adjustment     = USART_SAMPLE_ADJUSTMENT_7_8_9;
    1ce4:	9305      	str	r3, [sp, #20]
	config->sample_rate           = USART_SAMPLE_RATE_16X_ARITHMETIC;
    1ce6:	2200      	movs	r2, #0
    1ce8:	8203      	strh	r3, [r0, #16]
#endif
#ifdef FEATURE_USART_LIN_SLAVE
	config->lin_slave_enable      = false;
    1cea:	76c2      	strb	r2, [r0, #27]
#endif

#ifdef FEATURE_USART_LIN_MASTER
	config->lin_node = LIN_INVALID_MODE;
    1cec:	9307      	str	r3, [sp, #28]
	config->lin_header_delay = LIN_MASTER_HEADER_DELAY_0;
    1cee:	8403      	strh	r3, [r0, #32]
	config->lin_break_length = LIN_MASTER_BREAK_LENGTH_13_BIT;
    1cf0:	8443      	strh	r3, [r0, #34]	; 0x22
#endif

#ifdef FEATURE_USART_IMMEDIATE_BUFFER_OVERFLOW_NOTIFICATION
	config->immediate_buffer_overflow_notification  = false;
    1cf2:	7602      	strb	r2, [r0, #24]
#endif
#ifdef FEATURE_USART_START_FRAME_DECTION
	config->start_frame_detection_enable            = false;
    1cf4:	2324      	movs	r3, #36	; 0x24
    1cf6:	54c2      	strb	r2, [r0, r3]
#endif
#ifdef FEATURE_USART_IRDA
	config->encoding_format_enable                  = false;
    1cf8:	7642      	strb	r2, [r0, #25]
	config->receive_pulse_length                    = 19;
    1cfa:	2313      	movs	r3, #19
    1cfc:	7683      	strb	r3, [r0, #26]
	config->iso7816_config.inhibit_nack             = ISO7816_INHIBIT_NACK_DISABLE;
	config->iso7816_config.successive_recv_nack     = ISO7816_SUCCESSIVE_RECV_NACK_DISABLE;
	config->iso7816_config.max_iterations           = 7;
#endif
#ifdef FEATURE_USART_COLLISION_DECTION
	config->collision_detection_enable              = false;
    1cfe:	3313      	adds	r3, #19
    1d00:	54c2      	strb	r2, [r0, r3]
#endif
#ifdef FEATURE_USART_RS485
	config->rs485_guard_time = RS485_GUARD_TIME_0_BIT;
    1d02:	3b01      	subs	r3, #1
    1d04:	54c2      	strb	r2, [r0, r3]
    config_usart.baudrate    =					250000;
    1d06:	4b28      	ldr	r3, [pc, #160]	; (1da8 <configure_DMX+0xf4>)
    1d08:	930a      	str	r3, [sp, #40]	; 0x28
    config_usart.mux_setting =					USART_RX_1_TX_0_XCK_1;
    1d0a:	2380      	movs	r3, #128	; 0x80
    1d0c:	035b      	lsls	r3, r3, #13
    1d0e:	9303      	str	r3, [sp, #12]
    config_usart.pinmux_pad0 =					PINMUX_PB16C_SERCOM5_PAD0;
    1d10:	4b26      	ldr	r3, [pc, #152]	; (1dac <configure_DMX+0xf8>)
    1d12:	930e      	str	r3, [sp, #56]	; 0x38
    config_usart.pinmux_pad1 =					PINMUX_PB17C_SERCOM5_PAD1;
    1d14:	4b26      	ldr	r3, [pc, #152]	; (1db0 <configure_DMX+0xfc>)
    1d16:	930f      	str	r3, [sp, #60]	; 0x3c
    config_usart.pinmux_pad2 =					PINMUX_UNUSED;
    1d18:	2301      	movs	r3, #1
    1d1a:	425b      	negs	r3, r3
    1d1c:	9310      	str	r3, [sp, #64]	; 0x40
    config_usart.pinmux_pad3 =					PINMUX_UNUSED;
    1d1e:	9311      	str	r3, [sp, #68]	; 0x44
    config_usart.stopbits =						USART_STOPBITS_2;
    1d20:	3341      	adds	r3, #65	; 0x41
    1d22:	7283      	strb	r3, [r0, #10]
    config_usart.generator_source =				GCLK_GENERATOR_3;
    1d24:	2203      	movs	r2, #3
    1d26:	3b0b      	subs	r3, #11
    1d28:	54c2      	strb	r2, [r0, r3]
    while (usart_init(&DMX_instance, DMX_MODULE, &config_usart) != STATUS_OK);
    1d2a:	4d22      	ldr	r5, [pc, #136]	; (1db4 <configure_DMX+0x100>)
    1d2c:	4c22      	ldr	r4, [pc, #136]	; (1db8 <configure_DMX+0x104>)
    1d2e:	466a      	mov	r2, sp
    1d30:	4922      	ldr	r1, [pc, #136]	; (1dbc <configure_DMX+0x108>)
    1d32:	0028      	movs	r0, r5
    1d34:	47a0      	blx	r4
    1d36:	2800      	cmp	r0, #0
    1d38:	d1f9      	bne.n	1d2e <configure_DMX+0x7a>
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);
    1d3a:	4d1e      	ldr	r5, [pc, #120]	; (1db4 <configure_DMX+0x100>)
    1d3c:	682c      	ldr	r4, [r5, #0]

#if USART_CALLBACK_MODE == true
	/* Enable Global interrupt for module */
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    1d3e:	0020      	movs	r0, r4
    1d40:	4b1f      	ldr	r3, [pc, #124]	; (1dc0 <configure_DMX+0x10c>)
    1d42:	4798      	blx	r3
 * \param[in] vector Interrupt vector to enable
 */
static inline void system_interrupt_enable(
		const enum system_interrupt_vector vector)
{
	NVIC->ISER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
    1d44:	231f      	movs	r3, #31
    1d46:	4018      	ands	r0, r3
    1d48:	3b1e      	subs	r3, #30
    1d4a:	4083      	lsls	r3, r0
    1d4c:	4a1d      	ldr	r2, [pc, #116]	; (1dc4 <configure_DMX+0x110>)
    1d4e:	6013      	str	r3, [r2, #0]
	SercomUsart *const usart_hw = &(module->hw->USART);
    1d50:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
    1d52:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    1d54:	2b00      	cmp	r3, #0
    1d56:	d1fc      	bne.n	1d52 <configure_DMX+0x9e>

	/* Wait until synchronization is complete */
	_usart_wait_for_sync(module);

	/* Enable USART module */
	usart_hw->CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    1d58:	6823      	ldr	r3, [r4, #0]
    1d5a:	2202      	movs	r2, #2
    1d5c:	4313      	orrs	r3, r2
    1d5e:	6023      	str	r3, [r4, #0]
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);
    1d60:	4b14      	ldr	r3, [pc, #80]	; (1db4 <configure_DMX+0x100>)
    1d62:	681b      	ldr	r3, [r3, #0]
	return (usart_hw->SYNCBUSY.reg);
    1d64:	69da      	ldr	r2, [r3, #28]
	while (usart_is_syncing(module)) {
    1d66:	2a00      	cmp	r2, #0
    1d68:	d1fc      	bne.n	1d64 <configure_DMX+0xb0>
			module->receiver_enabled = true;
			break;

		case USART_TRANSCEIVER_TX:
			/* Enable TX */
			usart_hw->CTRLB.reg |= SERCOM_USART_CTRLB_TXEN;
    1d6a:	6859      	ldr	r1, [r3, #4]
    1d6c:	2280      	movs	r2, #128	; 0x80
    1d6e:	0252      	lsls	r2, r2, #9
    1d70:	430a      	orrs	r2, r1
    1d72:	605a      	str	r2, [r3, #4]
			module->transmitter_enabled = true;
    1d74:	2101      	movs	r1, #1
    1d76:	4a0f      	ldr	r2, [pc, #60]	; (1db4 <configure_DMX+0x100>)
    1d78:	71d1      	strb	r1, [r2, #7]
	return (usart_hw->SYNCBUSY.reg);
    1d7a:	69da      	ldr	r2, [r3, #28]
	while (usart_is_syncing(module)) {
    1d7c:	2a00      	cmp	r2, #0
    1d7e:	d1fc      	bne.n	1d7a <configure_DMX+0xc6>
    delay_ms(1);
    1d80:	2000      	movs	r0, #0
    1d82:	4b11      	ldr	r3, [pc, #68]	; (1dc8 <configure_DMX+0x114>)
    1d84:	4798      	blx	r3
    1d86:	0002      	movs	r2, r0
    1d88:	2300      	movs	r3, #0
    1d8a:	4810      	ldr	r0, [pc, #64]	; (1dcc <configure_DMX+0x118>)
    1d8c:	2100      	movs	r1, #0
    1d8e:	1880      	adds	r0, r0, r2
    1d90:	4159      	adcs	r1, r3
    1d92:	4a0f      	ldr	r2, [pc, #60]	; (1dd0 <configure_DMX+0x11c>)
    1d94:	2300      	movs	r3, #0
    1d96:	4c0f      	ldr	r4, [pc, #60]	; (1dd4 <configure_DMX+0x120>)
    1d98:	47a0      	blx	r4
    1d9a:	4b0f      	ldr	r3, [pc, #60]	; (1dd8 <configure_DMX+0x124>)
    1d9c:	4798      	blx	r3
    DMX_transmit_enable();
    1d9e:	4b0f      	ldr	r3, [pc, #60]	; (1ddc <configure_DMX+0x128>)
    1da0:	4798      	blx	r3
}
    1da2:	b013      	add	sp, #76	; 0x4c
    1da4:	bd30      	pop	{r4, r5, pc}
    1da6:	46c0      	nop			; (mov r8, r8)
    1da8:	0003d090 	.word	0x0003d090
    1dac:	00300002 	.word	0x00300002
    1db0:	00310002 	.word	0x00310002
    1db4:	20001f44 	.word	0x20001f44
    1db8:	00002d49 	.word	0x00002d49
    1dbc:	42001800 	.word	0x42001800
    1dc0:	000033c1 	.word	0x000033c1
    1dc4:	e000e100 	.word	0xe000e100
    1dc8:	00004ccd 	.word	0x00004ccd
    1dcc:	00001b57 	.word	0x00001b57
    1dd0:	00001b58 	.word	0x00001b58
    1dd4:	000060e5 	.word	0x000060e5
    1dd8:	20000001 	.word	0x20000001
    1ddc:	00001ca5 	.word	0x00001ca5

00001de0 <DMX_change_baudrate>:
    /* usart_register_callback(&DMX_instance, DMX_transmit_callback, USART_CALLBACK_BUFFER_TRANSMITTED);
     usart_enable_callback(&DMX_instance, USART_CALLBACK_BUFFER_TRANSMITTED);*/
}

void DMX_change_baudrate(uint32_t baud)
{
    1de0:	b510      	push	{r4, lr}
    float part = 1.0 - 16.0 * baud / 48000000;
    1de2:	4b22      	ldr	r3, [pc, #136]	; (1e6c <DMX_change_baudrate+0x8c>)
    1de4:	4798      	blx	r3
    1de6:	2200      	movs	r2, #0
    1de8:	4b21      	ldr	r3, [pc, #132]	; (1e70 <DMX_change_baudrate+0x90>)
    1dea:	4c22      	ldr	r4, [pc, #136]	; (1e74 <DMX_change_baudrate+0x94>)
    1dec:	47a0      	blx	r4
    1dee:	2200      	movs	r2, #0
    1df0:	4b21      	ldr	r3, [pc, #132]	; (1e78 <DMX_change_baudrate+0x98>)
    1df2:	4c22      	ldr	r4, [pc, #136]	; (1e7c <DMX_change_baudrate+0x9c>)
    1df4:	47a0      	blx	r4
    1df6:	0002      	movs	r2, r0
    1df8:	000b      	movs	r3, r1
    1dfa:	2000      	movs	r0, #0
    1dfc:	4920      	ldr	r1, [pc, #128]	; (1e80 <DMX_change_baudrate+0xa0>)
    1dfe:	4c21      	ldr	r4, [pc, #132]	; (1e84 <DMX_change_baudrate+0xa4>)
    1e00:	47a0      	blx	r4
    1e02:	4b21      	ldr	r3, [pc, #132]	; (1e88 <DMX_change_baudrate+0xa8>)
    1e04:	4798      	blx	r3
    uint16_t baudrate = (uint16_t)(65536 * part);
    1e06:	218f      	movs	r1, #143	; 0x8f
    1e08:	05c9      	lsls	r1, r1, #23
    1e0a:	4b20      	ldr	r3, [pc, #128]	; (1e8c <DMX_change_baudrate+0xac>)
    1e0c:	4798      	blx	r3
    1e0e:	4b20      	ldr	r3, [pc, #128]	; (1e90 <DMX_change_baudrate+0xb0>)
    1e10:	4798      	blx	r3
    1e12:	b280      	uxth	r0, r0

    if(baudrate == DMX_MODULE->USART.BAUD.reg)return;
    1e14:	4b1f      	ldr	r3, [pc, #124]	; (1e94 <DMX_change_baudrate+0xb4>)
    1e16:	899b      	ldrh	r3, [r3, #12]
    1e18:	b29b      	uxth	r3, r3
    1e1a:	4298      	cmp	r0, r3
    1e1c:	d024      	beq.n	1e68 <DMX_change_baudrate+0x88>

    DMX_MODULE->USART.CTRLA.reg &= ~(1 << SERCOM_USART_CTRLA_ENABLE_Pos);
    1e1e:	4b1d      	ldr	r3, [pc, #116]	; (1e94 <DMX_change_baudrate+0xb4>)
    1e20:	681a      	ldr	r2, [r3, #0]
    1e22:	2102      	movs	r1, #2
    1e24:	438a      	bics	r2, r1
    1e26:	601a      	str	r2, [r3, #0]
    DMX_MODULE->USART.CTRLB.bit.TXEN = 0;
    1e28:	685a      	ldr	r2, [r3, #4]
    1e2a:	491b      	ldr	r1, [pc, #108]	; (1e98 <DMX_change_baudrate+0xb8>)
    1e2c:	400a      	ands	r2, r1
    1e2e:	605a      	str	r2, [r3, #4]
    DMX_MODULE->USART.CTRLB.bit.RXEN = 0;
    1e30:	685a      	ldr	r2, [r3, #4]
    1e32:	491a      	ldr	r1, [pc, #104]	; (1e9c <DMX_change_baudrate+0xbc>)
    1e34:	400a      	ands	r2, r1
    1e36:	605a      	str	r2, [r3, #4]
    while(DMX_MODULE->USART.SYNCBUSY.reg);
    1e38:	001a      	movs	r2, r3
    1e3a:	69d3      	ldr	r3, [r2, #28]
    1e3c:	2b00      	cmp	r3, #0
    1e3e:	d1fc      	bne.n	1e3a <DMX_change_baudrate+0x5a>

    DMX_MODULE->USART.BAUD.reg = baudrate;
    1e40:	4b14      	ldr	r3, [pc, #80]	; (1e94 <DMX_change_baudrate+0xb4>)
    1e42:	8198      	strh	r0, [r3, #12]
    DMX_MODULE->USART.CTRLB.bit.TXEN = 1;
    1e44:	6859      	ldr	r1, [r3, #4]
    1e46:	2280      	movs	r2, #128	; 0x80
    1e48:	0252      	lsls	r2, r2, #9
    1e4a:	430a      	orrs	r2, r1
    1e4c:	605a      	str	r2, [r3, #4]
    DMX_MODULE->USART.CTRLB.bit.RXEN = 1;
    1e4e:	6859      	ldr	r1, [r3, #4]
    1e50:	2280      	movs	r2, #128	; 0x80
    1e52:	0292      	lsls	r2, r2, #10
    1e54:	430a      	orrs	r2, r1
    1e56:	605a      	str	r2, [r3, #4]
    DMX_MODULE->USART.CTRLA.reg |= (1 << SERCOM_USART_CTRLA_ENABLE_Pos);
    1e58:	681a      	ldr	r2, [r3, #0]
    1e5a:	2102      	movs	r1, #2
    1e5c:	430a      	orrs	r2, r1
    1e5e:	601a      	str	r2, [r3, #0]
    while(DMX_MODULE->USART.SYNCBUSY.reg);
    1e60:	001a      	movs	r2, r3
    1e62:	69d3      	ldr	r3, [r2, #28]
    1e64:	2b00      	cmp	r3, #0
    1e66:	d1fc      	bne.n	1e62 <DMX_change_baudrate+0x82>

    1e68:	bd10      	pop	{r4, pc}
    1e6a:	46c0      	nop			; (mov r8, r8)
    1e6c:	00008379 	.word	0x00008379
    1e70:	40300000 	.word	0x40300000
    1e74:	000077e5 	.word	0x000077e5
    1e78:	4186e360 	.word	0x4186e360
    1e7c:	0000717d 	.word	0x0000717d
    1e80:	3ff00000 	.word	0x3ff00000
    1e84:	00007ce5 	.word	0x00007ce5
    1e88:	0000848d 	.word	0x0000848d
    1e8c:	00006479 	.word	0x00006479
    1e90:	00006179 	.word	0x00006179
    1e94:	42001800 	.word	0x42001800
    1e98:	fffeffff 	.word	0xfffeffff
    1e9c:	fffdffff 	.word	0xfffdffff

00001ea0 <DMX_SendMessage>:
{
    1ea0:	b5f0      	push	{r4, r5, r6, r7, lr}
    1ea2:	b083      	sub	sp, #12
    1ea4:	0004      	movs	r4, r0
    1ea6:	000d      	movs	r5, r1
		port_base->OUTSET.reg = pin_mask;
    1ea8:	2280      	movs	r2, #128	; 0x80
    1eaa:	0352      	lsls	r2, r2, #13
    1eac:	2382      	movs	r3, #130	; 0x82
    1eae:	05db      	lsls	r3, r3, #23
    1eb0:	619a      	str	r2, [r3, #24]
    uint8_t null_var =0;
    1eb2:	2200      	movs	r2, #0
    1eb4:	466b      	mov	r3, sp
    1eb6:	71da      	strb	r2, [r3, #7]
    DMX_change_baudrate(100000);
    1eb8:	480f      	ldr	r0, [pc, #60]	; (1ef8 <DMX_SendMessage+0x58>)
    1eba:	4b10      	ldr	r3, [pc, #64]	; (1efc <DMX_SendMessage+0x5c>)
    1ebc:	4798      	blx	r3
    while(usart_write_buffer_job(&DMX_instance, &null_var, 1)!=STATUS_OK);
    1ebe:	4e10      	ldr	r6, [pc, #64]	; (1f00 <DMX_SendMessage+0x60>)
    1ec0:	4f10      	ldr	r7, [pc, #64]	; (1f04 <DMX_SendMessage+0x64>)
    1ec2:	2201      	movs	r2, #1
    1ec4:	466b      	mov	r3, sp
    1ec6:	1dd9      	adds	r1, r3, #7
    1ec8:	0030      	movs	r0, r6
    1eca:	47b8      	blx	r7
    1ecc:	2800      	cmp	r0, #0
    1ece:	d1f8      	bne.n	1ec2 <DMX_SendMessage+0x22>
    DMX_change_baudrate(250000);
    1ed0:	480d      	ldr	r0, [pc, #52]	; (1f08 <DMX_SendMessage+0x68>)
    1ed2:	4b0a      	ldr	r3, [pc, #40]	; (1efc <DMX_SendMessage+0x5c>)
    1ed4:	4798      	blx	r3
    while(usart_write_buffer_job(&DMX_instance, &null_var, 1)!=STATUS_OK);
    1ed6:	4e0a      	ldr	r6, [pc, #40]	; (1f00 <DMX_SendMessage+0x60>)
    1ed8:	4f0a      	ldr	r7, [pc, #40]	; (1f04 <DMX_SendMessage+0x64>)
    1eda:	2201      	movs	r2, #1
    1edc:	466b      	mov	r3, sp
    1ede:	1dd9      	adds	r1, r3, #7
    1ee0:	0030      	movs	r0, r6
    1ee2:	47b8      	blx	r7
    1ee4:	2800      	cmp	r0, #0
    1ee6:	d1f8      	bne.n	1eda <DMX_SendMessage+0x3a>
    usart_write_buffer_job(&DMX_instance, p_string, length);
    1ee8:	002a      	movs	r2, r5
    1eea:	0021      	movs	r1, r4
    1eec:	4804      	ldr	r0, [pc, #16]	; (1f00 <DMX_SendMessage+0x60>)
    1eee:	4b05      	ldr	r3, [pc, #20]	; (1f04 <DMX_SendMessage+0x64>)
    1ef0:	4798      	blx	r3
}
    1ef2:	b003      	add	sp, #12
    1ef4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1ef6:	46c0      	nop			; (mov r8, r8)
    1ef8:	000186a0 	.word	0x000186a0
    1efc:	00001de1 	.word	0x00001de1
    1f00:	20001f44 	.word	0x20001f44
    1f04:	000031a9 	.word	0x000031a9
    1f08:	0003d090 	.word	0x0003d090

00001f0c <read_memory_map>:
    read_memory_map();
    get_num_of_saves();
}

/* Reads the memory map */
void read_memory_map(void) {
    1f0c:	b500      	push	{lr}
    1f0e:	b083      	sub	sp, #12
    uint8_t i2c_packet[] = {0, 0};
    1f10:	a901      	add	r1, sp, #4
    1f12:	2300      	movs	r3, #0
    1f14:	700b      	strb	r3, [r1, #0]
    1f16:	704b      	strb	r3, [r1, #1]
    TWI_read(EEPROM_ADDR, i2c_packet, MEMORY_MAP_SIZE_BYTES);
    1f18:	2208      	movs	r2, #8
    1f1a:	2050      	movs	r0, #80	; 0x50
    1f1c:	4b04      	ldr	r3, [pc, #16]	; (1f30 <read_memory_map+0x24>)
    1f1e:	4798      	blx	r3
    fs.memory_map = *(uint64_t *)I2C_get_rx_Buffer();
    1f20:	4b04      	ldr	r3, [pc, #16]	; (1f34 <read_memory_map+0x28>)
    1f22:	4798      	blx	r3
    1f24:	6802      	ldr	r2, [r0, #0]
    1f26:	4b04      	ldr	r3, [pc, #16]	; (1f38 <read_memory_map+0x2c>)
    1f28:	601a      	str	r2, [r3, #0]
}
    1f2a:	b003      	add	sp, #12
    1f2c:	bd00      	pop	{pc}
    1f2e:	46c0      	nop			; (mov r8, r8)
    1f30:	00003bcd 	.word	0x00003bcd
    1f34:	00003c31 	.word	0x00003c31
    1f38:	20001f78 	.word	0x20001f78

00001f3c <write_memory_map>:

/* Writes the memory map */
void write_memory_map(void) {
    1f3c:	b510      	push	{r4, lr}
    1f3e:	b084      	sub	sp, #16
    uint8_t i2c_packet[9] = {0};
    1f40:	2209      	movs	r2, #9
    1f42:	2100      	movs	r1, #0
    1f44:	a801      	add	r0, sp, #4
    1f46:	4b14      	ldr	r3, [pc, #80]	; (1f98 <write_memory_map+0x5c>)
    1f48:	4798      	blx	r3
    for (uint8_t i = 0; i < MEMORY_MAP_SIZE_BYTES; i++)
        i2c_packet[i + 1] = (fs.memory_map >> (i * 8)) & 0xFF;
    1f4a:	4b14      	ldr	r3, [pc, #80]	; (1f9c <write_memory_map+0x60>)
    1f4c:	6818      	ldr	r0, [r3, #0]
    1f4e:	466b      	mov	r3, sp
    1f50:	1d5a      	adds	r2, r3, #5
    1f52:	2300      	movs	r3, #0
    1f54:	0001      	movs	r1, r0
    1f56:	40d9      	lsrs	r1, r3
    1f58:	7011      	strb	r1, [r2, #0]
    1f5a:	3308      	adds	r3, #8
    1f5c:	3201      	adds	r2, #1
    for (uint8_t i = 0; i < MEMORY_MAP_SIZE_BYTES; i++)
    1f5e:	2b40      	cmp	r3, #64	; 0x40
    1f60:	d1f8      	bne.n	1f54 <write_memory_map+0x18>
    TWI_write(EEPROM_ADDR, MEMORY_MAP_SIZE_BYTES + 1, i2c_packet);
    1f62:	aa01      	add	r2, sp, #4
    1f64:	2109      	movs	r1, #9
    1f66:	2050      	movs	r0, #80	; 0x50
    1f68:	4b0d      	ldr	r3, [pc, #52]	; (1fa0 <write_memory_map+0x64>)
    1f6a:	4798      	blx	r3
    delay_ms(5);
    1f6c:	2000      	movs	r0, #0
    1f6e:	4b0d      	ldr	r3, [pc, #52]	; (1fa4 <write_memory_map+0x68>)
    1f70:	4798      	blx	r3
    1f72:	0002      	movs	r2, r0
    1f74:	2300      	movs	r3, #0
    1f76:	0f91      	lsrs	r1, r2, #30
    1f78:	0090      	lsls	r0, r2, #2
    1f7a:	1880      	adds	r0, r0, r2
    1f7c:	4159      	adcs	r1, r3
    1f7e:	4a0a      	ldr	r2, [pc, #40]	; (1fa8 <write_memory_map+0x6c>)
    1f80:	2300      	movs	r3, #0
    1f82:	1880      	adds	r0, r0, r2
    1f84:	4159      	adcs	r1, r3
    1f86:	4a09      	ldr	r2, [pc, #36]	; (1fac <write_memory_map+0x70>)
    1f88:	2300      	movs	r3, #0
    1f8a:	4c09      	ldr	r4, [pc, #36]	; (1fb0 <write_memory_map+0x74>)
    1f8c:	47a0      	blx	r4
    1f8e:	4b09      	ldr	r3, [pc, #36]	; (1fb4 <write_memory_map+0x78>)
    1f90:	4798      	blx	r3
}
    1f92:	b004      	add	sp, #16
    1f94:	bd10      	pop	{r4, pc}
    1f96:	46c0      	nop			; (mov r8, r8)
    1f98:	00008663 	.word	0x00008663
    1f9c:	20001f78 	.word	0x20001f78
    1fa0:	00003b6d 	.word	0x00003b6d
    1fa4:	00004ccd 	.word	0x00004ccd
    1fa8:	00001b57 	.word	0x00001b57
    1fac:	00001b58 	.word	0x00001b58
    1fb0:	000060e5 	.word	0x000060e5
    1fb4:	20000001 	.word	0x20000001

00001fb8 <preset_get_mem_pos>:

/* Converts preset position to a actual pointer in memory. Returns -1 if preset isn't in memory map. */
uint16_t preset_get_mem_pos(uint8_t position) {
    if (position > MAX_SAVES)
    1fb8:	2820      	cmp	r0, #32
    1fba:	d901      	bls.n	1fc0 <preset_get_mem_pos+0x8>
        return 0xFFFF;
    1fbc:	4807      	ldr	r0, [pc, #28]	; (1fdc <preset_get_mem_pos+0x24>)
    if (fs.memory_map & (1UL << position))
        return position * sizeof(PRESET) + MEMORY_MAP_SIZE;
    return 0xFFFF;
}
    1fbe:	4770      	bx	lr
    if (fs.memory_map & (1UL << position))
    1fc0:	4b07      	ldr	r3, [pc, #28]	; (1fe0 <preset_get_mem_pos+0x28>)
    1fc2:	681b      	ldr	r3, [r3, #0]
    1fc4:	40c3      	lsrs	r3, r0
    1fc6:	07db      	lsls	r3, r3, #31
    1fc8:	d401      	bmi.n	1fce <preset_get_mem_pos+0x16>
    return 0xFFFF;
    1fca:	4804      	ldr	r0, [pc, #16]	; (1fdc <preset_get_mem_pos+0x24>)
    1fcc:	e7f7      	b.n	1fbe <preset_get_mem_pos+0x6>
        return position * sizeof(PRESET) + MEMORY_MAP_SIZE;
    1fce:	2388      	movs	r3, #136	; 0x88
    1fd0:	009b      	lsls	r3, r3, #2
    1fd2:	4358      	muls	r0, r3
    1fd4:	3040      	adds	r0, #64	; 0x40
    1fd6:	b280      	uxth	r0, r0
    1fd8:	e7f1      	b.n	1fbe <preset_get_mem_pos+0x6>
    1fda:	46c0      	nop			; (mov r8, r8)
    1fdc:	0000ffff 	.word	0x0000ffff
    1fe0:	20001f78 	.word	0x20001f78

00001fe4 <get_num_of_saves>:

/* Checks the memory map and counts saves. */
void get_num_of_saves(void) {
    1fe4:	b510      	push	{r4, lr}
    uint8_t stevec = 0;
    for (uint8_t i = 0; i < MAX_SAVES; i++) {
        if (fs.memory_map & (1UL << i))
    1fe6:	4b09      	ldr	r3, [pc, #36]	; (200c <STACK_SIZE+0xc>)
    1fe8:	681c      	ldr	r4, [r3, #0]
    1fea:	2300      	movs	r3, #0
    uint8_t stevec = 0;
    1fec:	2200      	movs	r2, #0
        if (fs.memory_map & (1UL << i))
    1fee:	2001      	movs	r0, #1
    1ff0:	e002      	b.n	1ff8 <get_num_of_saves+0x14>
    1ff2:	3301      	adds	r3, #1
    for (uint8_t i = 0; i < MAX_SAVES; i++) {
    1ff4:	2b20      	cmp	r3, #32
    1ff6:	d006      	beq.n	2006 <STACK_SIZE+0x6>
        if (fs.memory_map & (1UL << i))
    1ff8:	0021      	movs	r1, r4
    1ffa:	40d9      	lsrs	r1, r3
    1ffc:	4208      	tst	r0, r1
    1ffe:	d0f8      	beq.n	1ff2 <get_num_of_saves+0xe>
            stevec++;
    2000:	3201      	adds	r2, #1
    2002:	b2d2      	uxtb	r2, r2
    2004:	e7f5      	b.n	1ff2 <get_num_of_saves+0xe>
    }
    fs.num_of_saves = stevec;
    2006:	4b01      	ldr	r3, [pc, #4]	; (200c <STACK_SIZE+0xc>)
    2008:	711a      	strb	r2, [r3, #4]
}
    200a:	bd10      	pop	{r4, pc}
    200c:	20001f78 	.word	0x20001f78

00002010 <memory_init>:
void memory_init(void) {
    2010:	b510      	push	{r4, lr}
    read_memory_map();
    2012:	4b02      	ldr	r3, [pc, #8]	; (201c <memory_init+0xc>)
    2014:	4798      	blx	r3
    get_num_of_saves();
    2016:	4b02      	ldr	r3, [pc, #8]	; (2020 <memory_init+0x10>)
    2018:	4798      	blx	r3
}
    201a:	bd10      	pop	{r4, pc}
    201c:	00001f0d 	.word	0x00001f0d
    2020:	00001fe5 	.word	0x00001fe5

00002024 <read_memory>:

/* Loads the preset from 0-MAX_SAVES, returns 0 if it fails, 1 on success*/
uint8_t read_memory(PRESET *preset, uint8_t position) {
    2024:	b510      	push	{r4, lr}
    2026:	b082      	sub	sp, #8
    2028:	0004      	movs	r4, r0
    uint16_t mem_position = preset_get_mem_pos(position);
    202a:	0008      	movs	r0, r1
    202c:	4b0b      	ldr	r3, [pc, #44]	; (205c <read_memory+0x38>)
    202e:	4798      	blx	r3

    /*if (mem_position == 0xFFFF)
        return 0;*/
    uint8_t i2c_packet[2] = {mem_position >> 8, mem_position & 0xFF};
    2030:	a901      	add	r1, sp, #4
    2032:	0a03      	lsrs	r3, r0, #8
    2034:	700b      	strb	r3, [r1, #0]
    2036:	7048      	strb	r0, [r1, #1]
    TWI_read(EEPROM_ADDR, i2c_packet, sizeof(PRESET));
    2038:	2288      	movs	r2, #136	; 0x88
    203a:	0092      	lsls	r2, r2, #2
    203c:	2050      	movs	r0, #80	; 0x50
    203e:	4b08      	ldr	r3, [pc, #32]	; (2060 <read_memory+0x3c>)
    2040:	4798      	blx	r3
    uint8_t *p_to_preset = (uint8_t *)preset;
    uint8_t *p_to_buf = I2C_get_rx_Buffer();
    2042:	4b08      	ldr	r3, [pc, #32]	; (2064 <read_memory+0x40>)
    2044:	4798      	blx	r3
    2046:	2300      	movs	r3, #0
    for (uint16_t i = 0; i < sizeof(PRESET); i++)
    2048:	2188      	movs	r1, #136	; 0x88
    204a:	0089      	lsls	r1, r1, #2
        *(p_to_preset++) = *(p_to_buf++);
    204c:	5cc2      	ldrb	r2, [r0, r3]
    204e:	54e2      	strb	r2, [r4, r3]
    2050:	3301      	adds	r3, #1
    for (uint16_t i = 0; i < sizeof(PRESET); i++)
    2052:	428b      	cmp	r3, r1
    2054:	d1fa      	bne.n	204c <read_memory+0x28>
    return 1;
}
    2056:	2001      	movs	r0, #1
    2058:	b002      	add	sp, #8
    205a:	bd10      	pop	{r4, pc}
    205c:	00001fb9 	.word	0x00001fb9
    2060:	00003bcd 	.word	0x00003bcd
    2064:	00003c31 	.word	0x00003c31

00002068 <write_memory>:
}
void memory_format(void) {
    fs.memory_map = 0;
    write_memory_map();
}
void write_memory(PRESET *preset, uint8_t position) {
    2068:	b5f0      	push	{r4, r5, r6, r7, lr}
    206a:	46d6      	mov	lr, sl
    206c:	464f      	mov	r7, r9
    206e:	4646      	mov	r6, r8
    2070:	b5c0      	push	{r6, r7, lr}
    2072:	b094      	sub	sp, #80	; 0x50
    2074:	0005      	movs	r5, r0
    2076:	4688      	mov	r8, r1
    volatile uint16_t remaining_size = sizeof(PRESET);
    2078:	2446      	movs	r4, #70	; 0x46
    207a:	ab02      	add	r3, sp, #8
    207c:	469c      	mov	ip, r3
    207e:	4464      	add	r4, ip
    2080:	2388      	movs	r3, #136	; 0x88
    2082:	009b      	lsls	r3, r3, #2
    2084:	8023      	strh	r3, [r4, #0]

    uint8_t send_packet[66];
    preset->position = position;
    2086:	8169      	strh	r1, [r5, #10]
    fs.memory_map |= (1UL << position);
    2088:	4a38      	ldr	r2, [pc, #224]	; (216c <write_memory+0x104>)
    208a:	2301      	movs	r3, #1
    208c:	408b      	lsls	r3, r1
    208e:	6811      	ldr	r1, [r2, #0]
    2090:	430b      	orrs	r3, r1
    2092:	6013      	str	r3, [r2, #0]
    write_memory_map();
    2094:	4b36      	ldr	r3, [pc, #216]	; (2170 <write_memory+0x108>)
    2096:	4798      	blx	r3

    uint8_t *p_to_preset = (uint8_t *)preset;
    uint16_t memory_position = preset_get_mem_pos(position);
    2098:	4640      	mov	r0, r8
    209a:	4b36      	ldr	r3, [pc, #216]	; (2174 <write_memory+0x10c>)
    209c:	4798      	blx	r3
    209e:	4680      	mov	r8, r0
    while (remaining_size > 0) {
    20a0:	8823      	ldrh	r3, [r4, #0]
    20a2:	b29b      	uxth	r3, r3
    20a4:	2b00      	cmp	r3, #0
    20a6:	d05b      	beq.n	2160 <write_memory+0xf8>
        send_packet[0] = (memory_position) >> 8;
        send_packet[1] = (memory_position) & 0xFF;

        if (remaining_size > 64) {
    20a8:	2446      	movs	r4, #70	; 0x46
    20aa:	ab02      	add	r3, sp, #8
    20ac:	469c      	mov	ip, r3
    20ae:	4464      	add	r4, ip
                *(send_packet + i) = *(p_to_preset + i);
            }
            remaining_size = 0;
            TWI_write(EEPROM_ADDR, send_packet, remaining_size + 2);
        }
        delay_ms(5);
    20b0:	46aa      	mov	sl, r5
    20b2:	e031      	b.n	2118 <write_memory+0xb0>
    20b4:	2302      	movs	r3, #2
                *(send_packet + i) = *(p_to_preset + i);
    20b6:	a903      	add	r1, sp, #12
    20b8:	4655      	mov	r5, sl
    20ba:	5cea      	ldrb	r2, [r5, r3]
    20bc:	545a      	strb	r2, [r3, r1]
    20be:	3301      	adds	r3, #1
            for (uint16_t i = 2; i < 66; i ++) {
    20c0:	2b42      	cmp	r3, #66	; 0x42
    20c2:	d1fa      	bne.n	20ba <write_memory+0x52>
    20c4:	46aa      	mov	sl, r5
            remaining_size -= 64;
    20c6:	8823      	ldrh	r3, [r4, #0]
    20c8:	3b40      	subs	r3, #64	; 0x40
    20ca:	b29b      	uxth	r3, r3
    20cc:	8023      	strh	r3, [r4, #0]
            memory_position += 64;
    20ce:	4643      	mov	r3, r8
    20d0:	3340      	adds	r3, #64	; 0x40
    20d2:	b29b      	uxth	r3, r3
    20d4:	4698      	mov	r8, r3
            TWI_write(EEPROM_ADDR, send_packet, 66);
    20d6:	a903      	add	r1, sp, #12
    20d8:	b2c9      	uxtb	r1, r1
    20da:	2242      	movs	r2, #66	; 0x42
    20dc:	2050      	movs	r0, #80	; 0x50
    20de:	4b26      	ldr	r3, [pc, #152]	; (2178 <write_memory+0x110>)
    20e0:	4798      	blx	r3
        delay_ms(5);
    20e2:	2000      	movs	r0, #0
    20e4:	4b25      	ldr	r3, [pc, #148]	; (217c <write_memory+0x114>)
    20e6:	4798      	blx	r3
    20e8:	0006      	movs	r6, r0
    20ea:	2700      	movs	r7, #0
    20ec:	0f83      	lsrs	r3, r0, #30
    20ee:	9301      	str	r3, [sp, #4]
    20f0:	0083      	lsls	r3, r0, #2
    20f2:	9300      	str	r3, [sp, #0]
    20f4:	9a00      	ldr	r2, [sp, #0]
    20f6:	9b01      	ldr	r3, [sp, #4]
    20f8:	1992      	adds	r2, r2, r6
    20fa:	417b      	adcs	r3, r7
    20fc:	4820      	ldr	r0, [pc, #128]	; (2180 <write_memory+0x118>)
    20fe:	2100      	movs	r1, #0
    2100:	1880      	adds	r0, r0, r2
    2102:	4159      	adcs	r1, r3
    2104:	4a1f      	ldr	r2, [pc, #124]	; (2184 <write_memory+0x11c>)
    2106:	2300      	movs	r3, #0
    2108:	4d1f      	ldr	r5, [pc, #124]	; (2188 <write_memory+0x120>)
    210a:	47a8      	blx	r5
    210c:	4b1f      	ldr	r3, [pc, #124]	; (218c <write_memory+0x124>)
    210e:	4798      	blx	r3
    while (remaining_size > 0) {
    2110:	8823      	ldrh	r3, [r4, #0]
    2112:	b29b      	uxth	r3, r3
    2114:	2b00      	cmp	r3, #0
    2116:	d023      	beq.n	2160 <write_memory+0xf8>
        send_packet[0] = (memory_position) >> 8;
    2118:	ab03      	add	r3, sp, #12
    211a:	4642      	mov	r2, r8
    211c:	0a12      	lsrs	r2, r2, #8
    211e:	701a      	strb	r2, [r3, #0]
        send_packet[1] = (memory_position) & 0xFF;
    2120:	4642      	mov	r2, r8
    2122:	705a      	strb	r2, [r3, #1]
        if (remaining_size > 64) {
    2124:	8823      	ldrh	r3, [r4, #0]
    2126:	b29b      	uxth	r3, r3
    2128:	2b40      	cmp	r3, #64	; 0x40
    212a:	d8c3      	bhi.n	20b4 <write_memory+0x4c>
            for (uint16_t i = 2; i < remaining_size + 2; i++) {
    212c:	8821      	ldrh	r1, [r4, #0]
    212e:	3102      	adds	r1, #2
    2130:	2302      	movs	r3, #2
                *(send_packet + i) = *(p_to_preset + i);
    2132:	aa03      	add	r2, sp, #12
    2134:	4655      	mov	r5, sl
            for (uint16_t i = 2; i < remaining_size + 2; i++) {
    2136:	2902      	cmp	r1, #2
    2138:	dd08      	ble.n	214c <write_memory+0xe4>
                *(send_packet + i) = *(p_to_preset + i);
    213a:	5ce9      	ldrb	r1, [r5, r3]
    213c:	54d1      	strb	r1, [r2, r3]
            for (uint16_t i = 2; i < remaining_size + 2; i++) {
    213e:	3301      	adds	r3, #1
    2140:	b29b      	uxth	r3, r3
    2142:	8821      	ldrh	r1, [r4, #0]
    2144:	3102      	adds	r1, #2
    2146:	428b      	cmp	r3, r1
    2148:	dbf7      	blt.n	213a <write_memory+0xd2>
    214a:	46aa      	mov	sl, r5
            remaining_size = 0;
    214c:	2300      	movs	r3, #0
    214e:	8023      	strh	r3, [r4, #0]
            TWI_write(EEPROM_ADDR, send_packet, remaining_size + 2);
    2150:	8822      	ldrh	r2, [r4, #0]
    2152:	3202      	adds	r2, #2
    2154:	a903      	add	r1, sp, #12
    2156:	b2c9      	uxtb	r1, r1
    2158:	2050      	movs	r0, #80	; 0x50
    215a:	4b07      	ldr	r3, [pc, #28]	; (2178 <write_memory+0x110>)
    215c:	4798      	blx	r3
    215e:	e7c0      	b.n	20e2 <write_memory+0x7a>
            TWI_write(EEPROM_ADDR, send_packet, remaining_size + 2);
        }
        delay_ms(5);
    }*/
    return;
    2160:	b014      	add	sp, #80	; 0x50
    2162:	bc1c      	pop	{r2, r3, r4}
    2164:	4690      	mov	r8, r2
    2166:	4699      	mov	r9, r3
    2168:	46a2      	mov	sl, r4
    216a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    216c:	20001f78 	.word	0x20001f78
    2170:	00001f3d 	.word	0x00001f3d
    2174:	00001fb9 	.word	0x00001fb9
    2178:	00003b6d 	.word	0x00003b6d
    217c:	00004ccd 	.word	0x00004ccd
    2180:	00001b57 	.word	0x00001b57
    2184:	00001b58 	.word	0x00001b58
    2188:	000060e5 	.word	0x000060e5
    218c:	20000001 	.word	0x20000001

00002190 <dac_is_syncing>:
    2190:	6803      	ldr	r3, [r0, #0]
    2192:	6918      	ldr	r0, [r3, #16]
    2194:	1e43      	subs	r3, r0, #1
    2196:	4198      	sbcs	r0, r3
    2198:	b2c0      	uxtb	r0, r0
    219a:	4770      	bx	lr

0000219c <dac_get_config_defaults>:
    219c:	2300      	movs	r3, #0
    219e:	7003      	strb	r3, [r0, #0]
    21a0:	2201      	movs	r2, #1
    21a2:	7042      	strb	r2, [r0, #1]
    21a4:	7083      	strb	r3, [r0, #2]
    21a6:	7103      	strb	r3, [r0, #4]
    21a8:	70c3      	strb	r3, [r0, #3]
    21aa:	7143      	strb	r3, [r0, #5]
    21ac:	7183      	strb	r3, [r0, #6]
    21ae:	4770      	bx	lr

000021b0 <dac_init>:
    21b0:	b5f0      	push	{r4, r5, r6, r7, lr}
    21b2:	46c6      	mov	lr, r8
    21b4:	b500      	push	{lr}
    21b6:	b082      	sub	sp, #8
    21b8:	0005      	movs	r5, r0
    21ba:	0014      	movs	r4, r2
    21bc:	6001      	str	r1, [r0, #0]
    21be:	4a28      	ldr	r2, [pc, #160]	; (2260 <dac_init+0xb0>)
    21c0:	69d0      	ldr	r0, [r2, #28]
    21c2:	2380      	movs	r3, #128	; 0x80
    21c4:	039b      	lsls	r3, r3, #14
    21c6:	4303      	orrs	r3, r0
    21c8:	61d3      	str	r3, [r2, #28]
    21ca:	780b      	ldrb	r3, [r1, #0]
    21cc:	201c      	movs	r0, #28
    21ce:	079b      	lsls	r3, r3, #30
    21d0:	d503      	bpl.n	21da <dac_init+0x2a>
    21d2:	b002      	add	sp, #8
    21d4:	bc04      	pop	{r2}
    21d6:	4690      	mov	r8, r2
    21d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    21da:	780b      	ldrb	r3, [r1, #0]
    21dc:	3817      	subs	r0, #23
    21de:	07db      	lsls	r3, r3, #31
    21e0:	d4f7      	bmi.n	21d2 <dac_init+0x22>
    21e2:	a901      	add	r1, sp, #4
    21e4:	78e3      	ldrb	r3, [r4, #3]
    21e6:	700b      	strb	r3, [r1, #0]
    21e8:	301f      	adds	r0, #31
    21ea:	4b1e      	ldr	r3, [pc, #120]	; (2264 <dac_init+0xb4>)
    21ec:	4798      	blx	r3
    21ee:	2024      	movs	r0, #36	; 0x24
    21f0:	4b1d      	ldr	r3, [pc, #116]	; (2268 <dac_init+0xb8>)
    21f2:	4798      	blx	r3
    21f4:	2600      	movs	r6, #0
    21f6:	466b      	mov	r3, sp
    21f8:	705e      	strb	r6, [r3, #1]
    21fa:	70de      	strb	r6, [r3, #3]
    21fc:	2301      	movs	r3, #1
    21fe:	466a      	mov	r2, sp
    2200:	7013      	strb	r3, [r2, #0]
    2202:	7096      	strb	r6, [r2, #2]
    2204:	4669      	mov	r1, sp
    2206:	2002      	movs	r0, #2
    2208:	4b18      	ldr	r3, [pc, #96]	; (226c <dac_init+0xbc>)
    220a:	4798      	blx	r3
    220c:	682f      	ldr	r7, [r5, #0]
    220e:	7863      	ldrb	r3, [r4, #1]
    2210:	712b      	strb	r3, [r5, #4]
    2212:	71ae      	strb	r6, [r5, #6]
    2214:	7963      	ldrb	r3, [r4, #5]
    2216:	1e5a      	subs	r2, r3, #1
    2218:	4193      	sbcs	r3, r2
    221a:	019b      	lsls	r3, r3, #6
    221c:	7822      	ldrb	r2, [r4, #0]
    221e:	4690      	mov	r8, r2
    2220:	78a2      	ldrb	r2, [r4, #2]
    2222:	2a00      	cmp	r2, #0
    2224:	d003      	beq.n	222e <dac_init+0x7e>
    2226:	2204      	movs	r2, #4
    2228:	4641      	mov	r1, r8
    222a:	4311      	orrs	r1, r2
    222c:	4688      	mov	r8, r1
    222e:	7922      	ldrb	r2, [r4, #4]
    2230:	2a00      	cmp	r2, #0
    2232:	d003      	beq.n	223c <dac_init+0x8c>
    2234:	2208      	movs	r2, #8
    2236:	4641      	mov	r1, r8
    2238:	4311      	orrs	r1, r2
    223a:	4688      	mov	r8, r1
    223c:	b2db      	uxtb	r3, r3
    223e:	703b      	strb	r3, [r7, #0]
    2240:	4e0b      	ldr	r6, [pc, #44]	; (2270 <dac_init+0xc0>)
    2242:	0028      	movs	r0, r5
    2244:	47b0      	blx	r6
    2246:	2800      	cmp	r0, #0
    2248:	d1fb      	bne.n	2242 <dac_init+0x92>
    224a:	4643      	mov	r3, r8
    224c:	707b      	strb	r3, [r7, #1]
    224e:	7823      	ldrb	r3, [r4, #0]
    2250:	716b      	strb	r3, [r5, #5]
    2252:	2300      	movs	r3, #0
    2254:	616b      	str	r3, [r5, #20]
    2256:	61ab      	str	r3, [r5, #24]
    2258:	61eb      	str	r3, [r5, #28]
    225a:	4b06      	ldr	r3, [pc, #24]	; (2274 <dac_init+0xc4>)
    225c:	601d      	str	r5, [r3, #0]
    225e:	e7b8      	b.n	21d2 <dac_init+0x22>
    2260:	40000800 	.word	0x40000800
    2264:	00004da9 	.word	0x00004da9
    2268:	00004d39 	.word	0x00004d39
    226c:	00004ea5 	.word	0x00004ea5
    2270:	00002191 	.word	0x00002191
    2274:	20001f80 	.word	0x20001f80

00002278 <dac_enable>:
    2278:	b570      	push	{r4, r5, r6, lr}
    227a:	0004      	movs	r4, r0
    227c:	6805      	ldr	r5, [r0, #0]
    227e:	786b      	ldrb	r3, [r5, #1]
    2280:	7902      	ldrb	r2, [r0, #4]
    2282:	4313      	orrs	r3, r2
    2284:	706b      	strb	r3, [r5, #1]
    2286:	4e0c      	ldr	r6, [pc, #48]	; (22b8 <dac_enable+0x40>)
    2288:	0020      	movs	r0, r4
    228a:	47b0      	blx	r6
    228c:	2800      	cmp	r0, #0
    228e:	d1fb      	bne.n	2288 <dac_enable+0x10>
    2290:	782b      	ldrb	r3, [r5, #0]
    2292:	2202      	movs	r2, #2
    2294:	4313      	orrs	r3, r2
    2296:	702b      	strb	r3, [r5, #0]
    2298:	7963      	ldrb	r3, [r4, #5]
    229a:	2b00      	cmp	r3, #0
    229c:	d104      	bne.n	22a8 <dac_enable+0x30>
    229e:	4a07      	ldr	r2, [pc, #28]	; (22bc <dac_enable+0x44>)
    22a0:	69d3      	ldr	r3, [r2, #28]
    22a2:	2104      	movs	r1, #4
    22a4:	430b      	orrs	r3, r1
    22a6:	61d3      	str	r3, [r2, #28]
    22a8:	782b      	ldrb	r3, [r5, #0]
    22aa:	079b      	lsls	r3, r3, #30
    22ac:	d503      	bpl.n	22b6 <dac_enable+0x3e>
    22ae:	2201      	movs	r2, #1
    22b0:	79eb      	ldrb	r3, [r5, #7]
    22b2:	4213      	tst	r3, r2
    22b4:	d0fc      	beq.n	22b0 <dac_enable+0x38>
    22b6:	bd70      	pop	{r4, r5, r6, pc}
    22b8:	00002191 	.word	0x00002191
    22bc:	40001800 	.word	0x40001800

000022c0 <dac_chan_get_config_defaults>:
    22c0:	4770      	bx	lr

000022c2 <dac_chan_set_config>:
    22c2:	4770      	bx	lr

000022c4 <dac_chan_enable>:
    22c4:	4770      	bx	lr
	...

000022c8 <dac_chan_write>:
    22c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    22ca:	0004      	movs	r4, r0
    22cc:	0017      	movs	r7, r2
    22ce:	6806      	ldr	r6, [r0, #0]
    22d0:	4d06      	ldr	r5, [pc, #24]	; (22ec <dac_chan_write+0x24>)
    22d2:	0020      	movs	r0, r4
    22d4:	47a8      	blx	r5
    22d6:	2800      	cmp	r0, #0
    22d8:	d1fb      	bne.n	22d2 <dac_chan_write+0xa>
    22da:	79a3      	ldrb	r3, [r4, #6]
    22dc:	2b00      	cmp	r3, #0
    22de:	d102      	bne.n	22e6 <dac_chan_write+0x1e>
    22e0:	8137      	strh	r7, [r6, #8]
    22e2:	2000      	movs	r0, #0
    22e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    22e6:	81b7      	strh	r7, [r6, #12]
    22e8:	e7fb      	b.n	22e2 <dac_chan_write+0x1a>
    22ea:	46c0      	nop			; (mov r8, r8)
    22ec:	00002191 	.word	0x00002191

000022f0 <DAC_Handler>:
    22f0:	b570      	push	{r4, r5, r6, lr}
    22f2:	4b27      	ldr	r3, [pc, #156]	; (2390 <DAC_Handler+0xa0>)
    22f4:	681c      	ldr	r4, [r3, #0]
    22f6:	6825      	ldr	r5, [r4, #0]
    22f8:	79ab      	ldrb	r3, [r5, #6]
    22fa:	07db      	lsls	r3, r3, #31
    22fc:	d507      	bpl.n	230e <DAC_Handler+0x1e>
    22fe:	2301      	movs	r3, #1
    2300:	71ab      	strb	r3, [r5, #6]
    2302:	0023      	movs	r3, r4
    2304:	3314      	adds	r3, #20
    2306:	d002      	beq.n	230e <DAC_Handler+0x1e>
    2308:	7c63      	ldrb	r3, [r4, #17]
    230a:	2b00      	cmp	r3, #0
    230c:	d131      	bne.n	2372 <DAC_Handler+0x82>
    230e:	79ab      	ldrb	r3, [r5, #6]
    2310:	079b      	lsls	r3, r3, #30
    2312:	d538      	bpl.n	2386 <DAC_Handler+0x96>
    2314:	2302      	movs	r3, #2
    2316:	71ab      	strb	r3, [r5, #6]
    2318:	89a3      	ldrh	r3, [r4, #12]
    231a:	b29b      	uxth	r3, r3
    231c:	2b00      	cmp	r3, #0
    231e:	d02c      	beq.n	237a <DAC_Handler+0x8a>
    2320:	89e3      	ldrh	r3, [r4, #14]
    2322:	b29b      	uxth	r3, r3
    2324:	1c5a      	adds	r2, r3, #1
    2326:	b292      	uxth	r2, r2
    2328:	81e2      	strh	r2, [r4, #14]
    232a:	005b      	lsls	r3, r3, #1
    232c:	68a2      	ldr	r2, [r4, #8]
    232e:	4694      	mov	ip, r2
    2330:	4463      	add	r3, ip
    2332:	881b      	ldrh	r3, [r3, #0]
    2334:	b29b      	uxth	r3, r3
    2336:	81ab      	strh	r3, [r5, #12]
    2338:	89a3      	ldrh	r3, [r4, #12]
    233a:	3b01      	subs	r3, #1
    233c:	b29b      	uxth	r3, r3
    233e:	81a3      	strh	r3, [r4, #12]
    2340:	89a3      	ldrh	r3, [r4, #12]
    2342:	b29b      	uxth	r3, r3
    2344:	2b00      	cmp	r3, #0
    2346:	d118      	bne.n	237a <DAC_Handler+0x8a>
    2348:	2200      	movs	r2, #0
    234a:	3320      	adds	r3, #32
    234c:	54e2      	strb	r2, [r4, r3]
    234e:	3b1e      	subs	r3, #30
    2350:	712b      	strb	r3, [r5, #4]
    2352:	71ab      	strb	r3, [r5, #6]
    2354:	2180      	movs	r1, #128	; 0x80
    2356:	0549      	lsls	r1, r1, #21
    2358:	337e      	adds	r3, #126	; 0x7e
    235a:	4a0e      	ldr	r2, [pc, #56]	; (2394 <DAC_Handler+0xa4>)
    235c:	50d1      	str	r1, [r2, r3]
    235e:	0023      	movs	r3, r4
    2360:	3314      	adds	r3, #20
    2362:	d010      	beq.n	2386 <DAC_Handler+0x96>
    2364:	7ca3      	ldrb	r3, [r4, #18]
    2366:	2b00      	cmp	r3, #0
    2368:	d00a      	beq.n	2380 <DAC_Handler+0x90>
    236a:	2000      	movs	r0, #0
    236c:	69e3      	ldr	r3, [r4, #28]
    236e:	4798      	blx	r3
    2370:	e006      	b.n	2380 <DAC_Handler+0x90>
    2372:	2000      	movs	r0, #0
    2374:	69a3      	ldr	r3, [r4, #24]
    2376:	4798      	blx	r3
    2378:	e7c9      	b.n	230e <DAC_Handler+0x1e>
    237a:	0023      	movs	r3, r4
    237c:	3314      	adds	r3, #20
    237e:	d002      	beq.n	2386 <DAC_Handler+0x96>
    2380:	7c23      	ldrb	r3, [r4, #16]
    2382:	2b00      	cmp	r3, #0
    2384:	d100      	bne.n	2388 <DAC_Handler+0x98>
    2386:	bd70      	pop	{r4, r5, r6, pc}
    2388:	6963      	ldr	r3, [r4, #20]
    238a:	2000      	movs	r0, #0
    238c:	4798      	blx	r3
    238e:	e7fa      	b.n	2386 <DAC_Handler+0x96>
    2390:	20001f80 	.word	0x20001f80
    2394:	e000e100 	.word	0xe000e100

00002398 <long_division>:
    2398:	b5f0      	push	{r4, r5, r6, r7, lr}
    239a:	46de      	mov	lr, fp
    239c:	4657      	mov	r7, sl
    239e:	464e      	mov	r6, r9
    23a0:	4645      	mov	r5, r8
    23a2:	b5e0      	push	{r5, r6, r7, lr}
    23a4:	b087      	sub	sp, #28
    23a6:	4680      	mov	r8, r0
    23a8:	9104      	str	r1, [sp, #16]
    23aa:	0016      	movs	r6, r2
    23ac:	001f      	movs	r7, r3
    23ae:	2200      	movs	r2, #0
    23b0:	2300      	movs	r3, #0
    23b2:	2100      	movs	r1, #0
    23b4:	468b      	mov	fp, r1
    23b6:	243f      	movs	r4, #63	; 0x3f
    23b8:	2001      	movs	r0, #1
    23ba:	0021      	movs	r1, r4
    23bc:	9600      	str	r6, [sp, #0]
    23be:	9701      	str	r7, [sp, #4]
    23c0:	465c      	mov	r4, fp
    23c2:	9403      	str	r4, [sp, #12]
    23c4:	4644      	mov	r4, r8
    23c6:	9405      	str	r4, [sp, #20]
    23c8:	e013      	b.n	23f2 <long_division+0x5a>
    23ca:	2420      	movs	r4, #32
    23cc:	1a64      	subs	r4, r4, r1
    23ce:	0005      	movs	r5, r0
    23d0:	40e5      	lsrs	r5, r4
    23d2:	46a8      	mov	r8, r5
    23d4:	e014      	b.n	2400 <long_division+0x68>
    23d6:	9c00      	ldr	r4, [sp, #0]
    23d8:	9d01      	ldr	r5, [sp, #4]
    23da:	1b12      	subs	r2, r2, r4
    23dc:	41ab      	sbcs	r3, r5
    23de:	465c      	mov	r4, fp
    23e0:	464d      	mov	r5, r9
    23e2:	432c      	orrs	r4, r5
    23e4:	46a3      	mov	fp, r4
    23e6:	9c03      	ldr	r4, [sp, #12]
    23e8:	4645      	mov	r5, r8
    23ea:	432c      	orrs	r4, r5
    23ec:	9403      	str	r4, [sp, #12]
    23ee:	3901      	subs	r1, #1
    23f0:	d325      	bcc.n	243e <long_division+0xa6>
    23f2:	2420      	movs	r4, #32
    23f4:	4264      	negs	r4, r4
    23f6:	190c      	adds	r4, r1, r4
    23f8:	d4e7      	bmi.n	23ca <long_division+0x32>
    23fa:	0005      	movs	r5, r0
    23fc:	40a5      	lsls	r5, r4
    23fe:	46a8      	mov	r8, r5
    2400:	0004      	movs	r4, r0
    2402:	408c      	lsls	r4, r1
    2404:	46a1      	mov	r9, r4
    2406:	1892      	adds	r2, r2, r2
    2408:	415b      	adcs	r3, r3
    240a:	0014      	movs	r4, r2
    240c:	001d      	movs	r5, r3
    240e:	9e05      	ldr	r6, [sp, #20]
    2410:	464f      	mov	r7, r9
    2412:	403e      	ands	r6, r7
    2414:	46b4      	mov	ip, r6
    2416:	9e04      	ldr	r6, [sp, #16]
    2418:	4647      	mov	r7, r8
    241a:	403e      	ands	r6, r7
    241c:	46b2      	mov	sl, r6
    241e:	4666      	mov	r6, ip
    2420:	4657      	mov	r7, sl
    2422:	433e      	orrs	r6, r7
    2424:	d003      	beq.n	242e <long_division+0x96>
    2426:	0006      	movs	r6, r0
    2428:	4326      	orrs	r6, r4
    242a:	0032      	movs	r2, r6
    242c:	002b      	movs	r3, r5
    242e:	9c00      	ldr	r4, [sp, #0]
    2430:	9d01      	ldr	r5, [sp, #4]
    2432:	429d      	cmp	r5, r3
    2434:	d8db      	bhi.n	23ee <long_division+0x56>
    2436:	d1ce      	bne.n	23d6 <long_division+0x3e>
    2438:	4294      	cmp	r4, r2
    243a:	d8d8      	bhi.n	23ee <long_division+0x56>
    243c:	e7cb      	b.n	23d6 <long_division+0x3e>
    243e:	9b03      	ldr	r3, [sp, #12]
    2440:	4658      	mov	r0, fp
    2442:	0019      	movs	r1, r3
    2444:	b007      	add	sp, #28
    2446:	bc3c      	pop	{r2, r3, r4, r5}
    2448:	4690      	mov	r8, r2
    244a:	4699      	mov	r9, r3
    244c:	46a2      	mov	sl, r4
    244e:	46ab      	mov	fp, r5
    2450:	bdf0      	pop	{r4, r5, r6, r7, pc}

00002452 <_sercom_get_sync_baud_val>:
    2452:	b510      	push	{r4, lr}
    2454:	0849      	lsrs	r1, r1, #1
    2456:	2340      	movs	r3, #64	; 0x40
    2458:	2400      	movs	r4, #0
    245a:	4281      	cmp	r1, r0
    245c:	d202      	bcs.n	2464 <_sercom_get_sync_baud_val+0x12>
    245e:	0018      	movs	r0, r3
    2460:	bd10      	pop	{r4, pc}
    2462:	001c      	movs	r4, r3
    2464:	1a09      	subs	r1, r1, r0
    2466:	1c63      	adds	r3, r4, #1
    2468:	b29b      	uxth	r3, r3
    246a:	4288      	cmp	r0, r1
    246c:	d9f9      	bls.n	2462 <_sercom_get_sync_baud_val+0x10>
    246e:	2340      	movs	r3, #64	; 0x40
    2470:	2cff      	cmp	r4, #255	; 0xff
    2472:	d8f4      	bhi.n	245e <_sercom_get_sync_baud_val+0xc>
    2474:	8014      	strh	r4, [r2, #0]
    2476:	2300      	movs	r3, #0
    2478:	e7f1      	b.n	245e <_sercom_get_sync_baud_val+0xc>
	...

0000247c <_sercom_get_async_baud_val>:
    247c:	b5f0      	push	{r4, r5, r6, r7, lr}
    247e:	b083      	sub	sp, #12
    2480:	000f      	movs	r7, r1
    2482:	0016      	movs	r6, r2
    2484:	aa08      	add	r2, sp, #32
    2486:	7811      	ldrb	r1, [r2, #0]
    2488:	0004      	movs	r4, r0
    248a:	434c      	muls	r4, r1
    248c:	2240      	movs	r2, #64	; 0x40
    248e:	42bc      	cmp	r4, r7
    2490:	d902      	bls.n	2498 <_sercom_get_async_baud_val+0x1c>
    2492:	0010      	movs	r0, r2
    2494:	b003      	add	sp, #12
    2496:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2498:	2b00      	cmp	r3, #0
    249a:	d114      	bne.n	24c6 <_sercom_get_async_baud_val+0x4a>
    249c:	0002      	movs	r2, r0
    249e:	0008      	movs	r0, r1
    24a0:	2100      	movs	r1, #0
    24a2:	4c19      	ldr	r4, [pc, #100]	; (2508 <_sercom_get_async_baud_val+0x8c>)
    24a4:	47a0      	blx	r4
    24a6:	0001      	movs	r1, r0
    24a8:	003a      	movs	r2, r7
    24aa:	2300      	movs	r3, #0
    24ac:	2000      	movs	r0, #0
    24ae:	4c17      	ldr	r4, [pc, #92]	; (250c <_sercom_get_async_baud_val+0x90>)
    24b0:	47a0      	blx	r4
    24b2:	2200      	movs	r2, #0
    24b4:	2301      	movs	r3, #1
    24b6:	1a12      	subs	r2, r2, r0
    24b8:	418b      	sbcs	r3, r1
    24ba:	0c12      	lsrs	r2, r2, #16
    24bc:	041b      	lsls	r3, r3, #16
    24be:	431a      	orrs	r2, r3
    24c0:	8032      	strh	r2, [r6, #0]
    24c2:	2200      	movs	r2, #0
    24c4:	e7e5      	b.n	2492 <_sercom_get_async_baud_val+0x16>
    24c6:	2200      	movs	r2, #0
    24c8:	2b01      	cmp	r3, #1
    24ca:	d1f9      	bne.n	24c0 <_sercom_get_async_baud_val+0x44>
    24cc:	000a      	movs	r2, r1
    24ce:	2300      	movs	r3, #0
    24d0:	2100      	movs	r1, #0
    24d2:	4c0d      	ldr	r4, [pc, #52]	; (2508 <_sercom_get_async_baud_val+0x8c>)
    24d4:	47a0      	blx	r4
    24d6:	0002      	movs	r2, r0
    24d8:	000b      	movs	r3, r1
    24da:	9200      	str	r2, [sp, #0]
    24dc:	9301      	str	r3, [sp, #4]
    24de:	0038      	movs	r0, r7
    24e0:	2100      	movs	r1, #0
    24e2:	4c0a      	ldr	r4, [pc, #40]	; (250c <_sercom_get_async_baud_val+0x90>)
    24e4:	47a0      	blx	r4
    24e6:	0005      	movs	r5, r0
    24e8:	2380      	movs	r3, #128	; 0x80
    24ea:	019b      	lsls	r3, r3, #6
    24ec:	2240      	movs	r2, #64	; 0x40
    24ee:	4298      	cmp	r0, r3
    24f0:	d8cf      	bhi.n	2492 <_sercom_get_async_baud_val+0x16>
    24f2:	0f79      	lsrs	r1, r7, #29
    24f4:	00f8      	lsls	r0, r7, #3
    24f6:	9a00      	ldr	r2, [sp, #0]
    24f8:	9b01      	ldr	r3, [sp, #4]
    24fa:	47a0      	blx	r4
    24fc:	00ea      	lsls	r2, r5, #3
    24fe:	1a82      	subs	r2, r0, r2
    2500:	b2d2      	uxtb	r2, r2
    2502:	0352      	lsls	r2, r2, #13
    2504:	432a      	orrs	r2, r5
    2506:	e7db      	b.n	24c0 <_sercom_get_async_baud_val+0x44>
    2508:	00006125 	.word	0x00006125
    250c:	00002399 	.word	0x00002399

00002510 <sercom_set_gclk_generator>:
    2510:	b510      	push	{r4, lr}
    2512:	b082      	sub	sp, #8
    2514:	0004      	movs	r4, r0
    2516:	4b0e      	ldr	r3, [pc, #56]	; (2550 <sercom_set_gclk_generator+0x40>)
    2518:	781b      	ldrb	r3, [r3, #0]
    251a:	2b00      	cmp	r3, #0
    251c:	d007      	beq.n	252e <sercom_set_gclk_generator+0x1e>
    251e:	2900      	cmp	r1, #0
    2520:	d105      	bne.n	252e <sercom_set_gclk_generator+0x1e>
    2522:	4b0b      	ldr	r3, [pc, #44]	; (2550 <sercom_set_gclk_generator+0x40>)
    2524:	785b      	ldrb	r3, [r3, #1]
    2526:	4283      	cmp	r3, r0
    2528:	d010      	beq.n	254c <sercom_set_gclk_generator+0x3c>
    252a:	201d      	movs	r0, #29
    252c:	e00c      	b.n	2548 <sercom_set_gclk_generator+0x38>
    252e:	a901      	add	r1, sp, #4
    2530:	700c      	strb	r4, [r1, #0]
    2532:	2012      	movs	r0, #18
    2534:	4b07      	ldr	r3, [pc, #28]	; (2554 <sercom_set_gclk_generator+0x44>)
    2536:	4798      	blx	r3
    2538:	2012      	movs	r0, #18
    253a:	4b07      	ldr	r3, [pc, #28]	; (2558 <sercom_set_gclk_generator+0x48>)
    253c:	4798      	blx	r3
    253e:	4b04      	ldr	r3, [pc, #16]	; (2550 <sercom_set_gclk_generator+0x40>)
    2540:	705c      	strb	r4, [r3, #1]
    2542:	2201      	movs	r2, #1
    2544:	701a      	strb	r2, [r3, #0]
    2546:	2000      	movs	r0, #0
    2548:	b002      	add	sp, #8
    254a:	bd10      	pop	{r4, pc}
    254c:	2000      	movs	r0, #0
    254e:	e7fb      	b.n	2548 <sercom_set_gclk_generator+0x38>
    2550:	200002e0 	.word	0x200002e0
    2554:	00004da9 	.word	0x00004da9
    2558:	00004d39 	.word	0x00004d39

0000255c <_sercom_get_default_pad>:
    255c:	4b40      	ldr	r3, [pc, #256]	; (2660 <_sercom_get_default_pad+0x104>)
    255e:	4298      	cmp	r0, r3
    2560:	d031      	beq.n	25c6 <_sercom_get_default_pad+0x6a>
    2562:	d90a      	bls.n	257a <_sercom_get_default_pad+0x1e>
    2564:	4b3f      	ldr	r3, [pc, #252]	; (2664 <_sercom_get_default_pad+0x108>)
    2566:	4298      	cmp	r0, r3
    2568:	d04d      	beq.n	2606 <_sercom_get_default_pad+0xaa>
    256a:	4b3f      	ldr	r3, [pc, #252]	; (2668 <_sercom_get_default_pad+0x10c>)
    256c:	4298      	cmp	r0, r3
    256e:	d05a      	beq.n	2626 <_sercom_get_default_pad+0xca>
    2570:	4b3e      	ldr	r3, [pc, #248]	; (266c <_sercom_get_default_pad+0x110>)
    2572:	4298      	cmp	r0, r3
    2574:	d037      	beq.n	25e6 <_sercom_get_default_pad+0x8a>
    2576:	2000      	movs	r0, #0
    2578:	4770      	bx	lr
    257a:	4b3d      	ldr	r3, [pc, #244]	; (2670 <_sercom_get_default_pad+0x114>)
    257c:	4298      	cmp	r0, r3
    257e:	d00c      	beq.n	259a <_sercom_get_default_pad+0x3e>
    2580:	4b3c      	ldr	r3, [pc, #240]	; (2674 <_sercom_get_default_pad+0x118>)
    2582:	4298      	cmp	r0, r3
    2584:	d1f7      	bne.n	2576 <_sercom_get_default_pad+0x1a>
    2586:	2901      	cmp	r1, #1
    2588:	d017      	beq.n	25ba <_sercom_get_default_pad+0x5e>
    258a:	2900      	cmp	r1, #0
    258c:	d05d      	beq.n	264a <_sercom_get_default_pad+0xee>
    258e:	2902      	cmp	r1, #2
    2590:	d015      	beq.n	25be <_sercom_get_default_pad+0x62>
    2592:	2903      	cmp	r1, #3
    2594:	d015      	beq.n	25c2 <_sercom_get_default_pad+0x66>
    2596:	2000      	movs	r0, #0
    2598:	e7ee      	b.n	2578 <_sercom_get_default_pad+0x1c>
    259a:	2901      	cmp	r1, #1
    259c:	d007      	beq.n	25ae <_sercom_get_default_pad+0x52>
    259e:	2900      	cmp	r1, #0
    25a0:	d051      	beq.n	2646 <_sercom_get_default_pad+0xea>
    25a2:	2902      	cmp	r1, #2
    25a4:	d005      	beq.n	25b2 <_sercom_get_default_pad+0x56>
    25a6:	2903      	cmp	r1, #3
    25a8:	d005      	beq.n	25b6 <_sercom_get_default_pad+0x5a>
    25aa:	2000      	movs	r0, #0
    25ac:	e7e4      	b.n	2578 <_sercom_get_default_pad+0x1c>
    25ae:	4832      	ldr	r0, [pc, #200]	; (2678 <_sercom_get_default_pad+0x11c>)
    25b0:	e7e2      	b.n	2578 <_sercom_get_default_pad+0x1c>
    25b2:	4832      	ldr	r0, [pc, #200]	; (267c <_sercom_get_default_pad+0x120>)
    25b4:	e7e0      	b.n	2578 <_sercom_get_default_pad+0x1c>
    25b6:	4832      	ldr	r0, [pc, #200]	; (2680 <_sercom_get_default_pad+0x124>)
    25b8:	e7de      	b.n	2578 <_sercom_get_default_pad+0x1c>
    25ba:	4832      	ldr	r0, [pc, #200]	; (2684 <_sercom_get_default_pad+0x128>)
    25bc:	e7dc      	b.n	2578 <_sercom_get_default_pad+0x1c>
    25be:	4832      	ldr	r0, [pc, #200]	; (2688 <_sercom_get_default_pad+0x12c>)
    25c0:	e7da      	b.n	2578 <_sercom_get_default_pad+0x1c>
    25c2:	4832      	ldr	r0, [pc, #200]	; (268c <_sercom_get_default_pad+0x130>)
    25c4:	e7d8      	b.n	2578 <_sercom_get_default_pad+0x1c>
    25c6:	2901      	cmp	r1, #1
    25c8:	d007      	beq.n	25da <_sercom_get_default_pad+0x7e>
    25ca:	2900      	cmp	r1, #0
    25cc:	d03f      	beq.n	264e <_sercom_get_default_pad+0xf2>
    25ce:	2902      	cmp	r1, #2
    25d0:	d005      	beq.n	25de <_sercom_get_default_pad+0x82>
    25d2:	2903      	cmp	r1, #3
    25d4:	d005      	beq.n	25e2 <_sercom_get_default_pad+0x86>
    25d6:	2000      	movs	r0, #0
    25d8:	e7ce      	b.n	2578 <_sercom_get_default_pad+0x1c>
    25da:	482d      	ldr	r0, [pc, #180]	; (2690 <_sercom_get_default_pad+0x134>)
    25dc:	e7cc      	b.n	2578 <_sercom_get_default_pad+0x1c>
    25de:	482d      	ldr	r0, [pc, #180]	; (2694 <_sercom_get_default_pad+0x138>)
    25e0:	e7ca      	b.n	2578 <_sercom_get_default_pad+0x1c>
    25e2:	482d      	ldr	r0, [pc, #180]	; (2698 <_sercom_get_default_pad+0x13c>)
    25e4:	e7c8      	b.n	2578 <_sercom_get_default_pad+0x1c>
    25e6:	2901      	cmp	r1, #1
    25e8:	d007      	beq.n	25fa <_sercom_get_default_pad+0x9e>
    25ea:	2900      	cmp	r1, #0
    25ec:	d031      	beq.n	2652 <_sercom_get_default_pad+0xf6>
    25ee:	2902      	cmp	r1, #2
    25f0:	d005      	beq.n	25fe <_sercom_get_default_pad+0xa2>
    25f2:	2903      	cmp	r1, #3
    25f4:	d005      	beq.n	2602 <_sercom_get_default_pad+0xa6>
    25f6:	2000      	movs	r0, #0
    25f8:	e7be      	b.n	2578 <_sercom_get_default_pad+0x1c>
    25fa:	4828      	ldr	r0, [pc, #160]	; (269c <_sercom_get_default_pad+0x140>)
    25fc:	e7bc      	b.n	2578 <_sercom_get_default_pad+0x1c>
    25fe:	4828      	ldr	r0, [pc, #160]	; (26a0 <_sercom_get_default_pad+0x144>)
    2600:	e7ba      	b.n	2578 <_sercom_get_default_pad+0x1c>
    2602:	4828      	ldr	r0, [pc, #160]	; (26a4 <_sercom_get_default_pad+0x148>)
    2604:	e7b8      	b.n	2578 <_sercom_get_default_pad+0x1c>
    2606:	2901      	cmp	r1, #1
    2608:	d007      	beq.n	261a <_sercom_get_default_pad+0xbe>
    260a:	2900      	cmp	r1, #0
    260c:	d023      	beq.n	2656 <_sercom_get_default_pad+0xfa>
    260e:	2902      	cmp	r1, #2
    2610:	d005      	beq.n	261e <_sercom_get_default_pad+0xc2>
    2612:	2903      	cmp	r1, #3
    2614:	d005      	beq.n	2622 <_sercom_get_default_pad+0xc6>
    2616:	2000      	movs	r0, #0
    2618:	e7ae      	b.n	2578 <_sercom_get_default_pad+0x1c>
    261a:	4823      	ldr	r0, [pc, #140]	; (26a8 <_sercom_get_default_pad+0x14c>)
    261c:	e7ac      	b.n	2578 <_sercom_get_default_pad+0x1c>
    261e:	4823      	ldr	r0, [pc, #140]	; (26ac <_sercom_get_default_pad+0x150>)
    2620:	e7aa      	b.n	2578 <_sercom_get_default_pad+0x1c>
    2622:	4823      	ldr	r0, [pc, #140]	; (26b0 <_sercom_get_default_pad+0x154>)
    2624:	e7a8      	b.n	2578 <_sercom_get_default_pad+0x1c>
    2626:	2901      	cmp	r1, #1
    2628:	d007      	beq.n	263a <_sercom_get_default_pad+0xde>
    262a:	2900      	cmp	r1, #0
    262c:	d015      	beq.n	265a <_sercom_get_default_pad+0xfe>
    262e:	2902      	cmp	r1, #2
    2630:	d005      	beq.n	263e <_sercom_get_default_pad+0xe2>
    2632:	2903      	cmp	r1, #3
    2634:	d005      	beq.n	2642 <_sercom_get_default_pad+0xe6>
    2636:	2000      	movs	r0, #0
    2638:	e79e      	b.n	2578 <_sercom_get_default_pad+0x1c>
    263a:	481e      	ldr	r0, [pc, #120]	; (26b4 <_sercom_get_default_pad+0x158>)
    263c:	e79c      	b.n	2578 <_sercom_get_default_pad+0x1c>
    263e:	481e      	ldr	r0, [pc, #120]	; (26b8 <_sercom_get_default_pad+0x15c>)
    2640:	e79a      	b.n	2578 <_sercom_get_default_pad+0x1c>
    2642:	481e      	ldr	r0, [pc, #120]	; (26bc <_sercom_get_default_pad+0x160>)
    2644:	e798      	b.n	2578 <_sercom_get_default_pad+0x1c>
    2646:	481e      	ldr	r0, [pc, #120]	; (26c0 <_sercom_get_default_pad+0x164>)
    2648:	e796      	b.n	2578 <_sercom_get_default_pad+0x1c>
    264a:	481e      	ldr	r0, [pc, #120]	; (26c4 <_sercom_get_default_pad+0x168>)
    264c:	e794      	b.n	2578 <_sercom_get_default_pad+0x1c>
    264e:	481e      	ldr	r0, [pc, #120]	; (26c8 <_sercom_get_default_pad+0x16c>)
    2650:	e792      	b.n	2578 <_sercom_get_default_pad+0x1c>
    2652:	481e      	ldr	r0, [pc, #120]	; (26cc <_sercom_get_default_pad+0x170>)
    2654:	e790      	b.n	2578 <_sercom_get_default_pad+0x1c>
    2656:	481e      	ldr	r0, [pc, #120]	; (26d0 <_sercom_get_default_pad+0x174>)
    2658:	e78e      	b.n	2578 <_sercom_get_default_pad+0x1c>
    265a:	481e      	ldr	r0, [pc, #120]	; (26d4 <_sercom_get_default_pad+0x178>)
    265c:	e78c      	b.n	2578 <_sercom_get_default_pad+0x1c>
    265e:	46c0      	nop			; (mov r8, r8)
    2660:	42000c00 	.word	0x42000c00
    2664:	42001400 	.word	0x42001400
    2668:	42001800 	.word	0x42001800
    266c:	42001000 	.word	0x42001000
    2670:	42000400 	.word	0x42000400
    2674:	42000800 	.word	0x42000800
    2678:	00050003 	.word	0x00050003
    267c:	00060003 	.word	0x00060003
    2680:	00070003 	.word	0x00070003
    2684:	00110002 	.word	0x00110002
    2688:	00120002 	.word	0x00120002
    268c:	00130002 	.word	0x00130002
    2690:	000d0002 	.word	0x000d0002
    2694:	000e0002 	.word	0x000e0002
    2698:	000f0002 	.word	0x000f0002
    269c:	00170002 	.word	0x00170002
    26a0:	00180002 	.word	0x00180002
    26a4:	00190002 	.word	0x00190002
    26a8:	00290003 	.word	0x00290003
    26ac:	002a0003 	.word	0x002a0003
    26b0:	002b0003 	.word	0x002b0003
    26b4:	00230003 	.word	0x00230003
    26b8:	00200003 	.word	0x00200003
    26bc:	00210003 	.word	0x00210003
    26c0:	00040003 	.word	0x00040003
    26c4:	00100002 	.word	0x00100002
    26c8:	000c0002 	.word	0x000c0002
    26cc:	00160002 	.word	0x00160002
    26d0:	00280003 	.word	0x00280003
    26d4:	00220003 	.word	0x00220003

000026d8 <_sercom_get_sercom_inst_index>:
    26d8:	b530      	push	{r4, r5, lr}
    26da:	b087      	sub	sp, #28
    26dc:	4b0b      	ldr	r3, [pc, #44]	; (270c <_sercom_get_sercom_inst_index+0x34>)
    26de:	466a      	mov	r2, sp
    26e0:	cb32      	ldmia	r3!, {r1, r4, r5}
    26e2:	c232      	stmia	r2!, {r1, r4, r5}
    26e4:	cb32      	ldmia	r3!, {r1, r4, r5}
    26e6:	c232      	stmia	r2!, {r1, r4, r5}
    26e8:	9b00      	ldr	r3, [sp, #0]
    26ea:	4283      	cmp	r3, r0
    26ec:	d00b      	beq.n	2706 <_sercom_get_sercom_inst_index+0x2e>
    26ee:	2301      	movs	r3, #1
    26f0:	009a      	lsls	r2, r3, #2
    26f2:	4669      	mov	r1, sp
    26f4:	5852      	ldr	r2, [r2, r1]
    26f6:	4282      	cmp	r2, r0
    26f8:	d006      	beq.n	2708 <_sercom_get_sercom_inst_index+0x30>
    26fa:	3301      	adds	r3, #1
    26fc:	2b06      	cmp	r3, #6
    26fe:	d1f7      	bne.n	26f0 <_sercom_get_sercom_inst_index+0x18>
    2700:	2000      	movs	r0, #0
    2702:	b007      	add	sp, #28
    2704:	bd30      	pop	{r4, r5, pc}
    2706:	2300      	movs	r3, #0
    2708:	b2d8      	uxtb	r0, r3
    270a:	e7fa      	b.n	2702 <_sercom_get_sercom_inst_index+0x2a>
    270c:	00009088 	.word	0x00009088

00002710 <_tcc_get_inst_index>:
    2710:	4b09      	ldr	r3, [pc, #36]	; (2738 <_tcc_get_inst_index+0x28>)
    2712:	4298      	cmp	r0, r3
    2714:	d00c      	beq.n	2730 <_tcc_get_inst_index+0x20>
    2716:	4b09      	ldr	r3, [pc, #36]	; (273c <_tcc_get_inst_index+0x2c>)
    2718:	4298      	cmp	r0, r3
    271a:	d007      	beq.n	272c <_tcc_get_inst_index+0x1c>
    271c:	4a08      	ldr	r2, [pc, #32]	; (2740 <_tcc_get_inst_index+0x30>)
    271e:	2300      	movs	r3, #0
    2720:	4290      	cmp	r0, r2
    2722:	d001      	beq.n	2728 <_tcc_get_inst_index+0x18>
    2724:	0018      	movs	r0, r3
    2726:	4770      	bx	lr
    2728:	3302      	adds	r3, #2
    272a:	e002      	b.n	2732 <_tcc_get_inst_index+0x22>
    272c:	2301      	movs	r3, #1
    272e:	e000      	b.n	2732 <_tcc_get_inst_index+0x22>
    2730:	2300      	movs	r3, #0
    2732:	b2db      	uxtb	r3, r3
    2734:	e7f6      	b.n	2724 <_tcc_get_inst_index+0x14>
    2736:	46c0      	nop			; (mov r8, r8)
    2738:	42002400 	.word	0x42002400
    273c:	42002800 	.word	0x42002800
    2740:	42002c00 	.word	0x42002c00

00002744 <tcc_get_config_defaults>:
    2744:	b510      	push	{r4, lr}
    2746:	0004      	movs	r4, r0
    2748:	0008      	movs	r0, r1
    274a:	4b4f      	ldr	r3, [pc, #316]	; (2888 <tcc_get_config_defaults+0x144>)
    274c:	4798      	blx	r3
    274e:	2300      	movs	r3, #0
    2750:	6023      	str	r3, [r4, #0]
    2752:	0080      	lsls	r0, r0, #2
    2754:	4a4d      	ldr	r2, [pc, #308]	; (288c <tcc_get_config_defaults+0x148>)
    2756:	5882      	ldr	r2, [r0, r2]
    2758:	6062      	str	r2, [r4, #4]
    275a:	72a3      	strb	r3, [r4, #10]
    275c:	72e3      	strb	r3, [r4, #11]
    275e:	7323      	strb	r3, [r4, #12]
    2760:	7263      	strb	r3, [r4, #9]
    2762:	7223      	strb	r3, [r4, #8]
    2764:	61e3      	str	r3, [r4, #28]
    2766:	6223      	str	r3, [r4, #32]
    2768:	6263      	str	r3, [r4, #36]	; 0x24
    276a:	62a3      	str	r3, [r4, #40]	; 0x28
    276c:	7523      	strb	r3, [r4, #20]
    276e:	7563      	strb	r3, [r4, #21]
    2770:	75a3      	strb	r3, [r4, #22]
    2772:	75e3      	strb	r3, [r4, #23]
    2774:	7623      	strb	r3, [r4, #24]
    2776:	7663      	strb	r3, [r4, #25]
    2778:	7423      	strb	r3, [r4, #16]
    277a:	7463      	strb	r3, [r4, #17]
    277c:	74a3      	strb	r3, [r4, #18]
    277e:	74e3      	strb	r3, [r4, #19]
    2780:	222c      	movs	r2, #44	; 0x2c
    2782:	54a3      	strb	r3, [r4, r2]
    2784:	3201      	adds	r2, #1
    2786:	54a3      	strb	r3, [r4, r2]
    2788:	3201      	adds	r2, #1
    278a:	54a3      	strb	r3, [r4, r2]
    278c:	3201      	adds	r2, #1
    278e:	54a3      	strb	r3, [r4, r2]
    2790:	3201      	adds	r2, #1
    2792:	54a3      	strb	r3, [r4, r2]
    2794:	3201      	adds	r2, #1
    2796:	54a3      	strb	r3, [r4, r2]
    2798:	3201      	adds	r2, #1
    279a:	54a3      	strb	r3, [r4, r2]
    279c:	3201      	adds	r2, #1
    279e:	54a3      	strb	r3, [r4, r2]
    27a0:	3201      	adds	r2, #1
    27a2:	54a3      	strb	r3, [r4, r2]
    27a4:	3201      	adds	r2, #1
    27a6:	54a3      	strb	r3, [r4, r2]
    27a8:	3201      	adds	r2, #1
    27aa:	54a3      	strb	r3, [r4, r2]
    27ac:	3201      	adds	r2, #1
    27ae:	54a3      	strb	r3, [r4, r2]
    27b0:	3201      	adds	r2, #1
    27b2:	54a3      	strb	r3, [r4, r2]
    27b4:	3201      	adds	r2, #1
    27b6:	54a3      	strb	r3, [r4, r2]
    27b8:	3201      	adds	r2, #1
    27ba:	54a3      	strb	r3, [r4, r2]
    27bc:	3201      	adds	r2, #1
    27be:	54a3      	strb	r3, [r4, r2]
    27c0:	3201      	adds	r2, #1
    27c2:	54a3      	strb	r3, [r4, r2]
    27c4:	3201      	adds	r2, #1
    27c6:	54a3      	strb	r3, [r4, r2]
    27c8:	3201      	adds	r2, #1
    27ca:	54a3      	strb	r3, [r4, r2]
    27cc:	3201      	adds	r2, #1
    27ce:	54a3      	strb	r3, [r4, r2]
    27d0:	3201      	adds	r2, #1
    27d2:	54a3      	strb	r3, [r4, r2]
    27d4:	3201      	adds	r2, #1
    27d6:	54a3      	strb	r3, [r4, r2]
    27d8:	3201      	adds	r2, #1
    27da:	54a3      	strb	r3, [r4, r2]
    27dc:	3201      	adds	r2, #1
    27de:	54a3      	strb	r3, [r4, r2]
    27e0:	3201      	adds	r2, #1
    27e2:	54a3      	strb	r3, [r4, r2]
    27e4:	3201      	adds	r2, #1
    27e6:	54a3      	strb	r3, [r4, r2]
    27e8:	3201      	adds	r2, #1
    27ea:	54a3      	strb	r3, [r4, r2]
    27ec:	3201      	adds	r2, #1
    27ee:	54a3      	strb	r3, [r4, r2]
    27f0:	3201      	adds	r2, #1
    27f2:	54a3      	strb	r3, [r4, r2]
    27f4:	3201      	adds	r2, #1
    27f6:	54a3      	strb	r3, [r4, r2]
    27f8:	3201      	adds	r2, #1
    27fa:	54a3      	strb	r3, [r4, r2]
    27fc:	3201      	adds	r2, #1
    27fe:	54a3      	strb	r3, [r4, r2]
    2800:	3201      	adds	r2, #1
    2802:	54a3      	strb	r3, [r4, r2]
    2804:	3201      	adds	r2, #1
    2806:	54a3      	strb	r3, [r4, r2]
    2808:	3201      	adds	r2, #1
    280a:	54a3      	strb	r3, [r4, r2]
    280c:	3201      	adds	r2, #1
    280e:	54a3      	strb	r3, [r4, r2]
    2810:	3201      	adds	r2, #1
    2812:	54a3      	strb	r3, [r4, r2]
    2814:	3201      	adds	r2, #1
    2816:	54a3      	strb	r3, [r4, r2]
    2818:	3201      	adds	r2, #1
    281a:	54a3      	strb	r3, [r4, r2]
    281c:	3201      	adds	r2, #1
    281e:	54a3      	strb	r3, [r4, r2]
    2820:	3201      	adds	r2, #1
    2822:	54a3      	strb	r3, [r4, r2]
    2824:	3201      	adds	r2, #1
    2826:	54a3      	strb	r3, [r4, r2]
    2828:	3201      	adds	r2, #1
    282a:	54a3      	strb	r3, [r4, r2]
    282c:	3201      	adds	r2, #1
    282e:	54a3      	strb	r3, [r4, r2]
    2830:	3241      	adds	r2, #65	; 0x41
    2832:	54a3      	strb	r3, [r4, r2]
    2834:	65a3      	str	r3, [r4, #88]	; 0x58
    2836:	67a3      	str	r3, [r4, #120]	; 0x78
    2838:	3201      	adds	r2, #1
    283a:	54a3      	strb	r3, [r4, r2]
    283c:	65e3      	str	r3, [r4, #92]	; 0x5c
    283e:	67e3      	str	r3, [r4, #124]	; 0x7c
    2840:	3201      	adds	r2, #1
    2842:	54a3      	strb	r3, [r4, r2]
    2844:	6623      	str	r3, [r4, #96]	; 0x60
    2846:	3a1a      	subs	r2, #26
    2848:	50a3      	str	r3, [r4, r2]
    284a:	321b      	adds	r2, #27
    284c:	54a3      	strb	r3, [r4, r2]
    284e:	6663      	str	r3, [r4, #100]	; 0x64
    2850:	3a17      	subs	r2, #23
    2852:	50a3      	str	r3, [r4, r2]
    2854:	3218      	adds	r2, #24
    2856:	54a3      	strb	r3, [r4, r2]
    2858:	66a3      	str	r3, [r4, #104]	; 0x68
    285a:	3a14      	subs	r2, #20
    285c:	50a3      	str	r3, [r4, r2]
    285e:	3215      	adds	r2, #21
    2860:	54a3      	strb	r3, [r4, r2]
    2862:	66e3      	str	r3, [r4, #108]	; 0x6c
    2864:	3a11      	subs	r2, #17
    2866:	50a3      	str	r3, [r4, r2]
    2868:	3212      	adds	r2, #18
    286a:	54a3      	strb	r3, [r4, r2]
    286c:	6723      	str	r3, [r4, #112]	; 0x70
    286e:	3a0e      	subs	r2, #14
    2870:	50a3      	str	r3, [r4, r2]
    2872:	320f      	adds	r2, #15
    2874:	54a3      	strb	r3, [r4, r2]
    2876:	6763      	str	r3, [r4, #116]	; 0x74
    2878:	3a0b      	subs	r2, #11
    287a:	50a3      	str	r3, [r4, r2]
    287c:	2101      	movs	r1, #1
    287e:	320c      	adds	r2, #12
    2880:	54a1      	strb	r1, [r4, r2]
    2882:	3201      	adds	r2, #1
    2884:	54a3      	strb	r3, [r4, r2]
    2886:	bd10      	pop	{r4, pc}
    2888:	00002711 	.word	0x00002711
    288c:	000090b4 	.word	0x000090b4

00002890 <tcc_init>:
    2890:	b5f0      	push	{r4, r5, r6, r7, lr}
    2892:	46de      	mov	lr, fp
    2894:	4657      	mov	r7, sl
    2896:	464e      	mov	r6, r9
    2898:	4645      	mov	r5, r8
    289a:	b5e0      	push	{r5, r6, r7, lr}
    289c:	b091      	sub	sp, #68	; 0x44
    289e:	9001      	str	r0, [sp, #4]
    28a0:	000c      	movs	r4, r1
    28a2:	0015      	movs	r5, r2
    28a4:	0008      	movs	r0, r1
    28a6:	4bc3      	ldr	r3, [pc, #780]	; (2bb4 <tcc_init+0x324>)
    28a8:	4798      	blx	r3
    28aa:	0003      	movs	r3, r0
    28ac:	0001      	movs	r1, r0
    28ae:	48c2      	ldr	r0, [pc, #776]	; (2bb8 <tcc_init+0x328>)
    28b0:	69c2      	ldr	r2, [r0, #28]
    28b2:	009e      	lsls	r6, r3, #2
    28b4:	4fc1      	ldr	r7, [pc, #772]	; (2bbc <tcc_init+0x32c>)
    28b6:	59f7      	ldr	r7, [r6, r7]
    28b8:	433a      	orrs	r2, r7
    28ba:	61c2      	str	r2, [r0, #28]
    28bc:	6822      	ldr	r2, [r4, #0]
    28be:	201c      	movs	r0, #28
    28c0:	0792      	lsls	r2, r2, #30
    28c2:	d506      	bpl.n	28d2 <tcc_init+0x42>
    28c4:	b011      	add	sp, #68	; 0x44
    28c6:	bc3c      	pop	{r2, r3, r4, r5}
    28c8:	4690      	mov	r8, r2
    28ca:	4699      	mov	r9, r3
    28cc:	46a2      	mov	sl, r4
    28ce:	46ab      	mov	fp, r5
    28d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    28d2:	6822      	ldr	r2, [r4, #0]
    28d4:	2701      	movs	r7, #1
    28d6:	4017      	ands	r7, r2
    28d8:	d1f4      	bne.n	28c4 <tcc_init+0x34>
    28da:	48b9      	ldr	r0, [pc, #740]	; (2bc0 <tcc_init+0x330>)
    28dc:	5832      	ldr	r2, [r6, r0]
    28de:	2017      	movs	r0, #23
    28e0:	682e      	ldr	r6, [r5, #0]
    28e2:	42b2      	cmp	r2, r6
    28e4:	d3ee      	bcc.n	28c4 <tcc_init+0x34>
    28e6:	686e      	ldr	r6, [r5, #4]
    28e8:	42b2      	cmp	r2, r6
    28ea:	d3eb      	bcc.n	28c4 <tcc_init+0x34>
    28ec:	69e8      	ldr	r0, [r5, #28]
    28ee:	4282      	cmp	r2, r0
    28f0:	d200      	bcs.n	28f4 <tcc_init+0x64>
    28f2:	e1ab      	b.n	2c4c <tcc_init+0x3bc>
    28f4:	6a28      	ldr	r0, [r5, #32]
    28f6:	4282      	cmp	r2, r0
    28f8:	d200      	bcs.n	28fc <tcc_init+0x6c>
    28fa:	e1a9      	b.n	2c50 <tcc_init+0x3c0>
    28fc:	6a68      	ldr	r0, [r5, #36]	; 0x24
    28fe:	4282      	cmp	r2, r0
    2900:	d200      	bcs.n	2904 <tcc_init+0x74>
    2902:	e1a7      	b.n	2c54 <tcc_init+0x3c4>
    2904:	6aa8      	ldr	r0, [r5, #40]	; 0x28
    2906:	4282      	cmp	r2, r0
    2908:	d200      	bcs.n	290c <tcc_init+0x7c>
    290a:	e1a5      	b.n	2c58 <tcc_init+0x3c8>
    290c:	2298      	movs	r2, #152	; 0x98
    290e:	4694      	mov	ip, r2
    2910:	44ac      	add	ip, r5
    2912:	4662      	mov	r2, ip
    2914:	9208      	str	r2, [sp, #32]
    2916:	2000      	movs	r0, #0
    2918:	e003      	b.n	2922 <tcc_init+0x92>
    291a:	3001      	adds	r0, #1
    291c:	3201      	adds	r2, #1
    291e:	2808      	cmp	r0, #8
    2920:	d008      	beq.n	2934 <tcc_init+0xa4>
    2922:	7816      	ldrb	r6, [r2, #0]
    2924:	2e00      	cmp	r6, #0
    2926:	d0f8      	beq.n	291a <tcc_init+0x8a>
    2928:	4ea6      	ldr	r6, [pc, #664]	; (2bc4 <tcc_init+0x334>)
    292a:	5c76      	ldrb	r6, [r6, r1]
    292c:	4286      	cmp	r6, r0
    292e:	dcf4      	bgt.n	291a <tcc_init+0x8a>
    2930:	2017      	movs	r0, #23
    2932:	e7c7      	b.n	28c4 <tcc_init+0x34>
    2934:	2200      	movs	r2, #0
    2936:	9202      	str	r2, [sp, #8]
    2938:	2080      	movs	r0, #128	; 0x80
    293a:	0440      	lsls	r0, r0, #17
    293c:	4684      	mov	ip, r0
    293e:	e002      	b.n	2946 <tcc_init+0xb6>
    2940:	3201      	adds	r2, #1
    2942:	2a04      	cmp	r2, #4
    2944:	d00e      	beq.n	2964 <tcc_init+0xd4>
    2946:	18a8      	adds	r0, r5, r2
    2948:	7c00      	ldrb	r0, [r0, #16]
    294a:	2801      	cmp	r0, #1
    294c:	d1f8      	bne.n	2940 <tcc_init+0xb0>
    294e:	489e      	ldr	r0, [pc, #632]	; (2bc8 <tcc_init+0x338>)
    2950:	5c40      	ldrb	r0, [r0, r1]
    2952:	4290      	cmp	r0, r2
    2954:	da00      	bge.n	2958 <tcc_init+0xc8>
    2956:	e181      	b.n	2c5c <tcc_init+0x3cc>
    2958:	4660      	mov	r0, ip
    295a:	4090      	lsls	r0, r2
    295c:	9e02      	ldr	r6, [sp, #8]
    295e:	4306      	orrs	r6, r0
    2960:	9602      	str	r6, [sp, #8]
    2962:	e7ed      	b.n	2940 <tcc_init+0xb0>
    2964:	329d      	adds	r2, #157	; 0x9d
    2966:	5caa      	ldrb	r2, [r5, r2]
    2968:	2a00      	cmp	r2, #0
    296a:	d004      	beq.n	2976 <tcc_init+0xe6>
    296c:	2280      	movs	r2, #128	; 0x80
    296e:	0112      	lsls	r2, r2, #4
    2970:	9902      	ldr	r1, [sp, #8]
    2972:	4311      	orrs	r1, r2
    2974:	9102      	str	r1, [sp, #8]
    2976:	7a2a      	ldrb	r2, [r5, #8]
    2978:	1e51      	subs	r1, r2, #1
    297a:	418a      	sbcs	r2, r1
    297c:	0092      	lsls	r2, r2, #2
    297e:	9206      	str	r2, [sp, #24]
    2980:	7a6a      	ldrb	r2, [r5, #9]
    2982:	2a01      	cmp	r2, #1
    2984:	d022      	beq.n	29cc <tcc_init+0x13c>
    2986:	4a90      	ldr	r2, [pc, #576]	; (2bc8 <tcc_init+0x338>)
    2988:	5cd2      	ldrb	r2, [r2, r3]
    298a:	0011      	movs	r1, r2
    298c:	9205      	str	r2, [sp, #20]
    298e:	2235      	movs	r2, #53	; 0x35
    2990:	5caa      	ldrb	r2, [r5, r2]
    2992:	428a      	cmp	r2, r1
    2994:	d300      	bcc.n	2998 <tcc_init+0x108>
    2996:	e16b      	b.n	2c70 <tcc_init+0x3e0>
    2998:	212c      	movs	r1, #44	; 0x2c
    299a:	5c69      	ldrb	r1, [r5, r1]
    299c:	290f      	cmp	r1, #15
    299e:	d900      	bls.n	29a2 <tcc_init+0x112>
    29a0:	e166      	b.n	2c70 <tcc_init+0x3e0>
    29a2:	7b28      	ldrb	r0, [r5, #12]
    29a4:	900a      	str	r0, [sp, #40]	; 0x28
    29a6:	7ae8      	ldrb	r0, [r5, #11]
    29a8:	900b      	str	r0, [sp, #44]	; 0x2c
    29aa:	202d      	movs	r0, #45	; 0x2d
    29ac:	4682      	mov	sl, r0
    29ae:	44aa      	add	sl, r5
    29b0:	2000      	movs	r0, #0
    29b2:	9704      	str	r7, [sp, #16]
    29b4:	ae0e      	add	r6, sp, #56	; 0x38
    29b6:	9607      	str	r6, [sp, #28]
    29b8:	26c0      	movs	r6, #192	; 0xc0
    29ba:	0136      	lsls	r6, r6, #4
    29bc:	46b1      	mov	r9, r6
    29be:	4684      	mov	ip, r0
    29c0:	46a0      	mov	r8, r4
    29c2:	0028      	movs	r0, r5
    29c4:	4655      	mov	r5, sl
    29c6:	9309      	str	r3, [sp, #36]	; 0x24
    29c8:	4682      	mov	sl, r0
    29ca:	e035      	b.n	2a38 <tcc_init+0x1a8>
    29cc:	9906      	ldr	r1, [sp, #24]
    29ce:	4311      	orrs	r1, r2
    29d0:	9106      	str	r1, [sp, #24]
    29d2:	e7d8      	b.n	2986 <tcc_init+0xf6>
    29d4:	0292      	lsls	r2, r2, #10
    29d6:	464f      	mov	r7, r9
    29d8:	403a      	ands	r2, r7
    29da:	430a      	orrs	r2, r1
    29dc:	7919      	ldrb	r1, [r3, #4]
    29de:	468b      	mov	fp, r1
    29e0:	2103      	movs	r1, #3
    29e2:	465f      	mov	r7, fp
    29e4:	4039      	ands	r1, r7
    29e6:	430a      	orrs	r2, r1
    29e8:	4316      	orrs	r6, r2
    29ea:	795a      	ldrb	r2, [r3, #5]
    29ec:	0152      	lsls	r2, r2, #5
    29ee:	2160      	movs	r1, #96	; 0x60
    29f0:	400a      	ands	r2, r1
    29f2:	4332      	orrs	r2, r6
    29f4:	7999      	ldrb	r1, [r3, #6]
    29f6:	0209      	lsls	r1, r1, #8
    29f8:	26c0      	movs	r6, #192	; 0xc0
    29fa:	00b6      	lsls	r6, r6, #2
    29fc:	400e      	ands	r6, r1
    29fe:	4316      	orrs	r6, r2
    2a00:	79da      	ldrb	r2, [r3, #7]
    2a02:	0312      	lsls	r2, r2, #12
    2a04:	21e0      	movs	r1, #224	; 0xe0
    2a06:	01c9      	lsls	r1, r1, #7
    2a08:	400a      	ands	r2, r1
    2a0a:	4316      	orrs	r6, r2
    2a0c:	4334      	orrs	r4, r6
    2a0e:	9a03      	ldr	r2, [sp, #12]
    2a10:	4314      	orrs	r4, r2
    2a12:	4320      	orrs	r0, r4
    2a14:	4662      	mov	r2, ip
    2a16:	9907      	ldr	r1, [sp, #28]
    2a18:	5050      	str	r0, [r2, r1]
    2a1a:	2a04      	cmp	r2, #4
    2a1c:	d02a      	beq.n	2a74 <tcc_init+0x1e4>
    2a1e:	7c9a      	ldrb	r2, [r3, #18]
    2a20:	9905      	ldr	r1, [sp, #20]
    2a22:	4291      	cmp	r1, r2
    2a24:	d800      	bhi.n	2a28 <tcc_init+0x198>
    2a26:	e123      	b.n	2c70 <tcc_init+0x3e0>
    2a28:	7a59      	ldrb	r1, [r3, #9]
    2a2a:	350a      	adds	r5, #10
    2a2c:	2304      	movs	r3, #4
    2a2e:	469b      	mov	fp, r3
    2a30:	44dc      	add	ip, fp
    2a32:	290f      	cmp	r1, #15
    2a34:	d900      	bls.n	2a38 <tcc_init+0x1a8>
    2a36:	e11b      	b.n	2c70 <tcc_init+0x3e0>
    2a38:	0609      	lsls	r1, r1, #24
    2a3a:	23f0      	movs	r3, #240	; 0xf0
    2a3c:	051b      	lsls	r3, r3, #20
    2a3e:	4019      	ands	r1, r3
    2a40:	002b      	movs	r3, r5
    2a42:	782e      	ldrb	r6, [r5, #0]
    2a44:	0436      	lsls	r6, r6, #16
    2a46:	20ff      	movs	r0, #255	; 0xff
    2a48:	0400      	lsls	r0, r0, #16
    2a4a:	4006      	ands	r6, r0
    2a4c:	7868      	ldrb	r0, [r5, #1]
    2a4e:	2480      	movs	r4, #128	; 0x80
    2a50:	2800      	cmp	r0, #0
    2a52:	d100      	bne.n	2a56 <tcc_init+0x1c6>
    2a54:	9c04      	ldr	r4, [sp, #16]
    2a56:	7898      	ldrb	r0, [r3, #2]
    2a58:	2708      	movs	r7, #8
    2a5a:	9703      	str	r7, [sp, #12]
    2a5c:	2800      	cmp	r0, #0
    2a5e:	d101      	bne.n	2a64 <tcc_init+0x1d4>
    2a60:	9804      	ldr	r0, [sp, #16]
    2a62:	9003      	str	r0, [sp, #12]
    2a64:	78d8      	ldrb	r0, [r3, #3]
    2a66:	4683      	mov	fp, r0
    2a68:	2010      	movs	r0, #16
    2a6a:	465f      	mov	r7, fp
    2a6c:	2f00      	cmp	r7, #0
    2a6e:	d1b1      	bne.n	29d4 <tcc_init+0x144>
    2a70:	9804      	ldr	r0, [sp, #16]
    2a72:	e7af      	b.n	29d4 <tcc_init+0x144>
    2a74:	4644      	mov	r4, r8
    2a76:	4655      	mov	r5, sl
    2a78:	9b09      	ldr	r3, [sp, #36]	; 0x24
    2a7a:	4a52      	ldr	r2, [pc, #328]	; (2bc4 <tcc_init+0x334>)
    2a7c:	5cd2      	ldrb	r2, [r2, r3]
    2a7e:	4691      	mov	r9, r2
    2a80:	4651      	mov	r1, sl
    2a82:	3150      	adds	r1, #80	; 0x50
    2a84:	4650      	mov	r0, sl
    2a86:	3041      	adds	r0, #65	; 0x41
    2a88:	2700      	movs	r7, #0
    2a8a:	2200      	movs	r2, #0
    2a8c:	2601      	movs	r6, #1
    2a8e:	46b2      	mov	sl, r6
    2a90:	2602      	movs	r6, #2
    2a92:	36ff      	adds	r6, #255	; 0xff
    2a94:	46b3      	mov	fp, r6
    2a96:	2680      	movs	r6, #128	; 0x80
    2a98:	0276      	lsls	r6, r6, #9
    2a9a:	46b0      	mov	r8, r6
    2a9c:	46a4      	mov	ip, r4
    2a9e:	001c      	movs	r4, r3
    2aa0:	464b      	mov	r3, r9
    2aa2:	e00f      	b.n	2ac4 <tcc_init+0x234>
    2aa4:	7806      	ldrb	r6, [r0, #0]
    2aa6:	2e00      	cmp	r6, #0
    2aa8:	d007      	beq.n	2aba <tcc_init+0x22a>
    2aaa:	4293      	cmp	r3, r2
    2aac:	d800      	bhi.n	2ab0 <tcc_init+0x220>
    2aae:	e0d9      	b.n	2c64 <tcc_init+0x3d4>
    2ab0:	2e02      	cmp	r6, #2
    2ab2:	d014      	beq.n	2ade <tcc_init+0x24e>
    2ab4:	4656      	mov	r6, sl
    2ab6:	4096      	lsls	r6, r2
    2ab8:	4337      	orrs	r7, r6
    2aba:	3201      	adds	r2, #1
    2abc:	3101      	adds	r1, #1
    2abe:	3002      	adds	r0, #2
    2ac0:	2a08      	cmp	r2, #8
    2ac2:	d010      	beq.n	2ae6 <tcc_init+0x256>
    2ac4:	780e      	ldrb	r6, [r1, #0]
    2ac6:	2e00      	cmp	r6, #0
    2ac8:	d0ec      	beq.n	2aa4 <tcc_init+0x214>
    2aca:	4293      	cmp	r3, r2
    2acc:	d800      	bhi.n	2ad0 <tcc_init+0x240>
    2ace:	e0c7      	b.n	2c60 <tcc_init+0x3d0>
    2ad0:	4646      	mov	r6, r8
    2ad2:	4096      	lsls	r6, r2
    2ad4:	4337      	orrs	r7, r6
    2ad6:	7806      	ldrb	r6, [r0, #0]
    2ad8:	2e00      	cmp	r6, #0
    2ada:	d1e9      	bne.n	2ab0 <tcc_init+0x220>
    2adc:	e7ed      	b.n	2aba <tcc_init+0x22a>
    2ade:	465e      	mov	r6, fp
    2ae0:	4096      	lsls	r6, r2
    2ae2:	4337      	orrs	r7, r6
    2ae4:	e7e9      	b.n	2aba <tcc_init+0x22a>
    2ae6:	4699      	mov	r9, r3
    2ae8:	0023      	movs	r3, r4
    2aea:	4664      	mov	r4, ip
    2aec:	7e6a      	ldrb	r2, [r5, #25]
    2aee:	0112      	lsls	r2, r2, #4
    2af0:	2130      	movs	r1, #48	; 0x30
    2af2:	4011      	ands	r1, r2
    2af4:	7e28      	ldrb	r0, [r5, #24]
    2af6:	2207      	movs	r2, #7
    2af8:	4002      	ands	r2, r0
    2afa:	4311      	orrs	r1, r2
    2afc:	2200      	movs	r2, #0
    2afe:	2080      	movs	r0, #128	; 0x80
    2b00:	0240      	lsls	r0, r0, #9
    2b02:	000e      	movs	r6, r1
    2b04:	e002      	b.n	2b0c <tcc_init+0x27c>
    2b06:	3201      	adds	r2, #1
    2b08:	2a04      	cmp	r2, #4
    2b0a:	d00b      	beq.n	2b24 <tcc_init+0x294>
    2b0c:	18a9      	adds	r1, r5, r2
    2b0e:	7d09      	ldrb	r1, [r1, #20]
    2b10:	2900      	cmp	r1, #0
    2b12:	d0f8      	beq.n	2b06 <tcc_init+0x276>
    2b14:	9905      	ldr	r1, [sp, #20]
    2b16:	4291      	cmp	r1, r2
    2b18:	dc00      	bgt.n	2b1c <tcc_init+0x28c>
    2b1a:	e0a5      	b.n	2c68 <tcc_init+0x3d8>
    2b1c:	0001      	movs	r1, r0
    2b1e:	4091      	lsls	r1, r2
    2b20:	430e      	orrs	r6, r1
    2b22:	e7f0      	b.n	2b06 <tcc_init+0x276>
    2b24:	46b2      	mov	sl, r6
    2b26:	9801      	ldr	r0, [sp, #4]
    2b28:	0002      	movs	r2, r0
    2b2a:	3204      	adds	r2, #4
    2b2c:	3034      	adds	r0, #52	; 0x34
    2b2e:	2100      	movs	r1, #0
    2b30:	c202      	stmia	r2!, {r1}
    2b32:	4282      	cmp	r2, r0
    2b34:	d1fc      	bne.n	2b30 <tcc_init+0x2a0>
    2b36:	2200      	movs	r2, #0
    2b38:	9801      	ldr	r0, [sp, #4]
    2b3a:	6342      	str	r2, [r0, #52]	; 0x34
    2b3c:	6382      	str	r2, [r0, #56]	; 0x38
    2b3e:	0099      	lsls	r1, r3, #2
    2b40:	4a22      	ldr	r2, [pc, #136]	; (2bcc <tcc_init+0x33c>)
    2b42:	5088      	str	r0, [r1, r2]
    2b44:	6004      	str	r4, [r0, #0]
    2b46:	22a0      	movs	r2, #160	; 0xa0
    2b48:	5ca9      	ldrb	r1, [r5, r2]
    2b4a:	3a64      	subs	r2, #100	; 0x64
    2b4c:	5481      	strb	r1, [r0, r2]
    2b4e:	a90d      	add	r1, sp, #52	; 0x34
    2b50:	7aaa      	ldrb	r2, [r5, #10]
    2b52:	700a      	strb	r2, [r1, #0]
    2b54:	4a1e      	ldr	r2, [pc, #120]	; (2bd0 <tcc_init+0x340>)
    2b56:	5cd6      	ldrb	r6, [r2, r3]
    2b58:	0030      	movs	r0, r6
    2b5a:	4b1e      	ldr	r3, [pc, #120]	; (2bd4 <tcc_init+0x344>)
    2b5c:	4798      	blx	r3
    2b5e:	0030      	movs	r0, r6
    2b60:	4b1d      	ldr	r3, [pc, #116]	; (2bd8 <tcc_init+0x348>)
    2b62:	4798      	blx	r3
    2b64:	464b      	mov	r3, r9
    2b66:	2b00      	cmp	r3, #0
    2b68:	dd3c      	ble.n	2be4 <tcc_init+0x354>
    2b6a:	002e      	movs	r6, r5
    2b6c:	3658      	adds	r6, #88	; 0x58
    2b6e:	3398      	adds	r3, #152	; 0x98
    2b70:	4698      	mov	r8, r3
    2b72:	44a8      	add	r8, r5
    2b74:	2301      	movs	r3, #1
    2b76:	4699      	mov	r9, r3
    2b78:	46ab      	mov	fp, r5
    2b7a:	4645      	mov	r5, r8
    2b7c:	46a0      	mov	r8, r4
    2b7e:	9c08      	ldr	r4, [sp, #32]
    2b80:	e003      	b.n	2b8a <tcc_init+0x2fa>
    2b82:	3401      	adds	r4, #1
    2b84:	3604      	adds	r6, #4
    2b86:	42ac      	cmp	r4, r5
    2b88:	d02a      	beq.n	2be0 <tcc_init+0x350>
    2b8a:	7823      	ldrb	r3, [r4, #0]
    2b8c:	2b00      	cmp	r3, #0
    2b8e:	d0f8      	beq.n	2b82 <tcc_init+0x2f2>
    2b90:	ab0c      	add	r3, sp, #48	; 0x30
    2b92:	464a      	mov	r2, r9
    2b94:	709a      	strb	r2, [r3, #2]
    2b96:	2300      	movs	r3, #0
    2b98:	aa0c      	add	r2, sp, #48	; 0x30
    2b9a:	70d3      	strb	r3, [r2, #3]
    2b9c:	0013      	movs	r3, r2
    2b9e:	2220      	movs	r2, #32
    2ba0:	18b2      	adds	r2, r6, r2
    2ba2:	7812      	ldrb	r2, [r2, #0]
    2ba4:	701a      	strb	r2, [r3, #0]
    2ba6:	464a      	mov	r2, r9
    2ba8:	705a      	strb	r2, [r3, #1]
    2baa:	7830      	ldrb	r0, [r6, #0]
    2bac:	0019      	movs	r1, r3
    2bae:	4b0b      	ldr	r3, [pc, #44]	; (2bdc <tcc_init+0x34c>)
    2bb0:	4798      	blx	r3
    2bb2:	e7e6      	b.n	2b82 <tcc_init+0x2f2>
    2bb4:	00002711 	.word	0x00002711
    2bb8:	40000800 	.word	0x40000800
    2bbc:	000090a0 	.word	0x000090a0
    2bc0:	000090b4 	.word	0x000090b4
    2bc4:	000090c0 	.word	0x000090c0
    2bc8:	000090ac 	.word	0x000090ac
    2bcc:	20001f84 	.word	0x20001f84
    2bd0:	000090b0 	.word	0x000090b0
    2bd4:	00004da9 	.word	0x00004da9
    2bd8:	00004d39 	.word	0x00004d39
    2bdc:	00004ea5 	.word	0x00004ea5
    2be0:	4644      	mov	r4, r8
    2be2:	465d      	mov	r5, fp
    2be4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    2be6:	031b      	lsls	r3, r3, #12
    2be8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    2bea:	0212      	lsls	r2, r2, #8
    2bec:	4313      	orrs	r3, r2
    2bee:	9a02      	ldr	r2, [sp, #8]
    2bf0:	4313      	orrs	r3, r2
    2bf2:	6023      	str	r3, [r4, #0]
    2bf4:	2204      	movs	r2, #4
    2bf6:	68a3      	ldr	r3, [r4, #8]
    2bf8:	421a      	tst	r2, r3
    2bfa:	d1fc      	bne.n	2bf6 <tcc_init+0x366>
    2bfc:	23ff      	movs	r3, #255	; 0xff
    2bfe:	7123      	strb	r3, [r4, #4]
    2c00:	2204      	movs	r2, #4
    2c02:	68a3      	ldr	r3, [r4, #8]
    2c04:	421a      	tst	r2, r3
    2c06:	d1fc      	bne.n	2c02 <tcc_init+0x372>
    2c08:	466b      	mov	r3, sp
    2c0a:	7e1b      	ldrb	r3, [r3, #24]
    2c0c:	7163      	strb	r3, [r4, #5]
    2c0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    2c10:	60e3      	str	r3, [r4, #12]
    2c12:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    2c14:	6123      	str	r3, [r4, #16]
    2c16:	61a7      	str	r7, [r4, #24]
    2c18:	4653      	mov	r3, sl
    2c1a:	63e3      	str	r3, [r4, #60]	; 0x3c
    2c1c:	2210      	movs	r2, #16
    2c1e:	68a3      	ldr	r3, [r4, #8]
    2c20:	421a      	tst	r2, r3
    2c22:	d1fc      	bne.n	2c1e <tcc_init+0x38e>
    2c24:	682b      	ldr	r3, [r5, #0]
    2c26:	6363      	str	r3, [r4, #52]	; 0x34
    2c28:	686b      	ldr	r3, [r5, #4]
    2c2a:	6423      	str	r3, [r4, #64]	; 0x40
    2c2c:	9805      	ldr	r0, [sp, #20]
    2c2e:	2800      	cmp	r0, #0
    2c30:	dd1c      	ble.n	2c6c <tcc_init+0x3dc>
    2c32:	351c      	adds	r5, #28
    2c34:	2200      	movs	r2, #0
    2c36:	cd02      	ldmia	r5!, {r1}
    2c38:	0013      	movs	r3, r2
    2c3a:	3310      	adds	r3, #16
    2c3c:	009b      	lsls	r3, r3, #2
    2c3e:	18e3      	adds	r3, r4, r3
    2c40:	6059      	str	r1, [r3, #4]
    2c42:	3201      	adds	r2, #1
    2c44:	4290      	cmp	r0, r2
    2c46:	dcf6      	bgt.n	2c36 <tcc_init+0x3a6>
    2c48:	2000      	movs	r0, #0
    2c4a:	e63b      	b.n	28c4 <tcc_init+0x34>
    2c4c:	2017      	movs	r0, #23
    2c4e:	e639      	b.n	28c4 <tcc_init+0x34>
    2c50:	2017      	movs	r0, #23
    2c52:	e637      	b.n	28c4 <tcc_init+0x34>
    2c54:	2017      	movs	r0, #23
    2c56:	e635      	b.n	28c4 <tcc_init+0x34>
    2c58:	2017      	movs	r0, #23
    2c5a:	e633      	b.n	28c4 <tcc_init+0x34>
    2c5c:	2017      	movs	r0, #23
    2c5e:	e631      	b.n	28c4 <tcc_init+0x34>
    2c60:	2017      	movs	r0, #23
    2c62:	e62f      	b.n	28c4 <tcc_init+0x34>
    2c64:	2017      	movs	r0, #23
    2c66:	e62d      	b.n	28c4 <tcc_init+0x34>
    2c68:	2017      	movs	r0, #23
    2c6a:	e62b      	b.n	28c4 <tcc_init+0x34>
    2c6c:	2000      	movs	r0, #0
    2c6e:	e629      	b.n	28c4 <tcc_init+0x34>
    2c70:	2017      	movs	r0, #23
    2c72:	e627      	b.n	28c4 <tcc_init+0x34>

00002c74 <tcc_register_callback>:
    2c74:	0092      	lsls	r2, r2, #2
    2c76:	1883      	adds	r3, r0, r2
    2c78:	6059      	str	r1, [r3, #4]
    2c7a:	4b03      	ldr	r3, [pc, #12]	; (2c88 <tcc_register_callback+0x14>)
    2c7c:	58d3      	ldr	r3, [r2, r3]
    2c7e:	6b42      	ldr	r2, [r0, #52]	; 0x34
    2c80:	4313      	orrs	r3, r2
    2c82:	6343      	str	r3, [r0, #52]	; 0x34
    2c84:	2000      	movs	r0, #0
    2c86:	4770      	bx	lr
    2c88:	000090c4 	.word	0x000090c4

00002c8c <tcc_enable_callback>:
    2c8c:	b570      	push	{r4, r5, r6, lr}
    2c8e:	0004      	movs	r4, r0
    2c90:	000d      	movs	r5, r1
    2c92:	6800      	ldr	r0, [r0, #0]
    2c94:	4b09      	ldr	r3, [pc, #36]	; (2cbc <tcc_enable_callback+0x30>)
    2c96:	4798      	blx	r3
    2c98:	4b09      	ldr	r3, [pc, #36]	; (2cc0 <tcc_enable_callback+0x34>)
    2c9a:	5c1b      	ldrb	r3, [r3, r0]
    2c9c:	221f      	movs	r2, #31
    2c9e:	401a      	ands	r2, r3
    2ca0:	2301      	movs	r3, #1
    2ca2:	4093      	lsls	r3, r2
    2ca4:	4a07      	ldr	r2, [pc, #28]	; (2cc4 <tcc_enable_callback+0x38>)
    2ca6:	6013      	str	r3, [r2, #0]
    2ca8:	00ad      	lsls	r5, r5, #2
    2caa:	4b07      	ldr	r3, [pc, #28]	; (2cc8 <tcc_enable_callback+0x3c>)
    2cac:	58ea      	ldr	r2, [r5, r3]
    2cae:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    2cb0:	4313      	orrs	r3, r2
    2cb2:	63a3      	str	r3, [r4, #56]	; 0x38
    2cb4:	6823      	ldr	r3, [r4, #0]
    2cb6:	629a      	str	r2, [r3, #40]	; 0x28
    2cb8:	bd70      	pop	{r4, r5, r6, pc}
    2cba:	46c0      	nop			; (mov r8, r8)
    2cbc:	00002711 	.word	0x00002711
    2cc0:	000090f4 	.word	0x000090f4
    2cc4:	e000e100 	.word	0xe000e100
    2cc8:	000090c4 	.word	0x000090c4

00002ccc <_tcc_interrupt_handler>:
    2ccc:	b5f0      	push	{r4, r5, r6, r7, lr}
    2cce:	46c6      	mov	lr, r8
    2cd0:	b500      	push	{lr}
    2cd2:	0080      	lsls	r0, r0, #2
    2cd4:	4b0e      	ldr	r3, [pc, #56]	; (2d10 <_tcc_interrupt_handler+0x44>)
    2cd6:	58c7      	ldr	r7, [r0, r3]
    2cd8:	683b      	ldr	r3, [r7, #0]
    2cda:	6ade      	ldr	r6, [r3, #44]	; 0x2c
    2cdc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    2cde:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    2ce0:	4013      	ands	r3, r2
    2ce2:	401e      	ands	r6, r3
    2ce4:	2400      	movs	r4, #0
    2ce6:	4b0b      	ldr	r3, [pc, #44]	; (2d14 <_tcc_interrupt_handler+0x48>)
    2ce8:	4698      	mov	r8, r3
    2cea:	e002      	b.n	2cf2 <_tcc_interrupt_handler+0x26>
    2cec:	3404      	adds	r4, #4
    2cee:	2c30      	cmp	r4, #48	; 0x30
    2cf0:	d00a      	beq.n	2d08 <_tcc_interrupt_handler+0x3c>
    2cf2:	4643      	mov	r3, r8
    2cf4:	58e5      	ldr	r5, [r4, r3]
    2cf6:	4235      	tst	r5, r6
    2cf8:	d0f8      	beq.n	2cec <_tcc_interrupt_handler+0x20>
    2cfa:	193b      	adds	r3, r7, r4
    2cfc:	685b      	ldr	r3, [r3, #4]
    2cfe:	0038      	movs	r0, r7
    2d00:	4798      	blx	r3
    2d02:	683b      	ldr	r3, [r7, #0]
    2d04:	62dd      	str	r5, [r3, #44]	; 0x2c
    2d06:	e7f1      	b.n	2cec <_tcc_interrupt_handler+0x20>
    2d08:	bc04      	pop	{r2}
    2d0a:	4690      	mov	r8, r2
    2d0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2d0e:	46c0      	nop			; (mov r8, r8)
    2d10:	20001f84 	.word	0x20001f84
    2d14:	000090c4 	.word	0x000090c4

00002d18 <TCC0_Handler>:
    2d18:	b510      	push	{r4, lr}
    2d1a:	2000      	movs	r0, #0
    2d1c:	4b01      	ldr	r3, [pc, #4]	; (2d24 <TCC0_Handler+0xc>)
    2d1e:	4798      	blx	r3
    2d20:	bd10      	pop	{r4, pc}
    2d22:	46c0      	nop			; (mov r8, r8)
    2d24:	00002ccd 	.word	0x00002ccd

00002d28 <TCC1_Handler>:
    2d28:	b510      	push	{r4, lr}
    2d2a:	2001      	movs	r0, #1
    2d2c:	4b01      	ldr	r3, [pc, #4]	; (2d34 <TCC1_Handler+0xc>)
    2d2e:	4798      	blx	r3
    2d30:	bd10      	pop	{r4, pc}
    2d32:	46c0      	nop			; (mov r8, r8)
    2d34:	00002ccd 	.word	0x00002ccd

00002d38 <TCC2_Handler>:
    2d38:	b510      	push	{r4, lr}
    2d3a:	2002      	movs	r0, #2
    2d3c:	4b01      	ldr	r3, [pc, #4]	; (2d44 <TCC2_Handler+0xc>)
    2d3e:	4798      	blx	r3
    2d40:	bd10      	pop	{r4, pc}
    2d42:	46c0      	nop			; (mov r8, r8)
    2d44:	00002ccd 	.word	0x00002ccd

00002d48 <usart_init>:
    2d48:	b5f0      	push	{r4, r5, r6, r7, lr}
    2d4a:	46de      	mov	lr, fp
    2d4c:	4657      	mov	r7, sl
    2d4e:	464e      	mov	r6, r9
    2d50:	4645      	mov	r5, r8
    2d52:	b5e0      	push	{r5, r6, r7, lr}
    2d54:	b091      	sub	sp, #68	; 0x44
    2d56:	0005      	movs	r5, r0
    2d58:	000c      	movs	r4, r1
    2d5a:	0016      	movs	r6, r2
    2d5c:	6029      	str	r1, [r5, #0]
    2d5e:	0008      	movs	r0, r1
    2d60:	4bd2      	ldr	r3, [pc, #840]	; (30ac <usart_init+0x364>)
    2d62:	4798      	blx	r3
    2d64:	2805      	cmp	r0, #5
    2d66:	d00d      	beq.n	2d84 <usart_init+0x3c>
    2d68:	0007      	movs	r7, r0
    2d6a:	3713      	adds	r7, #19
    2d6c:	6822      	ldr	r2, [r4, #0]
    2d6e:	2305      	movs	r3, #5
    2d70:	07d2      	lsls	r2, r2, #31
    2d72:	d509      	bpl.n	2d88 <usart_init+0x40>
    2d74:	0018      	movs	r0, r3
    2d76:	b011      	add	sp, #68	; 0x44
    2d78:	bc3c      	pop	{r2, r3, r4, r5}
    2d7a:	4690      	mov	r8, r2
    2d7c:	4699      	mov	r9, r3
    2d7e:	46a2      	mov	sl, r4
    2d80:	46ab      	mov	fp, r5
    2d82:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2d84:	2719      	movs	r7, #25
    2d86:	e7f1      	b.n	2d6c <usart_init+0x24>
    2d88:	6822      	ldr	r2, [r4, #0]
    2d8a:	3317      	adds	r3, #23
    2d8c:	0792      	lsls	r2, r2, #30
    2d8e:	d4f1      	bmi.n	2d74 <usart_init+0x2c>
    2d90:	4ac7      	ldr	r2, [pc, #796]	; (30b0 <usart_init+0x368>)
    2d92:	69d1      	ldr	r1, [r2, #28]
    2d94:	3001      	adds	r0, #1
    2d96:	3b1b      	subs	r3, #27
    2d98:	4083      	lsls	r3, r0
    2d9a:	430b      	orrs	r3, r1
    2d9c:	61d3      	str	r3, [r2, #28]
    2d9e:	a90f      	add	r1, sp, #60	; 0x3c
    2da0:	2335      	movs	r3, #53	; 0x35
    2da2:	4698      	mov	r8, r3
    2da4:	5cf3      	ldrb	r3, [r6, r3]
    2da6:	700b      	strb	r3, [r1, #0]
    2da8:	b2ff      	uxtb	r7, r7
    2daa:	0038      	movs	r0, r7
    2dac:	4bc1      	ldr	r3, [pc, #772]	; (30b4 <usart_init+0x36c>)
    2dae:	4798      	blx	r3
    2db0:	0038      	movs	r0, r7
    2db2:	4bc1      	ldr	r3, [pc, #772]	; (30b8 <usart_init+0x370>)
    2db4:	4798      	blx	r3
    2db6:	4643      	mov	r3, r8
    2db8:	5cf0      	ldrb	r0, [r6, r3]
    2dba:	2100      	movs	r1, #0
    2dbc:	4bbf      	ldr	r3, [pc, #764]	; (30bc <usart_init+0x374>)
    2dbe:	4798      	blx	r3
    2dc0:	7af3      	ldrb	r3, [r6, #11]
    2dc2:	716b      	strb	r3, [r5, #5]
    2dc4:	232c      	movs	r3, #44	; 0x2c
    2dc6:	5cf3      	ldrb	r3, [r6, r3]
    2dc8:	71ab      	strb	r3, [r5, #6]
    2dca:	232d      	movs	r3, #45	; 0x2d
    2dcc:	5cf3      	ldrb	r3, [r6, r3]
    2dce:	71eb      	strb	r3, [r5, #7]
    2dd0:	7ef3      	ldrb	r3, [r6, #27]
    2dd2:	722b      	strb	r3, [r5, #8]
    2dd4:	2324      	movs	r3, #36	; 0x24
    2dd6:	5cf3      	ldrb	r3, [r6, r3]
    2dd8:	726b      	strb	r3, [r5, #9]
    2dda:	682b      	ldr	r3, [r5, #0]
    2ddc:	9302      	str	r3, [sp, #8]
    2dde:	0018      	movs	r0, r3
    2de0:	4bb2      	ldr	r3, [pc, #712]	; (30ac <usart_init+0x364>)
    2de2:	4798      	blx	r3
    2de4:	2805      	cmp	r0, #5
    2de6:	d01d      	beq.n	2e24 <usart_init+0xdc>
    2de8:	3013      	adds	r0, #19
    2dea:	2200      	movs	r2, #0
    2dec:	230e      	movs	r3, #14
    2dee:	a906      	add	r1, sp, #24
    2df0:	468c      	mov	ip, r1
    2df2:	4463      	add	r3, ip
    2df4:	801a      	strh	r2, [r3, #0]
    2df6:	8a33      	ldrh	r3, [r6, #16]
    2df8:	4698      	mov	r8, r3
    2dfa:	2380      	movs	r3, #128	; 0x80
    2dfc:	01db      	lsls	r3, r3, #7
    2dfe:	4598      	cmp	r8, r3
    2e00:	d100      	bne.n	2e04 <usart_init+0xbc>
    2e02:	e0c3      	b.n	2f8c <usart_init+0x244>
    2e04:	d910      	bls.n	2e28 <usart_init+0xe0>
    2e06:	23c0      	movs	r3, #192	; 0xc0
    2e08:	01db      	lsls	r3, r3, #7
    2e0a:	4598      	cmp	r8, r3
    2e0c:	d100      	bne.n	2e10 <usart_init+0xc8>
    2e0e:	e0b8      	b.n	2f82 <usart_init+0x23a>
    2e10:	2380      	movs	r3, #128	; 0x80
    2e12:	021b      	lsls	r3, r3, #8
    2e14:	4598      	cmp	r8, r3
    2e16:	d000      	beq.n	2e1a <usart_init+0xd2>
    2e18:	e166      	b.n	30e8 <usart_init+0x3a0>
    2e1a:	2303      	movs	r3, #3
    2e1c:	9306      	str	r3, [sp, #24]
    2e1e:	2300      	movs	r3, #0
    2e20:	9307      	str	r3, [sp, #28]
    2e22:	e00a      	b.n	2e3a <usart_init+0xf2>
    2e24:	2019      	movs	r0, #25
    2e26:	e7e0      	b.n	2dea <usart_init+0xa2>
    2e28:	2380      	movs	r3, #128	; 0x80
    2e2a:	019b      	lsls	r3, r3, #6
    2e2c:	4598      	cmp	r8, r3
    2e2e:	d000      	beq.n	2e32 <usart_init+0xea>
    2e30:	e15a      	b.n	30e8 <usart_init+0x3a0>
    2e32:	2310      	movs	r3, #16
    2e34:	9306      	str	r3, [sp, #24]
    2e36:	3b0f      	subs	r3, #15
    2e38:	9307      	str	r3, [sp, #28]
    2e3a:	6833      	ldr	r3, [r6, #0]
    2e3c:	9305      	str	r3, [sp, #20]
    2e3e:	68f3      	ldr	r3, [r6, #12]
    2e40:	469b      	mov	fp, r3
    2e42:	6973      	ldr	r3, [r6, #20]
    2e44:	9303      	str	r3, [sp, #12]
    2e46:	7e33      	ldrb	r3, [r6, #24]
    2e48:	9304      	str	r3, [sp, #16]
    2e4a:	232e      	movs	r3, #46	; 0x2e
    2e4c:	5cf3      	ldrb	r3, [r6, r3]
    2e4e:	469a      	mov	sl, r3
    2e50:	6873      	ldr	r3, [r6, #4]
    2e52:	4699      	mov	r9, r3
    2e54:	2b00      	cmp	r3, #0
    2e56:	d100      	bne.n	2e5a <usart_init+0x112>
    2e58:	e0c5      	b.n	2fe6 <usart_init+0x29e>
    2e5a:	2380      	movs	r3, #128	; 0x80
    2e5c:	055b      	lsls	r3, r3, #21
    2e5e:	4599      	cmp	r9, r3
    2e60:	d100      	bne.n	2e64 <usart_init+0x11c>
    2e62:	e0a8      	b.n	2fb6 <usart_init+0x26e>
    2e64:	7e73      	ldrb	r3, [r6, #25]
    2e66:	2b00      	cmp	r3, #0
    2e68:	d002      	beq.n	2e70 <usart_init+0x128>
    2e6a:	7eb3      	ldrb	r3, [r6, #26]
    2e6c:	9a02      	ldr	r2, [sp, #8]
    2e6e:	7393      	strb	r3, [r2, #14]
    2e70:	230e      	movs	r3, #14
    2e72:	aa06      	add	r2, sp, #24
    2e74:	4694      	mov	ip, r2
    2e76:	4463      	add	r3, ip
    2e78:	881b      	ldrh	r3, [r3, #0]
    2e7a:	9a02      	ldr	r2, [sp, #8]
    2e7c:	8193      	strh	r3, [r2, #12]
    2e7e:	9a05      	ldr	r2, [sp, #20]
    2e80:	465b      	mov	r3, fp
    2e82:	431a      	orrs	r2, r3
    2e84:	9b03      	ldr	r3, [sp, #12]
    2e86:	431a      	orrs	r2, r3
    2e88:	464b      	mov	r3, r9
    2e8a:	431a      	orrs	r2, r3
    2e8c:	4643      	mov	r3, r8
    2e8e:	431a      	orrs	r2, r3
    2e90:	9b04      	ldr	r3, [sp, #16]
    2e92:	021b      	lsls	r3, r3, #8
    2e94:	431a      	orrs	r2, r3
    2e96:	4653      	mov	r3, sl
    2e98:	075b      	lsls	r3, r3, #29
    2e9a:	431a      	orrs	r2, r3
    2e9c:	232f      	movs	r3, #47	; 0x2f
    2e9e:	5cf3      	ldrb	r3, [r6, r3]
    2ea0:	2b00      	cmp	r3, #0
    2ea2:	d101      	bne.n	2ea8 <usart_init+0x160>
    2ea4:	3304      	adds	r3, #4
    2ea6:	431a      	orrs	r2, r3
    2ea8:	7e73      	ldrb	r3, [r6, #25]
    2eaa:	029b      	lsls	r3, r3, #10
    2eac:	2124      	movs	r1, #36	; 0x24
    2eae:	5c71      	ldrb	r1, [r6, r1]
    2eb0:	0249      	lsls	r1, r1, #9
    2eb2:	430b      	orrs	r3, r1
    2eb4:	2126      	movs	r1, #38	; 0x26
    2eb6:	5c71      	ldrb	r1, [r6, r1]
    2eb8:	0209      	lsls	r1, r1, #8
    2eba:	430b      	orrs	r3, r1
    2ebc:	212c      	movs	r1, #44	; 0x2c
    2ebe:	5c71      	ldrb	r1, [r6, r1]
    2ec0:	0449      	lsls	r1, r1, #17
    2ec2:	430b      	orrs	r3, r1
    2ec4:	212d      	movs	r1, #45	; 0x2d
    2ec6:	5c71      	ldrb	r1, [r6, r1]
    2ec8:	0409      	lsls	r1, r1, #16
    2eca:	430b      	orrs	r3, r1
    2ecc:	7ab0      	ldrb	r0, [r6, #10]
    2ece:	7af1      	ldrb	r1, [r6, #11]
    2ed0:	4308      	orrs	r0, r1
    2ed2:	4318      	orrs	r0, r3
    2ed4:	8933      	ldrh	r3, [r6, #8]
    2ed6:	2bff      	cmp	r3, #255	; 0xff
    2ed8:	d100      	bne.n	2edc <usart_init+0x194>
    2eda:	e0aa      	b.n	3032 <usart_init+0x2ea>
    2edc:	2180      	movs	r1, #128	; 0x80
    2ede:	0449      	lsls	r1, r1, #17
    2ee0:	430a      	orrs	r2, r1
    2ee2:	4318      	orrs	r0, r3
    2ee4:	9902      	ldr	r1, [sp, #8]
    2ee6:	688b      	ldr	r3, [r1, #8]
    2ee8:	469c      	mov	ip, r3
    2eea:	8c33      	ldrh	r3, [r6, #32]
    2eec:	8c71      	ldrh	r1, [r6, #34]	; 0x22
    2eee:	430b      	orrs	r3, r1
    2ef0:	001f      	movs	r7, r3
    2ef2:	2107      	movs	r1, #7
    2ef4:	4663      	mov	r3, ip
    2ef6:	4019      	ands	r1, r3
    2ef8:	003b      	movs	r3, r7
    2efa:	430b      	orrs	r3, r1
    2efc:	9902      	ldr	r1, [sp, #8]
    2efe:	608b      	str	r3, [r1, #8]
    2f00:	69f3      	ldr	r3, [r6, #28]
    2f02:	2b00      	cmp	r3, #0
    2f04:	d002      	beq.n	2f0c <usart_init+0x1c4>
    2f06:	496e      	ldr	r1, [pc, #440]	; (30c0 <usart_init+0x378>)
    2f08:	400a      	ands	r2, r1
    2f0a:	431a      	orrs	r2, r3
    2f0c:	2334      	movs	r3, #52	; 0x34
    2f0e:	5cf3      	ldrb	r3, [r6, r3]
    2f10:	2b00      	cmp	r3, #0
    2f12:	d103      	bne.n	2f1c <usart_init+0x1d4>
    2f14:	4b6b      	ldr	r3, [pc, #428]	; (30c4 <usart_init+0x37c>)
    2f16:	789b      	ldrb	r3, [r3, #2]
    2f18:	079b      	lsls	r3, r3, #30
    2f1a:	d501      	bpl.n	2f20 <usart_init+0x1d8>
    2f1c:	2380      	movs	r3, #128	; 0x80
    2f1e:	431a      	orrs	r2, r3
    2f20:	6829      	ldr	r1, [r5, #0]
    2f22:	9f02      	ldr	r7, [sp, #8]
    2f24:	69cb      	ldr	r3, [r1, #28]
    2f26:	2b00      	cmp	r3, #0
    2f28:	d1fc      	bne.n	2f24 <usart_init+0x1dc>
    2f2a:	6078      	str	r0, [r7, #4]
    2f2c:	6829      	ldr	r1, [r5, #0]
    2f2e:	69cb      	ldr	r3, [r1, #28]
    2f30:	2b00      	cmp	r3, #0
    2f32:	d1fc      	bne.n	2f2e <usart_init+0x1e6>
    2f34:	603a      	str	r2, [r7, #0]
    2f36:	683b      	ldr	r3, [r7, #0]
    2f38:	22f0      	movs	r2, #240	; 0xf0
    2f3a:	0512      	lsls	r2, r2, #20
    2f3c:	4013      	ands	r3, r2
    2f3e:	22e0      	movs	r2, #224	; 0xe0
    2f40:	04d2      	lsls	r2, r2, #19
    2f42:	4293      	cmp	r3, r2
    2f44:	d00a      	beq.n	2f5c <usart_init+0x214>
    2f46:	68bb      	ldr	r3, [r7, #8]
    2f48:	2207      	movs	r2, #7
    2f4a:	4393      	bics	r3, r2
    2f4c:	60bb      	str	r3, [r7, #8]
    2f4e:	68ba      	ldr	r2, [r7, #8]
    2f50:	2325      	movs	r3, #37	; 0x25
    2f52:	5cf1      	ldrb	r1, [r6, r3]
    2f54:	3b1e      	subs	r3, #30
    2f56:	400b      	ands	r3, r1
    2f58:	4313      	orrs	r3, r2
    2f5a:	60bb      	str	r3, [r7, #8]
    2f5c:	ab0e      	add	r3, sp, #56	; 0x38
    2f5e:	2280      	movs	r2, #128	; 0x80
    2f60:	701a      	strb	r2, [r3, #0]
    2f62:	2200      	movs	r2, #0
    2f64:	705a      	strb	r2, [r3, #1]
    2f66:	70da      	strb	r2, [r3, #3]
    2f68:	709a      	strb	r2, [r3, #2]
    2f6a:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    2f6c:	930a      	str	r3, [sp, #40]	; 0x28
    2f6e:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
    2f70:	930b      	str	r3, [sp, #44]	; 0x2c
    2f72:	6c33      	ldr	r3, [r6, #64]	; 0x40
    2f74:	930c      	str	r3, [sp, #48]	; 0x30
    2f76:	6c73      	ldr	r3, [r6, #68]	; 0x44
    2f78:	9302      	str	r3, [sp, #8]
    2f7a:	930d      	str	r3, [sp, #52]	; 0x34
    2f7c:	2700      	movs	r7, #0
    2f7e:	ae0a      	add	r6, sp, #40	; 0x28
    2f80:	e066      	b.n	3050 <usart_init+0x308>
    2f82:	2308      	movs	r3, #8
    2f84:	9306      	str	r3, [sp, #24]
    2f86:	3b07      	subs	r3, #7
    2f88:	9307      	str	r3, [sp, #28]
    2f8a:	e756      	b.n	2e3a <usart_init+0xf2>
    2f8c:	6833      	ldr	r3, [r6, #0]
    2f8e:	9305      	str	r3, [sp, #20]
    2f90:	68f3      	ldr	r3, [r6, #12]
    2f92:	469b      	mov	fp, r3
    2f94:	6973      	ldr	r3, [r6, #20]
    2f96:	9303      	str	r3, [sp, #12]
    2f98:	7e33      	ldrb	r3, [r6, #24]
    2f9a:	9304      	str	r3, [sp, #16]
    2f9c:	232e      	movs	r3, #46	; 0x2e
    2f9e:	5cf3      	ldrb	r3, [r6, r3]
    2fa0:	469a      	mov	sl, r3
    2fa2:	6873      	ldr	r3, [r6, #4]
    2fa4:	4699      	mov	r9, r3
    2fa6:	2b00      	cmp	r3, #0
    2fa8:	d019      	beq.n	2fde <usart_init+0x296>
    2faa:	2380      	movs	r3, #128	; 0x80
    2fac:	055b      	lsls	r3, r3, #21
    2fae:	4599      	cmp	r9, r3
    2fb0:	d001      	beq.n	2fb6 <usart_init+0x26e>
    2fb2:	2300      	movs	r3, #0
    2fb4:	e027      	b.n	3006 <usart_init+0x2be>
    2fb6:	232f      	movs	r3, #47	; 0x2f
    2fb8:	5cf3      	ldrb	r3, [r6, r3]
    2fba:	2b00      	cmp	r3, #0
    2fbc:	d000      	beq.n	2fc0 <usart_init+0x278>
    2fbe:	e751      	b.n	2e64 <usart_init+0x11c>
    2fc0:	6ab3      	ldr	r3, [r6, #40]	; 0x28
    2fc2:	001f      	movs	r7, r3
    2fc4:	b2c0      	uxtb	r0, r0
    2fc6:	4b40      	ldr	r3, [pc, #256]	; (30c8 <usart_init+0x380>)
    2fc8:	4798      	blx	r3
    2fca:	0001      	movs	r1, r0
    2fcc:	220e      	movs	r2, #14
    2fce:	ab06      	add	r3, sp, #24
    2fd0:	469c      	mov	ip, r3
    2fd2:	4462      	add	r2, ip
    2fd4:	0038      	movs	r0, r7
    2fd6:	4b3d      	ldr	r3, [pc, #244]	; (30cc <usart_init+0x384>)
    2fd8:	4798      	blx	r3
    2fda:	0003      	movs	r3, r0
    2fdc:	e013      	b.n	3006 <usart_init+0x2be>
    2fde:	2308      	movs	r3, #8
    2fe0:	9306      	str	r3, [sp, #24]
    2fe2:	2300      	movs	r3, #0
    2fe4:	9307      	str	r3, [sp, #28]
    2fe6:	232f      	movs	r3, #47	; 0x2f
    2fe8:	5cf3      	ldrb	r3, [r6, r3]
    2fea:	2b00      	cmp	r3, #0
    2fec:	d00f      	beq.n	300e <usart_init+0x2c6>
    2fee:	9b06      	ldr	r3, [sp, #24]
    2ff0:	9300      	str	r3, [sp, #0]
    2ff2:	9b07      	ldr	r3, [sp, #28]
    2ff4:	220e      	movs	r2, #14
    2ff6:	a906      	add	r1, sp, #24
    2ff8:	468c      	mov	ip, r1
    2ffa:	4462      	add	r2, ip
    2ffc:	6b31      	ldr	r1, [r6, #48]	; 0x30
    2ffe:	6ab0      	ldr	r0, [r6, #40]	; 0x28
    3000:	4f33      	ldr	r7, [pc, #204]	; (30d0 <usart_init+0x388>)
    3002:	47b8      	blx	r7
    3004:	0003      	movs	r3, r0
    3006:	2b00      	cmp	r3, #0
    3008:	d000      	beq.n	300c <usart_init+0x2c4>
    300a:	e6b3      	b.n	2d74 <usart_init+0x2c>
    300c:	e72a      	b.n	2e64 <usart_init+0x11c>
    300e:	6ab3      	ldr	r3, [r6, #40]	; 0x28
    3010:	001f      	movs	r7, r3
    3012:	b2c0      	uxtb	r0, r0
    3014:	4b2c      	ldr	r3, [pc, #176]	; (30c8 <usart_init+0x380>)
    3016:	4798      	blx	r3
    3018:	0001      	movs	r1, r0
    301a:	9b06      	ldr	r3, [sp, #24]
    301c:	9300      	str	r3, [sp, #0]
    301e:	9b07      	ldr	r3, [sp, #28]
    3020:	220e      	movs	r2, #14
    3022:	a806      	add	r0, sp, #24
    3024:	4684      	mov	ip, r0
    3026:	4462      	add	r2, ip
    3028:	0038      	movs	r0, r7
    302a:	4f29      	ldr	r7, [pc, #164]	; (30d0 <usart_init+0x388>)
    302c:	47b8      	blx	r7
    302e:	0003      	movs	r3, r0
    3030:	e7e9      	b.n	3006 <usart_init+0x2be>
    3032:	7ef3      	ldrb	r3, [r6, #27]
    3034:	2b00      	cmp	r3, #0
    3036:	d100      	bne.n	303a <usart_init+0x2f2>
    3038:	e754      	b.n	2ee4 <usart_init+0x19c>
    303a:	2380      	movs	r3, #128	; 0x80
    303c:	04db      	lsls	r3, r3, #19
    303e:	431a      	orrs	r2, r3
    3040:	e750      	b.n	2ee4 <usart_init+0x19c>
    3042:	0020      	movs	r0, r4
    3044:	4b23      	ldr	r3, [pc, #140]	; (30d4 <usart_init+0x38c>)
    3046:	4798      	blx	r3
    3048:	e007      	b.n	305a <usart_init+0x312>
    304a:	3701      	adds	r7, #1
    304c:	2f04      	cmp	r7, #4
    304e:	d00d      	beq.n	306c <usart_init+0x324>
    3050:	b2f9      	uxtb	r1, r7
    3052:	00bb      	lsls	r3, r7, #2
    3054:	5998      	ldr	r0, [r3, r6]
    3056:	2800      	cmp	r0, #0
    3058:	d0f3      	beq.n	3042 <usart_init+0x2fa>
    305a:	1c43      	adds	r3, r0, #1
    305c:	d0f5      	beq.n	304a <usart_init+0x302>
    305e:	a90e      	add	r1, sp, #56	; 0x38
    3060:	7008      	strb	r0, [r1, #0]
    3062:	0c00      	lsrs	r0, r0, #16
    3064:	b2c0      	uxtb	r0, r0
    3066:	4b1c      	ldr	r3, [pc, #112]	; (30d8 <usart_init+0x390>)
    3068:	4798      	blx	r3
    306a:	e7ee      	b.n	304a <usart_init+0x302>
    306c:	2300      	movs	r3, #0
    306e:	60eb      	str	r3, [r5, #12]
    3070:	612b      	str	r3, [r5, #16]
    3072:	616b      	str	r3, [r5, #20]
    3074:	61ab      	str	r3, [r5, #24]
    3076:	61eb      	str	r3, [r5, #28]
    3078:	622b      	str	r3, [r5, #32]
    307a:	62ab      	str	r3, [r5, #40]	; 0x28
    307c:	626b      	str	r3, [r5, #36]	; 0x24
    307e:	2200      	movs	r2, #0
    3080:	85eb      	strh	r3, [r5, #46]	; 0x2e
    3082:	85ab      	strh	r3, [r5, #44]	; 0x2c
    3084:	3330      	adds	r3, #48	; 0x30
    3086:	54ea      	strb	r2, [r5, r3]
    3088:	3301      	adds	r3, #1
    308a:	54ea      	strb	r2, [r5, r3]
    308c:	3301      	adds	r3, #1
    308e:	54ea      	strb	r2, [r5, r3]
    3090:	3301      	adds	r3, #1
    3092:	54ea      	strb	r2, [r5, r3]
    3094:	6828      	ldr	r0, [r5, #0]
    3096:	4b05      	ldr	r3, [pc, #20]	; (30ac <usart_init+0x364>)
    3098:	4798      	blx	r3
    309a:	0004      	movs	r4, r0
    309c:	490f      	ldr	r1, [pc, #60]	; (30dc <usart_init+0x394>)
    309e:	4b10      	ldr	r3, [pc, #64]	; (30e0 <usart_init+0x398>)
    30a0:	4798      	blx	r3
    30a2:	00a4      	lsls	r4, r4, #2
    30a4:	4b0f      	ldr	r3, [pc, #60]	; (30e4 <usart_init+0x39c>)
    30a6:	50e5      	str	r5, [r4, r3]
    30a8:	2300      	movs	r3, #0
    30aa:	e663      	b.n	2d74 <usart_init+0x2c>
    30ac:	000026d9 	.word	0x000026d9
    30b0:	40000800 	.word	0x40000800
    30b4:	00004da9 	.word	0x00004da9
    30b8:	00004d39 	.word	0x00004d39
    30bc:	00002511 	.word	0x00002511
    30c0:	f0ffffff 	.word	0xf0ffffff
    30c4:	41002000 	.word	0x41002000
    30c8:	00004dcd 	.word	0x00004dcd
    30cc:	00002453 	.word	0x00002453
    30d0:	0000247d 	.word	0x0000247d
    30d4:	0000255d 	.word	0x0000255d
    30d8:	00004ea5 	.word	0x00004ea5
    30dc:	000031e5 	.word	0x000031e5
    30e0:	00003385 	.word	0x00003385
    30e4:	20001f90 	.word	0x20001f90
    30e8:	2310      	movs	r3, #16
    30ea:	9306      	str	r3, [sp, #24]
    30ec:	2300      	movs	r3, #0
    30ee:	9307      	str	r3, [sp, #28]
    30f0:	e6a3      	b.n	2e3a <usart_init+0xf2>
    30f2:	46c0      	nop			; (mov r8, r8)

000030f4 <_usart_write_buffer>:
    30f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    30f6:	0006      	movs	r6, r0
    30f8:	000c      	movs	r4, r1
    30fa:	0015      	movs	r5, r2
    30fc:	6807      	ldr	r7, [r0, #0]
    30fe:	4b0a      	ldr	r3, [pc, #40]	; (3128 <_usart_write_buffer+0x34>)
    3100:	4798      	blx	r3
    3102:	8df3      	ldrh	r3, [r6, #46]	; 0x2e
    3104:	b29b      	uxth	r3, r3
    3106:	2b00      	cmp	r3, #0
    3108:	d003      	beq.n	3112 <_usart_write_buffer+0x1e>
    310a:	4b08      	ldr	r3, [pc, #32]	; (312c <_usart_write_buffer+0x38>)
    310c:	4798      	blx	r3
    310e:	2005      	movs	r0, #5
    3110:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3112:	85f5      	strh	r5, [r6, #46]	; 0x2e
    3114:	4b05      	ldr	r3, [pc, #20]	; (312c <_usart_write_buffer+0x38>)
    3116:	4798      	blx	r3
    3118:	62b4      	str	r4, [r6, #40]	; 0x28
    311a:	2205      	movs	r2, #5
    311c:	2333      	movs	r3, #51	; 0x33
    311e:	54f2      	strb	r2, [r6, r3]
    3120:	3b32      	subs	r3, #50	; 0x32
    3122:	75bb      	strb	r3, [r7, #22]
    3124:	2000      	movs	r0, #0
    3126:	e7f3      	b.n	3110 <_usart_write_buffer+0x1c>
    3128:	000046d9 	.word	0x000046d9
    312c:	00004719 	.word	0x00004719

00003130 <_usart_read_buffer>:
    3130:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3132:	0004      	movs	r4, r0
    3134:	000d      	movs	r5, r1
    3136:	0016      	movs	r6, r2
    3138:	6807      	ldr	r7, [r0, #0]
    313a:	4b0f      	ldr	r3, [pc, #60]	; (3178 <_usart_read_buffer+0x48>)
    313c:	4798      	blx	r3
    313e:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
    3140:	b29b      	uxth	r3, r3
    3142:	2b00      	cmp	r3, #0
    3144:	d003      	beq.n	314e <_usart_read_buffer+0x1e>
    3146:	4b0d      	ldr	r3, [pc, #52]	; (317c <_usart_read_buffer+0x4c>)
    3148:	4798      	blx	r3
    314a:	2005      	movs	r0, #5
    314c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    314e:	85a6      	strh	r6, [r4, #44]	; 0x2c
    3150:	4b0a      	ldr	r3, [pc, #40]	; (317c <_usart_read_buffer+0x4c>)
    3152:	4798      	blx	r3
    3154:	6265      	str	r5, [r4, #36]	; 0x24
    3156:	2205      	movs	r2, #5
    3158:	2332      	movs	r3, #50	; 0x32
    315a:	54e2      	strb	r2, [r4, r3]
    315c:	3b2e      	subs	r3, #46	; 0x2e
    315e:	75bb      	strb	r3, [r7, #22]
    3160:	7a23      	ldrb	r3, [r4, #8]
    3162:	2b00      	cmp	r3, #0
    3164:	d001      	beq.n	316a <_usart_read_buffer+0x3a>
    3166:	2320      	movs	r3, #32
    3168:	75bb      	strb	r3, [r7, #22]
    316a:	7a63      	ldrb	r3, [r4, #9]
    316c:	2000      	movs	r0, #0
    316e:	2b00      	cmp	r3, #0
    3170:	d0ec      	beq.n	314c <_usart_read_buffer+0x1c>
    3172:	2308      	movs	r3, #8
    3174:	75bb      	strb	r3, [r7, #22]
    3176:	e7e9      	b.n	314c <_usart_read_buffer+0x1c>
    3178:	000046d9 	.word	0x000046d9
    317c:	00004719 	.word	0x00004719

00003180 <usart_register_callback>:
    3180:	1c93      	adds	r3, r2, #2
    3182:	009b      	lsls	r3, r3, #2
    3184:	18c3      	adds	r3, r0, r3
    3186:	6059      	str	r1, [r3, #4]
    3188:	2130      	movs	r1, #48	; 0x30
    318a:	2301      	movs	r3, #1
    318c:	4093      	lsls	r3, r2
    318e:	001a      	movs	r2, r3
    3190:	5c43      	ldrb	r3, [r0, r1]
    3192:	4313      	orrs	r3, r2
    3194:	5443      	strb	r3, [r0, r1]
    3196:	4770      	bx	lr

00003198 <usart_read_job>:
    3198:	b510      	push	{r4, lr}
    319a:	2201      	movs	r2, #1
    319c:	4b01      	ldr	r3, [pc, #4]	; (31a4 <usart_read_job+0xc>)
    319e:	4798      	blx	r3
    31a0:	bd10      	pop	{r4, pc}
    31a2:	46c0      	nop			; (mov r8, r8)
    31a4:	00003131 	.word	0x00003131

000031a8 <usart_write_buffer_job>:
    31a8:	b510      	push	{r4, lr}
    31aa:	2317      	movs	r3, #23
    31ac:	2a00      	cmp	r2, #0
    31ae:	d101      	bne.n	31b4 <usart_write_buffer_job+0xc>
    31b0:	0018      	movs	r0, r3
    31b2:	bd10      	pop	{r4, pc}
    31b4:	79c4      	ldrb	r4, [r0, #7]
    31b6:	3305      	adds	r3, #5
    31b8:	2c00      	cmp	r4, #0
    31ba:	d0f9      	beq.n	31b0 <usart_write_buffer_job+0x8>
    31bc:	4b01      	ldr	r3, [pc, #4]	; (31c4 <usart_write_buffer_job+0x1c>)
    31be:	4798      	blx	r3
    31c0:	0003      	movs	r3, r0
    31c2:	e7f5      	b.n	31b0 <usart_write_buffer_job+0x8>
    31c4:	000030f5 	.word	0x000030f5

000031c8 <usart_get_job_status>:
    31c8:	2900      	cmp	r1, #0
    31ca:	d003      	beq.n	31d4 <usart_get_job_status+0xc>
    31cc:	2901      	cmp	r1, #1
    31ce:	d005      	beq.n	31dc <usart_get_job_status+0x14>
    31d0:	2017      	movs	r0, #23
    31d2:	e002      	b.n	31da <usart_get_job_status+0x12>
    31d4:	2332      	movs	r3, #50	; 0x32
    31d6:	5cc0      	ldrb	r0, [r0, r3]
    31d8:	b2c0      	uxtb	r0, r0
    31da:	4770      	bx	lr
    31dc:	2333      	movs	r3, #51	; 0x33
    31de:	5cc0      	ldrb	r0, [r0, r3]
    31e0:	b2c0      	uxtb	r0, r0
    31e2:	e7fa      	b.n	31da <usart_get_job_status+0x12>

000031e4 <_usart_interrupt_handler>:
    31e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    31e6:	0080      	lsls	r0, r0, #2
    31e8:	4b64      	ldr	r3, [pc, #400]	; (337c <_usart_interrupt_handler+0x198>)
    31ea:	58c5      	ldr	r5, [r0, r3]
    31ec:	682c      	ldr	r4, [r5, #0]
    31ee:	69e3      	ldr	r3, [r4, #28]
    31f0:	2b00      	cmp	r3, #0
    31f2:	d1fc      	bne.n	31ee <_usart_interrupt_handler+0xa>
    31f4:	7e23      	ldrb	r3, [r4, #24]
    31f6:	7da6      	ldrb	r6, [r4, #22]
    31f8:	401e      	ands	r6, r3
    31fa:	2330      	movs	r3, #48	; 0x30
    31fc:	5ceb      	ldrb	r3, [r5, r3]
    31fe:	2231      	movs	r2, #49	; 0x31
    3200:	5caf      	ldrb	r7, [r5, r2]
    3202:	401f      	ands	r7, r3
    3204:	07f3      	lsls	r3, r6, #31
    3206:	d522      	bpl.n	324e <_usart_interrupt_handler+0x6a>
    3208:	8deb      	ldrh	r3, [r5, #46]	; 0x2e
    320a:	b29b      	uxth	r3, r3
    320c:	2b00      	cmp	r3, #0
    320e:	d01c      	beq.n	324a <_usart_interrupt_handler+0x66>
    3210:	6aaa      	ldr	r2, [r5, #40]	; 0x28
    3212:	7813      	ldrb	r3, [r2, #0]
    3214:	b2db      	uxtb	r3, r3
    3216:	1c51      	adds	r1, r2, #1
    3218:	62a9      	str	r1, [r5, #40]	; 0x28
    321a:	7969      	ldrb	r1, [r5, #5]
    321c:	2901      	cmp	r1, #1
    321e:	d00e      	beq.n	323e <_usart_interrupt_handler+0x5a>
    3220:	b29b      	uxth	r3, r3
    3222:	05db      	lsls	r3, r3, #23
    3224:	0ddb      	lsrs	r3, r3, #23
    3226:	8523      	strh	r3, [r4, #40]	; 0x28
    3228:	8deb      	ldrh	r3, [r5, #46]	; 0x2e
    322a:	3b01      	subs	r3, #1
    322c:	b29b      	uxth	r3, r3
    322e:	85eb      	strh	r3, [r5, #46]	; 0x2e
    3230:	2b00      	cmp	r3, #0
    3232:	d10c      	bne.n	324e <_usart_interrupt_handler+0x6a>
    3234:	3301      	adds	r3, #1
    3236:	7523      	strb	r3, [r4, #20]
    3238:	3301      	adds	r3, #1
    323a:	75a3      	strb	r3, [r4, #22]
    323c:	e007      	b.n	324e <_usart_interrupt_handler+0x6a>
    323e:	7851      	ldrb	r1, [r2, #1]
    3240:	0209      	lsls	r1, r1, #8
    3242:	430b      	orrs	r3, r1
    3244:	3202      	adds	r2, #2
    3246:	62aa      	str	r2, [r5, #40]	; 0x28
    3248:	e7eb      	b.n	3222 <_usart_interrupt_handler+0x3e>
    324a:	2301      	movs	r3, #1
    324c:	7523      	strb	r3, [r4, #20]
    324e:	07b3      	lsls	r3, r6, #30
    3250:	d506      	bpl.n	3260 <_usart_interrupt_handler+0x7c>
    3252:	2302      	movs	r3, #2
    3254:	7523      	strb	r3, [r4, #20]
    3256:	2200      	movs	r2, #0
    3258:	3331      	adds	r3, #49	; 0x31
    325a:	54ea      	strb	r2, [r5, r3]
    325c:	07fb      	lsls	r3, r7, #31
    325e:	d41e      	bmi.n	329e <_usart_interrupt_handler+0xba>
    3260:	0773      	lsls	r3, r6, #29
    3262:	d568      	bpl.n	3336 <_usart_interrupt_handler+0x152>
    3264:	8dab      	ldrh	r3, [r5, #44]	; 0x2c
    3266:	b29b      	uxth	r3, r3
    3268:	2b00      	cmp	r3, #0
    326a:	d062      	beq.n	3332 <_usart_interrupt_handler+0x14e>
    326c:	8b63      	ldrh	r3, [r4, #26]
    326e:	b2db      	uxtb	r3, r3
    3270:	071a      	lsls	r2, r3, #28
    3272:	d418      	bmi.n	32a6 <_usart_interrupt_handler+0xc2>
    3274:	227f      	movs	r2, #127	; 0x7f
    3276:	4013      	ands	r3, r2
    3278:	065a      	lsls	r2, r3, #25
    327a:	d501      	bpl.n	3280 <_usart_interrupt_handler+0x9c>
    327c:	2240      	movs	r2, #64	; 0x40
    327e:	4393      	bics	r3, r2
    3280:	2b00      	cmp	r3, #0
    3282:	d033      	beq.n	32ec <_usart_interrupt_handler+0x108>
    3284:	079a      	lsls	r2, r3, #30
    3286:	d511      	bpl.n	32ac <_usart_interrupt_handler+0xc8>
    3288:	221a      	movs	r2, #26
    328a:	2332      	movs	r3, #50	; 0x32
    328c:	54ea      	strb	r2, [r5, r3]
    328e:	3b30      	subs	r3, #48	; 0x30
    3290:	8363      	strh	r3, [r4, #26]
    3292:	077b      	lsls	r3, r7, #29
    3294:	d54f      	bpl.n	3336 <_usart_interrupt_handler+0x152>
    3296:	0028      	movs	r0, r5
    3298:	696b      	ldr	r3, [r5, #20]
    329a:	4798      	blx	r3
    329c:	e04b      	b.n	3336 <_usart_interrupt_handler+0x152>
    329e:	0028      	movs	r0, r5
    32a0:	68eb      	ldr	r3, [r5, #12]
    32a2:	4798      	blx	r3
    32a4:	e7dc      	b.n	3260 <_usart_interrupt_handler+0x7c>
    32a6:	2277      	movs	r2, #119	; 0x77
    32a8:	4013      	ands	r3, r2
    32aa:	e7e5      	b.n	3278 <_usart_interrupt_handler+0x94>
    32ac:	075a      	lsls	r2, r3, #29
    32ae:	d505      	bpl.n	32bc <_usart_interrupt_handler+0xd8>
    32b0:	221e      	movs	r2, #30
    32b2:	2332      	movs	r3, #50	; 0x32
    32b4:	54ea      	strb	r2, [r5, r3]
    32b6:	3b2e      	subs	r3, #46	; 0x2e
    32b8:	8363      	strh	r3, [r4, #26]
    32ba:	e7ea      	b.n	3292 <_usart_interrupt_handler+0xae>
    32bc:	07da      	lsls	r2, r3, #31
    32be:	d505      	bpl.n	32cc <_usart_interrupt_handler+0xe8>
    32c0:	2213      	movs	r2, #19
    32c2:	2332      	movs	r3, #50	; 0x32
    32c4:	54ea      	strb	r2, [r5, r3]
    32c6:	3b31      	subs	r3, #49	; 0x31
    32c8:	8363      	strh	r3, [r4, #26]
    32ca:	e7e2      	b.n	3292 <_usart_interrupt_handler+0xae>
    32cc:	06da      	lsls	r2, r3, #27
    32ce:	d505      	bpl.n	32dc <_usart_interrupt_handler+0xf8>
    32d0:	2242      	movs	r2, #66	; 0x42
    32d2:	2332      	movs	r3, #50	; 0x32
    32d4:	54ea      	strb	r2, [r5, r3]
    32d6:	3b22      	subs	r3, #34	; 0x22
    32d8:	8363      	strh	r3, [r4, #26]
    32da:	e7da      	b.n	3292 <_usart_interrupt_handler+0xae>
    32dc:	069b      	lsls	r3, r3, #26
    32de:	d5d8      	bpl.n	3292 <_usart_interrupt_handler+0xae>
    32e0:	2241      	movs	r2, #65	; 0x41
    32e2:	2332      	movs	r3, #50	; 0x32
    32e4:	54ea      	strb	r2, [r5, r3]
    32e6:	3b12      	subs	r3, #18
    32e8:	8363      	strh	r3, [r4, #26]
    32ea:	e7d2      	b.n	3292 <_usart_interrupt_handler+0xae>
    32ec:	8d23      	ldrh	r3, [r4, #40]	; 0x28
    32ee:	05db      	lsls	r3, r3, #23
    32f0:	0ddb      	lsrs	r3, r3, #23
    32f2:	b2da      	uxtb	r2, r3
    32f4:	6a69      	ldr	r1, [r5, #36]	; 0x24
    32f6:	700a      	strb	r2, [r1, #0]
    32f8:	6a6a      	ldr	r2, [r5, #36]	; 0x24
    32fa:	1c51      	adds	r1, r2, #1
    32fc:	6269      	str	r1, [r5, #36]	; 0x24
    32fe:	7969      	ldrb	r1, [r5, #5]
    3300:	2901      	cmp	r1, #1
    3302:	d010      	beq.n	3326 <_usart_interrupt_handler+0x142>
    3304:	8dab      	ldrh	r3, [r5, #44]	; 0x2c
    3306:	3b01      	subs	r3, #1
    3308:	b29b      	uxth	r3, r3
    330a:	85ab      	strh	r3, [r5, #44]	; 0x2c
    330c:	2b00      	cmp	r3, #0
    330e:	d112      	bne.n	3336 <_usart_interrupt_handler+0x152>
    3310:	3304      	adds	r3, #4
    3312:	7523      	strb	r3, [r4, #20]
    3314:	2200      	movs	r2, #0
    3316:	332e      	adds	r3, #46	; 0x2e
    3318:	54ea      	strb	r2, [r5, r3]
    331a:	07bb      	lsls	r3, r7, #30
    331c:	d50b      	bpl.n	3336 <_usart_interrupt_handler+0x152>
    331e:	0028      	movs	r0, r5
    3320:	692b      	ldr	r3, [r5, #16]
    3322:	4798      	blx	r3
    3324:	e007      	b.n	3336 <_usart_interrupt_handler+0x152>
    3326:	0a1b      	lsrs	r3, r3, #8
    3328:	7053      	strb	r3, [r2, #1]
    332a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    332c:	3301      	adds	r3, #1
    332e:	626b      	str	r3, [r5, #36]	; 0x24
    3330:	e7e8      	b.n	3304 <_usart_interrupt_handler+0x120>
    3332:	2304      	movs	r3, #4
    3334:	7523      	strb	r3, [r4, #20]
    3336:	06f3      	lsls	r3, r6, #27
    3338:	d504      	bpl.n	3344 <_usart_interrupt_handler+0x160>
    333a:	2310      	movs	r3, #16
    333c:	7523      	strb	r3, [r4, #20]
    333e:	7623      	strb	r3, [r4, #24]
    3340:	06fb      	lsls	r3, r7, #27
    3342:	d40e      	bmi.n	3362 <_usart_interrupt_handler+0x17e>
    3344:	06b3      	lsls	r3, r6, #26
    3346:	d504      	bpl.n	3352 <_usart_interrupt_handler+0x16e>
    3348:	2320      	movs	r3, #32
    334a:	7523      	strb	r3, [r4, #20]
    334c:	7623      	strb	r3, [r4, #24]
    334e:	073b      	lsls	r3, r7, #28
    3350:	d40b      	bmi.n	336a <_usart_interrupt_handler+0x186>
    3352:	0733      	lsls	r3, r6, #28
    3354:	d504      	bpl.n	3360 <_usart_interrupt_handler+0x17c>
    3356:	2308      	movs	r3, #8
    3358:	7523      	strb	r3, [r4, #20]
    335a:	7623      	strb	r3, [r4, #24]
    335c:	06bb      	lsls	r3, r7, #26
    335e:	d408      	bmi.n	3372 <_usart_interrupt_handler+0x18e>
    3360:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3362:	0028      	movs	r0, r5
    3364:	69eb      	ldr	r3, [r5, #28]
    3366:	4798      	blx	r3
    3368:	e7ec      	b.n	3344 <_usart_interrupt_handler+0x160>
    336a:	0028      	movs	r0, r5
    336c:	69ab      	ldr	r3, [r5, #24]
    336e:	4798      	blx	r3
    3370:	e7ef      	b.n	3352 <_usart_interrupt_handler+0x16e>
    3372:	6a2b      	ldr	r3, [r5, #32]
    3374:	0028      	movs	r0, r5
    3376:	4798      	blx	r3
    3378:	e7f2      	b.n	3360 <_usart_interrupt_handler+0x17c>
    337a:	46c0      	nop			; (mov r8, r8)
    337c:	20001f90 	.word	0x20001f90

00003380 <_sercom_default_handler>:
    3380:	4770      	bx	lr
	...

00003384 <_sercom_set_handler>:
    3384:	b5f0      	push	{r4, r5, r6, r7, lr}
    3386:	4b0a      	ldr	r3, [pc, #40]	; (33b0 <_sercom_set_handler+0x2c>)
    3388:	781b      	ldrb	r3, [r3, #0]
    338a:	2b00      	cmp	r3, #0
    338c:	d10c      	bne.n	33a8 <_sercom_set_handler+0x24>
    338e:	4f09      	ldr	r7, [pc, #36]	; (33b4 <_sercom_set_handler+0x30>)
    3390:	4e09      	ldr	r6, [pc, #36]	; (33b8 <_sercom_set_handler+0x34>)
    3392:	4d0a      	ldr	r5, [pc, #40]	; (33bc <_sercom_set_handler+0x38>)
    3394:	2400      	movs	r4, #0
    3396:	51de      	str	r6, [r3, r7]
    3398:	195a      	adds	r2, r3, r5
    339a:	6014      	str	r4, [r2, #0]
    339c:	3304      	adds	r3, #4
    339e:	2b18      	cmp	r3, #24
    33a0:	d1f9      	bne.n	3396 <_sercom_set_handler+0x12>
    33a2:	2201      	movs	r2, #1
    33a4:	4b02      	ldr	r3, [pc, #8]	; (33b0 <_sercom_set_handler+0x2c>)
    33a6:	701a      	strb	r2, [r3, #0]
    33a8:	0080      	lsls	r0, r0, #2
    33aa:	4b02      	ldr	r3, [pc, #8]	; (33b4 <_sercom_set_handler+0x30>)
    33ac:	50c1      	str	r1, [r0, r3]
    33ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
    33b0:	200002e2 	.word	0x200002e2
    33b4:	200002e4 	.word	0x200002e4
    33b8:	00003381 	.word	0x00003381
    33bc:	20001f90 	.word	0x20001f90

000033c0 <_sercom_get_interrupt_vector>:
    33c0:	b500      	push	{lr}
    33c2:	b083      	sub	sp, #12
    33c4:	2309      	movs	r3, #9
    33c6:	466a      	mov	r2, sp
    33c8:	7013      	strb	r3, [r2, #0]
    33ca:	3301      	adds	r3, #1
    33cc:	7053      	strb	r3, [r2, #1]
    33ce:	3301      	adds	r3, #1
    33d0:	7093      	strb	r3, [r2, #2]
    33d2:	3301      	adds	r3, #1
    33d4:	70d3      	strb	r3, [r2, #3]
    33d6:	3301      	adds	r3, #1
    33d8:	7113      	strb	r3, [r2, #4]
    33da:	3301      	adds	r3, #1
    33dc:	7153      	strb	r3, [r2, #5]
    33de:	4b03      	ldr	r3, [pc, #12]	; (33ec <_sercom_get_interrupt_vector+0x2c>)
    33e0:	4798      	blx	r3
    33e2:	466b      	mov	r3, sp
    33e4:	5618      	ldrsb	r0, [r3, r0]
    33e6:	b003      	add	sp, #12
    33e8:	bd00      	pop	{pc}
    33ea:	46c0      	nop			; (mov r8, r8)
    33ec:	000026d9 	.word	0x000026d9

000033f0 <SERCOM0_Handler>:
    33f0:	b510      	push	{r4, lr}
    33f2:	4b02      	ldr	r3, [pc, #8]	; (33fc <SERCOM0_Handler+0xc>)
    33f4:	681b      	ldr	r3, [r3, #0]
    33f6:	2000      	movs	r0, #0
    33f8:	4798      	blx	r3
    33fa:	bd10      	pop	{r4, pc}
    33fc:	200002e4 	.word	0x200002e4

00003400 <SERCOM1_Handler>:
    3400:	b510      	push	{r4, lr}
    3402:	4b02      	ldr	r3, [pc, #8]	; (340c <SERCOM1_Handler+0xc>)
    3404:	685b      	ldr	r3, [r3, #4]
    3406:	2001      	movs	r0, #1
    3408:	4798      	blx	r3
    340a:	bd10      	pop	{r4, pc}
    340c:	200002e4 	.word	0x200002e4

00003410 <SERCOM2_Handler>:
    3410:	b510      	push	{r4, lr}
    3412:	4b02      	ldr	r3, [pc, #8]	; (341c <SERCOM2_Handler+0xc>)
    3414:	689b      	ldr	r3, [r3, #8]
    3416:	2002      	movs	r0, #2
    3418:	4798      	blx	r3
    341a:	bd10      	pop	{r4, pc}
    341c:	200002e4 	.word	0x200002e4

00003420 <SERCOM3_Handler>:
    3420:	b510      	push	{r4, lr}
    3422:	4b02      	ldr	r3, [pc, #8]	; (342c <SERCOM3_Handler+0xc>)
    3424:	68db      	ldr	r3, [r3, #12]
    3426:	2003      	movs	r0, #3
    3428:	4798      	blx	r3
    342a:	bd10      	pop	{r4, pc}
    342c:	200002e4 	.word	0x200002e4

00003430 <SERCOM4_Handler>:
    3430:	b510      	push	{r4, lr}
    3432:	4b02      	ldr	r3, [pc, #8]	; (343c <SERCOM4_Handler+0xc>)
    3434:	691b      	ldr	r3, [r3, #16]
    3436:	2004      	movs	r0, #4
    3438:	4798      	blx	r3
    343a:	bd10      	pop	{r4, pc}
    343c:	200002e4 	.word	0x200002e4

00003440 <SERCOM5_Handler>:
    3440:	b510      	push	{r4, lr}
    3442:	4b02      	ldr	r3, [pc, #8]	; (344c <SERCOM5_Handler+0xc>)
    3444:	695b      	ldr	r3, [r3, #20]
    3446:	2005      	movs	r0, #5
    3448:	4798      	blx	r3
    344a:	bd10      	pop	{r4, pc}
    344c:	200002e4 	.word	0x200002e4

00003450 <ac_register_callback>:
	/* Sanity check arguments */
	Assert(module);
	Assert(callback_func);

	/* Register callback function */
	module->callback[callback_type] = callback_func;
    3450:	0093      	lsls	r3, r2, #2
    3452:	18c3      	adds	r3, r0, r3
    3454:	6059      	str	r1, [r3, #4]

	/* Set software flag for callback */
	module->register_callback_mask |= (1 << callback_type);
    3456:	2301      	movs	r3, #1
    3458:	4093      	lsls	r3, r2
    345a:	001a      	movs	r2, r3
    345c:	7f03      	ldrb	r3, [r0, #28]
    345e:	4313      	orrs	r3, r2
    3460:	7703      	strb	r3, [r0, #28]

	return STATUS_OK;
}
    3462:	2000      	movs	r0, #0
    3464:	4770      	bx	lr
	...

00003468 <_ac_interrupt_handler>:
 * that are registered and enabled.
 *
 * \param [in] instance_index  Default value 0
 */
void _ac_interrupt_handler(const uint32_t instance_index)
{
    3468:	b570      	push	{r4, r5, r6, lr}
	/* Temporary variable */
	uint8_t interrupt_and_callback_status_mask;

	/* Get device instance from the look-up table */

	struct ac_module *module = _ac_instance[instance_index];
    346a:	0080      	lsls	r0, r0, #2
    346c:	4b1f      	ldr	r3, [pc, #124]	; (34ec <_ac_interrupt_handler+0x84>)
    346e:	58c4      	ldr	r4, [r0, r3]

	/* Read and mask interrupt flag register */
	interrupt_and_callback_status_mask =
			_ac_instance[instance_index]->hw->INTFLAG.reg &
    3470:	6823      	ldr	r3, [r4, #0]
    3472:	799d      	ldrb	r5, [r3, #6]
	interrupt_and_callback_status_mask =
    3474:	7f22      	ldrb	r2, [r4, #28]
    3476:	7f63      	ldrb	r3, [r4, #29]
    3478:	4013      	ands	r3, r2
    347a:	401d      	ands	r5, r3
			(module->register_callback_mask & module->enable_callback_mask);

	/* Check if comparator channel 0 needs to be serviced */
	if (interrupt_and_callback_status_mask & AC_INTFLAG_COMP0) {
    347c:	07eb      	lsls	r3, r5, #31
    347e:	d40a      	bmi.n	3496 <_ac_interrupt_handler+0x2e>
		/* Clear interrupt flag */
		module->hw->INTFLAG.reg = AC_INTFLAG_COMP0;
	}

	/* Check if comparator channel 1 needs to be serviced */
	if (interrupt_and_callback_status_mask & AC_INTFLAG_COMP1) {
    3480:	07ab      	lsls	r3, r5, #30
    3482:	d40f      	bmi.n	34a4 <_ac_interrupt_handler+0x3c>
		/* Clear interrupt flag */
		module->hw->INTFLAG.reg = AC_INTFLAG_COMP1;
	}

	/* Check if window 0 needs to be serviced */
	if (interrupt_and_callback_status_mask & AC_INTFLAG_WIN0) {
    3484:	06eb      	lsls	r3, r5, #27
    3486:	d414      	bmi.n	34b2 <_ac_interrupt_handler+0x4a>
		module->hw->INTFLAG.reg = AC_INTFLAG_WIN0;
	}

#if (AC_NUM_CMP > 2)
		/* Check if comparator channel 2 needs to be serviced */
	if (interrupt_and_callback_status_mask & AC_INTFLAG_COMP2) {
    3488:	076b      	lsls	r3, r5, #29
    348a:	d419      	bmi.n	34c0 <_ac_interrupt_handler+0x58>
		/* Clear interrupt flag */
		module->hw->INTFLAG.reg = AC_INTFLAG_COMP2;
	}

	/* Check if comparator channel 3 needs to be serviced */
	if (interrupt_and_callback_status_mask & AC_INTFLAG_COMP3) {
    348c:	072b      	lsls	r3, r5, #28
    348e:	d41e      	bmi.n	34ce <_ac_interrupt_handler+0x66>
		module->hw->INTFLAG.reg = AC_INTFLAG_COMP3;
	}

#  if !(SAMC20)
		/* Check if window 1 needs to be serviced */
	if (interrupt_and_callback_status_mask & AC_INTFLAG_WIN1) {
    3490:	06ab      	lsls	r3, r5, #26
    3492:	d423      	bmi.n	34dc <_ac_interrupt_handler+0x74>
		/* Clear interrupt flag */
		module->hw->INTFLAG.reg = AC_INTFLAG_WIN1;
	}
#  endif
#endif /* (AC_NUM_CMP > 2) */
}
    3494:	bd70      	pop	{r4, r5, r6, pc}
		(module->callback[AC_CALLBACK_COMPARATOR_0])(module);
    3496:	0020      	movs	r0, r4
    3498:	6863      	ldr	r3, [r4, #4]
    349a:	4798      	blx	r3
		module->hw->INTFLAG.reg = AC_INTFLAG_COMP0;
    349c:	2301      	movs	r3, #1
    349e:	6822      	ldr	r2, [r4, #0]
    34a0:	7193      	strb	r3, [r2, #6]
    34a2:	e7ed      	b.n	3480 <_ac_interrupt_handler+0x18>
		(module->callback[AC_CALLBACK_COMPARATOR_1])(module);
    34a4:	0020      	movs	r0, r4
    34a6:	68a3      	ldr	r3, [r4, #8]
    34a8:	4798      	blx	r3
		module->hw->INTFLAG.reg = AC_INTFLAG_COMP1;
    34aa:	2302      	movs	r3, #2
    34ac:	6822      	ldr	r2, [r4, #0]
    34ae:	7193      	strb	r3, [r2, #6]
    34b0:	e7e8      	b.n	3484 <_ac_interrupt_handler+0x1c>
		(module->callback[AC_CALLBACK_WINDOW_0])(module);
    34b2:	0020      	movs	r0, r4
    34b4:	6963      	ldr	r3, [r4, #20]
    34b6:	4798      	blx	r3
		module->hw->INTFLAG.reg = AC_INTFLAG_WIN0;
    34b8:	2310      	movs	r3, #16
    34ba:	6822      	ldr	r2, [r4, #0]
    34bc:	7193      	strb	r3, [r2, #6]
    34be:	e7e3      	b.n	3488 <_ac_interrupt_handler+0x20>
		(module->callback[AC_CALLBACK_COMPARATOR_2])(module);
    34c0:	0020      	movs	r0, r4
    34c2:	68e3      	ldr	r3, [r4, #12]
    34c4:	4798      	blx	r3
		module->hw->INTFLAG.reg = AC_INTFLAG_COMP2;
    34c6:	2304      	movs	r3, #4
    34c8:	6822      	ldr	r2, [r4, #0]
    34ca:	7193      	strb	r3, [r2, #6]
    34cc:	e7de      	b.n	348c <_ac_interrupt_handler+0x24>
		(module->callback[AC_CALLBACK_COMPARATOR_3])(module);
    34ce:	0020      	movs	r0, r4
    34d0:	6923      	ldr	r3, [r4, #16]
    34d2:	4798      	blx	r3
		module->hw->INTFLAG.reg = AC_INTFLAG_COMP3;
    34d4:	2308      	movs	r3, #8
    34d6:	6822      	ldr	r2, [r4, #0]
    34d8:	7193      	strb	r3, [r2, #6]
    34da:	e7d9      	b.n	3490 <_ac_interrupt_handler+0x28>
		(module->callback[AC_CALLBACK_WINDOW_1])(module);
    34dc:	0020      	movs	r0, r4
    34de:	69a3      	ldr	r3, [r4, #24]
    34e0:	4798      	blx	r3
		module->hw->INTFLAG.reg = AC_INTFLAG_WIN1;
    34e2:	6823      	ldr	r3, [r4, #0]
    34e4:	2220      	movs	r2, #32
    34e6:	719a      	strb	r2, [r3, #6]
}
    34e8:	e7d4      	b.n	3494 <_ac_interrupt_handler+0x2c>
    34ea:	46c0      	nop			; (mov r8, r8)
    34ec:	20001fa8 	.word	0x20001fa8

000034f0 <AC_Handler>:
{
    34f0:	b510      	push	{r4, lr}
	_ac_interrupt_handler(0);
    34f2:	2000      	movs	r0, #0
    34f4:	4b01      	ldr	r3, [pc, #4]	; (34fc <AC_Handler+0xc>)
    34f6:	4798      	blx	r3
}
    34f8:	bd10      	pop	{r4, pc}
    34fa:	46c0      	nop			; (mov r8, r8)
    34fc:	00003469 	.word	0x00003469

00003500 <port_pin_set_config>:
    3500:	b500      	push	{lr}
    3502:	b083      	sub	sp, #12
    3504:	ab01      	add	r3, sp, #4
    3506:	2280      	movs	r2, #128	; 0x80
    3508:	701a      	strb	r2, [r3, #0]
    350a:	780a      	ldrb	r2, [r1, #0]
    350c:	705a      	strb	r2, [r3, #1]
    350e:	784a      	ldrb	r2, [r1, #1]
    3510:	709a      	strb	r2, [r3, #2]
    3512:	788a      	ldrb	r2, [r1, #2]
    3514:	70da      	strb	r2, [r3, #3]
    3516:	0019      	movs	r1, r3
    3518:	4b01      	ldr	r3, [pc, #4]	; (3520 <port_pin_set_config+0x20>)
    351a:	4798      	blx	r3
    351c:	b003      	add	sp, #12
    351e:	bd00      	pop	{pc}
    3520:	00004ea5 	.word	0x00004ea5

00003524 <configure_adc0_callbacks>:
    configure_adc0_callbacks();
    adc_read_buffer_job(&adc0_instance, &result, 1);

}

void configure_adc0_callbacks(void) {
    3524:	b570      	push	{r4, r5, r6, lr}
    adc_register_callback(&adc0_instance, adc0_window_callback, ADC_CALLBACK_WINDOW);
    3526:	4c0b      	ldr	r4, [pc, #44]	; (3554 <configure_adc0_callbacks+0x30>)
    3528:	2201      	movs	r2, #1
    352a:	490b      	ldr	r1, [pc, #44]	; (3558 <configure_adc0_callbacks+0x34>)
    352c:	0020      	movs	r0, r4
    352e:	4d0b      	ldr	r5, [pc, #44]	; (355c <configure_adc0_callbacks+0x38>)
    3530:	47a8      	blx	r5
{
	/* Sanity check arguments */
	Assert(module);

	/* Enable callback */
	module->enabled_callback_mask |= (1 << callback_type);
    3532:	7ee3      	ldrb	r3, [r4, #27]
    3534:	2202      	movs	r2, #2
    3536:	4313      	orrs	r3, r2
    3538:	76e3      	strb	r3, [r4, #27]
	Assert(module_inst);
	Assert(module_inst->hw);

	Adc *const adc_module = module_inst->hw;
	/* Enable interrupt */
	adc_module->INTENSET.reg = interrupt;
    353a:	2304      	movs	r3, #4
    353c:	6822      	ldr	r2, [r4, #0]
    353e:	7153      	strb	r3, [r2, #5]
    adc_enable_callback(&adc0_instance, ADC_CALLBACK_WINDOW);
    adc_register_callback(&adc0_instance, adc0_read_callback, ADC_CALLBACK_READ_BUFFER);
    3540:	2200      	movs	r2, #0
    3542:	4907      	ldr	r1, [pc, #28]	; (3560 <configure_adc0_callbacks+0x3c>)
    3544:	0020      	movs	r0, r4
    3546:	47a8      	blx	r5
    3548:	7ee3      	ldrb	r3, [r4, #27]
    354a:	2201      	movs	r2, #1
    354c:	4313      	orrs	r3, r2
    354e:	76e3      	strb	r3, [r4, #27]
    adc_enable_callback(&adc0_instance, ADC_CALLBACK_READ_BUFFER);
}
    3550:	bd70      	pop	{r4, r5, r6, pc}
    3552:	46c0      	nop			; (mov r8, r8)
    3554:	20001fb4 	.word	0x20001fb4
    3558:	000039c9 	.word	0x000039c9
    355c:	00001389 	.word	0x00001389
    3560:	000036d1 	.word	0x000036d1

00003564 <adc0_set_compare_value>:
    }
    if(result[1] > ch4->level << 5) {
        trigger_channel(4);
    }
}
void adc0_set_compare_value(uint16_t value) {
    3564:	b510      	push	{r4, lr}
    adc_set_window_mode(&adc0_instance, ADC_WINDOW_MODE_ABOVE_LOWER, value, 1023);
    3566:	b202      	sxth	r2, r0
    3568:	4b03      	ldr	r3, [pc, #12]	; (3578 <adc0_set_compare_value+0x14>)
    356a:	2180      	movs	r1, #128	; 0x80
    356c:	0049      	lsls	r1, r1, #1
    356e:	4803      	ldr	r0, [pc, #12]	; (357c <adc0_set_compare_value+0x18>)
    3570:	4c03      	ldr	r4, [pc, #12]	; (3580 <adc0_set_compare_value+0x1c>)
    3572:	47a0      	blx	r4
}
    3574:	bd10      	pop	{r4, pc}
    3576:	46c0      	nop			; (mov r8, r8)
    3578:	000003ff 	.word	0x000003ff
    357c:	20001fb4 	.word	0x20001fb4
    3580:	00000d69 	.word	0x00000d69

00003584 <adc0_change_channel>:
void adc0_change_channel(uint8_t channel) {
    3584:	b510      	push	{r4, lr}
    3586:	b082      	sub	sp, #8
    3588:	0004      	movs	r4, r0
    if(channel > 1)
    358a:	2801      	cmp	r0, #1
    358c:	d901      	bls.n	3592 <adc0_change_channel+0xe>
        return;
    const enum adc_positive_input adc_pin[5] = {ADC_POSITIVE_INPUT_PIN6,
                                                ADC_POSITIVE_INPUT_PIN7,
                                               };
    adc_set_positive_input(&adc0_instance, adc_pin[channel]);
}
    358e:	b002      	add	sp, #8
    3590:	bd10      	pop	{r4, pc}
    const enum adc_positive_input adc_pin[5] = {ADC_POSITIVE_INPUT_PIN6,
    3592:	2205      	movs	r2, #5
    3594:	2100      	movs	r1, #0
    3596:	4668      	mov	r0, sp
    3598:	4b0b      	ldr	r3, [pc, #44]	; (35c8 <adc0_change_channel+0x44>)
    359a:	4798      	blx	r3
    359c:	2306      	movs	r3, #6
    359e:	466a      	mov	r2, sp
    35a0:	7013      	strb	r3, [r2, #0]
    35a2:	3301      	adds	r3, #1
    35a4:	7053      	strb	r3, [r2, #1]
    adc_set_positive_input(&adc0_instance, adc_pin[channel]);
    35a6:	5d11      	ldrb	r1, [r2, r4]
	Adc *const adc_module = module_inst->hw;
    35a8:	4b08      	ldr	r3, [pc, #32]	; (35cc <adc0_change_channel+0x48>)
    35aa:	681a      	ldr	r2, [r3, #0]
	/* Sanity check arguments */
	Assert(module_inst);

	Adc *const adc_module = module_inst->hw;

	if (adc_module->SYNCBUSY.reg) {
    35ac:	8c13      	ldrh	r3, [r2, #32]
    35ae:	b29b      	uxth	r3, r3
	while (adc_is_syncing(module_inst)) {
    35b0:	2b00      	cmp	r3, #0
    35b2:	d1fb      	bne.n	35ac <adc0_change_channel+0x28>
			(adc_module->INPUTCTRL.reg & ~ADC_INPUTCTRL_MUXPOS_Msk) |
    35b4:	8913      	ldrh	r3, [r2, #8]
    35b6:	201f      	movs	r0, #31
    35b8:	4383      	bics	r3, r0
    35ba:	430b      	orrs	r3, r1
	adc_module->INPUTCTRL.reg =
    35bc:	8113      	strh	r3, [r2, #8]
    35be:	8c13      	ldrh	r3, [r2, #32]
    35c0:	b29b      	uxth	r3, r3
	while (adc_is_syncing(module_inst)) {
    35c2:	2b00      	cmp	r3, #0
    35c4:	d1fb      	bne.n	35be <adc0_change_channel+0x3a>
    35c6:	e7e2      	b.n	358e <adc0_change_channel+0xa>
    35c8:	00008663 	.word	0x00008663
    35cc:	20001fb4 	.word	0x20001fb4

000035d0 <configure_adc0>:
void configure_adc0(channel *p_to_ch) {
    35d0:	b530      	push	{r4, r5, lr}
    35d2:	b08d      	sub	sp, #52	; 0x34
    ch0 = p_to_ch + 0;
    35d4:	4b2c      	ldr	r3, [pc, #176]	; (3688 <configure_adc0+0xb8>)
    35d6:	6018      	str	r0, [r3, #0]
    ch1 = p_to_ch + 1;
    35d8:	0002      	movs	r2, r0
    35da:	3214      	adds	r2, #20
    35dc:	4b2b      	ldr	r3, [pc, #172]	; (368c <configure_adc0+0xbc>)
    35de:	601a      	str	r2, [r3, #0]
    ch2 = p_to_ch + 2;
    35e0:	3214      	adds	r2, #20
    35e2:	4b2b      	ldr	r3, [pc, #172]	; (3690 <configure_adc0+0xc0>)
    35e4:	601a      	str	r2, [r3, #0]
    ch3 = p_to_ch + 3;
    35e6:	3214      	adds	r2, #20
    35e8:	4b2a      	ldr	r3, [pc, #168]	; (3694 <configure_adc0+0xc4>)
    35ea:	601a      	str	r2, [r3, #0]
    ch4 = p_to_ch + 4;
    35ec:	3050      	adds	r0, #80	; 0x50
    35ee:	4b2a      	ldr	r3, [pc, #168]	; (3698 <configure_adc0+0xc8>)
    35f0:	6018      	str	r0, [r3, #0]
    adc_get_config_defaults(&config_adc);
    35f2:	ac01      	add	r4, sp, #4
    35f4:	0020      	movs	r0, r4
    35f6:	4b29      	ldr	r3, [pc, #164]	; (369c <configure_adc0+0xcc>)
    35f8:	4798      	blx	r3
    config_adc.clock_source                  = GCLK_GENERATOR_7;
    35fa:	2307      	movs	r3, #7
    35fc:	7023      	strb	r3, [r4, #0]
    config_adc.reference                     = ADC_REFERENCE_INTVCC2;
    35fe:	3b02      	subs	r3, #2
    3600:	7063      	strb	r3, [r4, #1]
    config_adc.clock_prescaler               = ADC_CLOCK_PRESCALER_DIV8;
    3602:	3b03      	subs	r3, #3
    3604:	70a3      	strb	r3, [r4, #2]
    config_adc.resolution                    = ADC_RESOLUTION_10BIT;
    3606:	331e      	adds	r3, #30
    3608:	70e3      	strb	r3, [r4, #3]
    config_adc.window.window_mode            = ADC_WINDOW_MODE_ABOVE_LOWER;
    360a:	33e0      	adds	r3, #224	; 0xe0
    360c:	8323      	strh	r3, [r4, #24]
    config_adc.window.window_upper_value     = 0;
    360e:	2300      	movs	r3, #0
    3610:	6223      	str	r3, [r4, #32]
    config_adc.window.window_lower_value     = 1023;
    3612:	4a23      	ldr	r2, [pc, #140]	; (36a0 <configure_adc0+0xd0>)
    3614:	61e2      	str	r2, [r4, #28]
    config_adc.positive_input                = ADC_POSITIVE_INPUT_PIN6;
    3616:	2206      	movs	r2, #6
    3618:	7122      	strb	r2, [r4, #4]
    config_adc.negative_input                = ADC_NEGATIVE_INPUT_GND;
    361a:	22c0      	movs	r2, #192	; 0xc0
    361c:	0152      	lsls	r2, r2, #5
    361e:	80e2      	strh	r2, [r4, #6]
    config_adc.left_adjust                   = false;
    3620:	72a3      	strb	r3, [r4, #10]
    config_adc.freerunning                   = true;
    3622:	2201      	movs	r2, #1
    3624:	7322      	strb	r2, [r4, #12]
    config_adc.positive_input_sequence_mask_enable = 0;
    3626:	6123      	str	r3, [r4, #16]
    adc_init(&adc0_instance, ADC0, &config_adc);
    3628:	4d1e      	ldr	r5, [pc, #120]	; (36a4 <configure_adc0+0xd4>)
    362a:	0022      	movs	r2, r4
    362c:	491e      	ldr	r1, [pc, #120]	; (36a8 <configure_adc0+0xd8>)
    362e:	0028      	movs	r0, r5
    3630:	4b1e      	ldr	r3, [pc, #120]	; (36ac <configure_adc0+0xdc>)
    3632:	4798      	blx	r3
	Adc *const adc_module = module_inst->hw;
    3634:	682c      	ldr	r4, [r5, #0]
    3636:	8c23      	ldrh	r3, [r4, #32]
    3638:	b29b      	uxth	r3, r3
	while (adc_is_syncing(module_inst)) {
    363a:	2b00      	cmp	r3, #0
    363c:	d1fb      	bne.n	3636 <configure_adc0+0x66>
			_adc_get_inst_index(adc_module)));
    363e:	0020      	movs	r0, r4
    3640:	4b1b      	ldr	r3, [pc, #108]	; (36b0 <configure_adc0+0xe0>)
    3642:	4798      	blx	r3
	return (enum system_interrupt_vector)adc_interrupt_vectors[inst_num];
    3644:	4b1b      	ldr	r3, [pc, #108]	; (36b4 <configure_adc0+0xe4>)
    3646:	5c1b      	ldrb	r3, [r3, r0]
    3648:	221f      	movs	r2, #31
    364a:	401a      	ands	r2, r3
    364c:	2301      	movs	r3, #1
    364e:	4093      	lsls	r3, r2
    3650:	4a19      	ldr	r2, [pc, #100]	; (36b8 <configure_adc0+0xe8>)
    3652:	6013      	str	r3, [r2, #0]
	adc_module->INTENCLR.reg = ADC_INTENCLR_MASK;
    3654:	2307      	movs	r3, #7
    3656:	7123      	strb	r3, [r4, #4]
	adc_module->INTFLAG.reg = ADC_INTFLAG_MASK;
    3658:	71a3      	strb	r3, [r4, #6]
	adc_module->CTRLA.reg |= ADC_CTRLA_ENABLE;
    365a:	7823      	ldrb	r3, [r4, #0]
    365c:	2202      	movs	r2, #2
    365e:	4313      	orrs	r3, r2
    3660:	7023      	strb	r3, [r4, #0]
	Adc *const adc_module = module_inst->hw;
    3662:	4b10      	ldr	r3, [pc, #64]	; (36a4 <configure_adc0+0xd4>)
    3664:	681a      	ldr	r2, [r3, #0]
	if (adc_module->SYNCBUSY.reg) {
    3666:	8c13      	ldrh	r3, [r2, #32]
    3668:	b29b      	uxth	r3, r3
	while (adc_is_syncing(module_inst)) {
    366a:	2b00      	cmp	r3, #0
    366c:	d1fb      	bne.n	3666 <configure_adc0+0x96>
    adc0_change_channel(adc_ch);
    366e:	4b13      	ldr	r3, [pc, #76]	; (36bc <configure_adc0+0xec>)
    3670:	7818      	ldrb	r0, [r3, #0]
    3672:	4b13      	ldr	r3, [pc, #76]	; (36c0 <configure_adc0+0xf0>)
    3674:	4798      	blx	r3
    configure_adc0_callbacks();
    3676:	4b13      	ldr	r3, [pc, #76]	; (36c4 <configure_adc0+0xf4>)
    3678:	4798      	blx	r3
    adc_read_buffer_job(&adc0_instance, &result, 1);
    367a:	2201      	movs	r2, #1
    367c:	4912      	ldr	r1, [pc, #72]	; (36c8 <configure_adc0+0xf8>)
    367e:	4809      	ldr	r0, [pc, #36]	; (36a4 <configure_adc0+0xd4>)
    3680:	4b12      	ldr	r3, [pc, #72]	; (36cc <configure_adc0+0xfc>)
    3682:	4798      	blx	r3
}
    3684:	b00d      	add	sp, #52	; 0x34
    3686:	bd30      	pop	{r4, r5, pc}
    3688:	20001fe4 	.word	0x20001fe4
    368c:	20001fe8 	.word	0x20001fe8
    3690:	20001fb0 	.word	0x20001fb0
    3694:	20001fac 	.word	0x20001fac
    3698:	20001fd4 	.word	0x20001fd4
    369c:	00000d25 	.word	0x00000d25
    36a0:	000003ff 	.word	0x000003ff
    36a4:	20001fb4 	.word	0x20001fb4
    36a8:	42004400 	.word	0x42004400
    36ac:	00000dad 	.word	0x00000dad
    36b0:	00000d01 	.word	0x00000d01
    36b4:	000090f8 	.word	0x000090f8
    36b8:	e000e100 	.word	0xe000e100
    36bc:	2000031c 	.word	0x2000031c
    36c0:	00003585 	.word	0x00003585
    36c4:	00003525 	.word	0x00003525
    36c8:	20001fd8 	.word	0x20001fd8
    36cc:	0000139d 	.word	0x0000139d

000036d0 <adc0_read_callback>:
void adc0_read_callback(void) {
    36d0:	b510      	push	{r4, lr}
    adc0_read_done_flag = 1;
    36d2:	2201      	movs	r2, #1
    36d4:	4b18      	ldr	r3, [pc, #96]	; (3738 <adc0_read_callback+0x68>)
    36d6:	701a      	strb	r2, [r3, #0]
    if(++adc_ch == 2)adc_ch = 0;
    36d8:	4b18      	ldr	r3, [pc, #96]	; (373c <adc0_read_callback+0x6c>)
    36da:	781b      	ldrb	r3, [r3, #0]
    36dc:	3301      	adds	r3, #1
    36de:	b2db      	uxtb	r3, r3
    36e0:	2b02      	cmp	r3, #2
    36e2:	d016      	beq.n	3712 <adc0_read_callback+0x42>
    36e4:	4a15      	ldr	r2, [pc, #84]	; (373c <adc0_read_callback+0x6c>)
    36e6:	7013      	strb	r3, [r2, #0]
    adc0_change_channel(adc_ch);
    36e8:	4c14      	ldr	r4, [pc, #80]	; (373c <adc0_read_callback+0x6c>)
    36ea:	7820      	ldrb	r0, [r4, #0]
    36ec:	4b14      	ldr	r3, [pc, #80]	; (3740 <adc0_read_callback+0x70>)
    36ee:	4798      	blx	r3
    if(adc_ch == 0)
    36f0:	7823      	ldrb	r3, [r4, #0]
    36f2:	2b00      	cmp	r3, #0
    36f4:	d011      	beq.n	371a <adc0_read_callback+0x4a>
    if(adc_ch == 1)
    36f6:	4b11      	ldr	r3, [pc, #68]	; (373c <adc0_read_callback+0x6c>)
    36f8:	781b      	ldrb	r3, [r3, #0]
    36fa:	2b01      	cmp	r3, #1
    36fc:	d014      	beq.n	3728 <adc0_read_callback+0x58>
    adc_read_buffer_job(&adc0_instance, result + adc_ch, 1);
    36fe:	4b0f      	ldr	r3, [pc, #60]	; (373c <adc0_read_callback+0x6c>)
    3700:	7819      	ldrb	r1, [r3, #0]
    3702:	0049      	lsls	r1, r1, #1
    3704:	4b0f      	ldr	r3, [pc, #60]	; (3744 <adc0_read_callback+0x74>)
    3706:	18c9      	adds	r1, r1, r3
    3708:	2201      	movs	r2, #1
    370a:	480f      	ldr	r0, [pc, #60]	; (3748 <adc0_read_callback+0x78>)
    370c:	4b0f      	ldr	r3, [pc, #60]	; (374c <adc0_read_callback+0x7c>)
    370e:	4798      	blx	r3
}
    3710:	bd10      	pop	{r4, pc}
    if(++adc_ch == 2)adc_ch = 0;
    3712:	2200      	movs	r2, #0
    3714:	4b09      	ldr	r3, [pc, #36]	; (373c <adc0_read_callback+0x6c>)
    3716:	701a      	strb	r2, [r3, #0]
    3718:	e7e6      	b.n	36e8 <adc0_read_callback+0x18>
        adc0_set_compare_value(ch3->level << 5);
    371a:	4b0d      	ldr	r3, [pc, #52]	; (3750 <adc0_read_callback+0x80>)
    371c:	681b      	ldr	r3, [r3, #0]
    371e:	7818      	ldrb	r0, [r3, #0]
    3720:	0140      	lsls	r0, r0, #5
    3722:	4b0c      	ldr	r3, [pc, #48]	; (3754 <adc0_read_callback+0x84>)
    3724:	4798      	blx	r3
    3726:	e7e6      	b.n	36f6 <adc0_read_callback+0x26>
        adc0_set_compare_value(ch4->level << 5);
    3728:	4b0b      	ldr	r3, [pc, #44]	; (3758 <adc0_read_callback+0x88>)
    372a:	681b      	ldr	r3, [r3, #0]
    372c:	7818      	ldrb	r0, [r3, #0]
    372e:	0140      	lsls	r0, r0, #5
    3730:	4b08      	ldr	r3, [pc, #32]	; (3754 <adc0_read_callback+0x84>)
    3732:	4798      	blx	r3
    3734:	e7e3      	b.n	36fe <adc0_read_callback+0x2e>
    3736:	46c0      	nop			; (mov r8, r8)
    3738:	20001fec 	.word	0x20001fec
    373c:	2000031c 	.word	0x2000031c
    3740:	00003585 	.word	0x00003585
    3744:	20001fd8 	.word	0x20001fd8
    3748:	20001fb4 	.word	0x20001fb4
    374c:	0000139d 	.word	0x0000139d
    3750:	20001fac 	.word	0x20001fac
    3754:	00003565 	.word	0x00003565
    3758:	20001fd4 	.word	0x20001fd4

0000375c <configure_ac_channel0>:
    configure_ac_callback();
    ac_enable(&ac_instance);

}

void configure_ac_channel0(void) {
    375c:	b510      	push	{r4, lr}
    375e:	b086      	sub	sp, #24
    struct ac_chan_config *const config) {
    /* Sanity check arguments */
    Assert(config);

    /* Default configuration values */
    config->sample_mode         = AC_CHAN_MODE_CONTINUOUS;
    3760:	2300      	movs	r3, #0
    3762:	466a      	mov	r2, sp
    3764:	7013      	strb	r3, [r2, #0]
    config->filter              = AC_CHAN_FILTER_MAJORITY_5;
    config->enable_hysteresis   = true;
#ifdef FEATURE_AC_RUN_IN_STANDY_EACH_COMPARATOR
    config->run_in_standby      = false;
    3766:	7253      	strb	r3, [r2, #9]
#endif
#ifdef FEATURE_AC_HYSTERESIS_LEVEL
    config->hysteresis_level    = AC_HYSTERESIS_LEVEL_50;
    3768:	7293      	strb	r3, [r2, #10]
#endif
    config->output_mode         = AC_CHAN_OUTPUT_INTERNAL;
    376a:	9303      	str	r3, [sp, #12]
    config->positive_input      = AC_CHAN_POS_MUX_PIN0;
    config->negative_input      = AC_CHAN_NEG_MUX_SCALED_VCC;
    376c:	22a0      	movs	r2, #160	; 0xa0
    376e:	00d2      	lsls	r2, r2, #3
    3770:	4669      	mov	r1, sp
    3772:	824a      	strh	r2, [r1, #18]
    config->vcc_scale_factor    = 32;
    3774:	2220      	movs	r2, #32
    3776:	750a      	strb	r2, [r1, #20]
    config->interrupt_selection = AC_CHAN_INTERRUPT_SELECTION_TOGGLE;
    3778:	466a      	mov	r2, sp
    377a:	754b      	strb	r3, [r1, #21]

    struct ac_chan_config config_ac_chan;

    ac_chan_get_config_defaults(&config_ac_chan);
    config_ac_chan.sample_mode         = AC_CHAN_MODE_CONTINUOUS;
    config_ac_chan.filter              = AC_CHAN_FILTER_NONE;
    377c:	9301      	str	r3, [sp, #4]
    config_ac_chan.enable_hysteresis   = false;
    377e:	720b      	strb	r3, [r1, #8]
    config_ac_chan.output_mode         = AC_CHAN_OUTPUT_INTERNAL;
    config_ac_chan.positive_input      = AC_CHAN_POS_MUX_PIN1;
    3780:	2380      	movs	r3, #128	; 0x80
    3782:	015b      	lsls	r3, r3, #5
    3784:	820b      	strh	r3, [r1, #16]
    config_ac_chan.negative_input      = AC_CHAN_NEG_MUX_SCALED_VCC;
    config_ac_chan.vcc_scale_factor    = 32;

    config_ac_chan.interrupt_selection = AC_CHAN_INTERRUPT_SELECTION_TOGGLE;

    ac_chan_set_config(&ac_instance, AC_CHAN_CHANNEL_2, &config_ac_chan);
    3786:	4c08      	ldr	r4, [pc, #32]	; (37a8 <configure_ac_channel0+0x4c>)
    3788:	2102      	movs	r1, #2
    378a:	0020      	movs	r0, r4
    378c:	4b07      	ldr	r3, [pc, #28]	; (37ac <configure_ac_channel0+0x50>)
    378e:	4798      	blx	r3
    const enum ac_chan_channel channel) {
    /* Sanity check arguments */
    Assert(module_inst);
    Assert(module_inst->hw);

    Ac *const ac_module = module_inst->hw;
    3790:	6823      	ldr	r3, [r4, #0]
    if (ac_module->SYNCBUSY.reg & AC_SYNCBUSY_MASK) {
    3792:	217f      	movs	r1, #127	; 0x7f
    3794:	6a1a      	ldr	r2, [r3, #32]

    while (ac_is_syncing(module_inst)) {
    3796:	4211      	tst	r1, r2
    3798:	d1fc      	bne.n	3794 <configure_ac_channel0+0x38>
        /* Wait until synchronization is complete */
    }

    /* Write the new comparator module control configuration */
    ac_module->COMPCTRL[(uint8_t)channel].reg |= AC_COMPCTRL_ENABLE;
    379a:	699a      	ldr	r2, [r3, #24]
    379c:	2102      	movs	r1, #2
    379e:	430a      	orrs	r2, r1
    37a0:	619a      	str	r2, [r3, #24]

    ac_chan_enable(&ac_instance, AC_CHAN_CHANNEL_2);
}
    37a2:	b006      	add	sp, #24
    37a4:	bd10      	pop	{r4, pc}
    37a6:	46c0      	nop			; (mov r8, r8)
    37a8:	200002fc 	.word	0x200002fc
    37ac:	00000cbd 	.word	0x00000cbd

000037b0 <configure_ac_channel1>:
void configure_ac_channel1(void) {
    37b0:	b510      	push	{r4, lr}
    37b2:	b086      	sub	sp, #24
    config->sample_mode         = AC_CHAN_MODE_CONTINUOUS;
    37b4:	2300      	movs	r3, #0
    37b6:	466a      	mov	r2, sp
    37b8:	7013      	strb	r3, [r2, #0]
    config->run_in_standby      = false;
    37ba:	7253      	strb	r3, [r2, #9]
    config->hysteresis_level    = AC_HYSTERESIS_LEVEL_50;
    37bc:	7293      	strb	r3, [r2, #10]
    config->output_mode         = AC_CHAN_OUTPUT_INTERNAL;
    37be:	9303      	str	r3, [sp, #12]
    config->positive_input      = AC_CHAN_POS_MUX_PIN0;
    37c0:	8213      	strh	r3, [r2, #16]
    config->negative_input      = AC_CHAN_NEG_MUX_SCALED_VCC;
    37c2:	22a0      	movs	r2, #160	; 0xa0
    37c4:	00d2      	lsls	r2, r2, #3
    37c6:	4669      	mov	r1, sp
    37c8:	824a      	strh	r2, [r1, #18]
    config->vcc_scale_factor    = 32;
    37ca:	2220      	movs	r2, #32
    37cc:	750a      	strb	r2, [r1, #20]
    config->interrupt_selection = AC_CHAN_INTERRUPT_SELECTION_TOGGLE;
    37ce:	2200      	movs	r2, #0
    37d0:	754a      	strb	r2, [r1, #21]

    struct ac_chan_config config_ac_chan;

    ac_chan_get_config_defaults(&config_ac_chan);
    config_ac_chan.sample_mode         = AC_CHAN_MODE_CONTINUOUS;
    config_ac_chan.filter              = AC_CHAN_FILTER_NONE;
    37d2:	9301      	str	r3, [sp, #4]
    config_ac_chan.enable_hysteresis   = false;
    37d4:	466a      	mov	r2, sp
    37d6:	720b      	strb	r3, [r1, #8]
    config_ac_chan.negative_input      = AC_CHAN_NEG_MUX_SCALED_VCC;
    config_ac_chan.vcc_scale_factor    = 32;

    config_ac_chan.interrupt_selection = AC_CHAN_INTERRUPT_SELECTION_TOGGLE;

    ac_chan_set_config(&ac_instance, AC_CHAN_CHANNEL_0, &config_ac_chan);
    37d8:	4c07      	ldr	r4, [pc, #28]	; (37f8 <configure_ac_channel1+0x48>)
    37da:	2100      	movs	r1, #0
    37dc:	0020      	movs	r0, r4
    37de:	4b07      	ldr	r3, [pc, #28]	; (37fc <configure_ac_channel1+0x4c>)
    37e0:	4798      	blx	r3
    Ac *const ac_module = module_inst->hw;
    37e2:	6823      	ldr	r3, [r4, #0]
    if (ac_module->SYNCBUSY.reg & AC_SYNCBUSY_MASK) {
    37e4:	217f      	movs	r1, #127	; 0x7f
    37e6:	6a1a      	ldr	r2, [r3, #32]
    while (ac_is_syncing(module_inst)) {
    37e8:	4211      	tst	r1, r2
    37ea:	d1fc      	bne.n	37e6 <configure_ac_channel1+0x36>
    ac_module->COMPCTRL[(uint8_t)channel].reg |= AC_COMPCTRL_ENABLE;
    37ec:	691a      	ldr	r2, [r3, #16]
    37ee:	2102      	movs	r1, #2
    37f0:	430a      	orrs	r2, r1
    37f2:	611a      	str	r2, [r3, #16]

    ac_chan_enable(&ac_instance, AC_CHAN_CHANNEL_0);
}
    37f4:	b006      	add	sp, #24
    37f6:	bd10      	pop	{r4, pc}
    37f8:	200002fc 	.word	0x200002fc
    37fc:	00000cbd 	.word	0x00000cbd

00003800 <configure_ac_channel2>:
void configure_ac_channel2(void) {
    3800:	b510      	push	{r4, lr}
    3802:	b086      	sub	sp, #24
    config->sample_mode         = AC_CHAN_MODE_CONTINUOUS;
    3804:	2300      	movs	r3, #0
    3806:	466a      	mov	r2, sp
    3808:	7013      	strb	r3, [r2, #0]
    config->run_in_standby      = false;
    380a:	7253      	strb	r3, [r2, #9]
    config->hysteresis_level    = AC_HYSTERESIS_LEVEL_50;
    380c:	7293      	strb	r3, [r2, #10]
    config->output_mode         = AC_CHAN_OUTPUT_INTERNAL;
    380e:	9303      	str	r3, [sp, #12]
    config->negative_input      = AC_CHAN_NEG_MUX_SCALED_VCC;
    3810:	22a0      	movs	r2, #160	; 0xa0
    3812:	00d2      	lsls	r2, r2, #3
    3814:	4669      	mov	r1, sp
    3816:	824a      	strh	r2, [r1, #18]
    config->vcc_scale_factor    = 32;
    3818:	2220      	movs	r2, #32
    381a:	750a      	strb	r2, [r1, #20]
    config->interrupt_selection = AC_CHAN_INTERRUPT_SELECTION_TOGGLE;
    381c:	466a      	mov	r2, sp
    381e:	754b      	strb	r3, [r1, #21]

    struct ac_chan_config config_ac_chan;

    ac_chan_get_config_defaults(&config_ac_chan);
    config_ac_chan.sample_mode         = AC_CHAN_MODE_CONTINUOUS;
    config_ac_chan.filter              = AC_CHAN_FILTER_NONE;
    3820:	9301      	str	r3, [sp, #4]
    config_ac_chan.enable_hysteresis   = false;
    3822:	720b      	strb	r3, [r1, #8]
    config_ac_chan.output_mode         = AC_CHAN_OUTPUT_INTERNAL;
    config_ac_chan.positive_input      = AC_CHAN_POS_MUX_PIN1;
    3824:	2380      	movs	r3, #128	; 0x80
    3826:	015b      	lsls	r3, r3, #5
    3828:	820b      	strh	r3, [r1, #16]
    config_ac_chan.negative_input      = AC_CHAN_NEG_MUX_SCALED_VCC;
    config_ac_chan.vcc_scale_factor    = 32;

    config_ac_chan.interrupt_selection = AC_CHAN_INTERRUPT_SELECTION_TOGGLE;

    ac_chan_set_config(&ac_instance, AC_CHAN_CHANNEL_1, &config_ac_chan);
    382a:	4c08      	ldr	r4, [pc, #32]	; (384c <configure_ac_channel2+0x4c>)
    382c:	2101      	movs	r1, #1
    382e:	0020      	movs	r0, r4
    3830:	4b07      	ldr	r3, [pc, #28]	; (3850 <configure_ac_channel2+0x50>)
    3832:	4798      	blx	r3
    Ac *const ac_module = module_inst->hw;
    3834:	6823      	ldr	r3, [r4, #0]
    if (ac_module->SYNCBUSY.reg & AC_SYNCBUSY_MASK) {
    3836:	217f      	movs	r1, #127	; 0x7f
    3838:	6a1a      	ldr	r2, [r3, #32]
    while (ac_is_syncing(module_inst)) {
    383a:	4211      	tst	r1, r2
    383c:	d1fc      	bne.n	3838 <configure_ac_channel2+0x38>
    ac_module->COMPCTRL[(uint8_t)channel].reg |= AC_COMPCTRL_ENABLE;
    383e:	695a      	ldr	r2, [r3, #20]
    3840:	2102      	movs	r1, #2
    3842:	430a      	orrs	r2, r1
    3844:	615a      	str	r2, [r3, #20]

    ac_chan_enable(&ac_instance, AC_CHAN_CHANNEL_1);
}
    3846:	b006      	add	sp, #24
    3848:	bd10      	pop	{r4, pc}
    384a:	46c0      	nop			; (mov r8, r8)
    384c:	200002fc 	.word	0x200002fc
    3850:	00000cbd 	.word	0x00000cbd

00003854 <configure_ac_callback>:
}
void callback_function_ac2(struct ac_module *const module_inst) {
    trigger_channel(2);
}

void configure_ac_callback(void) {
    3854:	b570      	push	{r4, r5, r6, lr}
    ac_register_callback(&ac_instance, callback_function_ac0, AC_CALLBACK_COMPARATOR_2);
    3856:	4c15      	ldr	r4, [pc, #84]	; (38ac <configure_ac_callback+0x58>)
    3858:	2202      	movs	r2, #2
    385a:	4915      	ldr	r1, [pc, #84]	; (38b0 <configure_ac_callback+0x5c>)
    385c:	0020      	movs	r0, r4
    385e:	4d15      	ldr	r5, [pc, #84]	; (38b4 <configure_ac_callback+0x60>)
    3860:	47a8      	blx	r5
    ac_register_callback(&ac_instance, callback_function_ac1, AC_CALLBACK_COMPARATOR_0);
    3862:	2200      	movs	r2, #0
    3864:	4914      	ldr	r1, [pc, #80]	; (38b8 <configure_ac_callback+0x64>)
    3866:	0020      	movs	r0, r4
    3868:	47a8      	blx	r5
    ac_register_callback(&ac_instance, callback_function_ac2, AC_CALLBACK_COMPARATOR_1);
    386a:	2201      	movs	r2, #1
    386c:	4913      	ldr	r1, [pc, #76]	; (38bc <configure_ac_callback+0x68>)
    386e:	0020      	movs	r0, r4
    3870:	47a8      	blx	r5
{
	/* Sanity check arguments */
	Assert(module);

	/* Set software flag for the callback */
	module->enable_callback_mask |= (1 << callback_type);
    3872:	7f63      	ldrb	r3, [r4, #29]
    3874:	2201      	movs	r2, #1
    3876:	4313      	orrs	r3, r2
    3878:	7763      	strb	r3, [r4, #29]
		default:
			break;
	}

	/* Enable the interrupt for the callback */
	module->hw->INTENSET.reg = inenset_temp;
    387a:	2301      	movs	r3, #1
    387c:	6822      	ldr	r2, [r4, #0]
    387e:	7153      	strb	r3, [r2, #5]
    3880:	4b0f      	ldr	r3, [pc, #60]	; (38c0 <configure_ac_callback+0x6c>)
    3882:	2280      	movs	r2, #128	; 0x80
    3884:	0512      	lsls	r2, r2, #20
    3886:	601a      	str	r2, [r3, #0]
	module->enable_callback_mask |= (1 << callback_type);
    3888:	7f61      	ldrb	r1, [r4, #29]
    388a:	2002      	movs	r0, #2
    388c:	4301      	orrs	r1, r0
    388e:	7761      	strb	r1, [r4, #29]
	module->hw->INTENSET.reg = inenset_temp;
    3890:	2102      	movs	r1, #2
    3892:	6820      	ldr	r0, [r4, #0]
    3894:	7141      	strb	r1, [r0, #5]
    3896:	601a      	str	r2, [r3, #0]
	module->enable_callback_mask |= (1 << callback_type);
    3898:	7f61      	ldrb	r1, [r4, #29]
    389a:	2004      	movs	r0, #4
    389c:	4301      	orrs	r1, r0
    389e:	7761      	strb	r1, [r4, #29]
	module->hw->INTENSET.reg = inenset_temp;
    38a0:	6821      	ldr	r1, [r4, #0]
    38a2:	2004      	movs	r0, #4
    38a4:	7148      	strb	r0, [r1, #5]
    38a6:	601a      	str	r2, [r3, #0]
    ac_enable_callback(&ac_instance, AC_CALLBACK_COMPARATOR_0);
    ac_enable_callback(&ac_instance, AC_CALLBACK_COMPARATOR_1);
    ac_enable_callback(&ac_instance, AC_CALLBACK_COMPARATOR_2);
}
    38a8:	bd70      	pop	{r4, r5, r6, pc}
    38aa:	46c0      	nop			; (mov r8, r8)
    38ac:	200002fc 	.word	0x200002fc
    38b0:	00003a11 	.word	0x00003a11
    38b4:	00003451 	.word	0x00003451
    38b8:	00003a21 	.word	0x00003a21
    38bc:	00003a31 	.word	0x00003a31
    38c0:	e000e100 	.word	0xe000e100

000038c4 <configure_ac>:
void configure_ac(channel *p_to_ch) {
    38c4:	b510      	push	{r4, lr}
    38c6:	b082      	sub	sp, #8
    ch0 = p_to_ch + 0;
    38c8:	4b14      	ldr	r3, [pc, #80]	; (391c <configure_ac+0x58>)
    38ca:	6018      	str	r0, [r3, #0]
    ch1 = p_to_ch + 1;
    38cc:	0002      	movs	r2, r0
    38ce:	3214      	adds	r2, #20
    38d0:	4b13      	ldr	r3, [pc, #76]	; (3920 <configure_ac+0x5c>)
    38d2:	601a      	str	r2, [r3, #0]
    ch2 = p_to_ch + 2;
    38d4:	3214      	adds	r2, #20
    38d6:	4b13      	ldr	r3, [pc, #76]	; (3924 <configure_ac+0x60>)
    38d8:	601a      	str	r2, [r3, #0]
    ch3 = p_to_ch + 3;
    38da:	3214      	adds	r2, #20
    38dc:	4b12      	ldr	r3, [pc, #72]	; (3928 <configure_ac+0x64>)
    38de:	601a      	str	r2, [r3, #0]
    ch4 = p_to_ch + 4;
    38e0:	3050      	adds	r0, #80	; 0x50
    38e2:	4b12      	ldr	r3, [pc, #72]	; (392c <configure_ac+0x68>)
    38e4:	6018      	str	r0, [r3, #0]
    config_ac.source_generator = GCLK_GENERATOR_5;
    38e6:	aa01      	add	r2, sp, #4
    38e8:	2305      	movs	r3, #5
    38ea:	7013      	strb	r3, [r2, #0]
    ac_init(&ac_instance, AC, &config_ac);
    38ec:	4c10      	ldr	r4, [pc, #64]	; (3930 <configure_ac+0x6c>)
    38ee:	4911      	ldr	r1, [pc, #68]	; (3934 <configure_ac+0x70>)
    38f0:	0020      	movs	r0, r4
    38f2:	4b11      	ldr	r3, [pc, #68]	; (3938 <configure_ac+0x74>)
    38f4:	4798      	blx	r3
    configure_ac_channel0();
    38f6:	4b11      	ldr	r3, [pc, #68]	; (393c <configure_ac+0x78>)
    38f8:	4798      	blx	r3
    configure_ac_channel1();
    38fa:	4b11      	ldr	r3, [pc, #68]	; (3940 <configure_ac+0x7c>)
    38fc:	4798      	blx	r3
    configure_ac_channel2();
    38fe:	4b11      	ldr	r3, [pc, #68]	; (3944 <configure_ac+0x80>)
    3900:	4798      	blx	r3
    configure_ac_callback();
    3902:	4b11      	ldr	r3, [pc, #68]	; (3948 <configure_ac+0x84>)
    3904:	4798      	blx	r3
    Ac *const ac_module = module_inst->hw;
    3906:	6823      	ldr	r3, [r4, #0]
    if (ac_module->SYNCBUSY.reg & AC_SYNCBUSY_MASK) {
    3908:	217f      	movs	r1, #127	; 0x7f
    390a:	6a1a      	ldr	r2, [r3, #32]
    while (ac_is_syncing(module_inst)) {
    390c:	4211      	tst	r1, r2
    390e:	d1fc      	bne.n	390a <configure_ac+0x46>
    ac_module->CTRLA.reg |= AC_CTRLA_ENABLE;
    3910:	781a      	ldrb	r2, [r3, #0]
    3912:	2102      	movs	r1, #2
    3914:	430a      	orrs	r2, r1
    3916:	701a      	strb	r2, [r3, #0]
}
    3918:	b002      	add	sp, #8
    391a:	bd10      	pop	{r4, pc}
    391c:	20001fe4 	.word	0x20001fe4
    3920:	20001fe8 	.word	0x20001fe8
    3924:	20001fb0 	.word	0x20001fb0
    3928:	20001fac 	.word	0x20001fac
    392c:	20001fd4 	.word	0x20001fd4
    3930:	200002fc 	.word	0x200002fc
    3934:	42005000 	.word	0x42005000
    3938:	00000c6d 	.word	0x00000c6d
    393c:	0000375d 	.word	0x0000375d
    3940:	000037b1 	.word	0x000037b1
    3944:	00003801 	.word	0x00003801
    3948:	00003855 	.word	0x00003855

0000394c <trigger_channel>:

void trigger_channel(uint8_t ch) {
    394c:	b510      	push	{r4, lr}
    ch++;
    394e:	3001      	adds	r0, #1
    3950:	b2c4      	uxtb	r4, r0
    if(ch0->input_channel == ch)
    3952:	4b17      	ldr	r3, [pc, #92]	; (39b0 <trigger_channel+0x64>)
    3954:	681b      	ldr	r3, [r3, #0]
    3956:	7a1a      	ldrb	r2, [r3, #8]
    3958:	42a2      	cmp	r2, r4
    395a:	d014      	beq.n	3986 <trigger_channel+0x3a>
        adsr_trigger(ch0->adsr);
    if(ch1->input_channel == ch)
    395c:	4b15      	ldr	r3, [pc, #84]	; (39b4 <trigger_channel+0x68>)
    395e:	681b      	ldr	r3, [r3, #0]
    3960:	7a1a      	ldrb	r2, [r3, #8]
    3962:	42a2      	cmp	r2, r4
    3964:	d013      	beq.n	398e <trigger_channel+0x42>
        adsr_trigger(ch1->adsr);
    if(ch2->input_channel == ch)
    3966:	4b14      	ldr	r3, [pc, #80]	; (39b8 <trigger_channel+0x6c>)
    3968:	681b      	ldr	r3, [r3, #0]
    396a:	7a1a      	ldrb	r2, [r3, #8]
    396c:	42a2      	cmp	r2, r4
    396e:	d012      	beq.n	3996 <trigger_channel+0x4a>
        adsr_trigger(ch2->adsr);
    if(ch3->input_channel == ch)
    3970:	4b12      	ldr	r3, [pc, #72]	; (39bc <trigger_channel+0x70>)
    3972:	681b      	ldr	r3, [r3, #0]
    3974:	7a1a      	ldrb	r2, [r3, #8]
    3976:	42a2      	cmp	r2, r4
    3978:	d011      	beq.n	399e <trigger_channel+0x52>
        adsr_trigger(ch3->adsr);
    if(ch4->input_channel == ch)
    397a:	4b11      	ldr	r3, [pc, #68]	; (39c0 <trigger_channel+0x74>)
    397c:	681b      	ldr	r3, [r3, #0]
    397e:	7a1a      	ldrb	r2, [r3, #8]
    3980:	42a2      	cmp	r2, r4
    3982:	d010      	beq.n	39a6 <trigger_channel+0x5a>
        adsr_trigger(ch4->adsr);
}
    3984:	bd10      	pop	{r4, pc}
        adsr_trigger(ch0->adsr);
    3986:	68d8      	ldr	r0, [r3, #12]
    3988:	4b0e      	ldr	r3, [pc, #56]	; (39c4 <trigger_channel+0x78>)
    398a:	4798      	blx	r3
    398c:	e7e6      	b.n	395c <trigger_channel+0x10>
        adsr_trigger(ch1->adsr);
    398e:	68d8      	ldr	r0, [r3, #12]
    3990:	4b0c      	ldr	r3, [pc, #48]	; (39c4 <trigger_channel+0x78>)
    3992:	4798      	blx	r3
    3994:	e7e7      	b.n	3966 <trigger_channel+0x1a>
        adsr_trigger(ch2->adsr);
    3996:	68d8      	ldr	r0, [r3, #12]
    3998:	4b0a      	ldr	r3, [pc, #40]	; (39c4 <trigger_channel+0x78>)
    399a:	4798      	blx	r3
    399c:	e7e8      	b.n	3970 <trigger_channel+0x24>
        adsr_trigger(ch3->adsr);
    399e:	68d8      	ldr	r0, [r3, #12]
    39a0:	4b08      	ldr	r3, [pc, #32]	; (39c4 <trigger_channel+0x78>)
    39a2:	4798      	blx	r3
    39a4:	e7e9      	b.n	397a <trigger_channel+0x2e>
        adsr_trigger(ch4->adsr);
    39a6:	68d8      	ldr	r0, [r3, #12]
    39a8:	4b06      	ldr	r3, [pc, #24]	; (39c4 <trigger_channel+0x78>)
    39aa:	4798      	blx	r3
}
    39ac:	e7ea      	b.n	3984 <trigger_channel+0x38>
    39ae:	46c0      	nop			; (mov r8, r8)
    39b0:	20001fe4 	.word	0x20001fe4
    39b4:	20001fe8 	.word	0x20001fe8
    39b8:	20001fb0 	.word	0x20001fb0
    39bc:	20001fac 	.word	0x20001fac
    39c0:	20001fd4 	.word	0x20001fd4
    39c4:	000006c5 	.word	0x000006c5

000039c8 <adc0_window_callback>:
void adc0_window_callback(void) {
    39c8:	b510      	push	{r4, lr}
    if(result[0] > ch3->level << 5) {
    39ca:	4b0d      	ldr	r3, [pc, #52]	; (3a00 <adc0_window_callback+0x38>)
    39cc:	2200      	movs	r2, #0
    39ce:	5e9a      	ldrsh	r2, [r3, r2]
    39d0:	4b0c      	ldr	r3, [pc, #48]	; (3a04 <adc0_window_callback+0x3c>)
    39d2:	681b      	ldr	r3, [r3, #0]
    39d4:	781b      	ldrb	r3, [r3, #0]
    39d6:	015b      	lsls	r3, r3, #5
    39d8:	429a      	cmp	r2, r3
    39da:	dc09      	bgt.n	39f0 <adc0_window_callback+0x28>
    if(result[1] > ch4->level << 5) {
    39dc:	4b08      	ldr	r3, [pc, #32]	; (3a00 <adc0_window_callback+0x38>)
    39de:	2202      	movs	r2, #2
    39e0:	5e9a      	ldrsh	r2, [r3, r2]
    39e2:	4b09      	ldr	r3, [pc, #36]	; (3a08 <adc0_window_callback+0x40>)
    39e4:	681b      	ldr	r3, [r3, #0]
    39e6:	781b      	ldrb	r3, [r3, #0]
    39e8:	015b      	lsls	r3, r3, #5
    39ea:	429a      	cmp	r2, r3
    39ec:	dc04      	bgt.n	39f8 <adc0_window_callback+0x30>
}
    39ee:	bd10      	pop	{r4, pc}
        trigger_channel(3);
    39f0:	2003      	movs	r0, #3
    39f2:	4b06      	ldr	r3, [pc, #24]	; (3a0c <adc0_window_callback+0x44>)
    39f4:	4798      	blx	r3
    39f6:	e7f1      	b.n	39dc <adc0_window_callback+0x14>
        trigger_channel(4);
    39f8:	2004      	movs	r0, #4
    39fa:	4b04      	ldr	r3, [pc, #16]	; (3a0c <adc0_window_callback+0x44>)
    39fc:	4798      	blx	r3
}
    39fe:	e7f6      	b.n	39ee <adc0_window_callback+0x26>
    3a00:	20001fd8 	.word	0x20001fd8
    3a04:	20001fac 	.word	0x20001fac
    3a08:	20001fd4 	.word	0x20001fd4
    3a0c:	0000394d 	.word	0x0000394d

00003a10 <callback_function_ac0>:
void callback_function_ac0(struct ac_module *const module_inst) {
    3a10:	b510      	push	{r4, lr}
    trigger_channel(0);
    3a12:	2000      	movs	r0, #0
    3a14:	4b01      	ldr	r3, [pc, #4]	; (3a1c <callback_function_ac0+0xc>)
    3a16:	4798      	blx	r3
}
    3a18:	bd10      	pop	{r4, pc}
    3a1a:	46c0      	nop			; (mov r8, r8)
    3a1c:	0000394d 	.word	0x0000394d

00003a20 <callback_function_ac1>:
void callback_function_ac1(struct ac_module *const module_inst) {
    3a20:	b510      	push	{r4, lr}
    trigger_channel(1);
    3a22:	2001      	movs	r0, #1
    3a24:	4b01      	ldr	r3, [pc, #4]	; (3a2c <callback_function_ac1+0xc>)
    3a26:	4798      	blx	r3
}
    3a28:	bd10      	pop	{r4, pc}
    3a2a:	46c0      	nop			; (mov r8, r8)
    3a2c:	0000394d 	.word	0x0000394d

00003a30 <callback_function_ac2>:
void callback_function_ac2(struct ac_module *const module_inst) {
    3a30:	b510      	push	{r4, lr}
    trigger_channel(2);
    3a32:	2002      	movs	r0, #2
    3a34:	4b01      	ldr	r3, [pc, #4]	; (3a3c <callback_function_ac2+0xc>)
    3a36:	4798      	blx	r3
}
    3a38:	bd10      	pop	{r4, pc}
    3a3a:	46c0      	nop			; (mov r8, r8)
    3a3c:	0000394d 	.word	0x0000394d

00003a40 <ac_set_scaler>:

void ac_set_scaler(uint8_t ac_channel, uint8_t value) {
    if(ac_channel > 2)
    3a40:	2802      	cmp	r0, #2
    3a42:	d805      	bhi.n	3a50 <ac_set_scaler+0x10>
        return;
    AC->SCALER[ac_channel].reg = value << 1;
    3a44:	0049      	lsls	r1, r1, #1
    3a46:	b2c9      	uxtb	r1, r1
    3a48:	4b02      	ldr	r3, [pc, #8]	; (3a54 <ac_set_scaler+0x14>)
    3a4a:	469c      	mov	ip, r3
    3a4c:	4460      	add	r0, ip
    3a4e:	7301      	strb	r1, [r0, #12]
    3a50:	4770      	bx	lr
    3a52:	46c0      	nop			; (mov r8, r8)
    3a54:	42005000 	.word	0x42005000

00003a58 <i2c_write_complete_callback>:

struct i2c_master_packet rd_packet, wr_packet;
struct i2c_master_module i2c_master_instance;

void i2c_write_complete_callback(struct i2c_master_module *const module) {
    i2c_write_is_complete = 1;
    3a58:	2201      	movs	r2, #1
    3a5a:	4b01      	ldr	r3, [pc, #4]	; (3a60 <i2c_write_complete_callback+0x8>)
    3a5c:	701a      	strb	r2, [r3, #0]
}
    3a5e:	4770      	bx	lr
    3a60:	2000031e 	.word	0x2000031e

00003a64 <i2c_read_complete_callback>:

void i2c_read_complete_callback(struct i2c_master_module *const module) {
    i2c_read_is_complete = 1;
    3a64:	2201      	movs	r2, #1
    3a66:	4b01      	ldr	r3, [pc, #4]	; (3a6c <i2c_read_complete_callback+0x8>)
    3a68:	701a      	strb	r2, [r3, #0]
}
    3a6a:	4770      	bx	lr
    3a6c:	2000031d 	.word	0x2000031d

00003a70 <configure_i2c_callbacks>:

void configure_i2c_callbacks(void) {
    3a70:	b570      	push	{r4, r5, r6, lr}
    /* Register callback function. */

    i2c_master_register_callback(&i2c_master_instance, i2c_write_complete_callback, I2C_MASTER_CALLBACK_WRITE_COMPLETE);
    3a72:	4c09      	ldr	r4, [pc, #36]	; (3a98 <configure_i2c_callbacks+0x28>)
    3a74:	2200      	movs	r2, #0
    3a76:	4909      	ldr	r1, [pc, #36]	; (3a9c <configure_i2c_callbacks+0x2c>)
    3a78:	0020      	movs	r0, r4
    3a7a:	4d09      	ldr	r5, [pc, #36]	; (3aa0 <configure_i2c_callbacks+0x30>)
    3a7c:	47a8      	blx	r5
	/* Sanity check */
	Assert(module);
	Assert(module->hw);

	/* Mark callback as enabled */
	module->enabled_callback |= (1 << callback_type);
    3a7e:	7e63      	ldrb	r3, [r4, #25]
    3a80:	2201      	movs	r2, #1
    3a82:	4313      	orrs	r3, r2
    3a84:	7663      	strb	r3, [r4, #25]
    i2c_master_enable_callback(&i2c_master_instance, I2C_MASTER_CALLBACK_WRITE_COMPLETE);

    i2c_master_register_callback(&i2c_master_instance, i2c_read_complete_callback, I2C_MASTER_CALLBACK_READ_COMPLETE);
    3a86:	4907      	ldr	r1, [pc, #28]	; (3aa4 <configure_i2c_callbacks+0x34>)
    3a88:	0020      	movs	r0, r4
    3a8a:	47a8      	blx	r5
    3a8c:	7e63      	ldrb	r3, [r4, #25]
    3a8e:	2202      	movs	r2, #2
    3a90:	4313      	orrs	r3, r2
    3a92:	7663      	strb	r3, [r4, #25]
    i2c_master_enable_callback(&i2c_master_instance, I2C_MASTER_CALLBACK_READ_COMPLETE);
}
    3a94:	bd70      	pop	{r4, r5, r6, pc}
    3a96:	46c0      	nop			; (mov r8, r8)
    3a98:	20002268 	.word	0x20002268
    3a9c:	00003a59 	.word	0x00003a59
    3aa0:	00001a59 	.word	0x00001a59
    3aa4:	00003a65 	.word	0x00003a65

00003aa8 <configure_i2c>:

void configure_i2c(void) {
    3aa8:	b530      	push	{r4, r5, lr}
    3aaa:	b08f      	sub	sp, #60	; 0x3c
{
	/*Sanity check argument */
	Assert(config);
	config->baud_rate        = I2C_MASTER_BAUD_RATE_100KHZ;
#ifdef FEATURE_I2C_FAST_MODE_PLUS_AND_HIGH_SPEED
	config->baud_rate_high_speed = I2C_MASTER_BAUD_RATE_3400KHZ;
    3aac:	ab01      	add	r3, sp, #4
    3aae:	4a25      	ldr	r2, [pc, #148]	; (3b44 <configure_i2c+0x9c>)
    3ab0:	9202      	str	r2, [sp, #8]
	config->transfer_speed       = I2C_MASTER_SPEED_STANDARD_AND_FAST;
    3ab2:	2200      	movs	r2, #0
    3ab4:	9203      	str	r2, [sp, #12]
#endif
	config->generator_source = GCLK_GENERATOR_0;
	config->run_in_standby   = false;
    3ab6:	761a      	strb	r2, [r3, #24]
	config->start_hold_time  = I2C_MASTER_START_HOLD_TIME_300NS_600NS;
	config->buffer_timeout   = 65535;
	config->unknown_bus_state_timeout = 65535;
    3ab8:	2101      	movs	r1, #1
    3aba:	4249      	negs	r1, r1
    3abc:	8299      	strh	r1, [r3, #20]
	config->pinmux_pad0      = PINMUX_DEFAULT;
	config->pinmux_pad1      = PINMUX_DEFAULT;
	config->scl_low_timeout  = false;
    3abe:	3125      	adds	r1, #37	; 0x25
    3ac0:	545a      	strb	r2, [r3, r1]
	config->inactive_timeout = I2C_MASTER_INACTIVE_TIMEOUT_DISABLED;
    3ac2:	920b      	str	r2, [sp, #44]	; 0x2c
#ifdef FEATURE_I2C_SCL_STRETCH_MODE
	config->scl_stretch_only_after_ack_bit = false;
    3ac4:	3108      	adds	r1, #8
    3ac6:	545a      	strb	r2, [r3, r1]
#endif
#ifdef FEATURE_I2C_SCL_EXTEND_TIMEOUT
	config->slave_scl_low_extend_timeout   = false;
    3ac8:	3101      	adds	r1, #1
    3aca:	545a      	strb	r2, [r3, r1]
	config->master_scl_low_extend_timeout  = false;
    3acc:	3101      	adds	r1, #1
    3ace:	545a      	strb	r2, [r3, r1]
#endif
	/* The typical value is 215ns */
	config->sda_scl_rise_time_ns = 215;
    3ad0:	31a9      	adds	r1, #169	; 0xa9
    3ad2:	8619      	strh	r1, [r3, #48]	; 0x30
    /* Initialize config structure and software module */
    struct i2c_master_config config_i2c_master;
    i2c_master_get_config_defaults(&config_i2c_master);

    /* Change buffer timeout to something longer */
    config_i2c_master.buffer_timeout	= 10000;
    3ad4:	491c      	ldr	r1, [pc, #112]	; (3b48 <configure_i2c+0xa0>)
    3ad6:	82d9      	strh	r1, [r3, #22]
    config_i2c_master.pinmux_pad0		= PINMUX_PA22C_SERCOM3_PAD0;
    3ad8:	491c      	ldr	r1, [pc, #112]	; (3b4c <configure_i2c+0xa4>)
    3ada:	9108      	str	r1, [sp, #32]
    config_i2c_master.pinmux_pad1		= PINMUX_PA23C_SERCOM3_PAD1;
    3adc:	491c      	ldr	r1, [pc, #112]	; (3b50 <configure_i2c+0xa8>)
    3ade:	9109      	str	r1, [sp, #36]	; 0x24
    config_i2c_master.generator_source	= GCLK_GENERATOR_2;
    3ae0:	2102      	movs	r1, #2
    3ae2:	7319      	strb	r1, [r3, #12]
    config_i2c_master.start_hold_time	= I2C_MASTER_START_HOLD_TIME_DISABLED;
    3ae4:	9205      	str	r2, [sp, #20]
    config_i2c_master.baud_rate			= I2C_BAUDRATE;
    3ae6:	23c8      	movs	r3, #200	; 0xc8
    3ae8:	005b      	lsls	r3, r3, #1
    3aea:	9301      	str	r3, [sp, #4]
    /* Initialize and enable device with config */
    while(i2c_master_init(&i2c_master_instance, I2C_MODULE, &config_i2c_master) != STATUS_OK);
    3aec:	4d19      	ldr	r5, [pc, #100]	; (3b54 <configure_i2c+0xac>)
    3aee:	4c1a      	ldr	r4, [pc, #104]	; (3b58 <configure_i2c+0xb0>)
    3af0:	aa01      	add	r2, sp, #4
    3af2:	491a      	ldr	r1, [pc, #104]	; (3b5c <configure_i2c+0xb4>)
    3af4:	0028      	movs	r0, r5
    3af6:	47a0      	blx	r4
    3af8:	2800      	cmp	r0, #0
    3afa:	d1f9      	bne.n	3af0 <configure_i2c+0x48>
{
	/* Sanity check of arguments */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
    3afc:	4b15      	ldr	r3, [pc, #84]	; (3b54 <configure_i2c+0xac>)
    3afe:	681c      	ldr	r4, [r3, #0]
	return (i2c_hw->SYNCBUSY.reg & SERCOM_I2CM_SYNCBUSY_MASK);
    3b00:	2207      	movs	r2, #7
    3b02:	69e3      	ldr	r3, [r4, #28]
	while (i2c_master_is_syncing(module)) {
    3b04:	421a      	tst	r2, r3
    3b06:	d1fc      	bne.n	3b02 <configure_i2c+0x5a>

	/* Wait for module to sync */
	_i2c_master_wait_for_sync(module);

	/* Enable module */
	i2c_module->CTRLA.reg |= SERCOM_I2CM_CTRLA_ENABLE;
    3b08:	6823      	ldr	r3, [r4, #0]
    3b0a:	2202      	movs	r2, #2
    3b0c:	4313      	orrs	r3, r2
    3b0e:	6023      	str	r3, [r4, #0]

#if I2C_MASTER_CALLBACK_MODE == true
	/* Enable module interrupts */
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    3b10:	4d10      	ldr	r5, [pc, #64]	; (3b54 <configure_i2c+0xac>)
    3b12:	6828      	ldr	r0, [r5, #0]
    3b14:	4b12      	ldr	r3, [pc, #72]	; (3b60 <configure_i2c+0xb8>)
    3b16:	4798      	blx	r3
    3b18:	231f      	movs	r3, #31
    3b1a:	4018      	ands	r0, r3
    3b1c:	3b1e      	subs	r3, #30
    3b1e:	4083      	lsls	r3, r0
    3b20:	4a10      	ldr	r2, [pc, #64]	; (3b64 <configure_i2c+0xbc>)
    3b22:	6013      	str	r3, [r2, #0]
#endif
	/* Start timeout if bus state is unknown */
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
		timeout_counter++;
		if(timeout_counter >= (module->unknown_bus_state_timeout)) {
    3b24:	88e8      	ldrh	r0, [r5, #6]
	uint32_t timeout_counter = 0;
    3b26:	2300      	movs	r3, #0
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
    3b28:	2110      	movs	r1, #16
    3b2a:	8b62      	ldrh	r2, [r4, #26]
    3b2c:	420a      	tst	r2, r1
    3b2e:	d104      	bne.n	3b3a <configure_i2c+0x92>
		timeout_counter++;
    3b30:	3301      	adds	r3, #1
		if(timeout_counter >= (module->unknown_bus_state_timeout)) {
    3b32:	4283      	cmp	r3, r0
    3b34:	d3f9      	bcc.n	3b2a <configure_i2c+0x82>
			/* Timeout, force bus state to idle */
			i2c_module->STATUS.reg = SERCOM_I2CM_STATUS_BUSSTATE(1);
    3b36:	2310      	movs	r3, #16
    3b38:	8363      	strh	r3, [r4, #26]

    i2c_master_enable(&i2c_master_instance);
    configure_i2c_callbacks();
    3b3a:	4b0b      	ldr	r3, [pc, #44]	; (3b68 <configure_i2c+0xc0>)
    3b3c:	4798      	blx	r3
}
    3b3e:	b00f      	add	sp, #60	; 0x3c
    3b40:	bd30      	pop	{r4, r5, pc}
    3b42:	46c0      	nop			; (mov r8, r8)
    3b44:	00000d48 	.word	0x00000d48
    3b48:	00002710 	.word	0x00002710
    3b4c:	00160002 	.word	0x00160002
    3b50:	00170002 	.word	0x00170002
    3b54:	20002268 	.word	0x20002268
    3b58:	000014dd 	.word	0x000014dd
    3b5c:	42001000 	.word	0x42001000
    3b60:	000033c1 	.word	0x000033c1
    3b64:	e000e100 	.word	0xe000e100
    3b68:	00003a71 	.word	0x00003a71

00003b6c <TWI_write>:
void TWI_write(uint8_t address, uint8_t data_length, uint8_t *p_data) {
    3b6c:	b570      	push	{r4, r5, r6, lr}
    wr_packet.address = address;
    3b6e:	4b12      	ldr	r3, [pc, #72]	; (3bb8 <TWI_write+0x4c>)
    3b70:	8018      	strh	r0, [r3, #0]
    wr_packet.data_length = data_length;
    3b72:	8059      	strh	r1, [r3, #2]
    wr_packet.data = p_data;
    3b74:	605a      	str	r2, [r3, #4]
    i2c_write_is_complete = 0;
    3b76:	2200      	movs	r2, #0
    3b78:	4b10      	ldr	r3, [pc, #64]	; (3bbc <TWI_write+0x50>)
    3b7a:	701a      	strb	r2, [r3, #0]
    TWI_counter = 5;
    3b7c:	3205      	adds	r2, #5
    3b7e:	4b10      	ldr	r3, [pc, #64]	; (3bc0 <TWI_write+0x54>)
    3b80:	701a      	strb	r2, [r3, #0]

    while(i2c_master_write_packet_job(&i2c_master_instance, &wr_packet) != STATUS_OK);
    3b82:	4e0d      	ldr	r6, [pc, #52]	; (3bb8 <TWI_write+0x4c>)
    3b84:	4d0f      	ldr	r5, [pc, #60]	; (3bc4 <TWI_write+0x58>)
    3b86:	4c10      	ldr	r4, [pc, #64]	; (3bc8 <TWI_write+0x5c>)
    3b88:	0031      	movs	r1, r6
    3b8a:	0028      	movs	r0, r5
    3b8c:	47a0      	blx	r4
    3b8e:	2800      	cmp	r0, #0
    3b90:	d1fa      	bne.n	3b88 <TWI_write+0x1c>

    while(!i2c_write_is_complete && TWI_counter);
    3b92:	4a0a      	ldr	r2, [pc, #40]	; (3bbc <TWI_write+0x50>)
    3b94:	490a      	ldr	r1, [pc, #40]	; (3bc0 <TWI_write+0x54>)
    3b96:	7813      	ldrb	r3, [r2, #0]
    3b98:	2b00      	cmp	r3, #0
    3b9a:	d102      	bne.n	3ba2 <TWI_write+0x36>
    3b9c:	780b      	ldrb	r3, [r1, #0]
    3b9e:	2b00      	cmp	r3, #0
    3ba0:	d1f9      	bne.n	3b96 <TWI_write+0x2a>
    if(!TWI_counter) {
    3ba2:	4b07      	ldr	r3, [pc, #28]	; (3bc0 <TWI_write+0x54>)
    3ba4:	781b      	ldrb	r3, [r3, #0]
    3ba6:	2b00      	cmp	r3, #0
    3ba8:	d105      	bne.n	3bb6 <TWI_write+0x4a>
	/* Sanity check */
	Assert(module);
	Assert(module->hw);

	/* Set buffer to 0 */
	module->buffer_remaining = 0;
    3baa:	4b06      	ldr	r3, [pc, #24]	; (3bc4 <TWI_write+0x58>)
    3bac:	2200      	movs	r2, #0
    3bae:	839a      	strh	r2, [r3, #28]
	/* Update status */
	module->status = STATUS_ABORTED;
    3bb0:	2104      	movs	r1, #4
    3bb2:	3225      	adds	r2, #37	; 0x25
    3bb4:	5499      	strb	r1, [r3, r2]
        i2c_master_cancel_job(&i2c_master_instance);
    }
}
    3bb6:	bd70      	pop	{r4, r5, r6, pc}
    3bb8:	2000225c 	.word	0x2000225c
    3bbc:	2000031e 	.word	0x2000031e
    3bc0:	20000014 	.word	0x20000014
    3bc4:	20002268 	.word	0x20002268
    3bc8:	00001a95 	.word	0x00001a95

00003bcc <TWI_read>:

enum status_code TWI_read(uint16_t send_address, uint8_t *send_data, uint16_t recieveBytes) {
    3bcc:	b570      	push	{r4, r5, r6, lr}
    TWI_counter = 5;//set timeout
    3bce:	2405      	movs	r4, #5
    3bd0:	4b10      	ldr	r3, [pc, #64]	; (3c14 <TWI_read+0x48>)
    3bd2:	701c      	strb	r4, [r3, #0]
    rd_packet.address = send_address;
    3bd4:	4b10      	ldr	r3, [pc, #64]	; (3c18 <TWI_read+0x4c>)
    3bd6:	8018      	strh	r0, [r3, #0]
    rd_packet.data_length = recieveBytes;
    3bd8:	805a      	strh	r2, [r3, #2]
    rd_packet.data = i2c_rx_buffer;
    3bda:	4a10      	ldr	r2, [pc, #64]	; (3c1c <TWI_read+0x50>)
    3bdc:	605a      	str	r2, [r3, #4]

    TWI_write(send_address, 2, send_data);
    3bde:	b2c0      	uxtb	r0, r0
    3be0:	000a      	movs	r2, r1
    3be2:	2102      	movs	r1, #2
    3be4:	4b0e      	ldr	r3, [pc, #56]	; (3c20 <TWI_read+0x54>)
    3be6:	4798      	blx	r3

    i2c_read_is_complete = 0;
    3be8:	2200      	movs	r2, #0
    3bea:	4b0e      	ldr	r3, [pc, #56]	; (3c24 <TWI_read+0x58>)
    3bec:	701a      	strb	r2, [r3, #0]
    while(i2c_master_read_packet_job(&i2c_master_instance, &rd_packet) != STATUS_OK);
    3bee:	4e0a      	ldr	r6, [pc, #40]	; (3c18 <TWI_read+0x4c>)
    3bf0:	4d0d      	ldr	r5, [pc, #52]	; (3c28 <TWI_read+0x5c>)
    3bf2:	4c0e      	ldr	r4, [pc, #56]	; (3c2c <TWI_read+0x60>)
    3bf4:	0031      	movs	r1, r6
    3bf6:	0028      	movs	r0, r5
    3bf8:	47a0      	blx	r4
    3bfa:	2800      	cmp	r0, #0
    3bfc:	d1fa      	bne.n	3bf4 <TWI_read+0x28>
    while(!i2c_read_is_complete && TWI_counter);
    3bfe:	4a09      	ldr	r2, [pc, #36]	; (3c24 <TWI_read+0x58>)
    3c00:	4904      	ldr	r1, [pc, #16]	; (3c14 <TWI_read+0x48>)
    3c02:	7813      	ldrb	r3, [r2, #0]
    3c04:	2b00      	cmp	r3, #0
    3c06:	d102      	bne.n	3c0e <TWI_read+0x42>
    3c08:	780b      	ldrb	r3, [r1, #0]
    3c0a:	2b00      	cmp	r3, #0
    3c0c:	d1f9      	bne.n	3c02 <TWI_read+0x36>

    return STATUS_OK;
}
    3c0e:	2000      	movs	r0, #0
    3c10:	bd70      	pop	{r4, r5, r6, pc}
    3c12:	46c0      	nop			; (mov r8, r8)
    3c14:	20000014 	.word	0x20000014
    3c18:	20002290 	.word	0x20002290
    3c1c:	20002030 	.word	0x20002030
    3c20:	00003b6d 	.word	0x00003b6d
    3c24:	2000031d 	.word	0x2000031d
    3c28:	20002268 	.word	0x20002268
    3c2c:	00001a71 	.word	0x00001a71

00003c30 <I2C_get_rx_Buffer>:
    return i2c_tx_buffer;
}

uint8_t *I2C_get_rx_Buffer(void) {
    return i2c_rx_buffer;
    3c30:	4800      	ldr	r0, [pc, #0]	; (3c34 <I2C_get_rx_Buffer+0x4>)
    3c32:	4770      	bx	lr
    3c34:	20002030 	.word	0x20002030

00003c38 <menu_add_item>:
#include "my_menu.h"
//#include "functions.h"

extern uint8_t dmx_values[256];

void menu_add_item(MENU *m, menu_item item) {
    3c38:	b084      	sub	sp, #16
    3c3a:	b570      	push	{r4, r5, r6, lr}
    3c3c:	9105      	str	r1, [sp, #20]
    3c3e:	9206      	str	r2, [sp, #24]
    3c40:	9307      	str	r3, [sp, #28]
    if(m->num_of_items == MENU_MAX_ITEMS)
    3c42:	23bb      	movs	r3, #187	; 0xbb
    3c44:	009b      	lsls	r3, r3, #2
    3c46:	5cc1      	ldrb	r1, [r0, r3]
    3c48:	2911      	cmp	r1, #17
    3c4a:	d014      	beq.n	3c76 <menu_add_item+0x3e>
        return;
    m->items[m->num_of_items] = item;
    3c4c:	232c      	movs	r3, #44	; 0x2c
    3c4e:	434b      	muls	r3, r1
    3c50:	aa05      	add	r2, sp, #20
    3c52:	18c3      	adds	r3, r0, r3
    3c54:	ca70      	ldmia	r2!, {r4, r5, r6}
    3c56:	c370      	stmia	r3!, {r4, r5, r6}
    3c58:	ca70      	ldmia	r2!, {r4, r5, r6}
    3c5a:	c370      	stmia	r3!, {r4, r5, r6}
    3c5c:	ca70      	ldmia	r2!, {r4, r5, r6}
    3c5e:	c370      	stmia	r3!, {r4, r5, r6}
    3c60:	ca30      	ldmia	r2!, {r4, r5}
    3c62:	c330      	stmia	r3!, {r4, r5}
    m->num_of_items++;
    3c64:	3101      	adds	r1, #1
    3c66:	23bb      	movs	r3, #187	; 0xbb
    3c68:	009b      	lsls	r3, r3, #2
    3c6a:	54c1      	strb	r1, [r0, r3]
    m->curr_pos = 0;
    3c6c:	2300      	movs	r3, #0
    3c6e:	4a04      	ldr	r2, [pc, #16]	; (3c80 <menu_add_item+0x48>)
    3c70:	5483      	strb	r3, [r0, r2]
    m->curr_window_pos = 0;
    3c72:	4a04      	ldr	r2, [pc, #16]	; (3c84 <menu_add_item+0x4c>)
    3c74:	5483      	strb	r3, [r0, r2]
}
    3c76:	bc70      	pop	{r4, r5, r6}
    3c78:	bc08      	pop	{r3}
    3c7a:	b004      	add	sp, #16
    3c7c:	4718      	bx	r3
    3c7e:	46c0      	nop			; (mov r8, r8)
    3c80:	000002ed 	.word	0x000002ed
    3c84:	000002ee 	.word	0x000002ee

00003c88 <increment_menu_position>:

void increment_menu_position(MENU *m) {
    if(m->curr_pos < m->num_of_items - 1)
    3c88:	4b0a      	ldr	r3, [pc, #40]	; (3cb4 <increment_menu_position+0x2c>)
    3c8a:	5cc2      	ldrb	r2, [r0, r3]
    3c8c:	3b01      	subs	r3, #1
    3c8e:	5cc3      	ldrb	r3, [r0, r3]
    3c90:	3b01      	subs	r3, #1
    3c92:	429a      	cmp	r2, r3
    3c94:	da02      	bge.n	3c9c <increment_menu_position+0x14>
        m->curr_pos++;
    3c96:	3201      	adds	r2, #1
    3c98:	4b06      	ldr	r3, [pc, #24]	; (3cb4 <increment_menu_position+0x2c>)
    3c9a:	54c2      	strb	r2, [r0, r3]
    if((m->curr_pos - m->curr_window_pos) == 4)
    3c9c:	4b06      	ldr	r3, [pc, #24]	; (3cb8 <increment_menu_position+0x30>)
    3c9e:	5cc2      	ldrb	r2, [r0, r3]
    3ca0:	4b04      	ldr	r3, [pc, #16]	; (3cb4 <increment_menu_position+0x2c>)
    3ca2:	5cc3      	ldrb	r3, [r0, r3]
    3ca4:	1a9b      	subs	r3, r3, r2
    3ca6:	2b04      	cmp	r3, #4
    3ca8:	d000      	beq.n	3cac <increment_menu_position+0x24>
        m->curr_window_pos++;
}
    3caa:	4770      	bx	lr
        m->curr_window_pos++;
    3cac:	3201      	adds	r2, #1
    3cae:	4b02      	ldr	r3, [pc, #8]	; (3cb8 <increment_menu_position+0x30>)
    3cb0:	54c2      	strb	r2, [r0, r3]
}
    3cb2:	e7fa      	b.n	3caa <increment_menu_position+0x22>
    3cb4:	000002ed 	.word	0x000002ed
    3cb8:	000002ee 	.word	0x000002ee

00003cbc <decrement_menu_position>:

void decrement_menu_position(MENU *m) {
    if(m->curr_pos > 0)
    3cbc:	4b08      	ldr	r3, [pc, #32]	; (3ce0 <decrement_menu_position+0x24>)
    3cbe:	5cc3      	ldrb	r3, [r0, r3]
    3cc0:	2b00      	cmp	r3, #0
    3cc2:	d002      	beq.n	3cca <decrement_menu_position+0xe>
        m->curr_pos--;
    3cc4:	3b01      	subs	r3, #1
    3cc6:	4a06      	ldr	r2, [pc, #24]	; (3ce0 <decrement_menu_position+0x24>)
    3cc8:	5483      	strb	r3, [r0, r2]
    if(m->curr_pos < m->curr_window_pos)
    3cca:	4b06      	ldr	r3, [pc, #24]	; (3ce4 <decrement_menu_position+0x28>)
    3ccc:	5cc3      	ldrb	r3, [r0, r3]
    3cce:	4a04      	ldr	r2, [pc, #16]	; (3ce0 <decrement_menu_position+0x24>)
    3cd0:	5c82      	ldrb	r2, [r0, r2]
    3cd2:	429a      	cmp	r2, r3
    3cd4:	d202      	bcs.n	3cdc <decrement_menu_position+0x20>
        m->curr_window_pos--;
    3cd6:	3b01      	subs	r3, #1
    3cd8:	4a02      	ldr	r2, [pc, #8]	; (3ce4 <decrement_menu_position+0x28>)
    3cda:	5483      	strb	r3, [r0, r2]
}
    3cdc:	4770      	bx	lr
    3cde:	46c0      	nop			; (mov r8, r8)
    3ce0:	000002ed 	.word	0x000002ed
    3ce4:	000002ee 	.word	0x000002ee

00003ce8 <get_p_to_item>:
uint8_t get_menu_position(MENU *m) {
    return m->curr_pos;
}

menu_item *get_p_to_item(MENU *m) {
    return &(m->items[m->curr_pos]);
    3ce8:	4b02      	ldr	r3, [pc, #8]	; (3cf4 <get_p_to_item+0xc>)
    3cea:	5cc2      	ldrb	r2, [r0, r3]
    3cec:	232c      	movs	r3, #44	; 0x2c
    3cee:	4353      	muls	r3, r2
    3cf0:	18c0      	adds	r0, r0, r3
}
    3cf2:	4770      	bx	lr
    3cf4:	000002ed 	.word	0x000002ed

00003cf8 <ftoe>:

void ftoe(char *s, float val) {
    3cf8:	b570      	push	{r4, r5, r6, lr}
    3cfa:	0006      	movs	r6, r0
    3cfc:	1c0d      	adds	r5, r1, #0
    uint32_t whole = (int) val;
    3cfe:	1c08      	adds	r0, r1, #0
    3d00:	4b0a      	ldr	r3, [pc, #40]	; (3d2c <ftoe+0x34>)
    3d02:	4798      	blx	r3
    3d04:	0004      	movs	r4, r0
    float fract = val - whole;
    3d06:	4b0a      	ldr	r3, [pc, #40]	; (3d30 <ftoe+0x38>)
    3d08:	4798      	blx	r3
    3d0a:	1c01      	adds	r1, r0, #0
    3d0c:	1c28      	adds	r0, r5, #0
    3d0e:	4b09      	ldr	r3, [pc, #36]	; (3d34 <ftoe+0x3c>)
    3d10:	4798      	blx	r3
    uint32_t whole_fract = fract * 1000;
    3d12:	4909      	ldr	r1, [pc, #36]	; (3d38 <ftoe+0x40>)
    3d14:	4b09      	ldr	r3, [pc, #36]	; (3d3c <ftoe+0x44>)
    3d16:	4798      	blx	r3
    3d18:	4b09      	ldr	r3, [pc, #36]	; (3d40 <ftoe+0x48>)
    3d1a:	4798      	blx	r3
    3d1c:	0003      	movs	r3, r0
    //ne dela v primeru 4.05
    sprintf(s, "%lu.%03lu", whole, whole_fract);
    3d1e:	0022      	movs	r2, r4
    3d20:	4908      	ldr	r1, [pc, #32]	; (3d44 <ftoe+0x4c>)
    3d22:	0030      	movs	r0, r6
    3d24:	4c08      	ldr	r4, [pc, #32]	; (3d48 <ftoe+0x50>)
    3d26:	47a0      	blx	r4
}
    3d28:	bd70      	pop	{r4, r5, r6, pc}
    3d2a:	46c0      	nop			; (mov r8, r8)
    3d2c:	000069f1 	.word	0x000069f1
    3d30:	00006ad1 	.word	0x00006ad1
    3d34:	000066b9 	.word	0x000066b9
    3d38:	447a0000 	.word	0x447a0000
    3d3c:	00006479 	.word	0x00006479
    3d40:	00006179 	.word	0x00006179
    3d44:	00009168 	.word	0x00009168
    3d48:	000087e9 	.word	0x000087e9

00003d4c <menu_get_item_string>:

void menu_get_item_string(MENU *m, char *str, uint8_t n) {
    3d4c:	b5f0      	push	{r4, r5, r6, r7, lr}
    3d4e:	b089      	sub	sp, #36	; 0x24
    3d50:	0007      	movs	r7, r0
    3d52:	000d      	movs	r5, r1
    3d54:	0016      	movs	r6, r2
    if(n >= m->num_of_items)
    3d56:	23bb      	movs	r3, #187	; 0xbb
    3d58:	009b      	lsls	r3, r3, #2
    3d5a:	5cc3      	ldrb	r3, [r0, r3]
    3d5c:	4293      	cmp	r3, r2
    3d5e:	d927      	bls.n	3db0 <menu_get_item_string+0x64>
        return;
    menu_item *tmp = m->items + n;
    3d60:	242c      	movs	r4, #44	; 0x2c
    3d62:	4354      	muls	r4, r2
    3d64:	1904      	adds	r4, r0, r4
    switch(tmp->type) {
    3d66:	7823      	ldrb	r3, [r4, #0]
    3d68:	2b08      	cmp	r3, #8
    3d6a:	d850      	bhi.n	3e0e <menu_get_item_string+0xc2>
    3d6c:	009b      	lsls	r3, r3, #2
    3d6e:	4a3e      	ldr	r2, [pc, #248]	; (3e68 <menu_get_item_string+0x11c>)
    3d70:	58d3      	ldr	r3, [r2, r3]
    3d72:	469f      	mov	pc, r3
        case  TYPE_UINT8:
            sprintf(tmp->val_str, "%d", *(uint8_t *)tmp->variable);
    3d74:	6923      	ldr	r3, [r4, #16]
    3d76:	781a      	ldrb	r2, [r3, #0]
    3d78:	0020      	movs	r0, r4
    3d7a:	3014      	adds	r0, #20
    3d7c:	493b      	ldr	r1, [pc, #236]	; (3e6c <menu_get_item_string+0x120>)
    3d7e:	4b3c      	ldr	r3, [pc, #240]	; (3e70 <menu_get_item_string+0x124>)
    3d80:	4798      	blx	r3
            break;
        default:
            sprintf(tmp->val_str, "%s", "ERROR99");
            break;
    }
    *(tmp->val_str + 7) = 0;
    3d82:	2300      	movs	r3, #0
    3d84:	76e3      	strb	r3, [r4, #27]
    char item_str[21];
    if(strcmp(tmp->units, "") == 0) {
    3d86:	7b23      	ldrb	r3, [r4, #12]
    3d88:	2b00      	cmp	r3, #0
    3d8a:	d153      	bne.n	3e34 <menu_get_item_string+0xe8>
        if(n == m->curr_pos) {
    3d8c:	4b39      	ldr	r3, [pc, #228]	; (3e74 <menu_get_item_string+0x128>)
    3d8e:	5cfb      	ldrb	r3, [r7, r3]
    3d90:	42b3      	cmp	r3, r6
    3d92:	d043      	beq.n	3e1c <menu_get_item_string+0xd0>
            sprintf(item_str, "%c%-10s%9s", '~', tmp->name, tmp->val_str, tmp->units);
        }
        else
            sprintf(item_str, "%-10s%10s", tmp->name, tmp->val_str, tmp->units);
    3d94:	0023      	movs	r3, r4
    3d96:	3314      	adds	r3, #20
    3d98:	1c62      	adds	r2, r4, #1
    3d9a:	340c      	adds	r4, #12
    3d9c:	9400      	str	r4, [sp, #0]
    3d9e:	4936      	ldr	r1, [pc, #216]	; (3e78 <menu_get_item_string+0x12c>)
    3da0:	a802      	add	r0, sp, #8
    3da2:	4c33      	ldr	r4, [pc, #204]	; (3e70 <menu_get_item_string+0x124>)
    3da4:	47a0      	blx	r4
        }
        else
            sprintf(item_str, "%-10s%8s%2s", tmp->name, tmp->val_str, tmp->units);
    }

    memcpy(str, item_str, 20);
    3da6:	2214      	movs	r2, #20
    3da8:	a902      	add	r1, sp, #8
    3daa:	0028      	movs	r0, r5
    3dac:	4b33      	ldr	r3, [pc, #204]	; (3e7c <menu_get_item_string+0x130>)
    3dae:	4798      	blx	r3

}
    3db0:	b009      	add	sp, #36	; 0x24
    3db2:	bdf0      	pop	{r4, r5, r6, r7, pc}
            sprintf(tmp->val_str, "%d", *(uint16_t *)tmp->variable);
    3db4:	6923      	ldr	r3, [r4, #16]
    3db6:	881a      	ldrh	r2, [r3, #0]
    3db8:	0020      	movs	r0, r4
    3dba:	3014      	adds	r0, #20
    3dbc:	492b      	ldr	r1, [pc, #172]	; (3e6c <menu_get_item_string+0x120>)
    3dbe:	4b2c      	ldr	r3, [pc, #176]	; (3e70 <menu_get_item_string+0x124>)
    3dc0:	4798      	blx	r3
            break;
    3dc2:	e7de      	b.n	3d82 <menu_get_item_string+0x36>
            sprintf(tmp->val_str, "%lu", *(uint32_t *)tmp->variable);
    3dc4:	6923      	ldr	r3, [r4, #16]
    3dc6:	681a      	ldr	r2, [r3, #0]
    3dc8:	0020      	movs	r0, r4
    3dca:	3014      	adds	r0, #20
    3dcc:	492c      	ldr	r1, [pc, #176]	; (3e80 <menu_get_item_string+0x134>)
    3dce:	4b28      	ldr	r3, [pc, #160]	; (3e70 <menu_get_item_string+0x124>)
    3dd0:	4798      	blx	r3
            break;
    3dd2:	e7d6      	b.n	3d82 <menu_get_item_string+0x36>
            sprintf(tmp->val_str, "%s", "");
    3dd4:	2300      	movs	r3, #0
    3dd6:	7523      	strb	r3, [r4, #20]
            break;
    3dd8:	e7d3      	b.n	3d82 <menu_get_item_string+0x36>
            ftoe(tmp->val_str, *(float *)tmp->variable);
    3dda:	6923      	ldr	r3, [r4, #16]
    3ddc:	6819      	ldr	r1, [r3, #0]
    3dde:	0020      	movs	r0, r4
    3de0:	3014      	adds	r0, #20
    3de2:	4b28      	ldr	r3, [pc, #160]	; (3e84 <menu_get_item_string+0x138>)
    3de4:	4798      	blx	r3
            break;
    3de6:	e7cc      	b.n	3d82 <menu_get_item_string+0x36>
            sprintf(tmp->val_str, "%s", "");
    3de8:	2300      	movs	r3, #0
    3dea:	7523      	strb	r3, [r4, #20]
            break;
    3dec:	e7c9      	b.n	3d82 <menu_get_item_string+0x36>
            tmp->getter(tmp->val_str, (uint8_t *)tmp->variable - dmx_values);
    3dee:	4926      	ldr	r1, [pc, #152]	; (3e88 <menu_get_item_string+0x13c>)
    3df0:	6923      	ldr	r3, [r4, #16]
    3df2:	1a59      	subs	r1, r3, r1
    3df4:	b2c9      	uxtb	r1, r1
    3df6:	0020      	movs	r0, r4
    3df8:	3014      	adds	r0, #20
    3dfa:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    3dfc:	4798      	blx	r3
            break;
    3dfe:	e7c0      	b.n	3d82 <menu_get_item_string+0x36>
            tmp->getter(tmp->val_str, *(uint8_t *)tmp->variable);
    3e00:	6923      	ldr	r3, [r4, #16]
    3e02:	7819      	ldrb	r1, [r3, #0]
    3e04:	0020      	movs	r0, r4
    3e06:	3014      	adds	r0, #20
    3e08:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    3e0a:	4798      	blx	r3
            break;
    3e0c:	e7b9      	b.n	3d82 <menu_get_item_string+0x36>
            sprintf(tmp->val_str, "%s", "ERROR99");
    3e0e:	0020      	movs	r0, r4
    3e10:	3014      	adds	r0, #20
    3e12:	2208      	movs	r2, #8
    3e14:	491d      	ldr	r1, [pc, #116]	; (3e8c <menu_get_item_string+0x140>)
    3e16:	4b19      	ldr	r3, [pc, #100]	; (3e7c <menu_get_item_string+0x130>)
    3e18:	4798      	blx	r3
            break;
    3e1a:	e7b2      	b.n	3d82 <menu_get_item_string+0x36>
            sprintf(item_str, "%c%-10s%9s", '~', tmp->name, tmp->val_str, tmp->units);
    3e1c:	1c63      	adds	r3, r4, #1
    3e1e:	0022      	movs	r2, r4
    3e20:	320c      	adds	r2, #12
    3e22:	9201      	str	r2, [sp, #4]
    3e24:	3414      	adds	r4, #20
    3e26:	9400      	str	r4, [sp, #0]
    3e28:	227e      	movs	r2, #126	; 0x7e
    3e2a:	4919      	ldr	r1, [pc, #100]	; (3e90 <menu_get_item_string+0x144>)
    3e2c:	a802      	add	r0, sp, #8
    3e2e:	4c10      	ldr	r4, [pc, #64]	; (3e70 <menu_get_item_string+0x124>)
    3e30:	47a0      	blx	r4
    3e32:	e7b8      	b.n	3da6 <menu_get_item_string+0x5a>
        if(n == m->curr_pos) {
    3e34:	4b0f      	ldr	r3, [pc, #60]	; (3e74 <menu_get_item_string+0x128>)
    3e36:	5cfb      	ldrb	r3, [r7, r3]
    3e38:	42b3      	cmp	r3, r6
    3e3a:	d009      	beq.n	3e50 <menu_get_item_string+0x104>
            sprintf(item_str, "%-10s%8s%2s", tmp->name, tmp->val_str, tmp->units);
    3e3c:	0023      	movs	r3, r4
    3e3e:	3314      	adds	r3, #20
    3e40:	1c62      	adds	r2, r4, #1
    3e42:	340c      	adds	r4, #12
    3e44:	9400      	str	r4, [sp, #0]
    3e46:	4913      	ldr	r1, [pc, #76]	; (3e94 <menu_get_item_string+0x148>)
    3e48:	a802      	add	r0, sp, #8
    3e4a:	4c09      	ldr	r4, [pc, #36]	; (3e70 <menu_get_item_string+0x124>)
    3e4c:	47a0      	blx	r4
    3e4e:	e7aa      	b.n	3da6 <menu_get_item_string+0x5a>
            sprintf(item_str, "%c%-10s%7s%2s", '~', tmp->name, tmp->val_str, tmp->units);
    3e50:	1c63      	adds	r3, r4, #1
    3e52:	0022      	movs	r2, r4
    3e54:	320c      	adds	r2, #12
    3e56:	9201      	str	r2, [sp, #4]
    3e58:	3414      	adds	r4, #20
    3e5a:	9400      	str	r4, [sp, #0]
    3e5c:	227e      	movs	r2, #126	; 0x7e
    3e5e:	490e      	ldr	r1, [pc, #56]	; (3e98 <menu_get_item_string+0x14c>)
    3e60:	a802      	add	r0, sp, #8
    3e62:	4c03      	ldr	r4, [pc, #12]	; (3e70 <menu_get_item_string+0x124>)
    3e64:	47a0      	blx	r4
    3e66:	e79e      	b.n	3da6 <menu_get_item_string+0x5a>
    3e68:	000090fc 	.word	0x000090fc
    3e6c:	00009174 	.word	0x00009174
    3e70:	000087e9 	.word	0x000087e9
    3e74:	000002ed 	.word	0x000002ed
    3e78:	00009190 	.word	0x00009190
    3e7c:	00008651 	.word	0x00008651
    3e80:	00009178 	.word	0x00009178
    3e84:	00003cf9 	.word	0x00003cf9
    3e88:	2000284c 	.word	0x2000284c
    3e8c:	0000917c 	.word	0x0000917c
    3e90:	00009184 	.word	0x00009184
    3e94:	000091ac 	.word	0x000091ac
    3e98:	0000919c 	.word	0x0000919c

00003e9c <menu_whole_solo_string>:

void menu_whole_solo_string(MENU *m, char *s) {
    3e9c:	b5f0      	push	{r4, r5, r6, r7, lr}
    3e9e:	46de      	mov	lr, fp
    3ea0:	4657      	mov	r7, sl
    3ea2:	464e      	mov	r6, r9
    3ea4:	4645      	mov	r5, r8
    3ea6:	b5e0      	push	{r5, r6, r7, lr}
    3ea8:	b08b      	sub	sp, #44	; 0x2c
    3eaa:	0007      	movs	r7, r0
    3eac:	000e      	movs	r6, r1
    return &(m->items[m->curr_pos]);
    3eae:	4b2d      	ldr	r3, [pc, #180]	; (3f64 <menu_whole_solo_string+0xc8>)
    3eb0:	5cc3      	ldrb	r3, [r0, r3]
    3eb2:	469b      	mov	fp, r3
    char tmp_string[21];
    menu_item *p_to_item = get_p_to_item(m);
    menu_get_item_string(m, tmp_string, m->curr_pos);
    3eb4:	001a      	movs	r2, r3
    3eb6:	a904      	add	r1, sp, #16
    3eb8:	4b2b      	ldr	r3, [pc, #172]	; (3f68 <menu_whole_solo_string+0xcc>)
    3eba:	4798      	blx	r3
    3ebc:	252c      	movs	r5, #44	; 0x2c
    3ebe:	465b      	mov	r3, fp
    3ec0:	435d      	muls	r5, r3

    uint8_t string_length = strlen(p_to_item->name);
    3ec2:	1c6b      	adds	r3, r5, #1
    3ec4:	18fb      	adds	r3, r7, r3
    3ec6:	9301      	str	r3, [sp, #4]
    3ec8:	0018      	movs	r0, r3
    3eca:	4c28      	ldr	r4, [pc, #160]	; (3f6c <menu_whole_solo_string+0xd0>)
    3ecc:	47a0      	blx	r4
    3ece:	4682      	mov	sl, r0
    uint8_t value_length = strlen(p_to_item->val_str);
    3ed0:	002b      	movs	r3, r5
    3ed2:	3314      	adds	r3, #20
    3ed4:	18fb      	adds	r3, r7, r3
    3ed6:	9302      	str	r3, [sp, #8]
    3ed8:	0018      	movs	r0, r3
    3eda:	47a0      	blx	r4
    3edc:	9003      	str	r0, [sp, #12]
    3ede:	ab04      	add	r3, sp, #16
    3ee0:	a909      	add	r1, sp, #36	; 0x24

    p_to_item->name[sizeof(p_to_item->name) - 1] = 0;
    for(uint8_t i = 0; i < 20; i++)
        tmp_string[i] = ' ';
    3ee2:	2220      	movs	r2, #32
    3ee4:	701a      	strb	r2, [r3, #0]
    3ee6:	3301      	adds	r3, #1
    for(uint8_t i = 0; i < 20; i++)
    3ee8:	428b      	cmp	r3, r1
    3eea:	d1fb      	bne.n	3ee4 <menu_whole_solo_string+0x48>
    tmp_string[20] = 0;
    3eec:	2300      	movs	r3, #0
    3eee:	aa04      	add	r2, sp, #16
    3ef0:	7513      	strb	r3, [r2, #20]
    3ef2:	0034      	movs	r4, r6
    3ef4:	3354      	adds	r3, #84	; 0x54
    3ef6:	4699      	mov	r9, r3
    3ef8:	44b1      	add	r9, r6
    for(uint8_t i = 0; i < 4; i++)
        memcpy(s + 21 * i, tmp_string, 20);
    3efa:	4b1d      	ldr	r3, [pc, #116]	; (3f70 <menu_whole_solo_string+0xd4>)
    3efc:	4698      	mov	r8, r3
    3efe:	464b      	mov	r3, r9
    3f00:	46a9      	mov	r9, r5
    3f02:	001d      	movs	r5, r3
    3f04:	2214      	movs	r2, #20
    3f06:	a904      	add	r1, sp, #16
    3f08:	0020      	movs	r0, r4
    3f0a:	47c0      	blx	r8
    3f0c:	3415      	adds	r4, #21
    for(uint8_t i = 0; i < 4; i++)
    3f0e:	42ac      	cmp	r4, r5
    3f10:	d1f8      	bne.n	3f04 <menu_whole_solo_string+0x68>
    3f12:	464d      	mov	r5, r9

    p_to_item->name[sizeof(p_to_item->name) - 1] = 0;
    3f14:	232c      	movs	r3, #44	; 0x2c
    3f16:	465a      	mov	r2, fp
    3f18:	4353      	muls	r3, r2
    3f1a:	18fb      	adds	r3, r7, r3
    3f1c:	2200      	movs	r2, #0
    3f1e:	72da      	strb	r2, [r3, #11]
    p_to_item->val_str[sizeof(p_to_item->val_str) - 1] = 0;
    3f20:	771a      	strb	r2, [r3, #28]

    memcpy(s + 21, p_to_item->name, string_length);
    3f22:	0030      	movs	r0, r6
    3f24:	3015      	adds	r0, #21
    3f26:	24ff      	movs	r4, #255	; 0xff
    3f28:	4652      	mov	r2, sl
    3f2a:	4022      	ands	r2, r4
    3f2c:	9901      	ldr	r1, [sp, #4]
    3f2e:	4b10      	ldr	r3, [pc, #64]	; (3f70 <menu_whole_solo_string+0xd4>)
    3f30:	4698      	mov	r8, r3
    3f32:	4798      	blx	r3
    3f34:	9b03      	ldr	r3, [sp, #12]
    3f36:	401c      	ands	r4, r3
    memcpy(s + 42, p_to_item->val_str, value_length);
    3f38:	0030      	movs	r0, r6
    3f3a:	302a      	adds	r0, #42	; 0x2a
    3f3c:	0022      	movs	r2, r4
    3f3e:	9902      	ldr	r1, [sp, #8]
    3f40:	47c0      	blx	r8
    memcpy(s + 42 + value_length + 1, p_to_item->units, strlen(p_to_item->units));
    3f42:	350c      	adds	r5, #12
    3f44:	197f      	adds	r7, r7, r5
    3f46:	0038      	movs	r0, r7
    3f48:	4b08      	ldr	r3, [pc, #32]	; (3f6c <menu_whole_solo_string+0xd0>)
    3f4a:	4798      	blx	r3
    3f4c:	0002      	movs	r2, r0
    3f4e:	342b      	adds	r4, #43	; 0x2b
    3f50:	1930      	adds	r0, r6, r4
    3f52:	0039      	movs	r1, r7
    3f54:	47c0      	blx	r8
}
    3f56:	b00b      	add	sp, #44	; 0x2c
    3f58:	bc3c      	pop	{r2, r3, r4, r5}
    3f5a:	4690      	mov	r8, r2
    3f5c:	4699      	mov	r9, r3
    3f5e:	46a2      	mov	sl, r4
    3f60:	46ab      	mov	fp, r5
    3f62:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3f64:	000002ed 	.word	0x000002ed
    3f68:	00003d4d 	.word	0x00003d4d
    3f6c:	0000883d 	.word	0x0000883d
    3f70:	00008651 	.word	0x00008651

00003f74 <menu_whole_string>:

void menu_whole_string(MENU *m, char *s, STATE state) {
    3f74:	b5f0      	push	{r4, r5, r6, r7, lr}
    3f76:	46d6      	mov	lr, sl
    3f78:	464f      	mov	r7, r9
    3f7a:	4646      	mov	r6, r8
    3f7c:	b5c0      	push	{r6, r7, lr}
    3f7e:	0006      	movs	r6, r0
    3f80:	000f      	movs	r7, r1
    if(state == EDIT) {
    3f82:	2a01      	cmp	r2, #1
    3f84:	d03e      	beq.n	4004 <menu_whole_string+0x90>
        menu_whole_solo_string(m, s);
    }
    else {
        uint8_t j = 0;
        for(uint8_t i = (m->curr_window_pos); i < (4 + m->curr_window_pos) && i < m->num_of_items; i++) {
    3f86:	4b23      	ldr	r3, [pc, #140]	; (4014 <menu_whole_string+0xa0>)
    3f88:	5cc5      	ldrb	r5, [r0, r3]
    3f8a:	1d2b      	adds	r3, r5, #4
    3f8c:	429d      	cmp	r5, r3
    3f8e:	da3c      	bge.n	400a <menu_whole_string+0x96>
    3f90:	23bb      	movs	r3, #187	; 0xbb
    3f92:	009b      	lsls	r3, r3, #2
    3f94:	5cc3      	ldrb	r3, [r0, r3]
    3f96:	42ab      	cmp	r3, r5
    3f98:	d939      	bls.n	400e <menu_whole_string+0x9a>
    3f9a:	2300      	movs	r3, #0
            menu_get_item_string(m, s + 21 * (j++), i);
    3f9c:	4a1e      	ldr	r2, [pc, #120]	; (4018 <menu_whole_string+0xa4>)
    3f9e:	4691      	mov	r9, r2
        for(uint8_t i = (m->curr_window_pos); i < (4 + m->curr_window_pos) && i < m->num_of_items; i++) {
    3fa0:	4a1c      	ldr	r2, [pc, #112]	; (4014 <menu_whole_string+0xa0>)
    3fa2:	4690      	mov	r8, r2
    3fa4:	3a02      	subs	r2, #2
    3fa6:	4692      	mov	sl, r2
            menu_get_item_string(m, s + 21 * (j++), i);
    3fa8:	1c5c      	adds	r4, r3, #1
    3faa:	b2e4      	uxtb	r4, r4
    3fac:	0059      	lsls	r1, r3, #1
    3fae:	18cb      	adds	r3, r1, r3
    3fb0:	00d9      	lsls	r1, r3, #3
    3fb2:	1ac9      	subs	r1, r1, r3
    3fb4:	1879      	adds	r1, r7, r1
    3fb6:	002a      	movs	r2, r5
    3fb8:	0030      	movs	r0, r6
    3fba:	47c8      	blx	r9
        for(uint8_t i = (m->curr_window_pos); i < (4 + m->curr_window_pos) && i < m->num_of_items; i++) {
    3fbc:	3501      	adds	r5, #1
    3fbe:	b2ed      	uxtb	r5, r5
    3fc0:	4643      	mov	r3, r8
    3fc2:	5cf3      	ldrb	r3, [r6, r3]
    3fc4:	3304      	adds	r3, #4
    3fc6:	429d      	cmp	r5, r3
    3fc8:	da04      	bge.n	3fd4 <menu_whole_string+0x60>
            menu_get_item_string(m, s + 21 * (j++), i);
    3fca:	0023      	movs	r3, r4
        for(uint8_t i = (m->curr_window_pos); i < (4 + m->curr_window_pos) && i < m->num_of_items; i++) {
    3fcc:	4652      	mov	r2, sl
    3fce:	5cb2      	ldrb	r2, [r6, r2]
    3fd0:	42aa      	cmp	r2, r5
    3fd2:	d8e9      	bhi.n	3fa8 <menu_whole_string+0x34>
        }
        for(; j < 4; j++)
    3fd4:	2c03      	cmp	r4, #3
    3fd6:	d810      	bhi.n	3ffa <menu_whole_string+0x86>
            for(uint8_t i = 0; i < 20; i++)
                *(s + 21 * j) = ' ';
    3fd8:	2114      	movs	r1, #20
    3fda:	2020      	movs	r0, #32
    3fdc:	0062      	lsls	r2, r4, #1
    3fde:	1912      	adds	r2, r2, r4
    3fe0:	00d3      	lsls	r3, r2, #3
    3fe2:	1a9a      	subs	r2, r3, r2
    3fe4:	18ba      	adds	r2, r7, r2
    3fe6:	000b      	movs	r3, r1
    3fe8:	3b01      	subs	r3, #1
    3fea:	b2db      	uxtb	r3, r3
            for(uint8_t i = 0; i < 20; i++)
    3fec:	2b00      	cmp	r3, #0
    3fee:	d1fb      	bne.n	3fe8 <menu_whole_string+0x74>
    3ff0:	7010      	strb	r0, [r2, #0]
        for(; j < 4; j++)
    3ff2:	3401      	adds	r4, #1
    3ff4:	b2e4      	uxtb	r4, r4
    3ff6:	2c03      	cmp	r4, #3
    3ff8:	d9f0      	bls.n	3fdc <menu_whole_string+0x68>
    }

}
    3ffa:	bc1c      	pop	{r2, r3, r4}
    3ffc:	4690      	mov	r8, r2
    3ffe:	4699      	mov	r9, r3
    4000:	46a2      	mov	sl, r4
    4002:	bdf0      	pop	{r4, r5, r6, r7, pc}
        menu_whole_solo_string(m, s);
    4004:	4b05      	ldr	r3, [pc, #20]	; (401c <menu_whole_string+0xa8>)
    4006:	4798      	blx	r3
    4008:	e7f7      	b.n	3ffa <menu_whole_string+0x86>
        for(uint8_t i = (m->curr_window_pos); i < (4 + m->curr_window_pos) && i < m->num_of_items; i++) {
    400a:	2400      	movs	r4, #0
    400c:	e7e4      	b.n	3fd8 <menu_whole_string+0x64>
    400e:	2400      	movs	r4, #0
    4010:	e7e2      	b.n	3fd8 <menu_whole_string+0x64>
    4012:	46c0      	nop			; (mov r8, r8)
    4014:	000002ee 	.word	0x000002ee
    4018:	00003d4d 	.word	0x00003d4d
    401c:	00003e9d 	.word	0x00003e9d

00004020 <menu_create_item>:

void menu_create_item(menu_item *item, const char *short_name, enum VAR_TYPE typ, const char *units, void *p_variable, float min_val, float max_val, void *getter) {
    4020:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4022:	0004      	movs	r4, r0
    4024:	0016      	movs	r6, r2
    4026:	001f      	movs	r7, r3

    strcpy(item->name, short_name);
    4028:	3001      	adds	r0, #1
    402a:	4d08      	ldr	r5, [pc, #32]	; (404c <menu_create_item+0x2c>)
    402c:	47a8      	blx	r5
    strcpy(item->units, units);
    402e:	0020      	movs	r0, r4
    4030:	300c      	adds	r0, #12
    4032:	0039      	movs	r1, r7
    4034:	47a8      	blx	r5
    item->type = typ;
    4036:	7026      	strb	r6, [r4, #0]
    item->variable = p_variable;
    4038:	9b06      	ldr	r3, [sp, #24]
    403a:	6123      	str	r3, [r4, #16]
    item->val_max = max_val;
    403c:	9b08      	ldr	r3, [sp, #32]
    403e:	6263      	str	r3, [r4, #36]	; 0x24
    item->val_min = min_val;
    4040:	9b07      	ldr	r3, [sp, #28]
    4042:	6223      	str	r3, [r4, #32]
    item->getter = getter;
    4044:	9b09      	ldr	r3, [sp, #36]	; 0x24
    4046:	62a3      	str	r3, [r4, #40]	; 0x28
}
    4048:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    404a:	46c0      	nop			; (mov r8, r8)
    404c:	0000882d 	.word	0x0000882d

00004050 <menu_increment_item>:

void menu_increment_item(MENU *m) {
    4050:	b570      	push	{r4, r5, r6, lr}
    switch(m->items[m->curr_pos].type) {
    4052:	4b28      	ldr	r3, [pc, #160]	; (40f4 <menu_increment_item+0xa4>)
    4054:	5cc2      	ldrb	r2, [r0, r3]
    4056:	232c      	movs	r3, #44	; 0x2c
    4058:	4353      	muls	r3, r2
    405a:	5c19      	ldrb	r1, [r3, r0]
    405c:	2908      	cmp	r1, #8
    405e:	d848      	bhi.n	40f2 <menu_increment_item+0xa2>
    4060:	008b      	lsls	r3, r1, #2
    4062:	4925      	ldr	r1, [pc, #148]	; (40f8 <menu_increment_item+0xa8>)
    4064:	58cb      	ldr	r3, [r1, r3]
    4066:	469f      	mov	pc, r3
        case TYPE_BAR:
        case TYPE_DMX_CH:
        case TYPE_ENUM:
        case TYPE_UINT8:
            if((*(uint8_t *)m->items[m->curr_pos].variable) < (m->items[m->curr_pos].val_max))
    4068:	242c      	movs	r4, #44	; 0x2c
    406a:	4354      	muls	r4, r2
    406c:	1904      	adds	r4, r0, r4
    406e:	6926      	ldr	r6, [r4, #16]
    4070:	7835      	ldrb	r5, [r6, #0]
    4072:	0028      	movs	r0, r5
    4074:	4b21      	ldr	r3, [pc, #132]	; (40fc <menu_increment_item+0xac>)
    4076:	4798      	blx	r3
    4078:	6a61      	ldr	r1, [r4, #36]	; 0x24
    407a:	4b21      	ldr	r3, [pc, #132]	; (4100 <menu_increment_item+0xb0>)
    407c:	4798      	blx	r3
    407e:	2800      	cmp	r0, #0
    4080:	d037      	beq.n	40f2 <menu_increment_item+0xa2>
                (*(uint8_t *)m->items[m->curr_pos].variable)++;
    4082:	3501      	adds	r5, #1
    4084:	7035      	strb	r5, [r6, #0]
    4086:	e034      	b.n	40f2 <menu_increment_item+0xa2>
            break;
        case TYPE_UINT16:
            if((*(uint16_t *)m->items[m->curr_pos].variable) < (m->items[m->curr_pos].val_max))
    4088:	242c      	movs	r4, #44	; 0x2c
    408a:	4354      	muls	r4, r2
    408c:	1904      	adds	r4, r0, r4
    408e:	6926      	ldr	r6, [r4, #16]
    4090:	8835      	ldrh	r5, [r6, #0]
    4092:	0028      	movs	r0, r5
    4094:	4b19      	ldr	r3, [pc, #100]	; (40fc <menu_increment_item+0xac>)
    4096:	4798      	blx	r3
    4098:	6a61      	ldr	r1, [r4, #36]	; 0x24
    409a:	4b19      	ldr	r3, [pc, #100]	; (4100 <menu_increment_item+0xb0>)
    409c:	4798      	blx	r3
    409e:	2800      	cmp	r0, #0
    40a0:	d027      	beq.n	40f2 <menu_increment_item+0xa2>
                (*(uint16_t *)m->items[m->curr_pos].variable)++;
    40a2:	3501      	adds	r5, #1
    40a4:	8035      	strh	r5, [r6, #0]
    40a6:	e024      	b.n	40f2 <menu_increment_item+0xa2>
            break;
        case TYPE_UINT32:
            if((*(uint32_t *)m->items[m->curr_pos].variable) < (m->items[m->curr_pos].val_max))
    40a8:	242c      	movs	r4, #44	; 0x2c
    40aa:	4354      	muls	r4, r2
    40ac:	1904      	adds	r4, r0, r4
    40ae:	6926      	ldr	r6, [r4, #16]
    40b0:	6835      	ldr	r5, [r6, #0]
    40b2:	0028      	movs	r0, r5
    40b4:	4b13      	ldr	r3, [pc, #76]	; (4104 <menu_increment_item+0xb4>)
    40b6:	4798      	blx	r3
    40b8:	6a61      	ldr	r1, [r4, #36]	; 0x24
    40ba:	4b11      	ldr	r3, [pc, #68]	; (4100 <menu_increment_item+0xb0>)
    40bc:	4798      	blx	r3
    40be:	2800      	cmp	r0, #0
    40c0:	d017      	beq.n	40f2 <menu_increment_item+0xa2>
                (*(uint32_t *)m->items[m->curr_pos].variable) += 10;
    40c2:	350a      	adds	r5, #10
    40c4:	6035      	str	r5, [r6, #0]
    40c6:	e014      	b.n	40f2 <menu_increment_item+0xa2>
            break;
        case TYPE_FLOAT:
            if((*(float *)m->items[m->curr_pos].variable) < (m->items[m->curr_pos].val_max))
    40c8:	232c      	movs	r3, #44	; 0x2c
    40ca:	435a      	muls	r2, r3
    40cc:	1880      	adds	r0, r0, r2
    40ce:	6904      	ldr	r4, [r0, #16]
    40d0:	6825      	ldr	r5, [r4, #0]
    40d2:	6a41      	ldr	r1, [r0, #36]	; 0x24
    40d4:	1c28      	adds	r0, r5, #0
    40d6:	4b0a      	ldr	r3, [pc, #40]	; (4100 <menu_increment_item+0xb0>)
    40d8:	4798      	blx	r3
    40da:	2800      	cmp	r0, #0
    40dc:	d009      	beq.n	40f2 <menu_increment_item+0xa2>
                (*(float *)m->items[m->curr_pos].variable) += 0.1;
    40de:	1c28      	adds	r0, r5, #0
    40e0:	4b09      	ldr	r3, [pc, #36]	; (4108 <menu_increment_item+0xb8>)
    40e2:	4798      	blx	r3
    40e4:	4a09      	ldr	r2, [pc, #36]	; (410c <menu_increment_item+0xbc>)
    40e6:	4b0a      	ldr	r3, [pc, #40]	; (4110 <menu_increment_item+0xc0>)
    40e8:	4d0a      	ldr	r5, [pc, #40]	; (4114 <menu_increment_item+0xc4>)
    40ea:	47a8      	blx	r5
    40ec:	4b0a      	ldr	r3, [pc, #40]	; (4118 <menu_increment_item+0xc8>)
    40ee:	4798      	blx	r3
    40f0:	6020      	str	r0, [r4, #0]
            break;
        default:
            break;
    }
}
    40f2:	bd70      	pop	{r4, r5, r6, pc}
    40f4:	000002ed 	.word	0x000002ed
    40f8:	00009120 	.word	0x00009120
    40fc:	00006a31 	.word	0x00006a31
    4100:	00006095 	.word	0x00006095
    4104:	00006ad1 	.word	0x00006ad1
    4108:	000083e9 	.word	0x000083e9
    410c:	9999999a 	.word	0x9999999a
    4110:	3fb99999 	.word	0x3fb99999
    4114:	00006b5d 	.word	0x00006b5d
    4118:	0000848d 	.word	0x0000848d

0000411c <menu_decrement_item>:
void menu_decrement_item(MENU *m) {
    411c:	b570      	push	{r4, r5, r6, lr}
    411e:	0004      	movs	r4, r0
    switch(m->items[m->curr_pos].type) {
    4120:	4b2f      	ldr	r3, [pc, #188]	; (41e0 <menu_decrement_item+0xc4>)
    4122:	5cc2      	ldrb	r2, [r0, r3]
    4124:	232c      	movs	r3, #44	; 0x2c
    4126:	4353      	muls	r3, r2
    4128:	5c19      	ldrb	r1, [r3, r0]
    412a:	2908      	cmp	r1, #8
    412c:	d854      	bhi.n	41d8 <menu_decrement_item+0xbc>
    412e:	008b      	lsls	r3, r1, #2
    4130:	492c      	ldr	r1, [pc, #176]	; (41e4 <menu_decrement_item+0xc8>)
    4132:	58cb      	ldr	r3, [r1, r3]
    4134:	469f      	mov	pc, r3
        case TYPE_BAR:
        case TYPE_ENUM:
        case TYPE_DMX_CH:
        case TYPE_UINT8:
            if((*(uint8_t *)m->items[m->curr_pos].variable) > (m->items[m->curr_pos].val_min))
    4136:	232c      	movs	r3, #44	; 0x2c
    4138:	435a      	muls	r2, r3
    413a:	1884      	adds	r4, r0, r2
    413c:	6926      	ldr	r6, [r4, #16]
    413e:	7835      	ldrb	r5, [r6, #0]
    4140:	0028      	movs	r0, r5
    4142:	4b29      	ldr	r3, [pc, #164]	; (41e8 <menu_decrement_item+0xcc>)
    4144:	4798      	blx	r3
    4146:	6a21      	ldr	r1, [r4, #32]
    4148:	4b28      	ldr	r3, [pc, #160]	; (41ec <menu_decrement_item+0xd0>)
    414a:	4798      	blx	r3
    414c:	2800      	cmp	r0, #0
    414e:	d043      	beq.n	41d8 <menu_decrement_item+0xbc>
                (*(uint8_t *)m->items[m->curr_pos].variable)--;
    4150:	3d01      	subs	r5, #1
    4152:	7035      	strb	r5, [r6, #0]
    4154:	e040      	b.n	41d8 <menu_decrement_item+0xbc>
            break;
        case  TYPE_UINT16:
            if((*(uint16_t *)m->items[m->curr_pos].variable) > (m->items[m->curr_pos].val_min))
    4156:	232c      	movs	r3, #44	; 0x2c
    4158:	435a      	muls	r2, r3
    415a:	1884      	adds	r4, r0, r2
    415c:	6926      	ldr	r6, [r4, #16]
    415e:	8835      	ldrh	r5, [r6, #0]
    4160:	0028      	movs	r0, r5
    4162:	4b21      	ldr	r3, [pc, #132]	; (41e8 <menu_decrement_item+0xcc>)
    4164:	4798      	blx	r3
    4166:	6a21      	ldr	r1, [r4, #32]
    4168:	4b20      	ldr	r3, [pc, #128]	; (41ec <menu_decrement_item+0xd0>)
    416a:	4798      	blx	r3
    416c:	2800      	cmp	r0, #0
    416e:	d033      	beq.n	41d8 <menu_decrement_item+0xbc>
                (*(uint16_t *)m->items[m->curr_pos].variable)--;
    4170:	3d01      	subs	r5, #1
    4172:	8035      	strh	r5, [r6, #0]
    4174:	e030      	b.n	41d8 <menu_decrement_item+0xbc>
            break;
        case  TYPE_UINT32:
            if((*(uint32_t *)m->items[m->curr_pos].variable) > (m->items[m->curr_pos].val_min))
    4176:	232c      	movs	r3, #44	; 0x2c
    4178:	435a      	muls	r2, r3
    417a:	1884      	adds	r4, r0, r2
    417c:	6926      	ldr	r6, [r4, #16]
    417e:	6835      	ldr	r5, [r6, #0]
    4180:	0028      	movs	r0, r5
    4182:	4b1b      	ldr	r3, [pc, #108]	; (41f0 <menu_decrement_item+0xd4>)
    4184:	4798      	blx	r3
    4186:	6a21      	ldr	r1, [r4, #32]
    4188:	4b18      	ldr	r3, [pc, #96]	; (41ec <menu_decrement_item+0xd0>)
    418a:	4798      	blx	r3
    418c:	2800      	cmp	r0, #0
    418e:	d023      	beq.n	41d8 <menu_decrement_item+0xbc>
                (*(uint32_t *)m->items[m->curr_pos].variable) -= 10;
    4190:	3d0a      	subs	r5, #10
    4192:	6035      	str	r5, [r6, #0]
    4194:	e020      	b.n	41d8 <menu_decrement_item+0xbc>
            break;
        case  TYPE_FLOAT:
            if((*(float *)m->items[m->curr_pos].variable) > (m->items[m->curr_pos].val_min))
    4196:	232c      	movs	r3, #44	; 0x2c
    4198:	435a      	muls	r2, r3
    419a:	1882      	adds	r2, r0, r2
    419c:	6915      	ldr	r5, [r2, #16]
    419e:	682e      	ldr	r6, [r5, #0]
    41a0:	6a11      	ldr	r1, [r2, #32]
    41a2:	1c30      	adds	r0, r6, #0
    41a4:	4b11      	ldr	r3, [pc, #68]	; (41ec <menu_decrement_item+0xd0>)
    41a6:	4798      	blx	r3
    41a8:	2800      	cmp	r0, #0
    41aa:	d009      	beq.n	41c0 <menu_decrement_item+0xa4>
                (*(float *)m->items[m->curr_pos].variable) -= 0.1;
    41ac:	1c30      	adds	r0, r6, #0
    41ae:	4b11      	ldr	r3, [pc, #68]	; (41f4 <menu_decrement_item+0xd8>)
    41b0:	4798      	blx	r3
    41b2:	4a11      	ldr	r2, [pc, #68]	; (41f8 <menu_decrement_item+0xdc>)
    41b4:	4b11      	ldr	r3, [pc, #68]	; (41fc <menu_decrement_item+0xe0>)
    41b6:	4e12      	ldr	r6, [pc, #72]	; (4200 <menu_decrement_item+0xe4>)
    41b8:	47b0      	blx	r6
    41ba:	4b12      	ldr	r3, [pc, #72]	; (4204 <menu_decrement_item+0xe8>)
    41bc:	4798      	blx	r3
    41be:	6028      	str	r0, [r5, #0]
            if(*(float *)m->items[m->curr_pos].variable < 0)
    41c0:	4b07      	ldr	r3, [pc, #28]	; (41e0 <menu_decrement_item+0xc4>)
    41c2:	5ce2      	ldrb	r2, [r4, r3]
    41c4:	232c      	movs	r3, #44	; 0x2c
    41c6:	4353      	muls	r3, r2
    41c8:	18e4      	adds	r4, r4, r3
    41ca:	6924      	ldr	r4, [r4, #16]
    41cc:	2100      	movs	r1, #0
    41ce:	6820      	ldr	r0, [r4, #0]
    41d0:	4b0d      	ldr	r3, [pc, #52]	; (4208 <menu_decrement_item+0xec>)
    41d2:	4798      	blx	r3
    41d4:	2800      	cmp	r0, #0
    41d6:	d100      	bne.n	41da <menu_decrement_item+0xbe>
                *(float *)m->items[m->curr_pos].variable = 0;
            break;
        default:
            break;
    }
}
    41d8:	bd70      	pop	{r4, r5, r6, pc}
                *(float *)m->items[m->curr_pos].variable = 0;
    41da:	2300      	movs	r3, #0
    41dc:	6023      	str	r3, [r4, #0]
}
    41de:	e7fb      	b.n	41d8 <menu_decrement_item+0xbc>
    41e0:	000002ed 	.word	0x000002ed
    41e4:	00009144 	.word	0x00009144
    41e8:	00006a31 	.word	0x00006a31
    41ec:	000060bd 	.word	0x000060bd
    41f0:	00006ad1 	.word	0x00006ad1
    41f4:	000083e9 	.word	0x000083e9
    41f8:	9999999a 	.word	0x9999999a
    41fc:	3fb99999 	.word	0x3fb99999
    4200:	00007ce5 	.word	0x00007ce5
    4204:	0000848d 	.word	0x0000848d
    4208:	00006095 	.word	0x00006095

0000420c <menu_swap>:
void menu_swap(MENU **dest, MENU *src) {
    *dest = src;
    420c:	6001      	str	r1, [r0, #0]
    420e:	4770      	bx	lr

00004210 <USB_transmit_enable>:
void USB_recieve_disable(void) {
    USB_flags &= ~(1 << USB_RXR);
}

void USB_transmit_enable(void) {
    USB_flags |= (1 << USB_TXR);
    4210:	4a02      	ldr	r2, [pc, #8]	; (421c <USB_transmit_enable+0xc>)
    4212:	7813      	ldrb	r3, [r2, #0]
    4214:	2104      	movs	r1, #4
    4216:	430b      	orrs	r3, r1
    4218:	7013      	strb	r3, [r2, #0]
}
    421a:	4770      	bx	lr
    421c:	200024d8 	.word	0x200024d8

00004220 <USB_transmit_callback>:
void USB_transmit_callback(struct usart_module *const usart_module) {
    4220:	b510      	push	{r4, lr}
    USB_transmit_enable();
    4222:	4b01      	ldr	r3, [pc, #4]	; (4228 <USB_transmit_callback+0x8>)
    4224:	4798      	blx	r3
}
    4226:	bd10      	pop	{r4, pc}
    4228:	00004211 	.word	0x00004211

0000422c <USB_transmit_disable>:

void USB_transmit_disable(void) {
    USB_flags &= ~(1 << USB_TXR);
    422c:	4a02      	ldr	r2, [pc, #8]	; (4238 <USB_transmit_disable+0xc>)
    422e:	7813      	ldrb	r3, [r2, #0]
    4230:	2104      	movs	r1, #4
    4232:	438b      	bics	r3, r1
    4234:	7013      	strb	r3, [r2, #0]
}
    4236:	4770      	bx	lr
    4238:	200024d8 	.word	0x200024d8

0000423c <USB_SendMessage>:
void USB_SendMessage (uint8_t *p_string, uint16_t length) {
    423c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    423e:	0004      	movs	r4, r0
    4240:	000d      	movs	r5, r1
uint8_t USB_transmit_ready(void) {
    return USB_flags & (1 << USB_TXR);
    4242:	490b      	ldr	r1, [pc, #44]	; (4270 <USB_SendMessage+0x34>)
    4244:	2204      	movs	r2, #4
    4246:	780b      	ldrb	r3, [r1, #0]
    while(!USB_transmit_ready());
    4248:	4213      	tst	r3, r2
    424a:	d0fc      	beq.n	4246 <USB_SendMessage+0xa>
    USB_transmit_disable();
    424c:	4b09      	ldr	r3, [pc, #36]	; (4274 <USB_SendMessage+0x38>)
    424e:	4798      	blx	r3
    while(usart_write_buffer_job(&USB_instance, p_string, length) != STATUS_OK);
    4250:	4e09      	ldr	r6, [pc, #36]	; (4278 <USB_SendMessage+0x3c>)
    4252:	4f0a      	ldr	r7, [pc, #40]	; (427c <USB_SendMessage+0x40>)
    4254:	002a      	movs	r2, r5
    4256:	0021      	movs	r1, r4
    4258:	0030      	movs	r0, r6
    425a:	47b8      	blx	r7
    425c:	2800      	cmp	r0, #0
    425e:	d1f9      	bne.n	4254 <USB_SendMessage+0x18>
    while(usart_get_job_status(&USB_instance, USART_TRANSCEIVER_TX) != STATUS_OK);
    4260:	4d05      	ldr	r5, [pc, #20]	; (4278 <USB_SendMessage+0x3c>)
    4262:	4c07      	ldr	r4, [pc, #28]	; (4280 <USB_SendMessage+0x44>)
    4264:	2101      	movs	r1, #1
    4266:	0028      	movs	r0, r5
    4268:	47a0      	blx	r4
    426a:	2800      	cmp	r0, #0
    426c:	d1fa      	bne.n	4264 <USB_SendMessage+0x28>
}
    426e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4270:	200024d8 	.word	0x200024d8
    4274:	0000422d 	.word	0x0000422d
    4278:	200024a4 	.word	0x200024a4
    427c:	000031a9 	.word	0x000031a9
    4280:	000031c9 	.word	0x000031c9

00004284 <configure_USB_callbacks>:

unsigned char *USB_get_rx_buf(void) {
    return USB_RxBuf;
}

void configure_USB_callbacks(void) {
    4284:	b510      	push	{r4, lr}
    usart_register_callback(&USB_instance, USB_transmit_callback, USART_CALLBACK_BUFFER_TRANSMITTED);
    4286:	4c08      	ldr	r4, [pc, #32]	; (42a8 <configure_USB_callbacks+0x24>)
    4288:	2200      	movs	r2, #0
    428a:	4908      	ldr	r1, [pc, #32]	; (42ac <configure_USB_callbacks+0x28>)
    428c:	0020      	movs	r0, r4
    428e:	4b08      	ldr	r3, [pc, #32]	; (42b0 <configure_USB_callbacks+0x2c>)
    4290:	4798      	blx	r3
{
	/* Sanity check arguments */
	Assert(module);

	/* Enable callback */
	module->callback_enable_mask |= (1 << callback_type);
    4292:	2231      	movs	r2, #49	; 0x31
    4294:	5ca3      	ldrb	r3, [r4, r2]
    4296:	2101      	movs	r1, #1
    4298:	430b      	orrs	r3, r1
    429a:	54a3      	strb	r3, [r4, r2]
    //usart_register_callback(&USB_instance, usart_read_callback, USART_CALLBACK_BUFFER_RECEIVED);

    usart_enable_callback(&USB_instance, USART_CALLBACK_BUFFER_TRANSMITTED);
    //usart_enable_callback(&USB_instance, USART_CALLBACK_BUFFER_RECEIVED);
    usart_read_job(&USB_instance, &c);
    429c:	4905      	ldr	r1, [pc, #20]	; (42b4 <configure_USB_callbacks+0x30>)
    429e:	0020      	movs	r0, r4
    42a0:	4b05      	ldr	r3, [pc, #20]	; (42b8 <configure_USB_callbacks+0x34>)
    42a2:	4798      	blx	r3
}
    42a4:	bd10      	pop	{r4, pc}
    42a6:	46c0      	nop			; (mov r8, r8)
    42a8:	200024a4 	.word	0x200024a4
    42ac:	00004221 	.word	0x00004221
    42b0:	00003181 	.word	0x00003181
    42b4:	20001f42 	.word	0x20001f42
    42b8:	00003199 	.word	0x00003199

000042bc <configure_USB>:
void configure_USB(void) {
    42bc:	b530      	push	{r4, r5, lr}
    42be:	b093      	sub	sp, #76	; 0x4c
	config->data_order       = USART_DATAORDER_LSB;
    42c0:	2380      	movs	r3, #128	; 0x80
    42c2:	05db      	lsls	r3, r3, #23
    42c4:	9300      	str	r3, [sp, #0]
	config->transfer_mode    = USART_TRANSFER_ASYNCHRONOUSLY;
    42c6:	2300      	movs	r3, #0
    42c8:	9301      	str	r3, [sp, #4]
	config->parity           = USART_PARITY_NONE;
    42ca:	22ff      	movs	r2, #255	; 0xff
    42cc:	4669      	mov	r1, sp
    42ce:	810a      	strh	r2, [r1, #8]
	config->stopbits         = USART_STOPBITS_1;
    42d0:	728b      	strb	r3, [r1, #10]
	config->character_size   = USART_CHARACTER_SIZE_8BIT;
    42d2:	72cb      	strb	r3, [r1, #11]
	config->receiver_enable  = true;
    42d4:	2101      	movs	r1, #1
    42d6:	222c      	movs	r2, #44	; 0x2c
    42d8:	4668      	mov	r0, sp
    42da:	5481      	strb	r1, [r0, r2]
	config->transmitter_enable = true;
    42dc:	3201      	adds	r2, #1
    42de:	5481      	strb	r1, [r0, r2]
	config->clock_polarity_inverted = false;
    42e0:	3201      	adds	r2, #1
    42e2:	5483      	strb	r3, [r0, r2]
	config->use_external_clock = false;
    42e4:	3201      	adds	r2, #1
    42e6:	5483      	strb	r3, [r0, r2]
	config->ext_clock_freq   = 0;
    42e8:	930c      	str	r3, [sp, #48]	; 0x30
	config->run_in_standby   = false;
    42ea:	3205      	adds	r2, #5
    42ec:	5483      	strb	r3, [r0, r2]
	config->sample_adjustment     = USART_SAMPLE_ADJUSTMENT_7_8_9;
    42ee:	9305      	str	r3, [sp, #20]
	config->sample_rate           = USART_SAMPLE_RATE_16X_ARITHMETIC;
    42f0:	2200      	movs	r2, #0
    42f2:	8203      	strh	r3, [r0, #16]
	config->lin_slave_enable      = false;
    42f4:	76c2      	strb	r2, [r0, #27]
	config->lin_node = LIN_INVALID_MODE;
    42f6:	9307      	str	r3, [sp, #28]
	config->lin_header_delay = LIN_MASTER_HEADER_DELAY_0;
    42f8:	8403      	strh	r3, [r0, #32]
	config->lin_break_length = LIN_MASTER_BREAK_LENGTH_13_BIT;
    42fa:	8443      	strh	r3, [r0, #34]	; 0x22
	config->immediate_buffer_overflow_notification  = false;
    42fc:	7602      	strb	r2, [r0, #24]
	config->encoding_format_enable                  = false;
    42fe:	7642      	strb	r2, [r0, #25]
	config->receive_pulse_length                    = 19;
    4300:	2313      	movs	r3, #19
    4302:	7683      	strb	r3, [r0, #26]
	config->collision_detection_enable              = false;
    4304:	3313      	adds	r3, #19
    4306:	54c2      	strb	r2, [r0, r3]
	config->rs485_guard_time = RS485_GUARD_TIME_0_BIT;
    4308:	3b01      	subs	r3, #1
    430a:	54c2      	strb	r2, [r0, r3]
    config_usart.baudrate    =					250000;
    430c:	4b2f      	ldr	r3, [pc, #188]	; (43cc <configure_USB+0x110>)
    430e:	930a      	str	r3, [sp, #40]	; 0x28
    config_usart.mux_setting =					USART_RX_1_TX_0_XCK_1;
    4310:	2380      	movs	r3, #128	; 0x80
    4312:	035b      	lsls	r3, r3, #13
    4314:	9303      	str	r3, [sp, #12]
    config_usart.pinmux_pad0 =					PINMUX_PA16C_SERCOM1_PAD0;
    4316:	4b2e      	ldr	r3, [pc, #184]	; (43d0 <configure_USB+0x114>)
    4318:	930e      	str	r3, [sp, #56]	; 0x38
    config_usart.pinmux_pad1 =					PINMUX_PA17C_SERCOM1_PAD1;
    431a:	4b2e      	ldr	r3, [pc, #184]	; (43d4 <configure_USB+0x118>)
    431c:	930f      	str	r3, [sp, #60]	; 0x3c
    config_usart.pinmux_pad2 =					PINMUX_UNUSED;
    431e:	2301      	movs	r3, #1
    4320:	425b      	negs	r3, r3
    4322:	9310      	str	r3, [sp, #64]	; 0x40
    config_usart.pinmux_pad3 =					PINMUX_UNUSED;
    4324:	9311      	str	r3, [sp, #68]	; 0x44
    config_usart.generator_source =				GCLK_GENERATOR_3;
    4326:	2203      	movs	r2, #3
    4328:	3336      	adds	r3, #54	; 0x36
    432a:	54c2      	strb	r2, [r0, r3]
    config_usart.start_frame_detection_enable = true;
    432c:	3b11      	subs	r3, #17
    432e:	54c1      	strb	r1, [r0, r3]
    while (usart_init(&USB_instance, USB_MODULE, &config_usart) != STATUS_OK);
    4330:	4d29      	ldr	r5, [pc, #164]	; (43d8 <configure_USB+0x11c>)
    4332:	4c2a      	ldr	r4, [pc, #168]	; (43dc <configure_USB+0x120>)
    4334:	466a      	mov	r2, sp
    4336:	492a      	ldr	r1, [pc, #168]	; (43e0 <configure_USB+0x124>)
    4338:	0028      	movs	r0, r5
    433a:	47a0      	blx	r4
    433c:	2800      	cmp	r0, #0
    433e:	d1f9      	bne.n	4334 <configure_USB+0x78>
	SercomUsart *const usart_hw = &(module->hw->USART);
    4340:	4d25      	ldr	r5, [pc, #148]	; (43d8 <configure_USB+0x11c>)
    4342:	682c      	ldr	r4, [r5, #0]
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    4344:	0020      	movs	r0, r4
    4346:	4b27      	ldr	r3, [pc, #156]	; (43e4 <configure_USB+0x128>)
    4348:	4798      	blx	r3
    434a:	231f      	movs	r3, #31
    434c:	4018      	ands	r0, r3
    434e:	3b1e      	subs	r3, #30
    4350:	4083      	lsls	r3, r0
    4352:	4a25      	ldr	r2, [pc, #148]	; (43e8 <configure_USB+0x12c>)
    4354:	6013      	str	r3, [r2, #0]
	SercomUsart *const usart_hw = &(module->hw->USART);
    4356:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
    4358:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    435a:	2b00      	cmp	r3, #0
    435c:	d1fc      	bne.n	4358 <configure_USB+0x9c>
	usart_hw->CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    435e:	6823      	ldr	r3, [r4, #0]
    4360:	2202      	movs	r2, #2
    4362:	4313      	orrs	r3, r2
    4364:	6023      	str	r3, [r4, #0]
	SercomUsart *const usart_hw = &(module->hw->USART);
    4366:	4b1c      	ldr	r3, [pc, #112]	; (43d8 <configure_USB+0x11c>)
    4368:	681b      	ldr	r3, [r3, #0]
	return (usart_hw->SYNCBUSY.reg);
    436a:	69da      	ldr	r2, [r3, #28]
	while (usart_is_syncing(module)) {
    436c:	2a00      	cmp	r2, #0
    436e:	d1fc      	bne.n	436a <configure_USB+0xae>
			usart_hw->CTRLB.reg |= SERCOM_USART_CTRLB_TXEN;
    4370:	6859      	ldr	r1, [r3, #4]
    4372:	2280      	movs	r2, #128	; 0x80
    4374:	0252      	lsls	r2, r2, #9
    4376:	430a      	orrs	r2, r1
    4378:	605a      	str	r2, [r3, #4]
			module->transmitter_enabled = true;
    437a:	2101      	movs	r1, #1
    437c:	4a16      	ldr	r2, [pc, #88]	; (43d8 <configure_USB+0x11c>)
    437e:	71d1      	strb	r1, [r2, #7]
	return (usart_hw->SYNCBUSY.reg);
    4380:	69da      	ldr	r2, [r3, #28]
	while (usart_is_syncing(module)) {
    4382:	2a00      	cmp	r2, #0
    4384:	d1fc      	bne.n	4380 <configure_USB+0xc4>
	return (usart_hw->SYNCBUSY.reg);
    4386:	69da      	ldr	r2, [r3, #28]
	while (usart_is_syncing(module)) {
    4388:	2a00      	cmp	r2, #0
    438a:	d1fc      	bne.n	4386 <configure_USB+0xca>
			usart_hw->CTRLB.reg |= SERCOM_USART_CTRLB_RXEN;
    438c:	6859      	ldr	r1, [r3, #4]
    438e:	2280      	movs	r2, #128	; 0x80
    4390:	0292      	lsls	r2, r2, #10
    4392:	430a      	orrs	r2, r1
    4394:	605a      	str	r2, [r3, #4]
			module->receiver_enabled = true;
    4396:	2101      	movs	r1, #1
    4398:	4a0f      	ldr	r2, [pc, #60]	; (43d8 <configure_USB+0x11c>)
    439a:	7191      	strb	r1, [r2, #6]
	return (usart_hw->SYNCBUSY.reg);
    439c:	69da      	ldr	r2, [r3, #28]
	while (usart_is_syncing(module)) {
    439e:	2a00      	cmp	r2, #0
    43a0:	d1fc      	bne.n	439c <configure_USB+0xe0>
    delay_ms(1);
    43a2:	2000      	movs	r0, #0
    43a4:	4b11      	ldr	r3, [pc, #68]	; (43ec <configure_USB+0x130>)
    43a6:	4798      	blx	r3
    43a8:	0002      	movs	r2, r0
    43aa:	2300      	movs	r3, #0
    43ac:	4810      	ldr	r0, [pc, #64]	; (43f0 <configure_USB+0x134>)
    43ae:	2100      	movs	r1, #0
    43b0:	1880      	adds	r0, r0, r2
    43b2:	4159      	adcs	r1, r3
    43b4:	4a0f      	ldr	r2, [pc, #60]	; (43f4 <configure_USB+0x138>)
    43b6:	2300      	movs	r3, #0
    43b8:	4c0f      	ldr	r4, [pc, #60]	; (43f8 <configure_USB+0x13c>)
    43ba:	47a0      	blx	r4
    43bc:	4b0f      	ldr	r3, [pc, #60]	; (43fc <configure_USB+0x140>)
    43be:	4798      	blx	r3
    configure_USB_callbacks();
    43c0:	4b0f      	ldr	r3, [pc, #60]	; (4400 <configure_USB+0x144>)
    43c2:	4798      	blx	r3
    USB_transmit_enable();
    43c4:	4b0f      	ldr	r3, [pc, #60]	; (4404 <configure_USB+0x148>)
    43c6:	4798      	blx	r3
}
    43c8:	b013      	add	sp, #76	; 0x4c
    43ca:	bd30      	pop	{r4, r5, pc}
    43cc:	0003d090 	.word	0x0003d090
    43d0:	00100002 	.word	0x00100002
    43d4:	00110002 	.word	0x00110002
    43d8:	200024a4 	.word	0x200024a4
    43dc:	00002d49 	.word	0x00002d49
    43e0:	42000800 	.word	0x42000800
    43e4:	000033c1 	.word	0x000033c1
    43e8:	e000e100 	.word	0xe000e100
    43ec:	00004ccd 	.word	0x00004ccd
    43f0:	00001b57 	.word	0x00001b57
    43f4:	00001b58 	.word	0x00001b58
    43f8:	000060e5 	.word	0x000060e5
    43fc:	20000001 	.word	0x20000001
    4400:	00004285 	.word	0x00004285
    4404:	00004211 	.word	0x00004211

00004408 <MIDI_send_message>:
    USB_MODULE->USART.CTRLA.reg |= (1 << SERCOM_USART_CTRLA_ENABLE_Pos);
    while(USB_MODULE->USART.SYNCBUSY.reg);

    USB_transmit_enable();
}
void MIDI_send_message(uint8_t midi_ch, uint8_t value, uint8_t velocity) {
    4408:	b500      	push	{lr}
    440a:	b083      	sub	sp, #12
    uint8_t midi_packet[3] = {midi_ch, value, velocity};
    440c:	ab01      	add	r3, sp, #4
    440e:	7018      	strb	r0, [r3, #0]
    4410:	7059      	strb	r1, [r3, #1]
    4412:	709a      	strb	r2, [r3, #2]
    USB_SendMessage(midi_packet, 3);
    4414:	2103      	movs	r1, #3
    4416:	0018      	movs	r0, r3
    4418:	4b01      	ldr	r3, [pc, #4]	; (4420 <MIDI_send_message+0x18>)
    441a:	4798      	blx	r3
}
    441c:	b003      	add	sp, #12
    441e:	bd00      	pop	{pc}
    4420:	0000423d 	.word	0x0000423d

00004424 <MIDI_send_note_on>:
void MIDI_send_note_on(uint8_t midi_ch, uint8_t note, uint8_t velocity) {
    4424:	b510      	push	{r4, lr}
    if(midi_ch > 15)return;
    4426:	280f      	cmp	r0, #15
    4428:	d900      	bls.n	442c <MIDI_send_note_on+0x8>
    MIDI_send_message(MIDI_NOTE_ON_MASK | (midi_ch - 1), note, velocity >> 1);
}
    442a:	bd10      	pop	{r4, pc}
    MIDI_send_message(MIDI_NOTE_ON_MASK | (midi_ch - 1), note, velocity >> 1);
    442c:	0852      	lsrs	r2, r2, #1
    442e:	3801      	subs	r0, #1
    4430:	2370      	movs	r3, #112	; 0x70
    4432:	425b      	negs	r3, r3
    4434:	4318      	orrs	r0, r3
    4436:	b2c0      	uxtb	r0, r0
    4438:	4b01      	ldr	r3, [pc, #4]	; (4440 <MIDI_send_note_on+0x1c>)
    443a:	4798      	blx	r3
    443c:	e7f5      	b.n	442a <MIDI_send_note_on+0x6>
    443e:	46c0      	nop			; (mov r8, r8)
    4440:	00004409 	.word	0x00004409

00004444 <millis>:
volatile uint32_t encoder_timer = 0;
volatile uint32_t last_tick_time = 0;
ENCODER encoder;
ENCODER_POS encoder_pos;
uint32_t millis(void) {
    return proc_millis;
    4444:	4b01      	ldr	r3, [pc, #4]	; (444c <millis+0x8>)
    4446:	6818      	ldr	r0, [r3, #0]
}
    4448:	4770      	bx	lr
    444a:	46c0      	nop			; (mov r8, r8)
    444c:	20000328 	.word	0x20000328

00004450 <get_encoder_status>:

ENCODER get_encoder_status(void) {
    return encoder;
    4450:	4b01      	ldr	r3, [pc, #4]	; (4458 <get_encoder_status+0x8>)
    4452:	7818      	ldrb	r0, [r3, #0]
    encoder_pos = POS_NONE;
    encoder = IDLE;
}
    4454:	4770      	bx	lr
    4456:	46c0      	nop			; (mov r8, r8)
    4458:	200026e8 	.word	0x200026e8

0000445c <process_encoder>:
	return (port_base->IN.reg & pin_mask);
    445c:	4b26      	ldr	r3, [pc, #152]	; (44f8 <process_encoder+0x9c>)
    445e:	6a1a      	ldr	r2, [r3, #32]
    4460:	6a19      	ldr	r1, [r3, #32]

void process_encoder(void) {
    uint8_t status = 0;
    status |= (!port_pin_get_input_level(PIN_ENC_B)) << 0;
    status |= (!port_pin_get_input_level(PIN_ENC_A)) << 1;
    4462:	0dc9      	lsrs	r1, r1, #23
    4464:	2001      	movs	r0, #1
    4466:	0003      	movs	r3, r0
    4468:	438b      	bics	r3, r1
    446a:	005b      	lsls	r3, r3, #1
    status |= (!port_pin_get_input_level(PIN_ENC_B)) << 0;
    446c:	0d92      	lsrs	r2, r2, #22
    446e:	4042      	eors	r2, r0
    4470:	2101      	movs	r1, #1
    4472:	400a      	ands	r2, r1
    status |= (!port_pin_get_input_level(PIN_ENC_A)) << 1;
    4474:	4313      	orrs	r3, r2

    switch(status) {
    4476:	2b01      	cmp	r3, #1
    4478:	d009      	beq.n	448e <process_encoder+0x32>
    447a:	2b02      	cmp	r3, #2
    447c:	d021      	beq.n	44c2 <process_encoder+0x66>
    447e:	2b00      	cmp	r3, #0
    4480:	d000      	beq.n	4484 <process_encoder+0x28>
            break;
        default:
            break;
    }

}
    4482:	4770      	bx	lr
            encoder_pos = POS_NONE;
    4484:	4a1d      	ldr	r2, [pc, #116]	; (44fc <process_encoder+0xa0>)
    4486:	7013      	strb	r3, [r2, #0]
            encoder = IDLE;
    4488:	4a1d      	ldr	r2, [pc, #116]	; (4500 <process_encoder+0xa4>)
    448a:	7013      	strb	r3, [r2, #0]
            break;
    448c:	e7f9      	b.n	4482 <process_encoder+0x26>
            if(encoder_pos == POS_NONE) {
    448e:	4b1b      	ldr	r3, [pc, #108]	; (44fc <process_encoder+0xa0>)
    4490:	781b      	ldrb	r3, [r3, #0]
    4492:	2b00      	cmp	r3, #0
    4494:	d008      	beq.n	44a8 <process_encoder+0x4c>
            if(encoder_pos == POS_B) {
    4496:	2b02      	cmp	r3, #2
    4498:	d1f3      	bne.n	4482 <process_encoder+0x26>
                encoder_pos = POS_NONE;
    449a:	2200      	movs	r2, #0
    449c:	4b17      	ldr	r3, [pc, #92]	; (44fc <process_encoder+0xa0>)
    449e:	701a      	strb	r2, [r3, #0]
                encoder = FORWARD;
    44a0:	3201      	adds	r2, #1
    44a2:	4b17      	ldr	r3, [pc, #92]	; (4500 <process_encoder+0xa4>)
    44a4:	701a      	strb	r2, [r3, #0]
    44a6:	e7ec      	b.n	4482 <process_encoder+0x26>
                encoder_pos = POS_A;
    44a8:	2201      	movs	r2, #1
    44aa:	4b14      	ldr	r3, [pc, #80]	; (44fc <process_encoder+0xa0>)
    44ac:	701a      	strb	r2, [r3, #0]
    return proc_millis;
    44ae:	4915      	ldr	r1, [pc, #84]	; (4504 <process_encoder+0xa8>)
    44b0:	680b      	ldr	r3, [r1, #0]
                encoder_timer = millis() - last_tick_time;
    44b2:	4a15      	ldr	r2, [pc, #84]	; (4508 <process_encoder+0xac>)
    44b4:	6810      	ldr	r0, [r2, #0]
    44b6:	1a1b      	subs	r3, r3, r0
    44b8:	4814      	ldr	r0, [pc, #80]	; (450c <process_encoder+0xb0>)
    44ba:	6003      	str	r3, [r0, #0]
    return proc_millis;
    44bc:	680b      	ldr	r3, [r1, #0]
                last_tick_time = millis();
    44be:	6013      	str	r3, [r2, #0]
    44c0:	e7df      	b.n	4482 <process_encoder+0x26>
            if(encoder_pos == POS_NONE) {
    44c2:	4b0e      	ldr	r3, [pc, #56]	; (44fc <process_encoder+0xa0>)
    44c4:	781b      	ldrb	r3, [r3, #0]
    44c6:	2b00      	cmp	r3, #0
    44c8:	d008      	beq.n	44dc <process_encoder+0x80>
            if(encoder_pos == POS_A) {
    44ca:	2b01      	cmp	r3, #1
    44cc:	d1d9      	bne.n	4482 <process_encoder+0x26>
                encoder_pos = POS_NONE;
    44ce:	2200      	movs	r2, #0
    44d0:	4b0a      	ldr	r3, [pc, #40]	; (44fc <process_encoder+0xa0>)
    44d2:	701a      	strb	r2, [r3, #0]
                encoder = BACKWARD;
    44d4:	3202      	adds	r2, #2
    44d6:	4b0a      	ldr	r3, [pc, #40]	; (4500 <process_encoder+0xa4>)
    44d8:	701a      	strb	r2, [r3, #0]
}
    44da:	e7d2      	b.n	4482 <process_encoder+0x26>
                encoder_pos = POS_B;
    44dc:	2202      	movs	r2, #2
    44de:	4b07      	ldr	r3, [pc, #28]	; (44fc <process_encoder+0xa0>)
    44e0:	701a      	strb	r2, [r3, #0]
    return proc_millis;
    44e2:	4908      	ldr	r1, [pc, #32]	; (4504 <process_encoder+0xa8>)
    44e4:	680b      	ldr	r3, [r1, #0]
                encoder_timer = millis() - last_tick_time;
    44e6:	4a08      	ldr	r2, [pc, #32]	; (4508 <process_encoder+0xac>)
    44e8:	6810      	ldr	r0, [r2, #0]
    44ea:	1a1b      	subs	r3, r3, r0
    44ec:	4807      	ldr	r0, [pc, #28]	; (450c <process_encoder+0xb0>)
    44ee:	6003      	str	r3, [r0, #0]
    return proc_millis;
    44f0:	680b      	ldr	r3, [r1, #0]
                last_tick_time = millis();
    44f2:	6013      	str	r3, [r2, #0]
    44f4:	e7c5      	b.n	4482 <process_encoder+0x26>
    44f6:	46c0      	nop			; (mov r8, r8)
    44f8:	41000080 	.word	0x41000080
    44fc:	2000270c 	.word	0x2000270c
    4500:	200026e8 	.word	0x200026e8
    4504:	20000328 	.word	0x20000328
    4508:	20000324 	.word	0x20000324
    450c:	20000320 	.word	0x20000320

00004510 <timer0_compare_callback>:
    a2 = adsr + 2;
    a3 = adsr + 3;
    a4 = adsr + 4;
}

void timer0_compare_callback(struct tcc_module *const module_inst) {
    4510:	b510      	push	{r4, lr}
    adsr_process(a0);
    4512:	4b0b      	ldr	r3, [pc, #44]	; (4540 <timer0_compare_callback+0x30>)
    4514:	6818      	ldr	r0, [r3, #0]
    4516:	4c0b      	ldr	r4, [pc, #44]	; (4544 <timer0_compare_callback+0x34>)
    4518:	47a0      	blx	r4
    adsr_process(a1);
    451a:	4b0b      	ldr	r3, [pc, #44]	; (4548 <timer0_compare_callback+0x38>)
    451c:	6818      	ldr	r0, [r3, #0]
    451e:	47a0      	blx	r4
    adsr_process(a2);
    4520:	4b0a      	ldr	r3, [pc, #40]	; (454c <timer0_compare_callback+0x3c>)
    4522:	6818      	ldr	r0, [r3, #0]
    4524:	47a0      	blx	r4
    adsr_process(a3);
    4526:	4b0a      	ldr	r3, [pc, #40]	; (4550 <timer0_compare_callback+0x40>)
    4528:	6818      	ldr	r0, [r3, #0]
    452a:	47a0      	blx	r4
    adsr_process(a4);
    452c:	4b09      	ldr	r3, [pc, #36]	; (4554 <timer0_compare_callback+0x44>)
    452e:	6818      	ldr	r0, [r3, #0]
    4530:	47a0      	blx	r4
    proc_millis++;
    4532:	4a09      	ldr	r2, [pc, #36]	; (4558 <timer0_compare_callback+0x48>)
    4534:	6813      	ldr	r3, [r2, #0]
    4536:	3301      	adds	r3, #1
    4538:	6013      	str	r3, [r2, #0]
    process_encoder();
    453a:	4b08      	ldr	r3, [pc, #32]	; (455c <timer0_compare_callback+0x4c>)
    453c:	4798      	blx	r3
}
    453e:	bd10      	pop	{r4, pc}
    4540:	20002754 	.word	0x20002754
    4544:	00000585 	.word	0x00000585
    4548:	200026e4 	.word	0x200026e4
    454c:	20002710 	.word	0x20002710
    4550:	200026ec 	.word	0x200026ec
    4554:	20002758 	.word	0x20002758
    4558:	20000328 	.word	0x20000328
    455c:	0000445d 	.word	0x0000445d

00004560 <configure_tcc0>:
void configure_tcc0(void) {
    4560:	b570      	push	{r4, r5, r6, lr}
    4562:	b0aa      	sub	sp, #168	; 0xa8
    tcc_get_config_defaults(&config_tcc, TCC0);
    4564:	4e0e      	ldr	r6, [pc, #56]	; (45a0 <configure_tcc0+0x40>)
    4566:	ac01      	add	r4, sp, #4
    4568:	0031      	movs	r1, r6
    456a:	0020      	movs	r0, r4
    456c:	4b0d      	ldr	r3, [pc, #52]	; (45a4 <configure_tcc0+0x44>)
    456e:	4798      	blx	r3
    config_tcc.counter.clock_source = GCLK_GENERATOR_6;
    4570:	2306      	movs	r3, #6
    4572:	72a3      	strb	r3, [r4, #10]
    config_tcc.counter.clock_prescaler = TCC_CLOCK_PRESCALER_DIV16;
    4574:	3b02      	subs	r3, #2
    4576:	72e3      	strb	r3, [r4, #11]
    config_tcc.counter.period = 250;
    4578:	33f6      	adds	r3, #246	; 0xf6
    457a:	6063      	str	r3, [r4, #4]
    tcc_init(&tcc0_instance, TCC0, &config_tcc);
    457c:	4d0a      	ldr	r5, [pc, #40]	; (45a8 <configure_tcc0+0x48>)
    457e:	0022      	movs	r2, r4
    4580:	0031      	movs	r1, r6
    4582:	0028      	movs	r0, r5
    4584:	4b09      	ldr	r3, [pc, #36]	; (45ac <configure_tcc0+0x4c>)
    4586:	4798      	blx	r3
	/* Sanity check arguments */
	Assert(module_inst);
	Assert(module_inst->hw);

	/* Get a pointer to the module's hardware instance */
	Tcc *const tcc_module = module_inst->hw;
    4588:	682a      	ldr	r2, [r5, #0]

	while (tcc_module->SYNCBUSY.reg & TCC_SYNCBUSY_ENABLE) {
    458a:	2102      	movs	r1, #2
    458c:	6893      	ldr	r3, [r2, #8]
    458e:	4219      	tst	r1, r3
    4590:	d1fc      	bne.n	458c <configure_tcc0+0x2c>
		/* Wait for sync */
	}

	/* Enable the TCC module */
	tcc_module->CTRLA.reg |= TCC_CTRLA_ENABLE;
    4592:	6813      	ldr	r3, [r2, #0]
    4594:	2102      	movs	r1, #2
    4596:	430b      	orrs	r3, r1
    4598:	6013      	str	r3, [r2, #0]
}
    459a:	b02a      	add	sp, #168	; 0xa8
    459c:	bd70      	pop	{r4, r5, r6, pc}
    459e:	46c0      	nop			; (mov r8, r8)
    45a0:	42002400 	.word	0x42002400
    45a4:	00002745 	.word	0x00002745
    45a8:	20002714 	.word	0x20002714
    45ac:	00002891 	.word	0x00002891

000045b0 <configure_tcc0_callbacks>:
void configure_tcc0_callbacks(ADSR *adsr) {
    45b0:	b570      	push	{r4, r5, r6, lr}
    45b2:	0004      	movs	r4, r0
    tcc_register_callback(&tcc0_instance, timer0_compare_callback, TCC_CALLBACK_OVERFLOW);
    45b4:	4d0c      	ldr	r5, [pc, #48]	; (45e8 <configure_tcc0_callbacks+0x38>)
    45b6:	2200      	movs	r2, #0
    45b8:	490c      	ldr	r1, [pc, #48]	; (45ec <configure_tcc0_callbacks+0x3c>)
    45ba:	0028      	movs	r0, r5
    45bc:	4b0c      	ldr	r3, [pc, #48]	; (45f0 <configure_tcc0_callbacks+0x40>)
    45be:	4798      	blx	r3
    tcc_enable_callback(&tcc0_instance, TCC_CALLBACK_OVERFLOW);
    45c0:	2100      	movs	r1, #0
    45c2:	0028      	movs	r0, r5
    45c4:	4b0b      	ldr	r3, [pc, #44]	; (45f4 <configure_tcc0_callbacks+0x44>)
    45c6:	4798      	blx	r3
    a0 = adsr + 0;
    45c8:	4b0b      	ldr	r3, [pc, #44]	; (45f8 <configure_tcc0_callbacks+0x48>)
    45ca:	601c      	str	r4, [r3, #0]
    a1 = adsr + 1;
    45cc:	0022      	movs	r2, r4
    45ce:	3230      	adds	r2, #48	; 0x30
    45d0:	4b0a      	ldr	r3, [pc, #40]	; (45fc <configure_tcc0_callbacks+0x4c>)
    45d2:	601a      	str	r2, [r3, #0]
    a2 = adsr + 2;
    45d4:	3230      	adds	r2, #48	; 0x30
    45d6:	4b0a      	ldr	r3, [pc, #40]	; (4600 <configure_tcc0_callbacks+0x50>)
    45d8:	601a      	str	r2, [r3, #0]
    a3 = adsr + 3;
    45da:	3230      	adds	r2, #48	; 0x30
    45dc:	4b09      	ldr	r3, [pc, #36]	; (4604 <configure_tcc0_callbacks+0x54>)
    45de:	601a      	str	r2, [r3, #0]
    a4 = adsr + 4;
    45e0:	34c0      	adds	r4, #192	; 0xc0
    45e2:	4b09      	ldr	r3, [pc, #36]	; (4608 <configure_tcc0_callbacks+0x58>)
    45e4:	601c      	str	r4, [r3, #0]
}
    45e6:	bd70      	pop	{r4, r5, r6, pc}
    45e8:	20002714 	.word	0x20002714
    45ec:	00004511 	.word	0x00004511
    45f0:	00002c75 	.word	0x00002c75
    45f4:	00002c8d 	.word	0x00002c8d
    45f8:	20002754 	.word	0x20002754
    45fc:	200026e4 	.word	0x200026e4
    4600:	20002710 	.word	0x20002710
    4604:	200026ec 	.word	0x200026ec
    4608:	20002758 	.word	0x20002758

0000460c <get_encoder_speed>:
uint8_t get_encoder_speed(void) {
    if(encoder_timer > 20)return 1;
    460c:	4b09      	ldr	r3, [pc, #36]	; (4634 <get_encoder_speed+0x28>)
    460e:	681b      	ldr	r3, [r3, #0]
    4610:	2001      	movs	r0, #1
    4612:	2b14      	cmp	r3, #20
    4614:	d804      	bhi.n	4620 <get_encoder_speed+0x14>
    if(encoder_timer > 15)return 2;
    4616:	4b07      	ldr	r3, [pc, #28]	; (4634 <get_encoder_speed+0x28>)
    4618:	681b      	ldr	r3, [r3, #0]
    461a:	3001      	adds	r0, #1
    461c:	2b0f      	cmp	r3, #15
    461e:	d900      	bls.n	4622 <get_encoder_speed+0x16>
    if(encoder_timer > 10)return 3;
    return 4;
}
    4620:	4770      	bx	lr
    if(encoder_timer > 10)return 3;
    4622:	4b04      	ldr	r3, [pc, #16]	; (4634 <get_encoder_speed+0x28>)
    4624:	681b      	ldr	r3, [r3, #0]
    return 4;
    4626:	2000      	movs	r0, #0
    4628:	220a      	movs	r2, #10
    462a:	429a      	cmp	r2, r3
    462c:	4140      	adcs	r0, r0
    462e:	3003      	adds	r0, #3
    4630:	e7f6      	b.n	4620 <get_encoder_speed+0x14>
    4632:	46c0      	nop			; (mov r8, r8)
    4634:	20000320 	.word	0x20000320

00004638 <configure_tc0>:

void configure_tc0(void) {
    4638:	b510      	push	{r4, lr}
    463a:	b08e      	sub	sp, #56	; 0x38
	Assert(config);

	/* Write default config to config struct */
	config->clock_source               = GCLK_GENERATOR_0;
	config->counter_size               = TC_COUNTER_SIZE_16BIT;
	config->clock_prescaler            = TC_CLOCK_PRESCALER_DIV1;
    463c:	2200      	movs	r2, #0
    463e:	2100      	movs	r1, #0
    4640:	466b      	mov	r3, sp
    4642:	809a      	strh	r2, [r3, #4]
	config->wave_generation            = TC_WAVE_GENERATION_NORMAL_FREQ;
	config->reload_action              = TC_RELOAD_ACTION_GCLK;
    4644:	2300      	movs	r3, #0
    4646:	4668      	mov	r0, sp
    4648:	71c1      	strb	r1, [r0, #7]
	config->run_in_standby             = false;
    464a:	7043      	strb	r3, [r0, #1]
#if (SAML21) || (SAML22) || (SAMC20) || (SAMC21) || (SAMR30) || (SAMR34) || (SAMR35)
	config->on_demand                  = false;
    464c:	7083      	strb	r3, [r0, #2]
#endif
	config->waveform_invert_output     = TC_WAVEFORM_INVERT_OUTPUT_NONE;
    464e:	7203      	strb	r3, [r0, #8]
	config->enable_capture_on_channel[TC_COMPARE_CAPTURE_CHANNEL_0] = false;
    4650:	7243      	strb	r3, [r0, #9]
	config->enable_capture_on_channel[TC_COMPARE_CAPTURE_CHANNEL_1] = false;
    4652:	7283      	strb	r3, [r0, #10]
#ifdef 	FEATURE_TC_IO_CAPTURE
	config->enable_capture_on_IO[TC_COMPARE_CAPTURE_CHANNEL_0] = false;
    4654:	72c3      	strb	r3, [r0, #11]
	config->enable_capture_on_IO[TC_COMPARE_CAPTURE_CHANNEL_1] = false;
    4656:	7303      	strb	r3, [r0, #12]
#endif

	config->count_direction            = TC_COUNT_DIRECTION_UP;
    4658:	7383      	strb	r3, [r0, #14]
	config->oneshot                    = false;
    465a:	7343      	strb	r3, [r0, #13]

	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].enabled = false;
    465c:	7403      	strb	r3, [r0, #16]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].pin_out = 0;
    465e:	9205      	str	r2, [sp, #20]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].pin_mux = 0;
    4660:	9206      	str	r2, [sp, #24]

	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].enabled = false;
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_out = 0;
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_mux = 0;

	config->counter_16_bit.value                   = 0x0000;
    4662:	8502      	strh	r2, [r0, #40]	; 0x28
	config->counter_16_bit.compare_capture_channel\
		[TC_COMPARE_CAPTURE_CHANNEL_0]                        = 0x0000;
    4664:	8542      	strh	r2, [r0, #42]	; 0x2a
	config->counter_16_bit.compare_capture_channel\
		[TC_COMPARE_CAPTURE_CHANNEL_1]                        = 0x0000;
    4666:	8582      	strh	r2, [r0, #44]	; 0x2c
#ifdef FEATURE_TC_DOUBLE_BUFFERED
	config->double_buffering_enabled = false;
    4668:	2334      	movs	r3, #52	; 0x34
    466a:	54c1      	strb	r1, [r0, r3]
    struct tc_config config_tc;
    tc_get_config_defaults(&config_tc);

    config_tc.counter_size = TC_COUNTER_SIZE_8BIT;
    466c:	3b30      	subs	r3, #48	; 0x30
    466e:	70c3      	strb	r3, [r0, #3]
    config_tc.clock_source = GCLK_GENERATOR_7;
    4670:	2207      	movs	r2, #7
    4672:	7002      	strb	r2, [r0, #0]
    config_tc.clock_prescaler = TC_CLOCK_PRESCALER_DIV1;
    config_tc.wave_generation = TC_WAVE_GENERATION_NORMAL_PWM;
    4674:	3a05      	subs	r2, #5
    4676:	7182      	strb	r2, [r0, #6]
    config_tc.counter_8_bit.compare_capture_channel[1] = 0;
    config_tc.pwm_channel[1].enabled = true;
    4678:	3a01      	subs	r2, #1
    467a:	7702      	strb	r2, [r0, #28]
    config_tc.pwm_channel[1].pin_out = PIN_PB11E_TC1_WO1; //BUZZER_PIN;
    467c:	322a      	adds	r2, #42	; 0x2a
    467e:	9208      	str	r2, [sp, #32]
    config_tc.pwm_channel[1].pin_mux = MUX_PB11E_TC1_WO1; //BUZZER_MUX;
    4680:	9309      	str	r3, [sp, #36]	; 0x24

    tc_init(&tc1_instance, TC1, &config_tc);
    4682:	4c0a      	ldr	r4, [pc, #40]	; (46ac <configure_tc0+0x74>)
    4684:	466a      	mov	r2, sp
    4686:	490a      	ldr	r1, [pc, #40]	; (46b0 <configure_tc0+0x78>)
    4688:	0020      	movs	r0, r4
    468a:	4b0a      	ldr	r3, [pc, #40]	; (46b4 <configure_tc0+0x7c>)
    468c:	4798      	blx	r3
    tc_set_top_value(&tc1_instance, 64);
    468e:	2140      	movs	r1, #64	; 0x40
    4690:	0020      	movs	r0, r4
    4692:	4b09      	ldr	r3, [pc, #36]	; (46b8 <configure_tc0+0x80>)
    4694:	4798      	blx	r3
	/* Sanity check arguments */
	Assert(module_inst);
	Assert(module_inst->hw);

	/* Get a pointer to the module's hardware instance */
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);
    4696:	6822      	ldr	r2, [r4, #0]
	return (tc_module->SYNCBUSY.reg);
    4698:	6913      	ldr	r3, [r2, #16]

	while (tc_is_syncing(module_inst)) {
    469a:	2b00      	cmp	r3, #0
    469c:	d1fc      	bne.n	4698 <configure_tc0+0x60>
		/* Wait for sync */
	}

	/* Enable TC module */
	tc_module->CTRLA.reg |= TC_CTRLA_ENABLE;
    469e:	6813      	ldr	r3, [r2, #0]
    46a0:	2102      	movs	r1, #2
    46a2:	430b      	orrs	r3, r1
    46a4:	6013      	str	r3, [r2, #0]
    tc_enable(&tc1_instance);
}
    46a6:	b00e      	add	sp, #56	; 0x38
    46a8:	bd10      	pop	{r4, pc}
    46aa:	46c0      	nop			; (mov r8, r8)
    46ac:	200026f0 	.word	0x200026f0
    46b0:	42003400 	.word	0x42003400
    46b4:	00000841 	.word	0x00000841
    46b8:	00000b95 	.word	0x00000b95

000046bc <set_brightness>:

void set_brightness(uint8_t brightness) {
    46bc:	b510      	push	{r4, lr}
    brightness *= 4;
    46be:	0080      	lsls	r0, r0, #2
    tc_set_compare_value(&tc1_instance, TC_COMPARE_CAPTURE_CHANNEL_1, brightness);
    46c0:	b2c2      	uxtb	r2, r0
    46c2:	2101      	movs	r1, #1
    46c4:	4801      	ldr	r0, [pc, #4]	; (46cc <set_brightness+0x10>)
    46c6:	4b02      	ldr	r3, [pc, #8]	; (46d0 <set_brightness+0x14>)
    46c8:	4798      	blx	r3
    46ca:	bd10      	pop	{r4, pc}
    46cc:	200026f0 	.word	0x200026f0
    46d0:	00000b0d 	.word	0x00000b0d

000046d4 <system_board_init>:
{
	/* This function is meant to contain board-specific initialization code
	 * for, e.g., the I/O pins. The initialization can rely on application-
	 * specific board configuration, found in conf_board.h.
	 */
    46d4:	4770      	bx	lr
	...

000046d8 <cpu_irq_enter_critical>:
    46d8:	4b0c      	ldr	r3, [pc, #48]	; (470c <cpu_irq_enter_critical+0x34>)
    46da:	681b      	ldr	r3, [r3, #0]
    46dc:	2b00      	cmp	r3, #0
    46de:	d106      	bne.n	46ee <cpu_irq_enter_critical+0x16>
    46e0:	f3ef 8310 	mrs	r3, PRIMASK
    46e4:	2b00      	cmp	r3, #0
    46e6:	d007      	beq.n	46f8 <cpu_irq_enter_critical+0x20>
    46e8:	2200      	movs	r2, #0
    46ea:	4b09      	ldr	r3, [pc, #36]	; (4710 <cpu_irq_enter_critical+0x38>)
    46ec:	701a      	strb	r2, [r3, #0]
    46ee:	4a07      	ldr	r2, [pc, #28]	; (470c <cpu_irq_enter_critical+0x34>)
    46f0:	6813      	ldr	r3, [r2, #0]
    46f2:	3301      	adds	r3, #1
    46f4:	6013      	str	r3, [r2, #0]
    46f6:	4770      	bx	lr
    46f8:	b672      	cpsid	i
    46fa:	f3bf 8f5f 	dmb	sy
    46fe:	2200      	movs	r2, #0
    4700:	4b04      	ldr	r3, [pc, #16]	; (4714 <cpu_irq_enter_critical+0x3c>)
    4702:	701a      	strb	r2, [r3, #0]
    4704:	3201      	adds	r2, #1
    4706:	4b02      	ldr	r3, [pc, #8]	; (4710 <cpu_irq_enter_critical+0x38>)
    4708:	701a      	strb	r2, [r3, #0]
    470a:	e7f0      	b.n	46ee <cpu_irq_enter_critical+0x16>
    470c:	2000032c 	.word	0x2000032c
    4710:	20000330 	.word	0x20000330
    4714:	20000015 	.word	0x20000015

00004718 <cpu_irq_leave_critical>:
    4718:	4b08      	ldr	r3, [pc, #32]	; (473c <cpu_irq_leave_critical+0x24>)
    471a:	681a      	ldr	r2, [r3, #0]
    471c:	3a01      	subs	r2, #1
    471e:	601a      	str	r2, [r3, #0]
    4720:	681b      	ldr	r3, [r3, #0]
    4722:	2b00      	cmp	r3, #0
    4724:	d109      	bne.n	473a <cpu_irq_leave_critical+0x22>
    4726:	4b06      	ldr	r3, [pc, #24]	; (4740 <cpu_irq_leave_critical+0x28>)
    4728:	781b      	ldrb	r3, [r3, #0]
    472a:	2b00      	cmp	r3, #0
    472c:	d005      	beq.n	473a <cpu_irq_leave_critical+0x22>
    472e:	2201      	movs	r2, #1
    4730:	4b04      	ldr	r3, [pc, #16]	; (4744 <cpu_irq_leave_critical+0x2c>)
    4732:	701a      	strb	r2, [r3, #0]
    4734:	f3bf 8f5f 	dmb	sy
    4738:	b662      	cpsie	i
    473a:	4770      	bx	lr
    473c:	2000032c 	.word	0x2000032c
    4740:	20000330 	.word	0x20000330
    4744:	20000015 	.word	0x20000015

00004748 <system_clock_source_get_hz>:
 *
 * \returns Frequency of the given clock source, in Hz.
 */
uint32_t system_clock_source_get_hz(
		const enum system_clock_source clock_source)
{
    4748:	b510      	push	{r4, lr}
	switch (clock_source) {
    474a:	2807      	cmp	r0, #7
    474c:	d803      	bhi.n	4756 <system_clock_source_get_hz+0xe>
    474e:	0080      	lsls	r0, r0, #2
    4750:	4b0f      	ldr	r3, [pc, #60]	; (4790 <system_clock_source_get_hz+0x48>)
    4752:	581b      	ldr	r3, [r3, r0]
    4754:	469f      	mov	pc, r3
		}

		return _system_clock_inst.dpll.frequency;

	default:
		return 0;
    4756:	2000      	movs	r0, #0
    4758:	e018      	b.n	478c <system_clock_source_get_hz+0x44>
		return _system_clock_inst.xosc.frequency;
    475a:	4b0e      	ldr	r3, [pc, #56]	; (4794 <system_clock_source_get_hz+0x4c>)
    475c:	6858      	ldr	r0, [r3, #4]
    475e:	e015      	b.n	478c <system_clock_source_get_hz+0x44>
		return 48000000UL / (OSCCTRL->OSC48MDIV.bit.DIV + 1);
    4760:	4b0d      	ldr	r3, [pc, #52]	; (4798 <system_clock_source_get_hz+0x50>)
    4762:	7d59      	ldrb	r1, [r3, #21]
    4764:	0709      	lsls	r1, r1, #28
    4766:	0f09      	lsrs	r1, r1, #28
    4768:	3101      	adds	r1, #1
    476a:	480c      	ldr	r0, [pc, #48]	; (479c <system_clock_source_get_hz+0x54>)
    476c:	4b0c      	ldr	r3, [pc, #48]	; (47a0 <system_clock_source_get_hz+0x58>)
    476e:	4798      	blx	r3
    4770:	e00c      	b.n	478c <system_clock_source_get_hz+0x44>
		return _system_clock_inst.xosc32k.frequency;
    4772:	4b08      	ldr	r3, [pc, #32]	; (4794 <system_clock_source_get_hz+0x4c>)
    4774:	6898      	ldr	r0, [r3, #8]
    4776:	e009      	b.n	478c <system_clock_source_get_hz+0x44>
		if (!(OSCCTRL->DPLLCTRLA.reg & OSCCTRL_DPLLCTRLA_ENABLE)) {
    4778:	4b07      	ldr	r3, [pc, #28]	; (4798 <system_clock_source_get_hz+0x50>)
    477a:	7f1b      	ldrb	r3, [r3, #28]
			return 0;
    477c:	2000      	movs	r0, #0
		if (!(OSCCTRL->DPLLCTRLA.reg & OSCCTRL_DPLLCTRLA_ENABLE)) {
    477e:	079b      	lsls	r3, r3, #30
    4780:	d504      	bpl.n	478c <system_clock_source_get_hz+0x44>
		return _system_clock_inst.dpll.frequency;
    4782:	4b04      	ldr	r3, [pc, #16]	; (4794 <system_clock_source_get_hz+0x4c>)
    4784:	6818      	ldr	r0, [r3, #0]
    4786:	e001      	b.n	478c <system_clock_source_get_hz+0x44>
		return 32768UL;
    4788:	2080      	movs	r0, #128	; 0x80
    478a:	0200      	lsls	r0, r0, #8
	}
}
    478c:	bd10      	pop	{r4, pc}
    478e:	46c0      	nop			; (mov r8, r8)
    4790:	000091b8 	.word	0x000091b8
    4794:	20000334 	.word	0x20000334
    4798:	40001000 	.word	0x40001000
    479c:	02dc6c00 	.word	0x02dc6c00
    47a0:	00005f59 	.word	0x00005f59

000047a4 <system_clock_source_xosc_set_config>:
 * \param[in] config  External oscillator configuration structure containing
 *                    the new config
 */
void system_clock_source_xosc_set_config(
		struct system_clock_source_xosc_config *const config)
{
    47a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    47a6:	46de      	mov	lr, fp
    47a8:	4657      	mov	r7, sl
    47aa:	464e      	mov	r6, r9
    47ac:	4645      	mov	r5, r8
    47ae:	b5e0      	push	{r5, r6, r7, lr}
	OSCCTRL_XOSCCTRL_Type temp = OSCCTRL->XOSCCTRL;
    47b0:	4b38      	ldr	r3, [pc, #224]	; (4894 <system_clock_source_xosc_set_config+0xf0>)
    47b2:	8a1b      	ldrh	r3, [r3, #16]
    47b4:	071a      	lsls	r2, r3, #28
    47b6:	0fd2      	lsrs	r2, r2, #31
    47b8:	4691      	mov	r9, r2
    47ba:	055e      	lsls	r6, r3, #21
    47bc:	0f76      	lsrs	r6, r6, #29

	temp.bit.STARTUP = config->startup_time;
    47be:	7842      	ldrb	r2, [r0, #1]
    47c0:	240f      	movs	r4, #15
    47c2:	4014      	ands	r4, r2
    47c4:	46a3      	mov	fp, r4

	if (config->external_clock == SYSTEM_CLOCK_EXTERNAL_CRYSTAL) {
    47c6:	7802      	ldrb	r2, [r0, #0]
    47c8:	4251      	negs	r1, r2
    47ca:	414a      	adcs	r2, r1
    47cc:	b2d2      	uxtb	r2, r2
		temp.bit.XTALEN = 1;
	} else {
		temp.bit.XTALEN = 0;
	}

	temp.bit.AMPGC = config->auto_gain_control;
    47ce:	7885      	ldrb	r5, [r0, #2]

	/* Set gain */
	if (config->frequency <= 2000000) {
    47d0:	6841      	ldr	r1, [r0, #4]
    47d2:	4f31      	ldr	r7, [pc, #196]	; (4898 <system_clock_source_xosc_set_config+0xf4>)
    47d4:	42b9      	cmp	r1, r7
    47d6:	d90d      	bls.n	47f4 <system_clock_source_xosc_set_config+0x50>
		temp.bit.GAIN = 0;
	} else if (config->frequency <= 4000000) {
    47d8:	4f30      	ldr	r7, [pc, #192]	; (489c <system_clock_source_xosc_set_config+0xf8>)
    47da:	42b9      	cmp	r1, r7
    47dc:	d953      	bls.n	4886 <system_clock_source_xosc_set_config+0xe2>
		temp.bit.GAIN = 1;
	} else if (config->frequency <= 8000000) {
    47de:	4f30      	ldr	r7, [pc, #192]	; (48a0 <system_clock_source_xosc_set_config+0xfc>)
    47e0:	42b9      	cmp	r1, r7
    47e2:	d952      	bls.n	488a <system_clock_source_xosc_set_config+0xe6>
		temp.bit.GAIN = 2;
	} else if (config->frequency <= 16000000) {
    47e4:	4f2f      	ldr	r7, [pc, #188]	; (48a4 <system_clock_source_xosc_set_config+0x100>)
    47e6:	42b9      	cmp	r1, r7
    47e8:	d951      	bls.n	488e <system_clock_source_xosc_set_config+0xea>
		temp.bit.GAIN = 3;
	} else if (config->frequency <= 32000000) {
    47ea:	4f2f      	ldr	r7, [pc, #188]	; (48a8 <system_clock_source_xosc_set_config+0x104>)
    47ec:	42b9      	cmp	r1, r7
    47ee:	d802      	bhi.n	47f6 <system_clock_source_xosc_set_config+0x52>
		temp.bit.GAIN = 4;
    47f0:	2604      	movs	r6, #4
    47f2:	e000      	b.n	47f6 <system_clock_source_xosc_set_config+0x52>
		temp.bit.GAIN = 0;
    47f4:	2600      	movs	r6, #0
	}

	temp.bit.ONDEMAND = config->on_demand;
    47f6:	7a47      	ldrb	r7, [r0, #9]
	temp.bit.RUNSTDBY = config->run_in_standby;
    47f8:	7a04      	ldrb	r4, [r0, #8]
    47fa:	46a4      	mov	ip, r4
	temp.bit.SWBEN    = config->enable_clock_switch_back;
    47fc:	7b44      	ldrb	r4, [r0, #13]
    47fe:	46a0      	mov	r8, r4

	if (config->enable_clock_failure_detector) {
    4800:	7b04      	ldrb	r4, [r0, #12]
    4802:	2c00      	cmp	r4, #0
    4804:	d001      	beq.n	480a <system_clock_source_xosc_set_config+0x66>
		Assert(OSCCTRL->OSC48MCTRL.reg & OSCCTRL_OSC48MCTRL_ENABLE);
		temp.bit.CFDEN    = config->enable_clock_failure_detector;
    4806:	2401      	movs	r4, #1
    4808:	46a1      	mov	r9, r4
	}

	/* Store XOSC frequency for internal use */
	_system_clock_inst.xosc.frequency = config->frequency;
    480a:	4c28      	ldr	r4, [pc, #160]	; (48ac <system_clock_source_xosc_set_config+0x108>)
    480c:	6061      	str	r1, [r4, #4]

	OSCCTRL->EVCTRL.reg =
			config->enable_clock_failure_detector_event_outut << OSCCTRL_EVCTRL_CFDEO_Pos;
    480e:	7ac1      	ldrb	r1, [r0, #11]
    4810:	468a      	mov	sl, r1
	OSCCTRL->EVCTRL.reg =
    4812:	4920      	ldr	r1, [pc, #128]	; (4894 <system_clock_source_xosc_set_config+0xf0>)
    4814:	4654      	mov	r4, sl
    4816:	74cc      	strb	r4, [r1, #19]

	OSCCTRL->CFDPRESC.reg = OSCCTRL_CFDPRESC_CFDPRESC(config->clock_failure_detector_prescaler) ;
    4818:	7a80      	ldrb	r0, [r0, #10]
    481a:	4682      	mov	sl, r0
    481c:	2007      	movs	r0, #7
    481e:	4654      	mov	r4, sl
    4820:	4020      	ands	r0, r4
    4822:	7488      	strb	r0, [r1, #18]

	OSCCTRL->XOSCCTRL = temp;
    4824:	0092      	lsls	r2, r2, #2
    4826:	2004      	movs	r0, #4
    4828:	4383      	bics	r3, r0
    482a:	431a      	orrs	r2, r3
    482c:	3803      	subs	r0, #3
    482e:	464b      	mov	r3, r9
    4830:	00db      	lsls	r3, r3, #3
    4832:	2408      	movs	r4, #8
    4834:	43a2      	bics	r2, r4
    4836:	431a      	orrs	r2, r3
    4838:	4643      	mov	r3, r8
    483a:	4003      	ands	r3, r0
    483c:	011b      	lsls	r3, r3, #4
    483e:	3408      	adds	r4, #8
    4840:	43a2      	bics	r2, r4
    4842:	431a      	orrs	r2, r3
    4844:	4663      	mov	r3, ip
    4846:	4003      	ands	r3, r0
    4848:	019b      	lsls	r3, r3, #6
    484a:	3430      	adds	r4, #48	; 0x30
    484c:	43a2      	bics	r2, r4
    484e:	431a      	orrs	r2, r3
    4850:	4007      	ands	r7, r0
    4852:	01ff      	lsls	r7, r7, #7
    4854:	2380      	movs	r3, #128	; 0x80
    4856:	439a      	bics	r2, r3
    4858:	0013      	movs	r3, r2
    485a:	433b      	orrs	r3, r7
    485c:	0236      	lsls	r6, r6, #8
    485e:	4a14      	ldr	r2, [pc, #80]	; (48b0 <system_clock_source_xosc_set_config+0x10c>)
    4860:	4013      	ands	r3, r2
    4862:	4333      	orrs	r3, r6
    4864:	4028      	ands	r0, r5
    4866:	02c0      	lsls	r0, r0, #11
    4868:	4a12      	ldr	r2, [pc, #72]	; (48b4 <system_clock_source_xosc_set_config+0x110>)
    486a:	4013      	ands	r3, r2
    486c:	4303      	orrs	r3, r0
    486e:	465a      	mov	r2, fp
    4870:	0314      	lsls	r4, r2, #12
    4872:	051b      	lsls	r3, r3, #20
    4874:	0d1b      	lsrs	r3, r3, #20
    4876:	4323      	orrs	r3, r4
    4878:	820b      	strh	r3, [r1, #16]
}
    487a:	bc3c      	pop	{r2, r3, r4, r5}
    487c:	4690      	mov	r8, r2
    487e:	4699      	mov	r9, r3
    4880:	46a2      	mov	sl, r4
    4882:	46ab      	mov	fp, r5
    4884:	bdf0      	pop	{r4, r5, r6, r7, pc}
		temp.bit.GAIN = 1;
    4886:	2601      	movs	r6, #1
    4888:	e7b5      	b.n	47f6 <system_clock_source_xosc_set_config+0x52>
		temp.bit.GAIN = 2;
    488a:	2602      	movs	r6, #2
    488c:	e7b3      	b.n	47f6 <system_clock_source_xosc_set_config+0x52>
		temp.bit.GAIN = 3;
    488e:	2603      	movs	r6, #3
    4890:	e7b1      	b.n	47f6 <system_clock_source_xosc_set_config+0x52>
    4892:	46c0      	nop			; (mov r8, r8)
    4894:	40001000 	.word	0x40001000
    4898:	001e8480 	.word	0x001e8480
    489c:	003d0900 	.word	0x003d0900
    48a0:	007a1200 	.word	0x007a1200
    48a4:	00f42400 	.word	0x00f42400
    48a8:	01e84800 	.word	0x01e84800
    48ac:	20000334 	.word	0x20000334
    48b0:	fffff8ff 	.word	0xfffff8ff
    48b4:	fffff7ff 	.word	0xfffff7ff

000048b8 <system_clock_source_dpll_set_config>:
 *
 * \param[in] config  DPLL configuration structure containing the new config
 */
void system_clock_source_dpll_set_config(
		struct system_clock_source_dpll_config *const config)
{
    48b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    48ba:	0004      	movs	r4, r0

	uint32_t tmpldr;
	uint8_t  tmpldrfrac;
	uint32_t refclk;

	refclk = config->reference_frequency;
    48bc:	68c5      	ldr	r5, [r0, #12]

	/* Only reference clock REF1 can be divided */
	if (config->reference_clock == SYSTEM_CLOCK_SOURCE_DPLL_REFERENCE_CLOCK_XOSC) {
    48be:	7d03      	ldrb	r3, [r0, #20]
    48c0:	2b01      	cmp	r3, #1
    48c2:	d04d      	beq.n	4960 <system_clock_source_dpll_set_config+0xa8>
		refclk = refclk / (2 * (config->reference_divider + 1));
	}

	/* Calculate LDRFRAC and LDR */
	tmpldr = (config->output_frequency << 4) / refclk;
    48c4:	68a3      	ldr	r3, [r4, #8]
    48c6:	0118      	lsls	r0, r3, #4
    48c8:	0029      	movs	r1, r5
    48ca:	4b29      	ldr	r3, [pc, #164]	; (4970 <system_clock_source_dpll_set_config+0xb8>)
    48cc:	4798      	blx	r3
	tmpldrfrac = tmpldr & 0x0f;
    48ce:	220f      	movs	r2, #15
    48d0:	4002      	ands	r2, r0
	tmpldr = (tmpldr >> 4) - 1;
    48d2:	0903      	lsrs	r3, r0, #4

	OSCCTRL->DPLLCTRLA.reg =
			((uint32_t)config->on_demand << OSCCTRL_DPLLCTRLA_ONDEMAND_Pos) |
    48d4:	7821      	ldrb	r1, [r4, #0]
    48d6:	01c9      	lsls	r1, r1, #7
			((uint32_t)config->run_in_standby << OSCCTRL_DPLLCTRLA_RUNSTDBY_Pos);
    48d8:	7866      	ldrb	r6, [r4, #1]
    48da:	01b6      	lsls	r6, r6, #6
			((uint32_t)config->on_demand << OSCCTRL_DPLLCTRLA_ONDEMAND_Pos) |
    48dc:	4331      	orrs	r1, r6
    48de:	b2c9      	uxtb	r1, r1
	OSCCTRL->DPLLCTRLA.reg =
    48e0:	4e24      	ldr	r6, [pc, #144]	; (4974 <system_clock_source_dpll_set_config+0xbc>)
    48e2:	7731      	strb	r1, [r6, #28]

	OSCCTRL->DPLLRATIO.reg =
			OSCCTRL_DPLLRATIO_LDRFRAC(tmpldrfrac) |
    48e4:	0411      	lsls	r1, r2, #16
	tmpldr = (tmpldr >> 4) - 1;
    48e6:	3b01      	subs	r3, #1
			OSCCTRL_DPLLRATIO_LDR(tmpldr);
    48e8:	051b      	lsls	r3, r3, #20
    48ea:	0d1b      	lsrs	r3, r3, #20
			OSCCTRL_DPLLRATIO_LDRFRAC(tmpldrfrac) |
    48ec:	430b      	orrs	r3, r1
	OSCCTRL->DPLLRATIO.reg =
    48ee:	6233      	str	r3, [r6, #32]

	while(OSCCTRL->DPLLSYNCBUSY.reg & OSCCTRL_DPLLSYNCBUSY_DPLLRATIO){
    48f0:	0037      	movs	r7, r6
    48f2:	262c      	movs	r6, #44	; 0x2c
    48f4:	2104      	movs	r1, #4
    48f6:	5dbb      	ldrb	r3, [r7, r6]
    48f8:	420b      	tst	r3, r1
    48fa:	d1fc      	bne.n	48f6 <system_clock_source_dpll_set_config+0x3e>
		}

	OSCCTRL->DPLLCTRLB.reg =
			OSCCTRL_DPLLCTRLB_DIV(config->reference_divider) |
			((uint32_t)config->lock_bypass << OSCCTRL_DPLLCTRLB_LBYPASS_Pos) |
    48fc:	78a3      	ldrb	r3, [r4, #2]
    48fe:	031b      	lsls	r3, r3, #12
			OSCCTRL_DPLLCTRLB_LTIME(config->lock_time) |
			OSCCTRL_DPLLCTRLB_REFCLK(config->reference_clock) |
			((uint32_t)config->wake_up_fast << OSCCTRL_DPLLCTRLB_WUF_Pos) |
    4900:	78e1      	ldrb	r1, [r4, #3]
    4902:	00c9      	lsls	r1, r1, #3
			((uint32_t)config->low_power_enable << OSCCTRL_DPLLCTRLB_LPEN_Pos) |
    4904:	430b      	orrs	r3, r1
    4906:	7921      	ldrb	r1, [r4, #4]
    4908:	0089      	lsls	r1, r1, #2
    490a:	430b      	orrs	r3, r1
			OSCCTRL_DPLLCTRLB_FILTER(config->filter);
    490c:	7ca1      	ldrb	r1, [r4, #18]
    490e:	2603      	movs	r6, #3
    4910:	4031      	ands	r1, r6
			((uint32_t)config->low_power_enable << OSCCTRL_DPLLCTRLB_LPEN_Pos) |
    4912:	430b      	orrs	r3, r1
			OSCCTRL_DPLLCTRLB_DIV(config->reference_divider) |
    4914:	8a21      	ldrh	r1, [r4, #16]
    4916:	0409      	lsls	r1, r1, #16
    4918:	4f17      	ldr	r7, [pc, #92]	; (4978 <system_clock_source_dpll_set_config+0xc0>)
    491a:	4039      	ands	r1, r7
			((uint32_t)config->low_power_enable << OSCCTRL_DPLLCTRLB_LPEN_Pos) |
    491c:	430b      	orrs	r3, r1
			OSCCTRL_DPLLCTRLB_LTIME(config->lock_time) |
    491e:	7ce1      	ldrb	r1, [r4, #19]
    4920:	0209      	lsls	r1, r1, #8
    4922:	27e0      	movs	r7, #224	; 0xe0
    4924:	00ff      	lsls	r7, r7, #3
    4926:	4039      	ands	r1, r7
			((uint32_t)config->low_power_enable << OSCCTRL_DPLLCTRLB_LPEN_Pos) |
    4928:	430b      	orrs	r3, r1
			OSCCTRL_DPLLCTRLB_REFCLK(config->reference_clock) |
    492a:	7d27      	ldrb	r7, [r4, #20]
    492c:	013f      	lsls	r7, r7, #4
    492e:	2130      	movs	r1, #48	; 0x30
    4930:	4039      	ands	r1, r7
			((uint32_t)config->low_power_enable << OSCCTRL_DPLLCTRLB_LPEN_Pos) |
    4932:	430b      	orrs	r3, r1
	OSCCTRL->DPLLCTRLB.reg =
    4934:	490f      	ldr	r1, [pc, #60]	; (4974 <system_clock_source_dpll_set_config+0xbc>)
    4936:	624b      	str	r3, [r1, #36]	; 0x24

	OSCCTRL->DPLLPRESC.reg  = OSCCTRL_DPLLPRESC_PRESC(config->prescaler);
    4938:	7d63      	ldrb	r3, [r4, #21]
    493a:	401e      	ands	r6, r3
    493c:	2328      	movs	r3, #40	; 0x28
    493e:	54ce      	strb	r6, [r1, r3]
	while(OSCCTRL->DPLLSYNCBUSY.reg & OSCCTRL_DPLLSYNCBUSY_DPLLPRESC){
    4940:	000f      	movs	r7, r1
    4942:	262c      	movs	r6, #44	; 0x2c
    4944:	2108      	movs	r1, #8
    4946:	5dbb      	ldrb	r3, [r7, r6]
    4948:	420b      	tst	r3, r1
    494a:	d1fc      	bne.n	4946 <system_clock_source_dpll_set_config+0x8e>
	/*
	 * Fck = Fckrx * (LDR + 1 + LDRFRAC / 16) / (2^PRESC)
	 */
	_system_clock_inst.dpll.frequency =
			(refclk *
			 (((tmpldr + 1) << 4) + tmpldrfrac)
    494c:	230f      	movs	r3, #15
    494e:	4398      	bics	r0, r3
    4950:	1882      	adds	r2, r0, r2
			(refclk *
    4952:	436a      	muls	r2, r5
			) >> (4 + config->prescaler);
    4954:	7d63      	ldrb	r3, [r4, #21]
    4956:	3304      	adds	r3, #4
    4958:	40da      	lsrs	r2, r3
	_system_clock_inst.dpll.frequency =
    495a:	4b08      	ldr	r3, [pc, #32]	; (497c <system_clock_source_dpll_set_config+0xc4>)
    495c:	601a      	str	r2, [r3, #0]
}
    495e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		refclk = refclk / (2 * (config->reference_divider + 1));
    4960:	8a01      	ldrh	r1, [r0, #16]
    4962:	3101      	adds	r1, #1
    4964:	0049      	lsls	r1, r1, #1
    4966:	0028      	movs	r0, r5
    4968:	4b01      	ldr	r3, [pc, #4]	; (4970 <system_clock_source_dpll_set_config+0xb8>)
    496a:	4798      	blx	r3
    496c:	0005      	movs	r5, r0
    496e:	e7a9      	b.n	48c4 <system_clock_source_dpll_set_config+0xc>
    4970:	00005f59 	.word	0x00005f59
    4974:	40001000 	.word	0x40001000
    4978:	07ff0000 	.word	0x07ff0000
    497c:	20000334 	.word	0x20000334

00004980 <system_clock_source_enable>:
 *                                 device
 */
enum status_code system_clock_source_enable(
		const enum system_clock_source clock_source)
{
	switch (clock_source) {
    4980:	2807      	cmp	r0, #7
    4982:	d803      	bhi.n	498c <system_clock_source_enable+0xc>
    4984:	0080      	lsls	r0, r0, #2
    4986:	4b18      	ldr	r3, [pc, #96]	; (49e8 <system_clock_source_enable+0x68>)
    4988:	581b      	ldr	r3, [r3, r0]
    498a:	469f      	mov	pc, r3
		/* Always enabled */
		return STATUS_OK;

	default:
		Assert(false);
		return STATUS_ERR_INVALID_ARG;
    498c:	2017      	movs	r0, #23
    498e:	e029      	b.n	49e4 <system_clock_source_enable+0x64>
		OSCCTRL->OSC48MCTRL.reg |= OSCCTRL_OSC48MCTRL_ENABLE;
    4990:	4a16      	ldr	r2, [pc, #88]	; (49ec <system_clock_source_enable+0x6c>)
    4992:	7d13      	ldrb	r3, [r2, #20]
    4994:	2102      	movs	r1, #2
    4996:	430b      	orrs	r3, r1
    4998:	7513      	strb	r3, [r2, #20]
		return STATUS_OK;
    499a:	2000      	movs	r0, #0
    499c:	e022      	b.n	49e4 <system_clock_source_enable+0x64>
		OSC32KCTRL->OSC32K.reg |= OSC32KCTRL_OSC32K_ENABLE;
    499e:	4a14      	ldr	r2, [pc, #80]	; (49f0 <system_clock_source_enable+0x70>)
    49a0:	6993      	ldr	r3, [r2, #24]
    49a2:	2102      	movs	r1, #2
    49a4:	430b      	orrs	r3, r1
    49a6:	6193      	str	r3, [r2, #24]
	}

	return STATUS_OK;
    49a8:	2000      	movs	r0, #0
		break;
    49aa:	e01b      	b.n	49e4 <system_clock_source_enable+0x64>
		OSCCTRL->XOSCCTRL.reg |= OSCCTRL_XOSCCTRL_ENABLE;
    49ac:	4a0f      	ldr	r2, [pc, #60]	; (49ec <system_clock_source_enable+0x6c>)
    49ae:	8a13      	ldrh	r3, [r2, #16]
    49b0:	2102      	movs	r1, #2
    49b2:	430b      	orrs	r3, r1
    49b4:	8213      	strh	r3, [r2, #16]
	return STATUS_OK;
    49b6:	2000      	movs	r0, #0
		break;
    49b8:	e014      	b.n	49e4 <system_clock_source_enable+0x64>
		OSC32KCTRL->XOSC32K.reg |= OSC32KCTRL_XOSC32K_ENABLE;
    49ba:	4a0d      	ldr	r2, [pc, #52]	; (49f0 <system_clock_source_enable+0x70>)
    49bc:	8a93      	ldrh	r3, [r2, #20]
    49be:	2102      	movs	r1, #2
    49c0:	430b      	orrs	r3, r1
    49c2:	8293      	strh	r3, [r2, #20]
	return STATUS_OK;
    49c4:	2000      	movs	r0, #0
		break;
    49c6:	e00d      	b.n	49e4 <system_clock_source_enable+0x64>
		OSCCTRL->DPLLCTRLA.reg |= OSCCTRL_DPLLCTRLA_ENABLE;
    49c8:	4a08      	ldr	r2, [pc, #32]	; (49ec <system_clock_source_enable+0x6c>)
    49ca:	7f13      	ldrb	r3, [r2, #28]
    49cc:	2102      	movs	r1, #2
    49ce:	430b      	orrs	r3, r1
    49d0:	7713      	strb	r3, [r2, #28]
		while(OSCCTRL->DPLLSYNCBUSY.reg & OSCCTRL_DPLLSYNCBUSY_ENABLE){
    49d2:	0010      	movs	r0, r2
    49d4:	312a      	adds	r1, #42	; 0x2a
    49d6:	2202      	movs	r2, #2
    49d8:	5c43      	ldrb	r3, [r0, r1]
    49da:	4213      	tst	r3, r2
    49dc:	d1fc      	bne.n	49d8 <system_clock_source_enable+0x58>
	return STATUS_OK;
    49de:	2000      	movs	r0, #0
    49e0:	e000      	b.n	49e4 <system_clock_source_enable+0x64>
		return STATUS_OK;
    49e2:	2000      	movs	r0, #0
}
    49e4:	4770      	bx	lr
    49e6:	46c0      	nop			; (mov r8, r8)
    49e8:	000091d8 	.word	0x000091d8
    49ec:	40001000 	.word	0x40001000
    49f0:	40001400 	.word	0x40001400

000049f4 <system_clock_init>:
 * \note OSC48M is always enabled and if the user selects other clocks for GCLK generators,
 * the OSC48M default enable can be disabled after system_clock_init. Make sure the
 * clock switches successfully before disabling OSC48M.
 */
void system_clock_init(void)
{
    49f4:	b5f0      	push	{r4, r5, r6, r7, lr}
    49f6:	46d6      	mov	lr, sl
    49f8:	464f      	mov	r7, r9
    49fa:	4646      	mov	r6, r8
    49fc:	b5c0      	push	{r6, r7, lr}
    49fe:	b08e      	sub	sp, #56	; 0x38
	/* Various bits in the INTFLAG register can be set to one at startup.
	   This will ensure that these bits are cleared */
	SUPC->INTFLAG.reg = SUPC_INTFLAG_BODVDDRDY | SUPC_INTFLAG_BODVDDDET;
    4a00:	2203      	movs	r2, #3
    4a02:	4b62      	ldr	r3, [pc, #392]	; (4b8c <system_clock_init+0x198>)
    4a04:	609a      	str	r2, [r3, #8]
static inline void system_flash_set_waitstates(uint8_t wait_states)
{
	Assert(NVMCTRL_CTRLB_RWS((uint32_t)wait_states) ==
			((uint32_t)wait_states << NVMCTRL_CTRLB_RWS_Pos));

	NVMCTRL->CTRLB.bit.RWS = wait_states;
    4a06:	4a62      	ldr	r2, [pc, #392]	; (4b90 <system_clock_init+0x19c>)
    4a08:	6853      	ldr	r3, [r2, #4]
    4a0a:	211e      	movs	r1, #30
    4a0c:	438b      	bics	r3, r1
    4a0e:	3918      	subs	r1, #24
    4a10:	430b      	orrs	r3, r1
    4a12:	6053      	str	r3, [r2, #4]
	config->external_clock    = SYSTEM_CLOCK_EXTERNAL_CRYSTAL;
    4a14:	a80a      	add	r0, sp, #40	; 0x28
    4a16:	2300      	movs	r3, #0
    4a18:	7003      	strb	r3, [r0, #0]
	config->auto_gain_control = false;
    4a1a:	7083      	strb	r3, [r0, #2]
	config->frequency         = 12000000UL;
    4a1c:	4a5d      	ldr	r2, [pc, #372]	; (4b94 <system_clock_init+0x1a0>)
    4a1e:	6042      	str	r2, [r0, #4]
	config->run_in_standby    = false;
    4a20:	7203      	strb	r3, [r0, #8]
	config->on_demand         = false;
    4a22:	7243      	strb	r3, [r0, #9]
	config->clock_failure_detector_prescaler = SYSTEM_CLOCK_XOSC_FAILURE_DETECTOR_PRESCALER_1;
    4a24:	7283      	strb	r3, [r0, #10]
	config->enable_clock_failure_detector_event_outut = false;
    4a26:	72c3      	strb	r3, [r0, #11]
	config->enable_clock_failure_detector = false;
    4a28:	7303      	strb	r3, [r0, #12]
	config->enable_clock_switch_back = false;
    4a2a:	7343      	strb	r3, [r0, #13]
#if CONF_CLOCK_XOSC_ENABLE == true
	struct system_clock_source_xosc_config xosc_conf;
	system_clock_source_xosc_get_config_defaults(&xosc_conf);

	xosc_conf.external_clock    = CONF_CLOCK_XOSC_EXTERNAL_CRYSTAL;
	xosc_conf.startup_time      = CONF_CLOCK_XOSC_STARTUP_TIME;
    4a2c:	330f      	adds	r3, #15
    4a2e:	7043      	strb	r3, [r0, #1]
	xosc_conf.enable_clock_failure_detector    = CONF_CLOCK_XOSC_FAILURE_DETECTOR_ENABLE;
	xosc_conf.enable_clock_failure_detector_event_outut =
		CONF_CLOCK_XOSC_FAILURE_DETECTOR_EVENT_OUTPUT_ENABLE;
	xosc_conf.enable_clock_switch_back = CONF_CLOCK_XOSC_FAILURE_SWITCH_BACK_ENABLE;

	system_clock_source_xosc_set_config(&xosc_conf);
    4a30:	4b59      	ldr	r3, [pc, #356]	; (4b98 <system_clock_init+0x1a4>)
    4a32:	4798      	blx	r3
	system_clock_source_enable(SYSTEM_CLOCK_SOURCE_XOSC);
    4a34:	2000      	movs	r0, #0
    4a36:	4b59      	ldr	r3, [pc, #356]	; (4b9c <system_clock_init+0x1a8>)
    4a38:	4798      	blx	r3
		return ((OSCCTRL->STATUS.reg & mask) == mask);
    4a3a:	4959      	ldr	r1, [pc, #356]	; (4ba0 <system_clock_init+0x1ac>)
    4a3c:	2201      	movs	r2, #1
    4a3e:	68cb      	ldr	r3, [r1, #12]
	while(!system_clock_source_is_ready(SYSTEM_CLOCK_SOURCE_XOSC));
    4a40:	421a      	tst	r2, r3
    4a42:	d0fc      	beq.n	4a3e <system_clock_init+0x4a>
	if (CONF_CLOCK_XOSC_ON_DEMAND || CONF_CLOCK_XOSC_AUTO_GAIN_CONTROL) {
		OSCCTRL->XOSCCTRL.reg |=
    4a44:	4b56      	ldr	r3, [pc, #344]	; (4ba0 <system_clock_init+0x1ac>)
    4a46:	8a1a      	ldrh	r2, [r3, #16]
    4a48:	2180      	movs	r1, #128	; 0x80
    4a4a:	430a      	orrs	r2, r1
    4a4c:	821a      	strh	r2, [r3, #16]
	system_clock_source_osc32k_set_config(&osc32k_conf);
	system_clock_source_enable(SYSTEM_CLOCK_SOURCE_OSC32K);
#endif

	/* OSC48M */
	OSCCTRL->OSC48MCTRL.reg |= (CONF_CLOCK_OSC48M_ON_DEMAND << OSCCTRL_OSC48MCTRL_ONDEMAND_Pos)
    4a4e:	7d1a      	ldrb	r2, [r3, #20]
    4a50:	3140      	adds	r1, #64	; 0x40
    4a52:	430a      	orrs	r2, r1
    4a54:	751a      	strb	r2, [r3, #20]
		while(OSCCTRL->OSC48MSYNCBUSY.reg) ;
	}

	/* GCLK */
#if CONF_CLOCK_CONFIGURE_GCLK == true
	system_gclk_init();
    4a56:	4b53      	ldr	r3, [pc, #332]	; (4ba4 <system_clock_init+0x1b0>)
    4a58:	4798      	blx	r3
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->division_factor    = 1;
    4a5a:	ac01      	add	r4, sp, #4
    4a5c:	2601      	movs	r6, #1
    4a5e:	6066      	str	r6, [r4, #4]
	config->high_when_disabled = false;
    4a60:	2500      	movs	r5, #0
    4a62:	7065      	strb	r5, [r4, #1]
#elif (SAMC20) || (SAMC21)
	config->source_clock       = GCLK_SOURCE_OSC48M;
#else
	config->source_clock       = GCLK_SOURCE_OSC8M;
#endif
	config->run_in_standby     = false;
    4a64:	7225      	strb	r5, [r4, #8]
	config->output_enable      = false;
    4a66:	7265      	strb	r5, [r4, #9]

	/* Configure all GCLK generators except for the main generator, which
	 * is configured later after all other clock systems are set up */
	MREPEAT(GCLK_GEN_NUM, _CONF_CLOCK_GCLK_CONFIG_NONMAIN, ~);
    4a68:	7025      	strb	r5, [r4, #0]
    4a6a:	0021      	movs	r1, r4
    4a6c:	2001      	movs	r0, #1
    4a6e:	4b4e      	ldr	r3, [pc, #312]	; (4ba8 <system_clock_init+0x1b4>)
    4a70:	4698      	mov	r8, r3
    4a72:	4798      	blx	r3
    4a74:	2001      	movs	r0, #1
    4a76:	4f4d      	ldr	r7, [pc, #308]	; (4bac <system_clock_init+0x1b8>)
    4a78:	47b8      	blx	r7
	config->division_factor    = 1;
    4a7a:	6066      	str	r6, [r4, #4]
	config->high_when_disabled = false;
    4a7c:	7065      	strb	r5, [r4, #1]
	config->source_clock       = GCLK_SOURCE_OSC48M;
    4a7e:	2306      	movs	r3, #6
    4a80:	4699      	mov	r9, r3
    4a82:	7023      	strb	r3, [r4, #0]
	config->output_enable      = false;
    4a84:	7265      	strb	r5, [r4, #9]
    4a86:	7226      	strb	r6, [r4, #8]
    4a88:	0021      	movs	r1, r4
    4a8a:	2002      	movs	r0, #2
    4a8c:	47c0      	blx	r8
    4a8e:	2002      	movs	r0, #2
    4a90:	47b8      	blx	r7
	config->division_factor    = 1;
    4a92:	6066      	str	r6, [r4, #4]
	config->high_when_disabled = false;
    4a94:	7065      	strb	r5, [r4, #1]
	config->output_enable      = false;
    4a96:	7265      	strb	r5, [r4, #9]
    4a98:	2307      	movs	r3, #7
    4a9a:	469a      	mov	sl, r3
    4a9c:	7023      	strb	r3, [r4, #0]
    4a9e:	7226      	strb	r6, [r4, #8]
    4aa0:	0021      	movs	r1, r4
    4aa2:	2003      	movs	r0, #3
    4aa4:	47c0      	blx	r8
    4aa6:	2003      	movs	r0, #3
    4aa8:	47b8      	blx	r7
	config->division_factor    = 1;
    4aaa:	6066      	str	r6, [r4, #4]
	config->high_when_disabled = false;
    4aac:	7065      	strb	r5, [r4, #1]
	config->source_clock       = GCLK_SOURCE_OSC48M;
    4aae:	464b      	mov	r3, r9
    4ab0:	7023      	strb	r3, [r4, #0]
	config->run_in_standby     = false;
    4ab2:	7225      	strb	r5, [r4, #8]
	config->output_enable      = false;
    4ab4:	7265      	strb	r5, [r4, #9]
    4ab6:	0021      	movs	r1, r4
    4ab8:	2004      	movs	r0, #4
    4aba:	47c0      	blx	r8
    4abc:	2004      	movs	r0, #4
    4abe:	47b8      	blx	r7
	config->high_when_disabled = false;
    4ac0:	7065      	strb	r5, [r4, #1]
	config->source_clock       = GCLK_SOURCE_OSC48M;
    4ac2:	464b      	mov	r3, r9
    4ac4:	7023      	strb	r3, [r4, #0]
	config->run_in_standby     = false;
    4ac6:	7225      	strb	r5, [r4, #8]
	config->output_enable      = false;
    4ac8:	7265      	strb	r5, [r4, #9]
    4aca:	2328      	movs	r3, #40	; 0x28
    4acc:	6063      	str	r3, [r4, #4]
    4ace:	0021      	movs	r1, r4
    4ad0:	2005      	movs	r0, #5
    4ad2:	47c0      	blx	r8
    4ad4:	2005      	movs	r0, #5
    4ad6:	47b8      	blx	r7
	config->division_factor    = 1;
    4ad8:	6066      	str	r6, [r4, #4]
	config->high_when_disabled = false;
    4ada:	7065      	strb	r5, [r4, #1]
	config->source_clock       = GCLK_SOURCE_OSC48M;
    4adc:	464b      	mov	r3, r9
    4ade:	7023      	strb	r3, [r4, #0]
	config->run_in_standby     = false;
    4ae0:	7225      	strb	r5, [r4, #8]
	config->output_enable      = false;
    4ae2:	7265      	strb	r5, [r4, #9]
    4ae4:	0021      	movs	r1, r4
    4ae6:	2006      	movs	r0, #6
    4ae8:	47c0      	blx	r8
    4aea:	2006      	movs	r0, #6
    4aec:	47b8      	blx	r7
	config->division_factor    = 1;
    4aee:	6066      	str	r6, [r4, #4]
	config->high_when_disabled = false;
    4af0:	7065      	strb	r5, [r4, #1]
	config->source_clock       = GCLK_SOURCE_OSC48M;
    4af2:	464b      	mov	r3, r9
    4af4:	7023      	strb	r3, [r4, #0]
	config->run_in_standby     = false;
    4af6:	7225      	strb	r5, [r4, #8]
	config->output_enable      = false;
    4af8:	7265      	strb	r5, [r4, #9]
    4afa:	0021      	movs	r1, r4
    4afc:	2007      	movs	r0, #7
    4afe:	47c0      	blx	r8
    4b00:	2007      	movs	r0, #7
    4b02:	47b8      	blx	r7
	config->division_factor    = 1;
    4b04:	6066      	str	r6, [r4, #4]
	config->high_when_disabled = false;
    4b06:	7065      	strb	r5, [r4, #1]
	config->run_in_standby     = false;
    4b08:	7225      	strb	r5, [r4, #8]
	config->output_enable      = false;
    4b0a:	7265      	strb	r5, [r4, #9]
    4b0c:	4653      	mov	r3, sl
    4b0e:	7023      	strb	r3, [r4, #0]
    4b10:	0021      	movs	r1, r4
    4b12:	2008      	movs	r0, #8
    4b14:	47c0      	blx	r8
    4b16:	2008      	movs	r0, #8
    4b18:	47b8      	blx	r7
	config->lock_bypass         = false;
    4b1a:	a804      	add	r0, sp, #16
    4b1c:	7085      	strb	r5, [r0, #2]
	config->wake_up_fast        = false;
    4b1e:	70c5      	strb	r5, [r0, #3]
	config->low_power_enable    = false;
    4b20:	7105      	strb	r5, [r0, #4]
	config->output_frequency    = 48000000;
    4b22:	4b23      	ldr	r3, [pc, #140]	; (4bb0 <system_clock_init+0x1bc>)
    4b24:	6083      	str	r3, [r0, #8]
	config->prescaler           = SYSTEM_CLOCK_SOURCE_DPLL_DIV_1;
    4b26:	7545      	strb	r5, [r0, #21]
	config->lock_time           = SYSTEM_CLOCK_SOURCE_DPLL_LOCK_TIME_DEFAULT;
    4b28:	74c5      	strb	r5, [r0, #19]
	config->filter              = SYSTEM_CLOCK_SOURCE_DPLL_FILTER_DEFAULT;
    4b2a:	7485      	strb	r5, [r0, #18]
		Assert(false);
	}
	struct system_clock_source_dpll_config dpll_config;
	system_clock_source_dpll_get_config_defaults(&dpll_config);

	dpll_config.on_demand        = false;
    4b2c:	7005      	strb	r5, [r0, #0]
	dpll_config.run_in_standby   = CONF_CLOCK_DPLL_RUN_IN_STANDBY;
    4b2e:	7046      	strb	r6, [r0, #1]
	dpll_config.wake_up_fast     = CONF_CLOCK_DPLL_WAKE_UP_FAST;
	dpll_config.low_power_enable = CONF_CLOCK_DPLL_LOW_POWER_ENABLE;

	dpll_config.filter           = CONF_CLOCK_DPLL_FILTER;

	dpll_config.reference_clock     = CONF_CLOCK_DPLL_REFERENCE_CLOCK;
    4b30:	7506      	strb	r6, [r0, #20]
	dpll_config.reference_frequency = CONF_CLOCK_DPLL_REFERENCE_FREQUENCY;
    4b32:	4b18      	ldr	r3, [pc, #96]	; (4b94 <system_clock_init+0x1a0>)
    4b34:	60c3      	str	r3, [r0, #12]
	dpll_config.reference_divider   = CONF_CLOCK_DPLL_REFERENCE_DIVIDER;
    4b36:	2378      	movs	r3, #120	; 0x78
    4b38:	33ff      	adds	r3, #255	; 0xff
    4b3a:	8203      	strh	r3, [r0, #16]
	dpll_config.output_frequency    = CONF_CLOCK_DPLL_OUTPUT_FREQUENCY;
	dpll_config.prescaler           = CONF_CLOCK_DPLL_PRESCALER;

	system_clock_source_dpll_set_config(&dpll_config);
    4b3c:	4b1d      	ldr	r3, [pc, #116]	; (4bb4 <system_clock_init+0x1c0>)
    4b3e:	4798      	blx	r3
	system_clock_source_enable(SYSTEM_CLOCK_SOURCE_DPLL);
    4b40:	2007      	movs	r0, #7
    4b42:	4b16      	ldr	r3, [pc, #88]	; (4b9c <system_clock_init+0x1a8>)
    4b44:	4798      	blx	r3
		return ((OSCCTRL->DPLLSTATUS.reg &
    4b46:	4816      	ldr	r0, [pc, #88]	; (4ba0 <system_clock_init+0x1ac>)
    4b48:	2130      	movs	r1, #48	; 0x30
	while(!system_clock_source_is_ready(SYSTEM_CLOCK_SOURCE_DPLL));
    4b4a:	2203      	movs	r2, #3
		return ((OSCCTRL->DPLLSTATUS.reg &
    4b4c:	5c43      	ldrb	r3, [r0, r1]
	while(!system_clock_source_is_ready(SYSTEM_CLOCK_SOURCE_DPLL));
    4b4e:	4013      	ands	r3, r2
    4b50:	2b03      	cmp	r3, #3
    4b52:	d1fb      	bne.n	4b4c <system_clock_init+0x158>
	if (CONF_CLOCK_DPLL_ON_DEMAND) {
		OSCCTRL->DPLLCTRLA.bit.ONDEMAND = 1;
    4b54:	4a12      	ldr	r2, [pc, #72]	; (4ba0 <system_clock_init+0x1ac>)
    4b56:	7f11      	ldrb	r1, [r2, #28]
    4b58:	3b83      	subs	r3, #131	; 0x83
    4b5a:	430b      	orrs	r3, r1
    4b5c:	7713      	strb	r3, [r2, #28]
	MCLK->CPUDIV.reg = MCLK_CPUDIV_CPUDIV(1 << divider);
    4b5e:	2301      	movs	r3, #1
    4b60:	4a15      	ldr	r2, [pc, #84]	; (4bb8 <system_clock_init+0x1c4>)
    4b62:	7113      	strb	r3, [r2, #4]
	config->division_factor    = 1;
    4b64:	a901      	add	r1, sp, #4
    4b66:	604b      	str	r3, [r1, #4]
	config->high_when_disabled = false;
    4b68:	2300      	movs	r3, #0
    4b6a:	704b      	strb	r3, [r1, #1]
	config->run_in_standby     = false;
    4b6c:	720b      	strb	r3, [r1, #8]
	config->output_enable      = false;
    4b6e:	724b      	strb	r3, [r1, #9]
	system_cpu_clock_set_divider(CONF_CLOCK_CPU_DIVIDER);

	/* GCLK 0 */
#if CONF_CLOCK_CONFIGURE_GCLK == true
	/* Configure the main GCLK last as it might depend on other generators */
	_CONF_CLOCK_GCLK_CONFIG(0, ~);
    4b70:	3307      	adds	r3, #7
    4b72:	700b      	strb	r3, [r1, #0]
    4b74:	2000      	movs	r0, #0
    4b76:	4b0c      	ldr	r3, [pc, #48]	; (4ba8 <system_clock_init+0x1b4>)
    4b78:	4798      	blx	r3
    4b7a:	2000      	movs	r0, #0
    4b7c:	4b0b      	ldr	r3, [pc, #44]	; (4bac <system_clock_init+0x1b8>)
    4b7e:	4798      	blx	r3
#endif

}
    4b80:	b00e      	add	sp, #56	; 0x38
    4b82:	bc1c      	pop	{r2, r3, r4}
    4b84:	4690      	mov	r8, r2
    4b86:	4699      	mov	r9, r3
    4b88:	46a2      	mov	sl, r4
    4b8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4b8c:	40001800 	.word	0x40001800
    4b90:	41004000 	.word	0x41004000
    4b94:	00b71b00 	.word	0x00b71b00
    4b98:	000047a5 	.word	0x000047a5
    4b9c:	00004981 	.word	0x00004981
    4ba0:	40001000 	.word	0x40001000
    4ba4:	00004bbd 	.word	0x00004bbd
    4ba8:	00004be1 	.word	0x00004be1
    4bac:	00004c8d 	.word	0x00004c8d
    4bb0:	02dc6c00 	.word	0x02dc6c00
    4bb4:	000048b9 	.word	0x000048b9
    4bb8:	40000800 	.word	0x40000800

00004bbc <system_gclk_init>:
    4bbc:	4a06      	ldr	r2, [pc, #24]	; (4bd8 <system_gclk_init+0x1c>)
    4bbe:	6953      	ldr	r3, [r2, #20]
    4bc0:	2180      	movs	r1, #128	; 0x80
    4bc2:	430b      	orrs	r3, r1
    4bc4:	6153      	str	r3, [r2, #20]
    4bc6:	2201      	movs	r2, #1
    4bc8:	4b04      	ldr	r3, [pc, #16]	; (4bdc <system_gclk_init+0x20>)
    4bca:	701a      	strb	r2, [r3, #0]
    4bcc:	0019      	movs	r1, r3
    4bce:	780b      	ldrb	r3, [r1, #0]
    4bd0:	4213      	tst	r3, r2
    4bd2:	d1fc      	bne.n	4bce <system_gclk_init+0x12>
    4bd4:	4770      	bx	lr
    4bd6:	46c0      	nop			; (mov r8, r8)
    4bd8:	40000800 	.word	0x40000800
    4bdc:	40001c00 	.word	0x40001c00

00004be0 <system_gclk_gen_set_config>:
    4be0:	b570      	push	{r4, r5, r6, lr}
    4be2:	0004      	movs	r4, r0
    4be4:	780d      	ldrb	r5, [r1, #0]
    4be6:	784b      	ldrb	r3, [r1, #1]
    4be8:	2b00      	cmp	r3, #0
    4bea:	d002      	beq.n	4bf2 <system_gclk_gen_set_config+0x12>
    4bec:	2380      	movs	r3, #128	; 0x80
    4bee:	00db      	lsls	r3, r3, #3
    4bf0:	431d      	orrs	r5, r3
    4bf2:	7a4b      	ldrb	r3, [r1, #9]
    4bf4:	2b00      	cmp	r3, #0
    4bf6:	d002      	beq.n	4bfe <system_gclk_gen_set_config+0x1e>
    4bf8:	2380      	movs	r3, #128	; 0x80
    4bfa:	011b      	lsls	r3, r3, #4
    4bfc:	431d      	orrs	r5, r3
    4bfe:	6848      	ldr	r0, [r1, #4]
    4c00:	2801      	cmp	r0, #1
    4c02:	d90f      	bls.n	4c24 <system_gclk_gen_set_config+0x44>
    4c04:	1e43      	subs	r3, r0, #1
    4c06:	4218      	tst	r0, r3
    4c08:	d131      	bne.n	4c6e <system_gclk_gen_set_config+0x8e>
    4c0a:	2802      	cmp	r0, #2
    4c0c:	d92d      	bls.n	4c6a <system_gclk_gen_set_config+0x8a>
    4c0e:	2302      	movs	r3, #2
    4c10:	2200      	movs	r2, #0
    4c12:	3201      	adds	r2, #1
    4c14:	005b      	lsls	r3, r3, #1
    4c16:	4298      	cmp	r0, r3
    4c18:	d8fb      	bhi.n	4c12 <system_gclk_gen_set_config+0x32>
    4c1a:	2380      	movs	r3, #128	; 0x80
    4c1c:	015b      	lsls	r3, r3, #5
    4c1e:	431d      	orrs	r5, r3
    4c20:	0412      	lsls	r2, r2, #16
    4c22:	4315      	orrs	r5, r2
    4c24:	7a0b      	ldrb	r3, [r1, #8]
    4c26:	2b00      	cmp	r3, #0
    4c28:	d002      	beq.n	4c30 <system_gclk_gen_set_config+0x50>
    4c2a:	2380      	movs	r3, #128	; 0x80
    4c2c:	019b      	lsls	r3, r3, #6
    4c2e:	431d      	orrs	r5, r3
    4c30:	2604      	movs	r6, #4
    4c32:	40a6      	lsls	r6, r4
    4c34:	4911      	ldr	r1, [pc, #68]	; (4c7c <system_gclk_gen_set_config+0x9c>)
    4c36:	4a12      	ldr	r2, [pc, #72]	; (4c80 <system_gclk_gen_set_config+0xa0>)
    4c38:	684b      	ldr	r3, [r1, #4]
    4c3a:	4013      	ands	r3, r2
    4c3c:	421e      	tst	r6, r3
    4c3e:	d1fb      	bne.n	4c38 <system_gclk_gen_set_config+0x58>
    4c40:	4b10      	ldr	r3, [pc, #64]	; (4c84 <system_gclk_gen_set_config+0xa4>)
    4c42:	4798      	blx	r3
    4c44:	00a4      	lsls	r4, r4, #2
    4c46:	4b0d      	ldr	r3, [pc, #52]	; (4c7c <system_gclk_gen_set_config+0x9c>)
    4c48:	469c      	mov	ip, r3
    4c4a:	4464      	add	r4, ip
    4c4c:	6a22      	ldr	r2, [r4, #32]
    4c4e:	2380      	movs	r3, #128	; 0x80
    4c50:	005b      	lsls	r3, r3, #1
    4c52:	401a      	ands	r2, r3
    4c54:	432a      	orrs	r2, r5
    4c56:	6222      	str	r2, [r4, #32]
    4c58:	4661      	mov	r1, ip
    4c5a:	4a09      	ldr	r2, [pc, #36]	; (4c80 <system_gclk_gen_set_config+0xa0>)
    4c5c:	684b      	ldr	r3, [r1, #4]
    4c5e:	4013      	ands	r3, r2
    4c60:	421e      	tst	r6, r3
    4c62:	d1fb      	bne.n	4c5c <system_gclk_gen_set_config+0x7c>
    4c64:	4b08      	ldr	r3, [pc, #32]	; (4c88 <system_gclk_gen_set_config+0xa8>)
    4c66:	4798      	blx	r3
    4c68:	bd70      	pop	{r4, r5, r6, pc}
    4c6a:	2200      	movs	r2, #0
    4c6c:	e7d5      	b.n	4c1a <system_gclk_gen_set_config+0x3a>
    4c6e:	0400      	lsls	r0, r0, #16
    4c70:	2380      	movs	r3, #128	; 0x80
    4c72:	009b      	lsls	r3, r3, #2
    4c74:	4318      	orrs	r0, r3
    4c76:	4305      	orrs	r5, r0
    4c78:	e7d4      	b.n	4c24 <system_gclk_gen_set_config+0x44>
    4c7a:	46c0      	nop			; (mov r8, r8)
    4c7c:	40001c00 	.word	0x40001c00
    4c80:	000007fc 	.word	0x000007fc
    4c84:	000046d9 	.word	0x000046d9
    4c88:	00004719 	.word	0x00004719

00004c8c <system_gclk_gen_enable>:
    4c8c:	b510      	push	{r4, lr}
    4c8e:	0004      	movs	r4, r0
    4c90:	2204      	movs	r2, #4
    4c92:	4082      	lsls	r2, r0
    4c94:	4809      	ldr	r0, [pc, #36]	; (4cbc <system_gclk_gen_enable+0x30>)
    4c96:	490a      	ldr	r1, [pc, #40]	; (4cc0 <system_gclk_gen_enable+0x34>)
    4c98:	6843      	ldr	r3, [r0, #4]
    4c9a:	400b      	ands	r3, r1
    4c9c:	421a      	tst	r2, r3
    4c9e:	d1fb      	bne.n	4c98 <system_gclk_gen_enable+0xc>
    4ca0:	4b08      	ldr	r3, [pc, #32]	; (4cc4 <system_gclk_gen_enable+0x38>)
    4ca2:	4798      	blx	r3
    4ca4:	00a4      	lsls	r4, r4, #2
    4ca6:	4b05      	ldr	r3, [pc, #20]	; (4cbc <system_gclk_gen_enable+0x30>)
    4ca8:	469c      	mov	ip, r3
    4caa:	4464      	add	r4, ip
    4cac:	6a22      	ldr	r2, [r4, #32]
    4cae:	2380      	movs	r3, #128	; 0x80
    4cb0:	005b      	lsls	r3, r3, #1
    4cb2:	4313      	orrs	r3, r2
    4cb4:	6223      	str	r3, [r4, #32]
    4cb6:	4b04      	ldr	r3, [pc, #16]	; (4cc8 <system_gclk_gen_enable+0x3c>)
    4cb8:	4798      	blx	r3
    4cba:	bd10      	pop	{r4, pc}
    4cbc:	40001c00 	.word	0x40001c00
    4cc0:	000007fc 	.word	0x000007fc
    4cc4:	000046d9 	.word	0x000046d9
    4cc8:	00004719 	.word	0x00004719

00004ccc <system_gclk_gen_get_hz>:
    4ccc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4cce:	0004      	movs	r4, r0
    4cd0:	2204      	movs	r2, #4
    4cd2:	4082      	lsls	r2, r0
    4cd4:	4812      	ldr	r0, [pc, #72]	; (4d20 <system_gclk_gen_get_hz+0x54>)
    4cd6:	4913      	ldr	r1, [pc, #76]	; (4d24 <system_gclk_gen_get_hz+0x58>)
    4cd8:	6843      	ldr	r3, [r0, #4]
    4cda:	400b      	ands	r3, r1
    4cdc:	421a      	tst	r2, r3
    4cde:	d1fb      	bne.n	4cd8 <system_gclk_gen_get_hz+0xc>
    4ce0:	4b11      	ldr	r3, [pc, #68]	; (4d28 <system_gclk_gen_get_hz+0x5c>)
    4ce2:	4798      	blx	r3
    4ce4:	4f0e      	ldr	r7, [pc, #56]	; (4d20 <system_gclk_gen_get_hz+0x54>)
    4ce6:	3408      	adds	r4, #8
    4ce8:	00a4      	lsls	r4, r4, #2
    4cea:	59e0      	ldr	r0, [r4, r7]
    4cec:	0740      	lsls	r0, r0, #29
    4cee:	0f40      	lsrs	r0, r0, #29
    4cf0:	4b0e      	ldr	r3, [pc, #56]	; (4d2c <system_gclk_gen_get_hz+0x60>)
    4cf2:	4798      	blx	r3
    4cf4:	0006      	movs	r6, r0
    4cf6:	59e5      	ldr	r5, [r4, r7]
    4cf8:	04ed      	lsls	r5, r5, #19
    4cfa:	0fed      	lsrs	r5, r5, #31
    4cfc:	59e4      	ldr	r4, [r4, r7]
    4cfe:	0c24      	lsrs	r4, r4, #16
    4d00:	4b0b      	ldr	r3, [pc, #44]	; (4d30 <system_gclk_gen_get_hz+0x64>)
    4d02:	4798      	blx	r3
    4d04:	2d00      	cmp	r5, #0
    4d06:	d107      	bne.n	4d18 <system_gclk_gen_get_hz+0x4c>
    4d08:	2c01      	cmp	r4, #1
    4d0a:	d907      	bls.n	4d1c <system_gclk_gen_get_hz+0x50>
    4d0c:	0021      	movs	r1, r4
    4d0e:	0030      	movs	r0, r6
    4d10:	4b08      	ldr	r3, [pc, #32]	; (4d34 <system_gclk_gen_get_hz+0x68>)
    4d12:	4798      	blx	r3
    4d14:	0006      	movs	r6, r0
    4d16:	e001      	b.n	4d1c <system_gclk_gen_get_hz+0x50>
    4d18:	3401      	adds	r4, #1
    4d1a:	40e6      	lsrs	r6, r4
    4d1c:	0030      	movs	r0, r6
    4d1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4d20:	40001c00 	.word	0x40001c00
    4d24:	000007fc 	.word	0x000007fc
    4d28:	000046d9 	.word	0x000046d9
    4d2c:	00004749 	.word	0x00004749
    4d30:	00004719 	.word	0x00004719
    4d34:	00005f59 	.word	0x00005f59

00004d38 <system_gclk_chan_enable>:
    4d38:	b510      	push	{r4, lr}
    4d3a:	0004      	movs	r4, r0
    4d3c:	4b09      	ldr	r3, [pc, #36]	; (4d64 <system_gclk_chan_enable+0x2c>)
    4d3e:	4798      	blx	r3
    4d40:	00a0      	lsls	r0, r4, #2
    4d42:	4b09      	ldr	r3, [pc, #36]	; (4d68 <system_gclk_chan_enable+0x30>)
    4d44:	469c      	mov	ip, r3
    4d46:	4460      	add	r0, ip
    4d48:	2280      	movs	r2, #128	; 0x80
    4d4a:	5883      	ldr	r3, [r0, r2]
    4d4c:	2140      	movs	r1, #64	; 0x40
    4d4e:	430b      	orrs	r3, r1
    4d50:	5083      	str	r3, [r0, r2]
    4d52:	3140      	adds	r1, #64	; 0x40
    4d54:	3a40      	subs	r2, #64	; 0x40
    4d56:	5843      	ldr	r3, [r0, r1]
    4d58:	421a      	tst	r2, r3
    4d5a:	d0fc      	beq.n	4d56 <system_gclk_chan_enable+0x1e>
    4d5c:	4b03      	ldr	r3, [pc, #12]	; (4d6c <system_gclk_chan_enable+0x34>)
    4d5e:	4798      	blx	r3
    4d60:	bd10      	pop	{r4, pc}
    4d62:	46c0      	nop			; (mov r8, r8)
    4d64:	000046d9 	.word	0x000046d9
    4d68:	40001c00 	.word	0x40001c00
    4d6c:	00004719 	.word	0x00004719

00004d70 <system_gclk_chan_disable>:
    4d70:	b510      	push	{r4, lr}
    4d72:	0004      	movs	r4, r0
    4d74:	4b09      	ldr	r3, [pc, #36]	; (4d9c <system_gclk_chan_disable+0x2c>)
    4d76:	4798      	blx	r3
    4d78:	00a0      	lsls	r0, r4, #2
    4d7a:	4b09      	ldr	r3, [pc, #36]	; (4da0 <system_gclk_chan_disable+0x30>)
    4d7c:	469c      	mov	ip, r3
    4d7e:	4460      	add	r0, ip
    4d80:	2280      	movs	r2, #128	; 0x80
    4d82:	5883      	ldr	r3, [r0, r2]
    4d84:	2140      	movs	r1, #64	; 0x40
    4d86:	438b      	bics	r3, r1
    4d88:	5083      	str	r3, [r0, r2]
    4d8a:	3140      	adds	r1, #64	; 0x40
    4d8c:	3a40      	subs	r2, #64	; 0x40
    4d8e:	5843      	ldr	r3, [r0, r1]
    4d90:	421a      	tst	r2, r3
    4d92:	d1fc      	bne.n	4d8e <system_gclk_chan_disable+0x1e>
    4d94:	4b03      	ldr	r3, [pc, #12]	; (4da4 <system_gclk_chan_disable+0x34>)
    4d96:	4798      	blx	r3
    4d98:	bd10      	pop	{r4, pc}
    4d9a:	46c0      	nop			; (mov r8, r8)
    4d9c:	000046d9 	.word	0x000046d9
    4da0:	40001c00 	.word	0x40001c00
    4da4:	00004719 	.word	0x00004719

00004da8 <system_gclk_chan_set_config>:
    4da8:	b570      	push	{r4, r5, r6, lr}
    4daa:	0004      	movs	r4, r0
    4dac:	000d      	movs	r5, r1
    4dae:	4b05      	ldr	r3, [pc, #20]	; (4dc4 <system_gclk_chan_set_config+0x1c>)
    4db0:	4798      	blx	r3
    4db2:	782a      	ldrb	r2, [r5, #0]
    4db4:	230f      	movs	r3, #15
    4db6:	4013      	ands	r3, r2
    4db8:	3420      	adds	r4, #32
    4dba:	00a4      	lsls	r4, r4, #2
    4dbc:	4a02      	ldr	r2, [pc, #8]	; (4dc8 <system_gclk_chan_set_config+0x20>)
    4dbe:	50a3      	str	r3, [r4, r2]
    4dc0:	bd70      	pop	{r4, r5, r6, pc}
    4dc2:	46c0      	nop			; (mov r8, r8)
    4dc4:	00004d71 	.word	0x00004d71
    4dc8:	40001c00 	.word	0x40001c00

00004dcc <system_gclk_chan_get_hz>:
    4dcc:	b510      	push	{r4, lr}
    4dce:	0004      	movs	r4, r0
    4dd0:	4b06      	ldr	r3, [pc, #24]	; (4dec <system_gclk_chan_get_hz+0x20>)
    4dd2:	4798      	blx	r3
    4dd4:	3420      	adds	r4, #32
    4dd6:	00a4      	lsls	r4, r4, #2
    4dd8:	4b05      	ldr	r3, [pc, #20]	; (4df0 <system_gclk_chan_get_hz+0x24>)
    4dda:	58e4      	ldr	r4, [r4, r3]
    4ddc:	0724      	lsls	r4, r4, #28
    4dde:	0f24      	lsrs	r4, r4, #28
    4de0:	4b04      	ldr	r3, [pc, #16]	; (4df4 <system_gclk_chan_get_hz+0x28>)
    4de2:	4798      	blx	r3
    4de4:	0020      	movs	r0, r4
    4de6:	4b04      	ldr	r3, [pc, #16]	; (4df8 <system_gclk_chan_get_hz+0x2c>)
    4de8:	4798      	blx	r3
    4dea:	bd10      	pop	{r4, pc}
    4dec:	000046d9 	.word	0x000046d9
    4df0:	40001c00 	.word	0x40001c00
    4df4:	00004719 	.word	0x00004719
    4df8:	00004ccd 	.word	0x00004ccd

00004dfc <_system_pinmux_config>:
    4dfc:	b530      	push	{r4, r5, lr}
    4dfe:	78d3      	ldrb	r3, [r2, #3]
    4e00:	2b00      	cmp	r3, #0
    4e02:	d135      	bne.n	4e70 <_system_pinmux_config+0x74>
    4e04:	7813      	ldrb	r3, [r2, #0]
    4e06:	2b80      	cmp	r3, #128	; 0x80
    4e08:	d029      	beq.n	4e5e <_system_pinmux_config+0x62>
    4e0a:	061b      	lsls	r3, r3, #24
    4e0c:	2480      	movs	r4, #128	; 0x80
    4e0e:	0264      	lsls	r4, r4, #9
    4e10:	4323      	orrs	r3, r4
    4e12:	7854      	ldrb	r4, [r2, #1]
    4e14:	2502      	movs	r5, #2
    4e16:	43ac      	bics	r4, r5
    4e18:	d106      	bne.n	4e28 <_system_pinmux_config+0x2c>
    4e1a:	7894      	ldrb	r4, [r2, #2]
    4e1c:	2c00      	cmp	r4, #0
    4e1e:	d120      	bne.n	4e62 <_system_pinmux_config+0x66>
    4e20:	2480      	movs	r4, #128	; 0x80
    4e22:	02a4      	lsls	r4, r4, #10
    4e24:	4323      	orrs	r3, r4
    4e26:	6041      	str	r1, [r0, #4]
    4e28:	7854      	ldrb	r4, [r2, #1]
    4e2a:	3c01      	subs	r4, #1
    4e2c:	2c01      	cmp	r4, #1
    4e2e:	d91c      	bls.n	4e6a <_system_pinmux_config+0x6e>
    4e30:	040d      	lsls	r5, r1, #16
    4e32:	0c2d      	lsrs	r5, r5, #16
    4e34:	24a0      	movs	r4, #160	; 0xa0
    4e36:	05e4      	lsls	r4, r4, #23
    4e38:	432c      	orrs	r4, r5
    4e3a:	431c      	orrs	r4, r3
    4e3c:	6284      	str	r4, [r0, #40]	; 0x28
    4e3e:	0c0d      	lsrs	r5, r1, #16
    4e40:	24d0      	movs	r4, #208	; 0xd0
    4e42:	0624      	lsls	r4, r4, #24
    4e44:	432c      	orrs	r4, r5
    4e46:	431c      	orrs	r4, r3
    4e48:	6284      	str	r4, [r0, #40]	; 0x28
    4e4a:	78d4      	ldrb	r4, [r2, #3]
    4e4c:	2c00      	cmp	r4, #0
    4e4e:	d122      	bne.n	4e96 <_system_pinmux_config+0x9a>
    4e50:	035b      	lsls	r3, r3, #13
    4e52:	d51c      	bpl.n	4e8e <_system_pinmux_config+0x92>
    4e54:	7893      	ldrb	r3, [r2, #2]
    4e56:	2b01      	cmp	r3, #1
    4e58:	d01e      	beq.n	4e98 <_system_pinmux_config+0x9c>
    4e5a:	6141      	str	r1, [r0, #20]
    4e5c:	e017      	b.n	4e8e <_system_pinmux_config+0x92>
    4e5e:	2300      	movs	r3, #0
    4e60:	e7d7      	b.n	4e12 <_system_pinmux_config+0x16>
    4e62:	24c0      	movs	r4, #192	; 0xc0
    4e64:	02e4      	lsls	r4, r4, #11
    4e66:	4323      	orrs	r3, r4
    4e68:	e7dd      	b.n	4e26 <_system_pinmux_config+0x2a>
    4e6a:	4c0d      	ldr	r4, [pc, #52]	; (4ea0 <_system_pinmux_config+0xa4>)
    4e6c:	4023      	ands	r3, r4
    4e6e:	e7df      	b.n	4e30 <_system_pinmux_config+0x34>
    4e70:	6041      	str	r1, [r0, #4]
    4e72:	040c      	lsls	r4, r1, #16
    4e74:	0c24      	lsrs	r4, r4, #16
    4e76:	23a0      	movs	r3, #160	; 0xa0
    4e78:	05db      	lsls	r3, r3, #23
    4e7a:	4323      	orrs	r3, r4
    4e7c:	6283      	str	r3, [r0, #40]	; 0x28
    4e7e:	0c0c      	lsrs	r4, r1, #16
    4e80:	23d0      	movs	r3, #208	; 0xd0
    4e82:	061b      	lsls	r3, r3, #24
    4e84:	4323      	orrs	r3, r4
    4e86:	6283      	str	r3, [r0, #40]	; 0x28
    4e88:	78d3      	ldrb	r3, [r2, #3]
    4e8a:	2b00      	cmp	r3, #0
    4e8c:	d103      	bne.n	4e96 <_system_pinmux_config+0x9a>
    4e8e:	7853      	ldrb	r3, [r2, #1]
    4e90:	3b01      	subs	r3, #1
    4e92:	2b01      	cmp	r3, #1
    4e94:	d902      	bls.n	4e9c <_system_pinmux_config+0xa0>
    4e96:	bd30      	pop	{r4, r5, pc}
    4e98:	6181      	str	r1, [r0, #24]
    4e9a:	e7f8      	b.n	4e8e <_system_pinmux_config+0x92>
    4e9c:	6081      	str	r1, [r0, #8]
    4e9e:	e7fa      	b.n	4e96 <_system_pinmux_config+0x9a>
    4ea0:	fffbffff 	.word	0xfffbffff

00004ea4 <system_pinmux_pin_set_config>:
    4ea4:	b510      	push	{r4, lr}
    4ea6:	000a      	movs	r2, r1
    4ea8:	09c1      	lsrs	r1, r0, #7
    4eaa:	2300      	movs	r3, #0
    4eac:	2900      	cmp	r1, #0
    4eae:	d105      	bne.n	4ebc <system_pinmux_pin_set_config+0x18>
    4eb0:	0943      	lsrs	r3, r0, #5
    4eb2:	01db      	lsls	r3, r3, #7
    4eb4:	2182      	movs	r1, #130	; 0x82
    4eb6:	05c9      	lsls	r1, r1, #23
    4eb8:	468c      	mov	ip, r1
    4eba:	4463      	add	r3, ip
    4ebc:	241f      	movs	r4, #31
    4ebe:	4020      	ands	r0, r4
    4ec0:	2101      	movs	r1, #1
    4ec2:	4081      	lsls	r1, r0
    4ec4:	0018      	movs	r0, r3
    4ec6:	4b01      	ldr	r3, [pc, #4]	; (4ecc <system_pinmux_pin_set_config+0x28>)
    4ec8:	4798      	blx	r3
    4eca:	bd10      	pop	{r4, pc}
    4ecc:	00004dfd 	.word	0x00004dfd

00004ed0 <_system_dummy_init>:
    4ed0:	4770      	bx	lr
	...

00004ed4 <system_init>:
    4ed4:	b510      	push	{r4, lr}
    4ed6:	4b05      	ldr	r3, [pc, #20]	; (4eec <system_init+0x18>)
    4ed8:	4798      	blx	r3
    4eda:	4b05      	ldr	r3, [pc, #20]	; (4ef0 <system_init+0x1c>)
    4edc:	4798      	blx	r3
    4ede:	4b05      	ldr	r3, [pc, #20]	; (4ef4 <system_init+0x20>)
    4ee0:	4798      	blx	r3
    4ee2:	4b05      	ldr	r3, [pc, #20]	; (4ef8 <system_init+0x24>)
    4ee4:	4798      	blx	r3
    4ee6:	4b05      	ldr	r3, [pc, #20]	; (4efc <system_init+0x28>)
    4ee8:	4798      	blx	r3
    4eea:	bd10      	pop	{r4, pc}
    4eec:	000049f5 	.word	0x000049f5
    4ef0:	000046d5 	.word	0x000046d5
    4ef4:	00004ed1 	.word	0x00004ed1
    4ef8:	0000145d 	.word	0x0000145d
    4efc:	00004ed1 	.word	0x00004ed1

00004f00 <Dummy_Handler>:
    4f00:	e7fe      	b.n	4f00 <Dummy_Handler>
	...

00004f04 <Reset_Handler>:
    4f04:	b510      	push	{r4, lr}
    4f06:	4a17      	ldr	r2, [pc, #92]	; (4f64 <Reset_Handler+0x60>)
    4f08:	4b17      	ldr	r3, [pc, #92]	; (4f68 <Reset_Handler+0x64>)
    4f0a:	429a      	cmp	r2, r3
    4f0c:	d011      	beq.n	4f32 <Reset_Handler+0x2e>
    4f0e:	001a      	movs	r2, r3
    4f10:	4b16      	ldr	r3, [pc, #88]	; (4f6c <Reset_Handler+0x68>)
    4f12:	429a      	cmp	r2, r3
    4f14:	d20d      	bcs.n	4f32 <Reset_Handler+0x2e>
    4f16:	4a16      	ldr	r2, [pc, #88]	; (4f70 <Reset_Handler+0x6c>)
    4f18:	3303      	adds	r3, #3
    4f1a:	1a9b      	subs	r3, r3, r2
    4f1c:	089b      	lsrs	r3, r3, #2
    4f1e:	3301      	adds	r3, #1
    4f20:	009b      	lsls	r3, r3, #2
    4f22:	2200      	movs	r2, #0
    4f24:	4810      	ldr	r0, [pc, #64]	; (4f68 <Reset_Handler+0x64>)
    4f26:	490f      	ldr	r1, [pc, #60]	; (4f64 <Reset_Handler+0x60>)
    4f28:	588c      	ldr	r4, [r1, r2]
    4f2a:	5084      	str	r4, [r0, r2]
    4f2c:	3204      	adds	r2, #4
    4f2e:	429a      	cmp	r2, r3
    4f30:	d1fa      	bne.n	4f28 <Reset_Handler+0x24>
    4f32:	4a10      	ldr	r2, [pc, #64]	; (4f74 <Reset_Handler+0x70>)
    4f34:	4b10      	ldr	r3, [pc, #64]	; (4f78 <Reset_Handler+0x74>)
    4f36:	429a      	cmp	r2, r3
    4f38:	d20a      	bcs.n	4f50 <Reset_Handler+0x4c>
    4f3a:	43d3      	mvns	r3, r2
    4f3c:	490e      	ldr	r1, [pc, #56]	; (4f78 <Reset_Handler+0x74>)
    4f3e:	185b      	adds	r3, r3, r1
    4f40:	2103      	movs	r1, #3
    4f42:	438b      	bics	r3, r1
    4f44:	3304      	adds	r3, #4
    4f46:	189b      	adds	r3, r3, r2
    4f48:	2100      	movs	r1, #0
    4f4a:	c202      	stmia	r2!, {r1}
    4f4c:	4293      	cmp	r3, r2
    4f4e:	d1fc      	bne.n	4f4a <Reset_Handler+0x46>
    4f50:	4a0a      	ldr	r2, [pc, #40]	; (4f7c <Reset_Handler+0x78>)
    4f52:	21ff      	movs	r1, #255	; 0xff
    4f54:	4b0a      	ldr	r3, [pc, #40]	; (4f80 <Reset_Handler+0x7c>)
    4f56:	438b      	bics	r3, r1
    4f58:	6093      	str	r3, [r2, #8]
    4f5a:	4b0a      	ldr	r3, [pc, #40]	; (4f84 <Reset_Handler+0x80>)
    4f5c:	4798      	blx	r3
    4f5e:	4b0a      	ldr	r3, [pc, #40]	; (4f88 <Reset_Handler+0x84>)
    4f60:	4798      	blx	r3
    4f62:	e7fe      	b.n	4f62 <Reset_Handler+0x5e>
    4f64:	00009434 	.word	0x00009434
    4f68:	20000000 	.word	0x20000000
    4f6c:	200002bc 	.word	0x200002bc
    4f70:	20000004 	.word	0x20000004
    4f74:	200002bc 	.word	0x200002bc
    4f78:	200029f0 	.word	0x200029f0
    4f7c:	e000ed00 	.word	0xe000ed00
    4f80:	00000000 	.word	0x00000000
    4f84:	000085f5 	.word	0x000085f5
    4f88:	00005339 	.word	0x00005339

00004f8c <_sbrk>:
    4f8c:	0003      	movs	r3, r0
    4f8e:	4a06      	ldr	r2, [pc, #24]	; (4fa8 <_sbrk+0x1c>)
    4f90:	6812      	ldr	r2, [r2, #0]
    4f92:	2a00      	cmp	r2, #0
    4f94:	d004      	beq.n	4fa0 <_sbrk+0x14>
    4f96:	4a04      	ldr	r2, [pc, #16]	; (4fa8 <_sbrk+0x1c>)
    4f98:	6810      	ldr	r0, [r2, #0]
    4f9a:	18c3      	adds	r3, r0, r3
    4f9c:	6013      	str	r3, [r2, #0]
    4f9e:	4770      	bx	lr
    4fa0:	4902      	ldr	r1, [pc, #8]	; (4fac <_sbrk+0x20>)
    4fa2:	4a01      	ldr	r2, [pc, #4]	; (4fa8 <_sbrk+0x1c>)
    4fa4:	6011      	str	r1, [r2, #0]
    4fa6:	e7f6      	b.n	4f96 <_sbrk+0xa>
    4fa8:	20000340 	.word	0x20000340
    4fac:	200049f0 	.word	0x200049f0

00004fb0 <get_menu_mode_string>:
    for (uint8_t i = 0; i < 4; i++) {
        lcd_setCursor(0, i);
        lcd_printstr(menu_string_array[i]);
    }
}
void get_menu_mode_string(char *dest, uint8_t mode) {
    4fb0:	b510      	push	{r4, lr}
    switch(mode) {
    4fb2:	2901      	cmp	r1, #1
    4fb4:	d00d      	beq.n	4fd2 <get_menu_mode_string+0x22>
    4fb6:	2900      	cmp	r1, #0
    4fb8:	d006      	beq.n	4fc8 <get_menu_mode_string+0x18>
    4fba:	2902      	cmp	r1, #2
    4fbc:	d00e      	beq.n	4fdc <get_menu_mode_string+0x2c>
            break;
        case 2:
            strcpy(dest, "BOTH");
            break;
        default:
            strcpy(dest, "ERR");
    4fbe:	2204      	movs	r2, #4
    4fc0:	4909      	ldr	r1, [pc, #36]	; (4fe8 <get_menu_mode_string+0x38>)
    4fc2:	4b0a      	ldr	r3, [pc, #40]	; (4fec <get_menu_mode_string+0x3c>)
    4fc4:	4798      	blx	r3
            break;
    }
}
    4fc6:	e003      	b.n	4fd0 <get_menu_mode_string+0x20>
            strcpy(dest, "DMX");
    4fc8:	2204      	movs	r2, #4
    4fca:	4909      	ldr	r1, [pc, #36]	; (4ff0 <get_menu_mode_string+0x40>)
    4fcc:	4b07      	ldr	r3, [pc, #28]	; (4fec <get_menu_mode_string+0x3c>)
    4fce:	4798      	blx	r3
}
    4fd0:	bd10      	pop	{r4, pc}
            strcpy(dest, "MIDI");
    4fd2:	2205      	movs	r2, #5
    4fd4:	4907      	ldr	r1, [pc, #28]	; (4ff4 <get_menu_mode_string+0x44>)
    4fd6:	4b05      	ldr	r3, [pc, #20]	; (4fec <get_menu_mode_string+0x3c>)
    4fd8:	4798      	blx	r3
            break;
    4fda:	e7f9      	b.n	4fd0 <get_menu_mode_string+0x20>
            strcpy(dest, "BOTH");
    4fdc:	2205      	movs	r2, #5
    4fde:	4906      	ldr	r1, [pc, #24]	; (4ff8 <get_menu_mode_string+0x48>)
    4fe0:	4b02      	ldr	r3, [pc, #8]	; (4fec <get_menu_mode_string+0x3c>)
    4fe2:	4798      	blx	r3
            break;
    4fe4:	e7f4      	b.n	4fd0 <get_menu_mode_string+0x20>
    4fe6:	46c0      	nop			; (mov r8, r8)
    4fe8:	00009214 	.word	0x00009214
    4fec:	00008651 	.word	0x00008651
    4ff0:	00009200 	.word	0x00009200
    4ff4:	00009204 	.word	0x00009204
    4ff8:	0000920c 	.word	0x0000920c

00004ffc <get_menu_enable_string>:
            else
                * (tmp_string + i) = ' ';
    }
    sprintf(dest, "%s", tmp_string);
}
void get_menu_enable_string(char *dest, uint8_t mode) {
    4ffc:	b510      	push	{r4, lr}
    switch(mode) {
    4ffe:	2900      	cmp	r1, #0
    5000:	d002      	beq.n	5008 <get_menu_enable_string+0xc>
    5002:	2901      	cmp	r1, #1
    5004:	d005      	beq.n	5012 <get_menu_enable_string+0x16>
            break;
        case 1:
            strcpy(dest, "ON");
            break;
    }
}
    5006:	bd10      	pop	{r4, pc}
            strcpy(dest, "OFF");
    5008:	2204      	movs	r2, #4
    500a:	4904      	ldr	r1, [pc, #16]	; (501c <get_menu_enable_string+0x20>)
    500c:	4b04      	ldr	r3, [pc, #16]	; (5020 <get_menu_enable_string+0x24>)
    500e:	4798      	blx	r3
            break;
    5010:	e7f9      	b.n	5006 <get_menu_enable_string+0xa>
            strcpy(dest, "ON");
    5012:	2203      	movs	r2, #3
    5014:	4903      	ldr	r1, [pc, #12]	; (5024 <get_menu_enable_string+0x28>)
    5016:	4b02      	ldr	r3, [pc, #8]	; (5020 <get_menu_enable_string+0x24>)
    5018:	4798      	blx	r3
}
    501a:	e7f4      	b.n	5006 <get_menu_enable_string+0xa>
    501c:	000091f8 	.word	0x000091f8
    5020:	00008651 	.word	0x00008651
    5024:	000091fc 	.word	0x000091fc

00005028 <get_menu_bar_string>:
void get_menu_bar_string(char *dest, uint8_t value) {
    5028:	b5f0      	push	{r4, r5, r6, r7, lr}
    502a:	b085      	sub	sp, #20
    502c:	9001      	str	r0, [sp, #4]
    502e:	000e      	movs	r6, r1
    tmp_string[5] = 0;
    5030:	2300      	movs	r3, #0
    5032:	aa02      	add	r2, sp, #8
    5034:	7153      	strb	r3, [r2, #5]
    uint32_t tmp_value = value * 7 * 5 / 16;
    5036:	008b      	lsls	r3, r1, #2
    5038:	185b      	adds	r3, r3, r1
    503a:	00dc      	lsls	r4, r3, #3
    503c:	1ae3      	subs	r3, r4, r3
    503e:	17da      	asrs	r2, r3, #31
    5040:	240f      	movs	r4, #15
    5042:	4014      	ands	r4, r2
    5044:	18e4      	adds	r4, r4, r3
    5046:	1124      	asrs	r4, r4, #4
                * (tmp_string + i) = (tmp_value % 5) + 1;
    5048:	2105      	movs	r1, #5
    504a:	0020      	movs	r0, r4
    504c:	4b0f      	ldr	r3, [pc, #60]	; (508c <get_menu_bar_string+0x64>)
    504e:	4798      	blx	r3
    5050:	3101      	adds	r1, #1
    5052:	b2c8      	uxtb	r0, r1
    5054:	aa02      	add	r2, sp, #8
    5056:	2305      	movs	r3, #5
                * (tmp_string + i) = ' ';
    5058:	2520      	movs	r5, #32
            * (tmp_string + i) = 5;
    505a:	2705      	movs	r7, #5
    505c:	e00b      	b.n	5076 <get_menu_bar_string+0x4e>
            if(tmp_value >= (i * 5) && (tmp_value < (i * 5 + 5)) && value != 0)
    505e:	1f59      	subs	r1, r3, #5
    5060:	428c      	cmp	r4, r1
    5062:	d303      	bcc.n	506c <get_menu_bar_string+0x44>
    5064:	2e00      	cmp	r6, #0
    5066:	d001      	beq.n	506c <get_menu_bar_string+0x44>
                * (tmp_string + i) = (tmp_value % 5) + 1;
    5068:	7010      	strb	r0, [r2, #0]
    506a:	e000      	b.n	506e <get_menu_bar_string+0x46>
                * (tmp_string + i) = ' ';
    506c:	7015      	strb	r5, [r2, #0]
    506e:	3305      	adds	r3, #5
    5070:	3201      	adds	r2, #1
    for(uint8_t i = 0; i < 7; i++) {
    5072:	2b28      	cmp	r3, #40	; 0x28
    5074:	d003      	beq.n	507e <get_menu_bar_string+0x56>
        if(tmp_value >= ((i + 1) * 5))
    5076:	42a3      	cmp	r3, r4
    5078:	d8f1      	bhi.n	505e <get_menu_bar_string+0x36>
            * (tmp_string + i) = 5;
    507a:	7017      	strb	r7, [r2, #0]
    507c:	e7f7      	b.n	506e <get_menu_bar_string+0x46>
    sprintf(dest, "%s", tmp_string);
    507e:	a902      	add	r1, sp, #8
    5080:	9801      	ldr	r0, [sp, #4]
    5082:	4b03      	ldr	r3, [pc, #12]	; (5090 <get_menu_bar_string+0x68>)
    5084:	4798      	blx	r3
}
    5086:	b005      	add	sp, #20
    5088:	bdf0      	pop	{r4, r5, r6, r7, pc}
    508a:	46c0      	nop			; (mov r8, r8)
    508c:	00006065 	.word	0x00006065
    5090:	0000882d 	.word	0x0000882d

00005094 <get_menu_dmx_ch_string>:

void get_menu_dmx_ch_string(char *dest, uint8_t num) {
    5094:	b5f0      	push	{r4, r5, r6, r7, lr}
    5096:	b085      	sub	sp, #20
    5098:	9001      	str	r0, [sp, #4]
    509a:	000e      	movs	r6, r1
    509c:	4d12      	ldr	r5, [pc, #72]	; (50e8 <get_menu_dmx_ch_string+0x54>)
    uint8_t i;
    for(i = 0; i < 5; i++) {
    509e:	2400      	movs	r4, #0
        if(p_to_channels[i]->dmx_ch == num && p_to_channels[i]->enabled)break;
        else {
            sprintf(dest, "%d", dmx_values[num]);
    50a0:	4f12      	ldr	r7, [pc, #72]	; (50ec <get_menu_dmx_ch_string+0x58>)
    50a2:	e009      	b.n	50b8 <get_menu_dmx_ch_string+0x24>
    50a4:	5dba      	ldrb	r2, [r7, r6]
    50a6:	4912      	ldr	r1, [pc, #72]	; (50f0 <get_menu_dmx_ch_string+0x5c>)
    50a8:	9801      	ldr	r0, [sp, #4]
    50aa:	4b12      	ldr	r3, [pc, #72]	; (50f4 <get_menu_dmx_ch_string+0x60>)
    50ac:	4798      	blx	r3
    for(i = 0; i < 5; i++) {
    50ae:	3401      	adds	r4, #1
    50b0:	b2e4      	uxtb	r4, r4
    50b2:	3504      	adds	r5, #4
    50b4:	2c05      	cmp	r4, #5
    50b6:	d014      	beq.n	50e2 <get_menu_dmx_ch_string+0x4e>
        if(p_to_channels[i]->dmx_ch == num && p_to_channels[i]->enabled)break;
    50b8:	682b      	ldr	r3, [r5, #0]
    50ba:	685a      	ldr	r2, [r3, #4]
    50bc:	42b2      	cmp	r2, r6
    50be:	d1f1      	bne.n	50a4 <get_menu_dmx_ch_string+0x10>
    50c0:	785b      	ldrb	r3, [r3, #1]
    50c2:	2b00      	cmp	r3, #0
    50c4:	d0ee      	beq.n	50a4 <get_menu_dmx_ch_string+0x10>
        }
    }
    if(i == 5)return;
    50c6:	2c05      	cmp	r4, #5
    50c8:	d00b      	beq.n	50e2 <get_menu_dmx_ch_string+0x4e>
    char input_string[] = "IN ";
    50ca:	a903      	add	r1, sp, #12
    50cc:	4b0a      	ldr	r3, [pc, #40]	; (50f8 <get_menu_dmx_ch_string+0x64>)
    50ce:	9303      	str	r3, [sp, #12]
    input_string[2] = '0' + p_to_channels[i]->input_channel;
    50d0:	00a4      	lsls	r4, r4, #2
    50d2:	4b05      	ldr	r3, [pc, #20]	; (50e8 <get_menu_dmx_ch_string+0x54>)
    50d4:	58e3      	ldr	r3, [r4, r3]
    50d6:	7a1b      	ldrb	r3, [r3, #8]
    50d8:	3330      	adds	r3, #48	; 0x30
    50da:	708b      	strb	r3, [r1, #2]
    strcpy(dest, input_string);
    50dc:	9801      	ldr	r0, [sp, #4]
    50de:	4b07      	ldr	r3, [pc, #28]	; (50fc <get_menu_dmx_ch_string+0x68>)
    50e0:	4798      	blx	r3
    50e2:	b005      	add	sp, #20
    50e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    50e6:	46c0      	nop			; (mov r8, r8)
    50e8:	20002970 	.word	0x20002970
    50ec:	2000284c 	.word	0x2000284c
    50f0:	00009174 	.word	0x00009174
    50f4:	000087e9 	.word	0x000087e9
    50f8:	00204e49 	.word	0x00204e49
    50fc:	0000882d 	.word	0x0000882d

00005100 <NMI_Handler>:
    BREAKPOINT;
    5100:	46c0      	nop			; (mov r8, r8)
}
    5102:	4770      	bx	lr

00005104 <HardFault_Handler>:
    BREAKPOINT;
    5104:	46c0      	nop			; (mov r8, r8)
}
    5106:	4770      	bx	lr

00005108 <SVC_Handler>:
    BREAKPOINT;
    5108:	46c0      	nop			; (mov r8, r8)
}
    510a:	4770      	bx	lr

0000510c <PendSV_Handler>:
    BREAKPOINT;
    510c:	46c0      	nop			; (mov r8, r8)
}
    510e:	4770      	bx	lr

00005110 <SysTick_Handler>:
    BREAKPOINT;
    5110:	46c0      	nop			; (mov r8, r8)
}
    5112:	4770      	bx	lr

00005114 <select_device_mode>:
    switch (mode) {
    5114:	2801      	cmp	r0, #1
    5116:	d004      	beq.n	5122 <select_device_mode+0xe>
            return DMX;
    5118:	3802      	subs	r0, #2
    511a:	4243      	negs	r3, r0
    511c:	4158      	adcs	r0, r3
    511e:	3001      	adds	r0, #1
}
    5120:	4770      	bx	lr
            return TRIGGER;
    5122:	2000      	movs	r0, #0
    5124:	e7fc      	b.n	5120 <select_device_mode+0xc>
	...

00005128 <IO_init>:
void IO_init(void) {
    5128:	b5f0      	push	{r4, r5, r6, r7, lr}
    512a:	b085      	sub	sp, #20
	config->direction  = PORT_PIN_DIR_INPUT;
    512c:	2700      	movs	r7, #0
    512e:	466b      	mov	r3, sp
    5130:	731f      	strb	r7, [r3, #12]
	config->powersave  = false;
    5132:	739f      	strb	r7, [r3, #14]
    input_pin_no_pullup.input_pull = PORT_PIN_PULL_NONE;
    5134:	735f      	strb	r7, [r3, #13]
	config->direction  = PORT_PIN_DIR_INPUT;
    5136:	a902      	add	r1, sp, #8
    5138:	700f      	strb	r7, [r1, #0]
	config->input_pull = PORT_PIN_PULL_UP;
    513a:	2601      	movs	r6, #1
    513c:	704e      	strb	r6, [r1, #1]
	config->powersave  = false;
    513e:	708f      	strb	r7, [r1, #2]
	config->input_pull = PORT_PIN_PULL_UP;
    5140:	ad01      	add	r5, sp, #4
    5142:	706e      	strb	r6, [r5, #1]
	config->powersave  = false;
    5144:	70af      	strb	r7, [r5, #2]
    output_pin.direction = PORT_PIN_DIR_OUTPUT;
    5146:	702e      	strb	r6, [r5, #0]
    port_pin_set_config(PIN_SW1, &input_pin_pullup);
    5148:	200c      	movs	r0, #12
    514a:	4c2f      	ldr	r4, [pc, #188]	; (5208 <IO_init+0xe0>)
    514c:	47a0      	blx	r4
    port_pin_set_config(PIN_SW2, &input_pin_no_pullup);
    514e:	a903      	add	r1, sp, #12
    5150:	200d      	movs	r0, #13
    5152:	47a0      	blx	r4
    port_pin_set_config(PIN_ENC_B, &input_pin_no_pullup);
    5154:	a903      	add	r1, sp, #12
    5156:	2036      	movs	r0, #54	; 0x36
    5158:	47a0      	blx	r4
    port_pin_set_config(PIN_ENC_A, &input_pin_no_pullup);
    515a:	a903      	add	r1, sp, #12
    515c:	2037      	movs	r0, #55	; 0x37
    515e:	47a0      	blx	r4
    port_pin_set_config(PIN_EEPROM_WP, &output_pin);
    5160:	0029      	movs	r1, r5
    5162:	2018      	movs	r0, #24
    5164:	47a0      	blx	r4
    port_pin_set_config(PIN_LED_POWER, &output_pin);
    5166:	0029      	movs	r1, r5
    5168:	201c      	movs	r0, #28
    516a:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_D0, &output_pin);
    516c:	0029      	movs	r1, r5
    516e:	2026      	movs	r0, #38	; 0x26
    5170:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_D1, &output_pin);
    5172:	0029      	movs	r1, r5
    5174:	2025      	movs	r0, #37	; 0x25
    5176:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_D2, &output_pin);
    5178:	0029      	movs	r1, r5
    517a:	2024      	movs	r0, #36	; 0x24
    517c:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_D3, &output_pin);
    517e:	0029      	movs	r1, r5
    5180:	2023      	movs	r0, #35	; 0x23
    5182:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_D4, &output_pin);
    5184:	0029      	movs	r1, r5
    5186:	2022      	movs	r0, #34	; 0x22
    5188:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_D5, &output_pin);
    518a:	0029      	movs	r1, r5
    518c:	2021      	movs	r0, #33	; 0x21
    518e:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_D6, &output_pin);
    5190:	0029      	movs	r1, r5
    5192:	2020      	movs	r0, #32
    5194:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_D7, &output_pin);
    5196:	0029      	movs	r1, r5
    5198:	203f      	movs	r0, #63	; 0x3f
    519a:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_EN, &output_pin);
    519c:	0029      	movs	r1, r5
    519e:	2027      	movs	r0, #39	; 0x27
    51a0:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_RW, &output_pin);
    51a2:	0029      	movs	r1, r5
    51a4:	2028      	movs	r0, #40	; 0x28
    51a6:	47a0      	blx	r4
    port_pin_set_config(PIN_LCD_RS, &output_pin);
    51a8:	0029      	movs	r1, r5
    51aa:	2029      	movs	r0, #41	; 0x29
    51ac:	47a0      	blx	r4
    port_pin_set_config(PIN_DMX_DIR, &output_pin);
    51ae:	0029      	movs	r1, r5
    51b0:	2014      	movs	r0, #20
    51b2:	47a0      	blx	r4
		port_base->OUTCLR.reg = pin_mask;
    51b4:	2280      	movs	r2, #128	; 0x80
    51b6:	0452      	lsls	r2, r2, #17
    51b8:	2382      	movs	r3, #130	; 0x82
    51ba:	05db      	lsls	r3, r3, #23
    51bc:	615a      	str	r2, [r3, #20]
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->mux_position = SYSTEM_PINMUX_GPIO;
	config->direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
    51be:	466b      	mov	r3, sp
    51c0:	705f      	strb	r7, [r3, #1]
	config->input_pull   = SYSTEM_PINMUX_PIN_PULL_UP;
    51c2:	709e      	strb	r6, [r3, #2]
	config->powersave    = false;
    51c4:	70df      	strb	r7, [r3, #3]
    mux_config.mux_position = MUX_ADC0;
    51c6:	701e      	strb	r6, [r3, #0]
    system_pinmux_pin_set_config(PIN_ADC0, &mux_config);
    51c8:	4669      	mov	r1, sp
    51ca:	2003      	movs	r0, #3
    51cc:	4c0f      	ldr	r4, [pc, #60]	; (520c <IO_init+0xe4>)
    51ce:	47a0      	blx	r4
    mux_config.mux_position = MUX_ADC1;
    51d0:	466b      	mov	r3, sp
    51d2:	701e      	strb	r6, [r3, #0]
    system_pinmux_pin_set_config(PIN_ADC1, &mux_config);
    51d4:	4669      	mov	r1, sp
    51d6:	2004      	movs	r0, #4
    51d8:	47a0      	blx	r4
    mux_config.mux_position = MUX_ADC2;
    51da:	466b      	mov	r3, sp
    51dc:	701e      	strb	r6, [r3, #0]
    system_pinmux_pin_set_config(PIN_ADC2, &mux_config);
    51de:	4669      	mov	r1, sp
    51e0:	2005      	movs	r0, #5
    51e2:	47a0      	blx	r4
    mux_config.mux_position = MUX_ADC3;
    51e4:	466b      	mov	r3, sp
    51e6:	701e      	strb	r6, [r3, #0]
    system_pinmux_pin_set_config(PIN_ADC3, &mux_config);
    51e8:	4669      	mov	r1, sp
    51ea:	2006      	movs	r0, #6
    51ec:	47a0      	blx	r4
    mux_config.mux_position = MUX_ADC4;
    51ee:	466b      	mov	r3, sp
    51f0:	701e      	strb	r6, [r3, #0]
    system_pinmux_pin_set_config(PIN_ADC4, &mux_config);
    51f2:	4669      	mov	r1, sp
    51f4:	2007      	movs	r0, #7
    51f6:	47a0      	blx	r4
    mux_config.mux_position = MUX_LCD_VO;
    51f8:	466b      	mov	r3, sp
    51fa:	701e      	strb	r6, [r3, #0]
    system_pinmux_pin_set_config(PIN_LCD_VO, &mux_config);
    51fc:	4669      	mov	r1, sp
    51fe:	2002      	movs	r0, #2
    5200:	47a0      	blx	r4
}
    5202:	b005      	add	sp, #20
    5204:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5206:	46c0      	nop			; (mov r8, r8)
    5208:	00003501 	.word	0x00003501
    520c:	00004ea5 	.word	0x00004ea5

00005210 <configure_dac>:
void configure_dac(void) {
    5210:	b500      	push	{lr}
    5212:	b083      	sub	sp, #12
    dac_get_config_defaults(&config_dac);
    5214:	4668      	mov	r0, sp
    5216:	4b05      	ldr	r3, [pc, #20]	; (522c <configure_dac+0x1c>)
    5218:	4798      	blx	r3
    config_dac.reference = DAC_REFERENCE_AVCC;
    521a:	2340      	movs	r3, #64	; 0x40
    521c:	466a      	mov	r2, sp
    521e:	7013      	strb	r3, [r2, #0]
    dac_init(&dac_instance, DAC, &config_dac);
    5220:	4903      	ldr	r1, [pc, #12]	; (5230 <configure_dac+0x20>)
    5222:	4804      	ldr	r0, [pc, #16]	; (5234 <configure_dac+0x24>)
    5224:	4b04      	ldr	r3, [pc, #16]	; (5238 <configure_dac+0x28>)
    5226:	4798      	blx	r3
}
    5228:	b003      	add	sp, #12
    522a:	bd00      	pop	{pc}
    522c:	0000219d 	.word	0x0000219d
    5230:	42005400 	.word	0x42005400
    5234:	2000294c 	.word	0x2000294c
    5238:	000021b1 	.word	0x000021b1

0000523c <configure_dac_channel>:
void configure_dac_channel(void) {
    523c:	b510      	push	{r4, lr}
    523e:	b082      	sub	sp, #8
    dac_chan_get_config_defaults(&config_dac_chan);
    5240:	a801      	add	r0, sp, #4
    5242:	4b07      	ldr	r3, [pc, #28]	; (5260 <configure_dac_channel+0x24>)
    5244:	4798      	blx	r3
    dac_chan_set_config(&dac_instance, DAC_CHANNEL_0, &config_dac_chan);
    5246:	4c07      	ldr	r4, [pc, #28]	; (5264 <configure_dac_channel+0x28>)
    5248:	aa01      	add	r2, sp, #4
    524a:	2100      	movs	r1, #0
    524c:	0020      	movs	r0, r4
    524e:	4b06      	ldr	r3, [pc, #24]	; (5268 <configure_dac_channel+0x2c>)
    5250:	4798      	blx	r3
    dac_chan_enable(&dac_instance, DAC_CHANNEL_0);
    5252:	2100      	movs	r1, #0
    5254:	0020      	movs	r0, r4
    5256:	4b05      	ldr	r3, [pc, #20]	; (526c <configure_dac_channel+0x30>)
    5258:	4798      	blx	r3
}
    525a:	b002      	add	sp, #8
    525c:	bd10      	pop	{r4, pc}
    525e:	46c0      	nop			; (mov r8, r8)
    5260:	000022c1 	.word	0x000022c1
    5264:	2000294c 	.word	0x2000294c
    5268:	000022c3 	.word	0x000022c3
    526c:	000022c5 	.word	0x000022c5

00005270 <button_handler>:
void button_handler(TIPKA t, STATE *s) {
    5270:	b570      	push	{r4, r5, r6, lr}
    5272:	000c      	movs	r4, r1
    key_pressed = 1;
    5274:	2201      	movs	r2, #1
    5276:	4b13      	ldr	r3, [pc, #76]	; (52c4 <button_handler+0x54>)
    5278:	701a      	strb	r2, [r3, #0]
    switch (t) {
    527a:	2801      	cmp	r0, #1
    527c:	d021      	beq.n	52c2 <button_handler+0x52>
    527e:	2802      	cmp	r0, #2
    5280:	d11c      	bne.n	52bc <button_handler+0x4c>
            if (get_p_to_item(selected_menu)->type == TYPE_MENU) {
    5282:	4b11      	ldr	r3, [pc, #68]	; (52c8 <button_handler+0x58>)
    5284:	6818      	ldr	r0, [r3, #0]
    5286:	4b11      	ldr	r3, [pc, #68]	; (52cc <button_handler+0x5c>)
    5288:	4798      	blx	r3
    528a:	7803      	ldrb	r3, [r0, #0]
    528c:	2b04      	cmp	r3, #4
    528e:	d007      	beq.n	52a0 <button_handler+0x30>
                if (*s == EDIT)
    5290:	7823      	ldrb	r3, [r4, #0]
    5292:	2b01      	cmp	r3, #1
    5294:	d00f      	beq.n	52b6 <button_handler+0x46>
                    if (*s == SCROLL)
    5296:	2b00      	cmp	r3, #0
    5298:	d113      	bne.n	52c2 <button_handler+0x52>
                        *s = EDIT;
    529a:	3301      	adds	r3, #1
    529c:	7023      	strb	r3, [r4, #0]
    529e:	e010      	b.n	52c2 <button_handler+0x52>
                menu_swap(&selected_menu, (MENU *)(get_p_to_item(selected_menu)->variable));
    52a0:	4d09      	ldr	r5, [pc, #36]	; (52c8 <button_handler+0x58>)
    52a2:	6828      	ldr	r0, [r5, #0]
    52a4:	4b09      	ldr	r3, [pc, #36]	; (52cc <button_handler+0x5c>)
    52a6:	4798      	blx	r3
    52a8:	6901      	ldr	r1, [r0, #16]
    52aa:	0028      	movs	r0, r5
    52ac:	4b08      	ldr	r3, [pc, #32]	; (52d0 <button_handler+0x60>)
    52ae:	4798      	blx	r3
                *s = SCROLL;
    52b0:	2300      	movs	r3, #0
    52b2:	7023      	strb	r3, [r4, #0]
    52b4:	e005      	b.n	52c2 <button_handler+0x52>
                    *s = SCROLL;
    52b6:	2300      	movs	r3, #0
    52b8:	7023      	strb	r3, [r4, #0]
    52ba:	e002      	b.n	52c2 <button_handler+0x52>
            key_pressed = 0;
    52bc:	2200      	movs	r2, #0
    52be:	4b01      	ldr	r3, [pc, #4]	; (52c4 <button_handler+0x54>)
    52c0:	701a      	strb	r2, [r3, #0]
}
    52c2:	bd70      	pop	{r4, r5, r6, pc}
    52c4:	2000001c 	.word	0x2000001c
    52c8:	20000254 	.word	0x20000254
    52cc:	00003ce9 	.word	0x00003ce9
    52d0:	0000420d 	.word	0x0000420d

000052d4 <menu_draw>:
void menu_draw(void) {
    52d4:	b5f0      	push	{r4, r5, r6, r7, lr}
    52d6:	b097      	sub	sp, #92	; 0x5c
    52d8:	ad01      	add	r5, sp, #4
    52da:	ae16      	add	r6, sp, #88	; 0x58
    52dc:	0028      	movs	r0, r5
            menu_string_array[i][j] = ' ';
    52de:	2120      	movs	r1, #32
        menu_string_array[i][20] = 0;
    52e0:	2400      	movs	r4, #0
    52e2:	0002      	movs	r2, r0
    52e4:	3214      	adds	r2, #20
void menu_draw(void) {
    52e6:	0003      	movs	r3, r0
            menu_string_array[i][j] = ' ';
    52e8:	7019      	strb	r1, [r3, #0]
    52ea:	3301      	adds	r3, #1
        for (uint8_t j = 0; j < 20; j++)
    52ec:	4293      	cmp	r3, r2
    52ee:	d1fb      	bne.n	52e8 <menu_draw+0x14>
        menu_string_array[i][20] = 0;
    52f0:	7504      	strb	r4, [r0, #20]
    52f2:	3015      	adds	r0, #21
    for (uint8_t i = 0; i < 4; i++) {
    52f4:	42b0      	cmp	r0, r6
    52f6:	d1f4      	bne.n	52e2 <menu_draw+0xe>
    menu_whole_string(selected_menu, menu_string_array, state);
    52f8:	4b0a      	ldr	r3, [pc, #40]	; (5324 <menu_draw+0x50>)
    52fa:	781a      	ldrb	r2, [r3, #0]
    52fc:	4b0a      	ldr	r3, [pc, #40]	; (5328 <menu_draw+0x54>)
    52fe:	6818      	ldr	r0, [r3, #0]
    5300:	a901      	add	r1, sp, #4
    5302:	4b0a      	ldr	r3, [pc, #40]	; (532c <menu_draw+0x58>)
    5304:	4798      	blx	r3
    for (uint8_t i = 0; i < 4; i++) {
    5306:	2400      	movs	r4, #0
        lcd_setCursor(0, i);
    5308:	4f09      	ldr	r7, [pc, #36]	; (5330 <menu_draw+0x5c>)
        lcd_printstr(menu_string_array[i]);
    530a:	4e0a      	ldr	r6, [pc, #40]	; (5334 <menu_draw+0x60>)
        lcd_setCursor(0, i);
    530c:	0021      	movs	r1, r4
    530e:	2000      	movs	r0, #0
    5310:	47b8      	blx	r7
        lcd_printstr(menu_string_array[i]);
    5312:	0028      	movs	r0, r5
    5314:	47b0      	blx	r6
    for (uint8_t i = 0; i < 4; i++) {
    5316:	3401      	adds	r4, #1
    5318:	b2e4      	uxtb	r4, r4
    531a:	3515      	adds	r5, #21
    531c:	2c04      	cmp	r4, #4
    531e:	d1f5      	bne.n	530c <menu_draw+0x38>
}
    5320:	b017      	add	sp, #92	; 0x5c
    5322:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5324:	200017d4 	.word	0x200017d4
    5328:	20000254 	.word	0x20000254
    532c:	00003f75 	.word	0x00003f75
    5330:	00000479 	.word	0x00000479
    5334:	00000515 	.word	0x00000515

00005338 <main>:
int main(void) {
    5338:	b5f0      	push	{r4, r5, r6, r7, lr}
    533a:	46de      	mov	lr, fp
    533c:	4657      	mov	r7, sl
    533e:	464e      	mov	r6, r9
    5340:	4645      	mov	r5, r8
    5342:	b5e0      	push	{r5, r6, r7, lr}
    5344:	4cee      	ldr	r4, [pc, #952]	; (5700 <main+0x3c8>)
    5346:	44a5      	add	sp, r4
    system_init();
    5348:	4bee      	ldr	r3, [pc, #952]	; (5704 <main+0x3cc>)
    534a:	4798      	blx	r3
    delay_init();
    534c:	4bee      	ldr	r3, [pc, #952]	; (5708 <main+0x3d0>)
    534e:	4798      	blx	r3
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
    5350:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
    5352:	f3bf 8f5f 	dmb	sy
    Disable_global_interrupt();
    5356:	2200      	movs	r2, #0
    5358:	4bec      	ldr	r3, [pc, #944]	; (570c <main+0x3d4>)
    535a:	701a      	strb	r2, [r3, #0]
    535c:	4cec      	ldr	r4, [pc, #944]	; (5710 <main+0x3d8>)
    535e:	4ded      	ldr	r5, [pc, #948]	; (5714 <main+0x3dc>)
    5360:	230a      	movs	r3, #10
    5362:	4698      	mov	r8, r3
    for(uint8_t i = 0; i < 5; i++) {
    5364:	2600      	movs	r6, #0
        adsr_init(adsr_channels + i, 1);
    5366:	4bec      	ldr	r3, [pc, #944]	; (5718 <main+0x3e0>)
    5368:	469a      	mov	sl, r3
        adsr_channels[i].attack = 100;
    536a:	2764      	movs	r7, #100	; 0x64
        p_to_channels[i] = trigger_channels + i;
    536c:	4beb      	ldr	r3, [pc, #940]	; (571c <main+0x3e4>)
    536e:	4699      	mov	r9, r3
        adsr_init(adsr_channels + i, 1);
    5370:	2101      	movs	r1, #1
    5372:	0028      	movs	r0, r5
    5374:	47d0      	blx	sl
        adsr_channels[i].attack = 100;
    5376:	60af      	str	r7, [r5, #8]
        adsr_channels[i].decay = 100;
    5378:	612f      	str	r7, [r5, #16]
        adsr_channels[i].sustain = 100;
    537a:	61af      	str	r7, [r5, #24]
        adsr_channels[i].release = 100;
    537c:	626f      	str	r7, [r5, #36]	; 0x24
        adsr_channels[i].sustain_level = 127;
    537e:	237f      	movs	r3, #127	; 0x7f
    5380:	61eb      	str	r3, [r5, #28]
        trigger_channels[i].adsr = adsr_channels + i;
    5382:	60e5      	str	r5, [r4, #12]
        p_to_channels[i] = trigger_channels + i;
    5384:	4643      	mov	r3, r8
    5386:	009b      	lsls	r3, r3, #2
    5388:	3b28      	subs	r3, #40	; 0x28
    538a:	464a      	mov	r2, r9
    538c:	50d4      	str	r4, [r2, r3]
        p_to_channels[i]->dmx_ch = i + 10;
    538e:	4643      	mov	r3, r8
    5390:	6063      	str	r3, [r4, #4]
        p_to_channels[i]->note = MIDI_NOTE_A4;
    5392:	2345      	movs	r3, #69	; 0x45
    5394:	72a3      	strb	r3, [r4, #10]
        p_to_channels[i]->midi_ch = i + 1;
    5396:	3601      	adds	r6, #1
    5398:	b2f6      	uxtb	r6, r6
    539a:	7266      	strb	r6, [r4, #9]
        p_to_channels[i]->input_channel = i + 1;
    539c:	7226      	strb	r6, [r4, #8]
        p_to_channels[i]->enabled = 1;
    539e:	3b44      	subs	r3, #68	; 0x44
    53a0:	7063      	strb	r3, [r4, #1]
        p_to_channels[i]->level = 16;
    53a2:	330f      	adds	r3, #15
    53a4:	7023      	strb	r3, [r4, #0]
    53a6:	3530      	adds	r5, #48	; 0x30
    53a8:	3414      	adds	r4, #20
    53aa:	3b0f      	subs	r3, #15
    53ac:	469c      	mov	ip, r3
    53ae:	44e0      	add	r8, ip
    for(uint8_t i = 0; i < 5; i++) {
    53b0:	2e05      	cmp	r6, #5
    53b2:	d1dd      	bne.n	5370 <main+0x38>
    configure_i2c();
    53b4:	4bda      	ldr	r3, [pc, #872]	; (5720 <main+0x3e8>)
    53b6:	4798      	blx	r3
    configure_ac(trigger_channels);
    53b8:	4cd5      	ldr	r4, [pc, #852]	; (5710 <main+0x3d8>)
    53ba:	0020      	movs	r0, r4
    53bc:	4bd9      	ldr	r3, [pc, #868]	; (5724 <main+0x3ec>)
    53be:	4798      	blx	r3
    IO_init();
    53c0:	4bd9      	ldr	r3, [pc, #868]	; (5728 <main+0x3f0>)
    53c2:	4798      	blx	r3
    lcd_begin();
    53c4:	4bd9      	ldr	r3, [pc, #868]	; (572c <main+0x3f4>)
    53c6:	4798      	blx	r3
    delay_ms(100); //wait for LCD to set up
    53c8:	2000      	movs	r0, #0
    53ca:	4bd9      	ldr	r3, [pc, #868]	; (5730 <main+0x3f8>)
    53cc:	4798      	blx	r3
    53ce:	2264      	movs	r2, #100	; 0x64
    53d0:	2300      	movs	r3, #0
    53d2:	2100      	movs	r1, #0
    53d4:	4dd7      	ldr	r5, [pc, #860]	; (5734 <main+0x3fc>)
    53d6:	47a8      	blx	r5
    53d8:	4ad7      	ldr	r2, [pc, #860]	; (5738 <main+0x400>)
    53da:	2300      	movs	r3, #0
    53dc:	1880      	adds	r0, r0, r2
    53de:	4159      	adcs	r1, r3
    53e0:	4ad6      	ldr	r2, [pc, #856]	; (573c <main+0x404>)
    53e2:	2300      	movs	r3, #0
    53e4:	4dd6      	ldr	r5, [pc, #856]	; (5740 <main+0x408>)
    53e6:	47a8      	blx	r5
    53e8:	4bd6      	ldr	r3, [pc, #856]	; (5744 <main+0x40c>)
    53ea:	4798      	blx	r3
    lcd_noCursor();
    53ec:	4bd6      	ldr	r3, [pc, #856]	; (5748 <main+0x410>)
    53ee:	4798      	blx	r3
    configure_dac();
    53f0:	4bd6      	ldr	r3, [pc, #856]	; (574c <main+0x414>)
    53f2:	4798      	blx	r3
    configure_dac_channel();
    53f4:	4bd6      	ldr	r3, [pc, #856]	; (5750 <main+0x418>)
    53f6:	4798      	blx	r3
    configure_USB();
    53f8:	4bd6      	ldr	r3, [pc, #856]	; (5754 <main+0x41c>)
    53fa:	4798      	blx	r3
    configure_DMX();
    53fc:	4bd6      	ldr	r3, [pc, #856]	; (5758 <main+0x420>)
    53fe:	4798      	blx	r3
    configure_tc0();
    5400:	4bd6      	ldr	r3, [pc, #856]	; (575c <main+0x424>)
    5402:	4798      	blx	r3
    dac_enable(&dac_instance);
    5404:	48d6      	ldr	r0, [pc, #856]	; (5760 <main+0x428>)
    5406:	4bd7      	ldr	r3, [pc, #860]	; (5764 <main+0x42c>)
    5408:	4798      	blx	r3
    lcd_create_bar_charts();
    540a:	4bd7      	ldr	r3, [pc, #860]	; (5768 <main+0x430>)
    540c:	4798      	blx	r3
    configure_tcc0();
    540e:	4bd7      	ldr	r3, [pc, #860]	; (576c <main+0x434>)
    5410:	4798      	blx	r3
    configure_tcc0_callbacks(adsr_channels);
    5412:	48c0      	ldr	r0, [pc, #768]	; (5714 <main+0x3dc>)
    5414:	4bd6      	ldr	r3, [pc, #856]	; (5770 <main+0x438>)
    5416:	4798      	blx	r3
    configure_adc0(trigger_channels);
    5418:	0020      	movs	r0, r4
    541a:	4bd6      	ldr	r3, [pc, #856]	; (5774 <main+0x43c>)
    541c:	4798      	blx	r3
    541e:	4bd6      	ldr	r3, [pc, #856]	; (5778 <main+0x440>)
    5420:	469b      	mov	fp, r3
    5422:	1c5a      	adds	r2, r3, #1
    5424:	32ff      	adds	r2, #255	; 0xff
    5426:	0019      	movs	r1, r3
        dmx_values[i] = 0;
    5428:	2300      	movs	r3, #0
    542a:	700b      	strb	r3, [r1, #0]
    542c:	3101      	adds	r1, #1
    for (uint16_t i = 0; i < sizeof(dmx_values); i++) {
    542e:	4291      	cmp	r1, r2
    5430:	d1fb      	bne.n	542a <main+0xf2>
    5432:	910b      	str	r1, [sp, #44]	; 0x2c
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
    5434:	4bd1      	ldr	r3, [pc, #836]	; (577c <main+0x444>)
    5436:	21c3      	movs	r1, #195	; 0xc3
    5438:	0089      	lsls	r1, r1, #2
    543a:	585a      	ldr	r2, [r3, r1]
    543c:	20ff      	movs	r0, #255	; 0xff
    543e:	4382      	bics	r2, r0
    5440:	387f      	subs	r0, #127	; 0x7f
    5442:	4302      	orrs	r2, r0
    5444:	505a      	str	r2, [r3, r1]
    5446:	20c6      	movs	r0, #198	; 0xc6
    5448:	0080      	lsls	r0, r0, #2
    544a:	581a      	ldr	r2, [r3, r0]
    544c:	0212      	lsls	r2, r2, #8
    544e:	0a12      	lsrs	r2, r2, #8
    5450:	501a      	str	r2, [r3, r0]
    5452:	581a      	ldr	r2, [r3, r0]
    5454:	4cca      	ldr	r4, [pc, #808]	; (5780 <main+0x448>)
    5456:	4014      	ands	r4, r2
    5458:	2280      	movs	r2, #128	; 0x80
    545a:	01d2      	lsls	r2, r2, #7
    545c:	4322      	orrs	r2, r4
    545e:	501a      	str	r2, [r3, r0]
    5460:	585a      	ldr	r2, [r3, r1]
    5462:	48c8      	ldr	r0, [pc, #800]	; (5784 <main+0x44c>)
    5464:	4010      	ands	r0, r2
    5466:	2280      	movs	r2, #128	; 0x80
    5468:	0412      	lsls	r2, r2, #16
    546a:	4302      	orrs	r2, r0
    546c:	505a      	str	r2, [r3, r1]
    Enable_global_interrupt();
    546e:	2201      	movs	r2, #1
    5470:	4ba6      	ldr	r3, [pc, #664]	; (570c <main+0x3d4>)
    5472:	701a      	strb	r2, [r3, #0]
    5474:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    5478:	b662      	cpsie	i
    memory_init();
    547a:	4bc3      	ldr	r3, [pc, #780]	; (5788 <main+0x450>)
    547c:	4798      	blx	r3
    547e:	aba4      	add	r3, sp, #656	; 0x290
    5480:	469a      	mov	sl, r3
    5482:	afb4      	add	r7, sp, #720	; 0x2d0
    5484:	001d      	movs	r5, r3
        p_to_dmx_group_menus[i] = (MENU *)malloc(sizeof(MENU));
    5486:	24bc      	movs	r4, #188	; 0xbc
    5488:	00a4      	lsls	r4, r4, #2
    548a:	4ec0      	ldr	r6, [pc, #768]	; (578c <main+0x454>)
    548c:	0020      	movs	r0, r4
    548e:	47b0      	blx	r6
    5490:	c501      	stmia	r5!, {r0}
    for (uint8_t i = 0; i < 16; i++) {
    5492:	42bd      	cmp	r5, r7
    5494:	d1fa      	bne.n	548c <main+0x154>
    write_memory(&preset1, 0);
    5496:	2100      	movs	r1, #0
    5498:	48bd      	ldr	r0, [pc, #756]	; (5790 <main+0x458>)
    549a:	4bbe      	ldr	r3, [pc, #760]	; (5794 <main+0x45c>)
    549c:	4798      	blx	r3
    read_memory(&preset2, 0);
    549e:	2100      	movs	r1, #0
    54a0:	a81c      	add	r0, sp, #112	; 0x70
    54a2:	4bbd      	ldr	r3, [pc, #756]	; (5798 <main+0x460>)
    54a4:	4798      	blx	r3
    device_settings.mode = 2;
    54a6:	4bbd      	ldr	r3, [pc, #756]	; (579c <main+0x464>)
    54a8:	4699      	mov	r9, r3
    54aa:	2302      	movs	r3, #2
    54ac:	464a      	mov	r2, r9
    54ae:	70d3      	strb	r3, [r2, #3]
    menu_create_item(&tmp_item, "SETTINGS", TYPE_MENU, "", (void *)&settings_menu, 0, 0, NULL);
    54b0:	2300      	movs	r3, #0
    54b2:	4698      	mov	r8, r3
    54b4:	9303      	str	r3, [sp, #12]
    54b6:	2400      	movs	r4, #0
    54b8:	9402      	str	r4, [sp, #8]
    54ba:	9401      	str	r4, [sp, #4]
    54bc:	4bb8      	ldr	r3, [pc, #736]	; (57a0 <main+0x468>)
    54be:	9300      	str	r3, [sp, #0]
    54c0:	4bb8      	ldr	r3, [pc, #736]	; (57a4 <main+0x46c>)
    54c2:	2204      	movs	r2, #4
    54c4:	49b8      	ldr	r1, [pc, #736]	; (57a8 <main+0x470>)
    54c6:	a811      	add	r0, sp, #68	; 0x44
    54c8:	4eb8      	ldr	r6, [pc, #736]	; (57ac <main+0x474>)
    54ca:	47b0      	blx	r6
    menu_add_item(&main_menu, tmp_item);
    54cc:	ab14      	add	r3, sp, #80	; 0x50
    54ce:	466a      	mov	r2, sp
    54d0:	cb23      	ldmia	r3!, {r0, r1, r5}
    54d2:	c223      	stmia	r2!, {r0, r1, r5}
    54d4:	cb23      	ldmia	r3!, {r0, r1, r5}
    54d6:	c223      	stmia	r2!, {r0, r1, r5}
    54d8:	cb03      	ldmia	r3!, {r0, r1}
    54da:	c203      	stmia	r2!, {r0, r1}
    54dc:	9911      	ldr	r1, [sp, #68]	; 0x44
    54de:	9a12      	ldr	r2, [sp, #72]	; 0x48
    54e0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    54e2:	48b3      	ldr	r0, [pc, #716]	; (57b0 <main+0x478>)
    54e4:	4db3      	ldr	r5, [pc, #716]	; (57b4 <main+0x47c>)
    54e6:	47a8      	blx	r5
    menu_create_item(&tmp_item, "CHANNEL 1", TYPE_MENU, "", (void *)p_to_menus[0], 0, 0, NULL);
    54e8:	4643      	mov	r3, r8
    54ea:	9303      	str	r3, [sp, #12]
    54ec:	9402      	str	r4, [sp, #8]
    54ee:	9401      	str	r4, [sp, #4]
    54f0:	4bb1      	ldr	r3, [pc, #708]	; (57b8 <main+0x480>)
    54f2:	681b      	ldr	r3, [r3, #0]
    54f4:	9300      	str	r3, [sp, #0]
    54f6:	4bab      	ldr	r3, [pc, #684]	; (57a4 <main+0x46c>)
    54f8:	2204      	movs	r2, #4
    54fa:	49b0      	ldr	r1, [pc, #704]	; (57bc <main+0x484>)
    54fc:	a811      	add	r0, sp, #68	; 0x44
    54fe:	47b0      	blx	r6
    menu_add_item(&main_menu, tmp_item);
    5500:	ab14      	add	r3, sp, #80	; 0x50
    5502:	466a      	mov	r2, sp
    5504:	cb83      	ldmia	r3!, {r0, r1, r7}
    5506:	c283      	stmia	r2!, {r0, r1, r7}
    5508:	cb83      	ldmia	r3!, {r0, r1, r7}
    550a:	c283      	stmia	r2!, {r0, r1, r7}
    550c:	cb03      	ldmia	r3!, {r0, r1}
    550e:	c203      	stmia	r2!, {r0, r1}
    5510:	9911      	ldr	r1, [sp, #68]	; 0x44
    5512:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5514:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5516:	48a6      	ldr	r0, [pc, #664]	; (57b0 <main+0x478>)
    5518:	47a8      	blx	r5
    menu_create_item(&tmp_item, "CHANNEL 2", TYPE_MENU, "", (void *)p_to_menus[1], 0, 0, NULL);
    551a:	4643      	mov	r3, r8
    551c:	9303      	str	r3, [sp, #12]
    551e:	9402      	str	r4, [sp, #8]
    5520:	9401      	str	r4, [sp, #4]
    5522:	4ba5      	ldr	r3, [pc, #660]	; (57b8 <main+0x480>)
    5524:	685b      	ldr	r3, [r3, #4]
    5526:	9300      	str	r3, [sp, #0]
    5528:	4b9e      	ldr	r3, [pc, #632]	; (57a4 <main+0x46c>)
    552a:	2204      	movs	r2, #4
    552c:	49a4      	ldr	r1, [pc, #656]	; (57c0 <main+0x488>)
    552e:	a811      	add	r0, sp, #68	; 0x44
    5530:	47b0      	blx	r6
    menu_add_item(&main_menu, tmp_item);
    5532:	ab14      	add	r3, sp, #80	; 0x50
    5534:	466a      	mov	r2, sp
    5536:	cb83      	ldmia	r3!, {r0, r1, r7}
    5538:	c283      	stmia	r2!, {r0, r1, r7}
    553a:	cb83      	ldmia	r3!, {r0, r1, r7}
    553c:	c283      	stmia	r2!, {r0, r1, r7}
    553e:	cb03      	ldmia	r3!, {r0, r1}
    5540:	c203      	stmia	r2!, {r0, r1}
    5542:	9911      	ldr	r1, [sp, #68]	; 0x44
    5544:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5546:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5548:	4899      	ldr	r0, [pc, #612]	; (57b0 <main+0x478>)
    554a:	47a8      	blx	r5
    menu_create_item(&tmp_item, "CHANNEL 3", TYPE_MENU, "", (void *)p_to_menus[2], 0, 0, NULL);
    554c:	4643      	mov	r3, r8
    554e:	9303      	str	r3, [sp, #12]
    5550:	9402      	str	r4, [sp, #8]
    5552:	9401      	str	r4, [sp, #4]
    5554:	4b98      	ldr	r3, [pc, #608]	; (57b8 <main+0x480>)
    5556:	689b      	ldr	r3, [r3, #8]
    5558:	9300      	str	r3, [sp, #0]
    555a:	4b92      	ldr	r3, [pc, #584]	; (57a4 <main+0x46c>)
    555c:	2204      	movs	r2, #4
    555e:	4999      	ldr	r1, [pc, #612]	; (57c4 <main+0x48c>)
    5560:	a811      	add	r0, sp, #68	; 0x44
    5562:	47b0      	blx	r6
    menu_add_item(&main_menu, tmp_item);
    5564:	ab14      	add	r3, sp, #80	; 0x50
    5566:	466a      	mov	r2, sp
    5568:	cb83      	ldmia	r3!, {r0, r1, r7}
    556a:	c283      	stmia	r2!, {r0, r1, r7}
    556c:	cb83      	ldmia	r3!, {r0, r1, r7}
    556e:	c283      	stmia	r2!, {r0, r1, r7}
    5570:	cb03      	ldmia	r3!, {r0, r1}
    5572:	c203      	stmia	r2!, {r0, r1}
    5574:	9911      	ldr	r1, [sp, #68]	; 0x44
    5576:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5578:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    557a:	488d      	ldr	r0, [pc, #564]	; (57b0 <main+0x478>)
    557c:	47a8      	blx	r5
    menu_create_item(&tmp_item, "CHANNEL 4", TYPE_MENU, "", (void *)p_to_menus[3], 0, 0, NULL);
    557e:	4643      	mov	r3, r8
    5580:	9303      	str	r3, [sp, #12]
    5582:	9402      	str	r4, [sp, #8]
    5584:	9401      	str	r4, [sp, #4]
    5586:	4b8c      	ldr	r3, [pc, #560]	; (57b8 <main+0x480>)
    5588:	68db      	ldr	r3, [r3, #12]
    558a:	9300      	str	r3, [sp, #0]
    558c:	4b85      	ldr	r3, [pc, #532]	; (57a4 <main+0x46c>)
    558e:	2204      	movs	r2, #4
    5590:	498d      	ldr	r1, [pc, #564]	; (57c8 <main+0x490>)
    5592:	a811      	add	r0, sp, #68	; 0x44
    5594:	47b0      	blx	r6
    menu_add_item(&main_menu, tmp_item);
    5596:	ab14      	add	r3, sp, #80	; 0x50
    5598:	466a      	mov	r2, sp
    559a:	cb83      	ldmia	r3!, {r0, r1, r7}
    559c:	c283      	stmia	r2!, {r0, r1, r7}
    559e:	cb83      	ldmia	r3!, {r0, r1, r7}
    55a0:	c283      	stmia	r2!, {r0, r1, r7}
    55a2:	cb03      	ldmia	r3!, {r0, r1}
    55a4:	c203      	stmia	r2!, {r0, r1}
    55a6:	9911      	ldr	r1, [sp, #68]	; 0x44
    55a8:	9a12      	ldr	r2, [sp, #72]	; 0x48
    55aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    55ac:	4880      	ldr	r0, [pc, #512]	; (57b0 <main+0x478>)
    55ae:	47a8      	blx	r5
    menu_create_item(&tmp_item, "CHANNEL 5", TYPE_MENU, "", (void *)p_to_menus[4], 0, 0, NULL);
    55b0:	4643      	mov	r3, r8
    55b2:	9303      	str	r3, [sp, #12]
    55b4:	9402      	str	r4, [sp, #8]
    55b6:	9401      	str	r4, [sp, #4]
    55b8:	4b7f      	ldr	r3, [pc, #508]	; (57b8 <main+0x480>)
    55ba:	691b      	ldr	r3, [r3, #16]
    55bc:	9300      	str	r3, [sp, #0]
    55be:	4b79      	ldr	r3, [pc, #484]	; (57a4 <main+0x46c>)
    55c0:	2204      	movs	r2, #4
    55c2:	4982      	ldr	r1, [pc, #520]	; (57cc <main+0x494>)
    55c4:	a811      	add	r0, sp, #68	; 0x44
    55c6:	47b0      	blx	r6
    menu_add_item(&main_menu, tmp_item);
    55c8:	ab14      	add	r3, sp, #80	; 0x50
    55ca:	466a      	mov	r2, sp
    55cc:	cb83      	ldmia	r3!, {r0, r1, r7}
    55ce:	c283      	stmia	r2!, {r0, r1, r7}
    55d0:	cb83      	ldmia	r3!, {r0, r1, r7}
    55d2:	c283      	stmia	r2!, {r0, r1, r7}
    55d4:	cb03      	ldmia	r3!, {r0, r1}
    55d6:	c203      	stmia	r2!, {r0, r1}
    55d8:	9911      	ldr	r1, [sp, #68]	; 0x44
    55da:	9a12      	ldr	r2, [sp, #72]	; 0x48
    55dc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    55de:	4874      	ldr	r0, [pc, #464]	; (57b0 <main+0x478>)
    55e0:	47a8      	blx	r5
    menu_create_item(&tmp_item, "CONTRAST", TYPE_BAR, "", (void *)&device_settings.contrast, 0, 16, get_menu_bar_string);
    55e2:	4b7b      	ldr	r3, [pc, #492]	; (57d0 <main+0x498>)
    55e4:	9303      	str	r3, [sp, #12]
    55e6:	2383      	movs	r3, #131	; 0x83
    55e8:	05db      	lsls	r3, r3, #23
    55ea:	9302      	str	r3, [sp, #8]
    55ec:	9401      	str	r4, [sp, #4]
    55ee:	464b      	mov	r3, r9
    55f0:	9300      	str	r3, [sp, #0]
    55f2:	4b6c      	ldr	r3, [pc, #432]	; (57a4 <main+0x46c>)
    55f4:	2205      	movs	r2, #5
    55f6:	4977      	ldr	r1, [pc, #476]	; (57d4 <main+0x49c>)
    55f8:	a811      	add	r0, sp, #68	; 0x44
    55fa:	47b0      	blx	r6
    menu_add_item(&settings_menu, tmp_item);
    55fc:	ab14      	add	r3, sp, #80	; 0x50
    55fe:	466a      	mov	r2, sp
    5600:	cb83      	ldmia	r3!, {r0, r1, r7}
    5602:	c283      	stmia	r2!, {r0, r1, r7}
    5604:	cb83      	ldmia	r3!, {r0, r1, r7}
    5606:	c283      	stmia	r2!, {r0, r1, r7}
    5608:	cb03      	ldmia	r3!, {r0, r1}
    560a:	c203      	stmia	r2!, {r0, r1}
    560c:	9911      	ldr	r1, [sp, #68]	; 0x44
    560e:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5610:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5612:	4863      	ldr	r0, [pc, #396]	; (57a0 <main+0x468>)
    5614:	47a8      	blx	r5
    menu_create_item(&tmp_item, "BRIGHTNESS", TYPE_BAR, "", (void *)&device_settings.brightness, 0, 16, get_menu_bar_string);
    5616:	4b6e      	ldr	r3, [pc, #440]	; (57d0 <main+0x498>)
    5618:	9303      	str	r3, [sp, #12]
    561a:	2383      	movs	r3, #131	; 0x83
    561c:	05db      	lsls	r3, r3, #23
    561e:	9302      	str	r3, [sp, #8]
    5620:	9401      	str	r4, [sp, #4]
    5622:	464b      	mov	r3, r9
    5624:	3301      	adds	r3, #1
    5626:	9300      	str	r3, [sp, #0]
    5628:	4b5e      	ldr	r3, [pc, #376]	; (57a4 <main+0x46c>)
    562a:	2205      	movs	r2, #5
    562c:	496a      	ldr	r1, [pc, #424]	; (57d8 <main+0x4a0>)
    562e:	a811      	add	r0, sp, #68	; 0x44
    5630:	47b0      	blx	r6
    menu_add_item(&settings_menu, tmp_item);
    5632:	ab14      	add	r3, sp, #80	; 0x50
    5634:	466a      	mov	r2, sp
    5636:	cb83      	ldmia	r3!, {r0, r1, r7}
    5638:	c283      	stmia	r2!, {r0, r1, r7}
    563a:	cb83      	ldmia	r3!, {r0, r1, r7}
    563c:	c283      	stmia	r2!, {r0, r1, r7}
    563e:	cb03      	ldmia	r3!, {r0, r1}
    5640:	c203      	stmia	r2!, {r0, r1}
    5642:	9911      	ldr	r1, [sp, #68]	; 0x44
    5644:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5646:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5648:	4855      	ldr	r0, [pc, #340]	; (57a0 <main+0x468>)
    564a:	47a8      	blx	r5
    menu_create_item(&tmp_item, "MODE", TYPE_ENUM, "", (void *)&device_settings.mode, 0, 2, get_menu_mode_string);
    564c:	4b63      	ldr	r3, [pc, #396]	; (57dc <main+0x4a4>)
    564e:	9303      	str	r3, [sp, #12]
    5650:	2380      	movs	r3, #128	; 0x80
    5652:	05db      	lsls	r3, r3, #23
    5654:	9302      	str	r3, [sp, #8]
    5656:	9401      	str	r4, [sp, #4]
    5658:	464b      	mov	r3, r9
    565a:	3303      	adds	r3, #3
    565c:	9300      	str	r3, [sp, #0]
    565e:	4b51      	ldr	r3, [pc, #324]	; (57a4 <main+0x46c>)
    5660:	2207      	movs	r2, #7
    5662:	495f      	ldr	r1, [pc, #380]	; (57e0 <main+0x4a8>)
    5664:	a811      	add	r0, sp, #68	; 0x44
    5666:	47b0      	blx	r6
    menu_add_item(&settings_menu, tmp_item);
    5668:	ab14      	add	r3, sp, #80	; 0x50
    566a:	466a      	mov	r2, sp
    566c:	cb83      	ldmia	r3!, {r0, r1, r7}
    566e:	c283      	stmia	r2!, {r0, r1, r7}
    5670:	cb83      	ldmia	r3!, {r0, r1, r7}
    5672:	c283      	stmia	r2!, {r0, r1, r7}
    5674:	cb03      	ldmia	r3!, {r0, r1}
    5676:	c203      	stmia	r2!, {r0, r1}
    5678:	9911      	ldr	r1, [sp, #68]	; 0x44
    567a:	9a12      	ldr	r2, [sp, #72]	; 0x48
    567c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    567e:	4848      	ldr	r0, [pc, #288]	; (57a0 <main+0x468>)
    5680:	47a8      	blx	r5
    menu_create_item(&tmp_item, "FIX_SIZE", TYPE_UINT8, "", (void *)&device_settings.fixture_size, 7, 8, NULL);
    5682:	4643      	mov	r3, r8
    5684:	9303      	str	r3, [sp, #12]
    5686:	2382      	movs	r3, #130	; 0x82
    5688:	05db      	lsls	r3, r3, #23
    568a:	9302      	str	r3, [sp, #8]
    568c:	4b55      	ldr	r3, [pc, #340]	; (57e4 <main+0x4ac>)
    568e:	9301      	str	r3, [sp, #4]
    5690:	464b      	mov	r3, r9
    5692:	3302      	adds	r3, #2
    5694:	9300      	str	r3, [sp, #0]
    5696:	4b43      	ldr	r3, [pc, #268]	; (57a4 <main+0x46c>)
    5698:	2200      	movs	r2, #0
    569a:	4953      	ldr	r1, [pc, #332]	; (57e8 <main+0x4b0>)
    569c:	a811      	add	r0, sp, #68	; 0x44
    569e:	47b0      	blx	r6
    menu_add_item(&settings_menu, tmp_item);
    56a0:	ab14      	add	r3, sp, #80	; 0x50
    56a2:	466a      	mov	r2, sp
    56a4:	cb83      	ldmia	r3!, {r0, r1, r7}
    56a6:	c283      	stmia	r2!, {r0, r1, r7}
    56a8:	cb83      	ldmia	r3!, {r0, r1, r7}
    56aa:	c283      	stmia	r2!, {r0, r1, r7}
    56ac:	cb03      	ldmia	r3!, {r0, r1}
    56ae:	c203      	stmia	r2!, {r0, r1}
    56b0:	9911      	ldr	r1, [sp, #68]	; 0x44
    56b2:	9a12      	ldr	r2, [sp, #72]	; 0x48
    56b4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    56b6:	483a      	ldr	r0, [pc, #232]	; (57a0 <main+0x468>)
    56b8:	47a8      	blx	r5
    menu_create_item(&tmp_item, "BACK", TYPE_MENU, "", (void *)&main_menu, 0, 0, NULL);
    56ba:	4643      	mov	r3, r8
    56bc:	9303      	str	r3, [sp, #12]
    56be:	9402      	str	r4, [sp, #8]
    56c0:	9401      	str	r4, [sp, #4]
    56c2:	4b3b      	ldr	r3, [pc, #236]	; (57b0 <main+0x478>)
    56c4:	9300      	str	r3, [sp, #0]
    56c6:	4b37      	ldr	r3, [pc, #220]	; (57a4 <main+0x46c>)
    56c8:	2204      	movs	r2, #4
    56ca:	4948      	ldr	r1, [pc, #288]	; (57ec <main+0x4b4>)
    56cc:	a811      	add	r0, sp, #68	; 0x44
    56ce:	47b0      	blx	r6
    menu_add_item(&settings_menu, tmp_item);
    56d0:	ab14      	add	r3, sp, #80	; 0x50
    56d2:	466a      	mov	r2, sp
    56d4:	cb13      	ldmia	r3!, {r0, r1, r4}
    56d6:	c213      	stmia	r2!, {r0, r1, r4}
    56d8:	cb13      	ldmia	r3!, {r0, r1, r4}
    56da:	c213      	stmia	r2!, {r0, r1, r4}
    56dc:	cb03      	ldmia	r3!, {r0, r1}
    56de:	c203      	stmia	r2!, {r0, r1}
    56e0:	9911      	ldr	r1, [sp, #68]	; 0x44
    56e2:	9a12      	ldr	r2, [sp, #72]	; 0x48
    56e4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    56e6:	482e      	ldr	r0, [pc, #184]	; (57a0 <main+0x468>)
    56e8:	47a8      	blx	r5
    56ea:	2510      	movs	r5, #16
    56ec:	2300      	movs	r3, #0
    56ee:	4699      	mov	r9, r3
    56f0:	930a      	str	r3, [sp, #40]	; 0x28
            sprintf(menu_item_short_name, "DMX%d", i * MENU_MAX_ITEMS + j);
    56f2:	4b3f      	ldr	r3, [pc, #252]	; (57f0 <main+0x4b8>)
    56f4:	4698      	mov	r8, r3
    56f6:	4656      	mov	r6, sl
    56f8:	464b      	mov	r3, r9
    56fa:	9309      	str	r3, [sp, #36]	; 0x24
    56fc:	e0ed      	b.n	58da <main+0x5a2>
    56fe:	46c0      	nop			; (mov r8, r8)
    5700:	fffffd2c 	.word	0xfffffd2c
    5704:	00004ed5 	.word	0x00004ed5
    5708:	00000c2d 	.word	0x00000c2d
    570c:	20000015 	.word	0x20000015
    5710:	20002984 	.word	0x20002984
    5714:	2000275c 	.word	0x2000275c
    5718:	00000725 	.word	0x00000725
    571c:	20002970 	.word	0x20002970
    5720:	00003aa9 	.word	0x00003aa9
    5724:	000038c5 	.word	0x000038c5
    5728:	00005129 	.word	0x00005129
    572c:	0000034d 	.word	0x0000034d
    5730:	00004ccd 	.word	0x00004ccd
    5734:	00006125 	.word	0x00006125
    5738:	00001b57 	.word	0x00001b57
    573c:	00001b58 	.word	0x00001b58
    5740:	000060e5 	.word	0x000060e5
    5744:	20000001 	.word	0x20000001
    5748:	000004b5 	.word	0x000004b5
    574c:	00005211 	.word	0x00005211
    5750:	0000523d 	.word	0x0000523d
    5754:	000042bd 	.word	0x000042bd
    5758:	00001cb5 	.word	0x00001cb5
    575c:	00004639 	.word	0x00004639
    5760:	2000294c 	.word	0x2000294c
    5764:	00002279 	.word	0x00002279
    5768:	00000531 	.word	0x00000531
    576c:	00004561 	.word	0x00004561
    5770:	000045b1 	.word	0x000045b1
    5774:	000035d1 	.word	0x000035d1
    5778:	2000284c 	.word	0x2000284c
    577c:	e000e100 	.word	0xe000e100
    5780:	ffff00ff 	.word	0xffff00ff
    5784:	ff00ffff 	.word	0xff00ffff
    5788:	00002011 	.word	0x00002011
    578c:	0000863d 	.word	0x0000863d
    5790:	20000034 	.word	0x20000034
    5794:	00002069 	.word	0x00002069
    5798:	00002025 	.word	0x00002025
    579c:	20000018 	.word	0x20000018
    57a0:	200014e4 	.word	0x200014e4
    57a4:	0000927c 	.word	0x0000927c
    57a8:	00009218 	.word	0x00009218
    57ac:	00004021 	.word	0x00004021
    57b0:	200011f4 	.word	0x200011f4
    57b4:	00003c39 	.word	0x00003c39
    57b8:	20000020 	.word	0x20000020
    57bc:	00009224 	.word	0x00009224
    57c0:	00009230 	.word	0x00009230
    57c4:	0000923c 	.word	0x0000923c
    57c8:	00009248 	.word	0x00009248
    57cc:	00009254 	.word	0x00009254
    57d0:	00005029 	.word	0x00005029
    57d4:	00009260 	.word	0x00009260
    57d8:	0000926c 	.word	0x0000926c
    57dc:	00004fb1 	.word	0x00004fb1
    57e0:	00009278 	.word	0x00009278
    57e4:	40e00000 	.word	0x40e00000
    57e8:	00009280 	.word	0x00009280
    57ec:	0000928c 	.word	0x0000928c
    57f0:	000087e9 	.word	0x000087e9
    57f4:	003a      	movs	r2, r7
    57f6:	493b      	ldr	r1, [pc, #236]	; (58e4 <main+0x5ac>)
    57f8:	a80c      	add	r0, sp, #48	; 0x30
    57fa:	47c0      	blx	r8
            menu_create_item(&tmp_item, menu_item_short_name, TYPE_DMX_CH, "", dmx_values + i * 16 + j, -1, 256, get_menu_dmx_ch_string);
    57fc:	4b3a      	ldr	r3, [pc, #232]	; (58e8 <main+0x5b0>)
    57fe:	9303      	str	r3, [sp, #12]
    5800:	2387      	movs	r3, #135	; 0x87
    5802:	05db      	lsls	r3, r3, #23
    5804:	9302      	str	r3, [sp, #8]
    5806:	4b39      	ldr	r3, [pc, #228]	; (58ec <main+0x5b4>)
    5808:	9301      	str	r3, [sp, #4]
    580a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    580c:	18fb      	adds	r3, r7, r3
    580e:	4a38      	ldr	r2, [pc, #224]	; (58f0 <main+0x5b8>)
    5810:	189b      	adds	r3, r3, r2
    5812:	9300      	str	r3, [sp, #0]
    5814:	4b37      	ldr	r3, [pc, #220]	; (58f4 <main+0x5bc>)
    5816:	2208      	movs	r2, #8
    5818:	a90c      	add	r1, sp, #48	; 0x30
    581a:	a811      	add	r0, sp, #68	; 0x44
    581c:	4c36      	ldr	r4, [pc, #216]	; (58f8 <main+0x5c0>)
    581e:	47a0      	blx	r4
            menu_add_item(p_to_dmx_group_menus[i], tmp_item);
    5820:	6834      	ldr	r4, [r6, #0]
    5822:	ab14      	add	r3, sp, #80	; 0x50
    5824:	466a      	mov	r2, sp
    5826:	cb23      	ldmia	r3!, {r0, r1, r5}
    5828:	c223      	stmia	r2!, {r0, r1, r5}
    582a:	cb23      	ldmia	r3!, {r0, r1, r5}
    582c:	c223      	stmia	r2!, {r0, r1, r5}
    582e:	cb03      	ldmia	r3!, {r0, r1}
    5830:	c203      	stmia	r2!, {r0, r1}
    5832:	9911      	ldr	r1, [sp, #68]	; 0x44
    5834:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5836:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5838:	0020      	movs	r0, r4
    583a:	4d30      	ldr	r5, [pc, #192]	; (58fc <main+0x5c4>)
    583c:	47a8      	blx	r5
    583e:	3701      	adds	r7, #1
        for (uint16_t j = 0; j < MENU_MAX_ITEMS - 1; j++) {
    5840:	454f      	cmp	r7, r9
    5842:	d1d7      	bne.n	57f4 <main+0x4bc>
    5844:	464d      	mov	r5, r9
        menu_create_item(&tmp_item, "BACK", TYPE_MENU, "", (void *)&static_channels_menu, 0, 0, NULL);
    5846:	2300      	movs	r3, #0
    5848:	9303      	str	r3, [sp, #12]
    584a:	2300      	movs	r3, #0
    584c:	4699      	mov	r9, r3
    584e:	9302      	str	r3, [sp, #8]
    5850:	9301      	str	r3, [sp, #4]
    5852:	4b2b      	ldr	r3, [pc, #172]	; (5900 <main+0x5c8>)
    5854:	9300      	str	r3, [sp, #0]
    5856:	4b27      	ldr	r3, [pc, #156]	; (58f4 <main+0x5bc>)
    5858:	2204      	movs	r2, #4
    585a:	492a      	ldr	r1, [pc, #168]	; (5904 <main+0x5cc>)
    585c:	a811      	add	r0, sp, #68	; 0x44
    585e:	4f26      	ldr	r7, [pc, #152]	; (58f8 <main+0x5c0>)
    5860:	46ba      	mov	sl, r7
    5862:	47b8      	blx	r7
        menu_add_item(p_to_dmx_group_menus[i], tmp_item);
    5864:	ab14      	add	r3, sp, #80	; 0x50
    5866:	466a      	mov	r2, sp
    5868:	cb83      	ldmia	r3!, {r0, r1, r7}
    586a:	c283      	stmia	r2!, {r0, r1, r7}
    586c:	cb83      	ldmia	r3!, {r0, r1, r7}
    586e:	c283      	stmia	r2!, {r0, r1, r7}
    5870:	cb03      	ldmia	r3!, {r0, r1}
    5872:	c203      	stmia	r2!, {r0, r1}
    5874:	9911      	ldr	r1, [sp, #68]	; 0x44
    5876:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5878:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    587a:	0020      	movs	r0, r4
    587c:	4f1f      	ldr	r7, [pc, #124]	; (58fc <main+0x5c4>)
    587e:	47b8      	blx	r7
        sprintf(menu_item_short_name, "DMX%d-%d", i * 16, i * 16 + 15);
    5880:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5882:	0013      	movs	r3, r2
    5884:	330f      	adds	r3, #15
    5886:	4920      	ldr	r1, [pc, #128]	; (5908 <main+0x5d0>)
    5888:	a80c      	add	r0, sp, #48	; 0x30
    588a:	4f20      	ldr	r7, [pc, #128]	; (590c <main+0x5d4>)
    588c:	47b8      	blx	r7
        menu_create_item(&tmp_item, menu_item_short_name, TYPE_MENU, "", (void *)p_to_dmx_group_menus[i], 0, 0, NULL);
    588e:	2100      	movs	r1, #0
    5890:	9103      	str	r1, [sp, #12]
    5892:	4649      	mov	r1, r9
    5894:	9102      	str	r1, [sp, #8]
    5896:	9101      	str	r1, [sp, #4]
    5898:	9400      	str	r4, [sp, #0]
    589a:	4b16      	ldr	r3, [pc, #88]	; (58f4 <main+0x5bc>)
    589c:	2204      	movs	r2, #4
    589e:	a90c      	add	r1, sp, #48	; 0x30
    58a0:	a811      	add	r0, sp, #68	; 0x44
    58a2:	47d0      	blx	sl
        menu_add_item(&static_channels_menu, tmp_item);
    58a4:	ab14      	add	r3, sp, #80	; 0x50
    58a6:	466a      	mov	r2, sp
    58a8:	cb13      	ldmia	r3!, {r0, r1, r4}
    58aa:	c213      	stmia	r2!, {r0, r1, r4}
    58ac:	cb13      	ldmia	r3!, {r0, r1, r4}
    58ae:	c213      	stmia	r2!, {r0, r1, r4}
    58b0:	cb03      	ldmia	r3!, {r0, r1}
    58b2:	c203      	stmia	r2!, {r0, r1}
    58b4:	9911      	ldr	r1, [sp, #68]	; 0x44
    58b6:	9a12      	ldr	r2, [sp, #72]	; 0x48
    58b8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    58ba:	4811      	ldr	r0, [pc, #68]	; (5900 <main+0x5c8>)
    58bc:	4c0f      	ldr	r4, [pc, #60]	; (58fc <main+0x5c4>)
    58be:	47a0      	blx	r4
    58c0:	3604      	adds	r6, #4
    58c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    58c4:	3310      	adds	r3, #16
    58c6:	001a      	movs	r2, r3
    58c8:	930a      	str	r3, [sp, #40]	; 0x28
    58ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
    58cc:	3b01      	subs	r3, #1
    58ce:	9309      	str	r3, [sp, #36]	; 0x24
    58d0:	3511      	adds	r5, #17
    for (uint16_t i = 0; i < (MAX_DMX_CHANNELS / 16); i++) {
    58d2:	2380      	movs	r3, #128	; 0x80
    58d4:	005b      	lsls	r3, r3, #1
    58d6:	429a      	cmp	r2, r3
    58d8:	d01a      	beq.n	5910 <main+0x5d8>
    58da:	002f      	movs	r7, r5
    58dc:	3f10      	subs	r7, #16
    58de:	46a9      	mov	r9, r5
    58e0:	e788      	b.n	57f4 <main+0x4bc>
    58e2:	46c0      	nop			; (mov r8, r8)
    58e4:	00009294 	.word	0x00009294
    58e8:	00005095 	.word	0x00005095
    58ec:	bf800000 	.word	0xbf800000
    58f0:	2000284c 	.word	0x2000284c
    58f4:	0000927c 	.word	0x0000927c
    58f8:	00004021 	.word	0x00004021
    58fc:	00003c39 	.word	0x00003c39
    5900:	200017d8 	.word	0x200017d8
    5904:	0000928c 	.word	0x0000928c
    5908:	0000929c 	.word	0x0000929c
    590c:	000087e9 	.word	0x000087e9
    menu_create_item(&tmp_item, "STATIC_CH", TYPE_MENU, "", (void *)&static_channels_menu, 0, 0, NULL);
    5910:	2300      	movs	r3, #0
    5912:	469a      	mov	sl, r3
    5914:	9303      	str	r3, [sp, #12]
    5916:	2400      	movs	r4, #0
    5918:	9402      	str	r4, [sp, #8]
    591a:	9401      	str	r4, [sp, #4]
    591c:	4fe4      	ldr	r7, [pc, #912]	; (5cb0 <main+0x978>)
    591e:	9700      	str	r7, [sp, #0]
    5920:	4be4      	ldr	r3, [pc, #912]	; (5cb4 <main+0x97c>)
    5922:	2204      	movs	r2, #4
    5924:	49e4      	ldr	r1, [pc, #912]	; (5cb8 <main+0x980>)
    5926:	a811      	add	r0, sp, #68	; 0x44
    5928:	4ee4      	ldr	r6, [pc, #912]	; (5cbc <main+0x984>)
    592a:	47b0      	blx	r6
    menu_add_item(&main_menu, tmp_item);
    592c:	4be4      	ldr	r3, [pc, #912]	; (5cc0 <main+0x988>)
    592e:	4699      	mov	r9, r3
    5930:	ab14      	add	r3, sp, #80	; 0x50
    5932:	466a      	mov	r2, sp
    5934:	cb23      	ldmia	r3!, {r0, r1, r5}
    5936:	c223      	stmia	r2!, {r0, r1, r5}
    5938:	cb23      	ldmia	r3!, {r0, r1, r5}
    593a:	c223      	stmia	r2!, {r0, r1, r5}
    593c:	cb03      	ldmia	r3!, {r0, r1}
    593e:	c203      	stmia	r2!, {r0, r1}
    5940:	9911      	ldr	r1, [sp, #68]	; 0x44
    5942:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5944:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5946:	4648      	mov	r0, r9
    5948:	4dde      	ldr	r5, [pc, #888]	; (5cc4 <main+0x98c>)
    594a:	47a8      	blx	r5
    menu_create_item(&tmp_item, "BACK", TYPE_MENU, "", (void *)&main_menu, 0, 0, NULL);
    594c:	4653      	mov	r3, sl
    594e:	9303      	str	r3, [sp, #12]
    5950:	9402      	str	r4, [sp, #8]
    5952:	9401      	str	r4, [sp, #4]
    5954:	464b      	mov	r3, r9
    5956:	9300      	str	r3, [sp, #0]
    5958:	4bd6      	ldr	r3, [pc, #856]	; (5cb4 <main+0x97c>)
    595a:	2204      	movs	r2, #4
    595c:	49da      	ldr	r1, [pc, #872]	; (5cc8 <main+0x990>)
    595e:	a811      	add	r0, sp, #68	; 0x44
    5960:	47b0      	blx	r6
    menu_add_item(&static_channels_menu, tmp_item);
    5962:	ab14      	add	r3, sp, #80	; 0x50
    5964:	466a      	mov	r2, sp
    5966:	cb13      	ldmia	r3!, {r0, r1, r4}
    5968:	c213      	stmia	r2!, {r0, r1, r4}
    596a:	cb13      	ldmia	r3!, {r0, r1, r4}
    596c:	c213      	stmia	r2!, {r0, r1, r4}
    596e:	cb03      	ldmia	r3!, {r0, r1}
    5970:	c203      	stmia	r2!, {r0, r1}
    5972:	9911      	ldr	r1, [sp, #68]	; 0x44
    5974:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5976:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5978:	0038      	movs	r0, r7
    597a:	47a8      	blx	r5
    597c:	4dd3      	ldr	r5, [pc, #844]	; (5ccc <main+0x994>)
    597e:	4cd4      	ldr	r4, [pc, #848]	; (5cd0 <main+0x998>)
        menu_create_item(&tmp_item,  "INPUT", TYPE_UINT8, "", (void *)&p_to_channels[i]->input_channel, 1, 5, NULL);
    5980:	2700      	movs	r7, #0
    5982:	46a8      	mov	r8, r5
        menu_create_item(&tmp_item,  "ENABLE", TYPE_ENUM, "", (void *)&p_to_channels[i]->enabled, 0, 1, get_menu_enable_string);
    5984:	4bd3      	ldr	r3, [pc, #844]	; (5cd4 <main+0x99c>)
    5986:	9303      	str	r3, [sp, #12]
    5988:	23fe      	movs	r3, #254	; 0xfe
    598a:	059b      	lsls	r3, r3, #22
    598c:	9302      	str	r3, [sp, #8]
    598e:	2300      	movs	r3, #0
    5990:	4699      	mov	r9, r3
    5992:	9301      	str	r3, [sp, #4]
    5994:	4643      	mov	r3, r8
    5996:	681b      	ldr	r3, [r3, #0]
    5998:	3301      	adds	r3, #1
    599a:	9300      	str	r3, [sp, #0]
    599c:	4bc5      	ldr	r3, [pc, #788]	; (5cb4 <main+0x97c>)
    599e:	2207      	movs	r2, #7
    59a0:	49cd      	ldr	r1, [pc, #820]	; (5cd8 <main+0x9a0>)
    59a2:	a811      	add	r0, sp, #68	; 0x44
    59a4:	4dc5      	ldr	r5, [pc, #788]	; (5cbc <main+0x984>)
    59a6:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    59a8:	6825      	ldr	r5, [r4, #0]
    59aa:	ab14      	add	r3, sp, #80	; 0x50
    59ac:	466a      	mov	r2, sp
    59ae:	cb43      	ldmia	r3!, {r0, r1, r6}
    59b0:	c243      	stmia	r2!, {r0, r1, r6}
    59b2:	cb43      	ldmia	r3!, {r0, r1, r6}
    59b4:	c243      	stmia	r2!, {r0, r1, r6}
    59b6:	cb03      	ldmia	r3!, {r0, r1}
    59b8:	c203      	stmia	r2!, {r0, r1}
    59ba:	9911      	ldr	r1, [sp, #68]	; 0x44
    59bc:	9a12      	ldr	r2, [sp, #72]	; 0x48
    59be:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    59c0:	0028      	movs	r0, r5
    59c2:	4ec0      	ldr	r6, [pc, #768]	; (5cc4 <main+0x98c>)
    59c4:	47b0      	blx	r6
        menu_create_item(&tmp_item,  "INPUT", TYPE_UINT8, "", (void *)&p_to_channels[i]->input_channel, 1, 5, NULL);
    59c6:	9703      	str	r7, [sp, #12]
    59c8:	4bc4      	ldr	r3, [pc, #784]	; (5cdc <main+0x9a4>)
    59ca:	9302      	str	r3, [sp, #8]
    59cc:	23fe      	movs	r3, #254	; 0xfe
    59ce:	059b      	lsls	r3, r3, #22
    59d0:	9301      	str	r3, [sp, #4]
    59d2:	4643      	mov	r3, r8
    59d4:	681b      	ldr	r3, [r3, #0]
    59d6:	3308      	adds	r3, #8
    59d8:	9300      	str	r3, [sp, #0]
    59da:	4bb6      	ldr	r3, [pc, #728]	; (5cb4 <main+0x97c>)
    59dc:	003a      	movs	r2, r7
    59de:	49c0      	ldr	r1, [pc, #768]	; (5ce0 <main+0x9a8>)
    59e0:	a811      	add	r0, sp, #68	; 0x44
    59e2:	4db6      	ldr	r5, [pc, #728]	; (5cbc <main+0x984>)
    59e4:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    59e6:	6823      	ldr	r3, [r4, #0]
    59e8:	469c      	mov	ip, r3
    59ea:	ab14      	add	r3, sp, #80	; 0x50
    59ec:	466a      	mov	r2, sp
    59ee:	cb23      	ldmia	r3!, {r0, r1, r5}
    59f0:	c223      	stmia	r2!, {r0, r1, r5}
    59f2:	cb23      	ldmia	r3!, {r0, r1, r5}
    59f4:	c223      	stmia	r2!, {r0, r1, r5}
    59f6:	cb03      	ldmia	r3!, {r0, r1}
    59f8:	c203      	stmia	r2!, {r0, r1}
    59fa:	9911      	ldr	r1, [sp, #68]	; 0x44
    59fc:	9a12      	ldr	r2, [sp, #72]	; 0x48
    59fe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5a00:	4660      	mov	r0, ip
    5a02:	47b0      	blx	r6
        menu_create_item(&tmp_item, "DMX CHAN", TYPE_UINT8, "", (void *)&p_to_channels[i]->dmx_ch, 0, 256, NULL);
    5a04:	9703      	str	r7, [sp, #12]
    5a06:	2387      	movs	r3, #135	; 0x87
    5a08:	05db      	lsls	r3, r3, #23
    5a0a:	9302      	str	r3, [sp, #8]
    5a0c:	464b      	mov	r3, r9
    5a0e:	9301      	str	r3, [sp, #4]
    5a10:	4643      	mov	r3, r8
    5a12:	681b      	ldr	r3, [r3, #0]
    5a14:	3304      	adds	r3, #4
    5a16:	9300      	str	r3, [sp, #0]
    5a18:	4ba6      	ldr	r3, [pc, #664]	; (5cb4 <main+0x97c>)
    5a1a:	003a      	movs	r2, r7
    5a1c:	49b1      	ldr	r1, [pc, #708]	; (5ce4 <main+0x9ac>)
    5a1e:	a811      	add	r0, sp, #68	; 0x44
    5a20:	4da6      	ldr	r5, [pc, #664]	; (5cbc <main+0x984>)
    5a22:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5a24:	6823      	ldr	r3, [r4, #0]
    5a26:	469c      	mov	ip, r3
    5a28:	ab14      	add	r3, sp, #80	; 0x50
    5a2a:	466a      	mov	r2, sp
    5a2c:	cb23      	ldmia	r3!, {r0, r1, r5}
    5a2e:	c223      	stmia	r2!, {r0, r1, r5}
    5a30:	cb23      	ldmia	r3!, {r0, r1, r5}
    5a32:	c223      	stmia	r2!, {r0, r1, r5}
    5a34:	cb03      	ldmia	r3!, {r0, r1}
    5a36:	c203      	stmia	r2!, {r0, r1}
    5a38:	9911      	ldr	r1, [sp, #68]	; 0x44
    5a3a:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5a3c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5a3e:	4660      	mov	r0, ip
    5a40:	47b0      	blx	r6
        menu_create_item(&tmp_item, "LEVEL", TYPE_UINT8, "", (void *)&p_to_channels[i]->level, 0, 31, NULL);
    5a42:	9703      	str	r7, [sp, #12]
    5a44:	4ba8      	ldr	r3, [pc, #672]	; (5ce8 <main+0x9b0>)
    5a46:	9302      	str	r3, [sp, #8]
    5a48:	464b      	mov	r3, r9
    5a4a:	9301      	str	r3, [sp, #4]
    5a4c:	4643      	mov	r3, r8
    5a4e:	681b      	ldr	r3, [r3, #0]
    5a50:	9300      	str	r3, [sp, #0]
    5a52:	4b98      	ldr	r3, [pc, #608]	; (5cb4 <main+0x97c>)
    5a54:	003a      	movs	r2, r7
    5a56:	49a5      	ldr	r1, [pc, #660]	; (5cec <main+0x9b4>)
    5a58:	a811      	add	r0, sp, #68	; 0x44
    5a5a:	4d98      	ldr	r5, [pc, #608]	; (5cbc <main+0x984>)
    5a5c:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5a5e:	6823      	ldr	r3, [r4, #0]
    5a60:	469c      	mov	ip, r3
    5a62:	ab14      	add	r3, sp, #80	; 0x50
    5a64:	466a      	mov	r2, sp
    5a66:	cb23      	ldmia	r3!, {r0, r1, r5}
    5a68:	c223      	stmia	r2!, {r0, r1, r5}
    5a6a:	cb23      	ldmia	r3!, {r0, r1, r5}
    5a6c:	c223      	stmia	r2!, {r0, r1, r5}
    5a6e:	cb03      	ldmia	r3!, {r0, r1}
    5a70:	c203      	stmia	r2!, {r0, r1}
    5a72:	9911      	ldr	r1, [sp, #68]	; 0x44
    5a74:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5a76:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5a78:	4660      	mov	r0, ip
    5a7a:	47b0      	blx	r6
        menu_create_item(&tmp_item, "ATTACK", TYPE_UINT32, "ms", (void *)&p_to_channels[i]->adsr->attack, 0, 5000, NULL);
    5a7c:	9703      	str	r7, [sp, #12]
    5a7e:	4b9c      	ldr	r3, [pc, #624]	; (5cf0 <main+0x9b8>)
    5a80:	469a      	mov	sl, r3
    5a82:	9302      	str	r3, [sp, #8]
    5a84:	464b      	mov	r3, r9
    5a86:	9301      	str	r3, [sp, #4]
    5a88:	4643      	mov	r3, r8
    5a8a:	681b      	ldr	r3, [r3, #0]
    5a8c:	68db      	ldr	r3, [r3, #12]
    5a8e:	3308      	adds	r3, #8
    5a90:	9300      	str	r3, [sp, #0]
    5a92:	4b98      	ldr	r3, [pc, #608]	; (5cf4 <main+0x9bc>)
    5a94:	2202      	movs	r2, #2
    5a96:	4998      	ldr	r1, [pc, #608]	; (5cf8 <main+0x9c0>)
    5a98:	a811      	add	r0, sp, #68	; 0x44
    5a9a:	4d88      	ldr	r5, [pc, #544]	; (5cbc <main+0x984>)
    5a9c:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5a9e:	6823      	ldr	r3, [r4, #0]
    5aa0:	469c      	mov	ip, r3
    5aa2:	ab14      	add	r3, sp, #80	; 0x50
    5aa4:	466a      	mov	r2, sp
    5aa6:	cb23      	ldmia	r3!, {r0, r1, r5}
    5aa8:	c223      	stmia	r2!, {r0, r1, r5}
    5aaa:	cb23      	ldmia	r3!, {r0, r1, r5}
    5aac:	c223      	stmia	r2!, {r0, r1, r5}
    5aae:	cb03      	ldmia	r3!, {r0, r1}
    5ab0:	c203      	stmia	r2!, {r0, r1}
    5ab2:	9911      	ldr	r1, [sp, #68]	; 0x44
    5ab4:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5ab6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5ab8:	4660      	mov	r0, ip
    5aba:	47b0      	blx	r6
        menu_create_item(&tmp_item, "DECAY", TYPE_UINT32, "ms", (void *)&p_to_channels[i]->adsr->decay, 0, 5000, NULL);
    5abc:	9703      	str	r7, [sp, #12]
    5abe:	4653      	mov	r3, sl
    5ac0:	9302      	str	r3, [sp, #8]
    5ac2:	464b      	mov	r3, r9
    5ac4:	9301      	str	r3, [sp, #4]
    5ac6:	4643      	mov	r3, r8
    5ac8:	681b      	ldr	r3, [r3, #0]
    5aca:	68db      	ldr	r3, [r3, #12]
    5acc:	3310      	adds	r3, #16
    5ace:	9300      	str	r3, [sp, #0]
    5ad0:	4b88      	ldr	r3, [pc, #544]	; (5cf4 <main+0x9bc>)
    5ad2:	2202      	movs	r2, #2
    5ad4:	4989      	ldr	r1, [pc, #548]	; (5cfc <main+0x9c4>)
    5ad6:	a811      	add	r0, sp, #68	; 0x44
    5ad8:	4d78      	ldr	r5, [pc, #480]	; (5cbc <main+0x984>)
    5ada:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5adc:	6823      	ldr	r3, [r4, #0]
    5ade:	469c      	mov	ip, r3
    5ae0:	ab14      	add	r3, sp, #80	; 0x50
    5ae2:	466a      	mov	r2, sp
    5ae4:	cb23      	ldmia	r3!, {r0, r1, r5}
    5ae6:	c223      	stmia	r2!, {r0, r1, r5}
    5ae8:	cb23      	ldmia	r3!, {r0, r1, r5}
    5aea:	c223      	stmia	r2!, {r0, r1, r5}
    5aec:	cb03      	ldmia	r3!, {r0, r1}
    5aee:	c203      	stmia	r2!, {r0, r1}
    5af0:	9911      	ldr	r1, [sp, #68]	; 0x44
    5af2:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5af4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5af6:	4660      	mov	r0, ip
    5af8:	47b0      	blx	r6
        menu_create_item(&tmp_item,  "SUSTAIN", TYPE_UINT32, "ms", (void *)&p_to_channels[i]->adsr->sustain, 0, 5000, NULL);
    5afa:	9703      	str	r7, [sp, #12]
    5afc:	4653      	mov	r3, sl
    5afe:	9302      	str	r3, [sp, #8]
    5b00:	464b      	mov	r3, r9
    5b02:	9301      	str	r3, [sp, #4]
    5b04:	4643      	mov	r3, r8
    5b06:	681b      	ldr	r3, [r3, #0]
    5b08:	68db      	ldr	r3, [r3, #12]
    5b0a:	3318      	adds	r3, #24
    5b0c:	9300      	str	r3, [sp, #0]
    5b0e:	4b79      	ldr	r3, [pc, #484]	; (5cf4 <main+0x9bc>)
    5b10:	2202      	movs	r2, #2
    5b12:	497b      	ldr	r1, [pc, #492]	; (5d00 <main+0x9c8>)
    5b14:	a811      	add	r0, sp, #68	; 0x44
    5b16:	4d69      	ldr	r5, [pc, #420]	; (5cbc <main+0x984>)
    5b18:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5b1a:	6823      	ldr	r3, [r4, #0]
    5b1c:	469c      	mov	ip, r3
    5b1e:	ab14      	add	r3, sp, #80	; 0x50
    5b20:	466a      	mov	r2, sp
    5b22:	cb23      	ldmia	r3!, {r0, r1, r5}
    5b24:	c223      	stmia	r2!, {r0, r1, r5}
    5b26:	cb23      	ldmia	r3!, {r0, r1, r5}
    5b28:	c223      	stmia	r2!, {r0, r1, r5}
    5b2a:	cb03      	ldmia	r3!, {r0, r1}
    5b2c:	c203      	stmia	r2!, {r0, r1}
    5b2e:	9911      	ldr	r1, [sp, #68]	; 0x44
    5b30:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5b32:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5b34:	4660      	mov	r0, ip
    5b36:	47b0      	blx	r6
        menu_create_item(&tmp_item,  "S_LEVEL", TYPE_UINT8, "", (void *)&p_to_channels[i]->adsr->sustain_level, 0, 255, NULL);
    5b38:	9703      	str	r7, [sp, #12]
    5b3a:	4b72      	ldr	r3, [pc, #456]	; (5d04 <main+0x9cc>)
    5b3c:	9302      	str	r3, [sp, #8]
    5b3e:	464b      	mov	r3, r9
    5b40:	9301      	str	r3, [sp, #4]
    5b42:	4643      	mov	r3, r8
    5b44:	681b      	ldr	r3, [r3, #0]
    5b46:	68db      	ldr	r3, [r3, #12]
    5b48:	331c      	adds	r3, #28
    5b4a:	9300      	str	r3, [sp, #0]
    5b4c:	4b59      	ldr	r3, [pc, #356]	; (5cb4 <main+0x97c>)
    5b4e:	003a      	movs	r2, r7
    5b50:	496d      	ldr	r1, [pc, #436]	; (5d08 <main+0x9d0>)
    5b52:	a811      	add	r0, sp, #68	; 0x44
    5b54:	4d59      	ldr	r5, [pc, #356]	; (5cbc <main+0x984>)
    5b56:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5b58:	6823      	ldr	r3, [r4, #0]
    5b5a:	469c      	mov	ip, r3
    5b5c:	ab14      	add	r3, sp, #80	; 0x50
    5b5e:	466a      	mov	r2, sp
    5b60:	cb23      	ldmia	r3!, {r0, r1, r5}
    5b62:	c223      	stmia	r2!, {r0, r1, r5}
    5b64:	cb23      	ldmia	r3!, {r0, r1, r5}
    5b66:	c223      	stmia	r2!, {r0, r1, r5}
    5b68:	cb03      	ldmia	r3!, {r0, r1}
    5b6a:	c203      	stmia	r2!, {r0, r1}
    5b6c:	9911      	ldr	r1, [sp, #68]	; 0x44
    5b6e:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5b70:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5b72:	4660      	mov	r0, ip
    5b74:	47b0      	blx	r6
        menu_create_item(&tmp_item, "RELEASE", TYPE_UINT32, "ms", (void *)&p_to_channels[i]->adsr->release, 0, 5000, NULL);
    5b76:	9703      	str	r7, [sp, #12]
    5b78:	4653      	mov	r3, sl
    5b7a:	9302      	str	r3, [sp, #8]
    5b7c:	464b      	mov	r3, r9
    5b7e:	9301      	str	r3, [sp, #4]
    5b80:	4643      	mov	r3, r8
    5b82:	681b      	ldr	r3, [r3, #0]
    5b84:	68db      	ldr	r3, [r3, #12]
    5b86:	3324      	adds	r3, #36	; 0x24
    5b88:	9300      	str	r3, [sp, #0]
    5b8a:	4b5a      	ldr	r3, [pc, #360]	; (5cf4 <main+0x9bc>)
    5b8c:	2202      	movs	r2, #2
    5b8e:	495f      	ldr	r1, [pc, #380]	; (5d0c <main+0x9d4>)
    5b90:	a811      	add	r0, sp, #68	; 0x44
    5b92:	4d4a      	ldr	r5, [pc, #296]	; (5cbc <main+0x984>)
    5b94:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5b96:	6823      	ldr	r3, [r4, #0]
    5b98:	469c      	mov	ip, r3
    5b9a:	ab14      	add	r3, sp, #80	; 0x50
    5b9c:	466a      	mov	r2, sp
    5b9e:	cb23      	ldmia	r3!, {r0, r1, r5}
    5ba0:	c223      	stmia	r2!, {r0, r1, r5}
    5ba2:	cb23      	ldmia	r3!, {r0, r1, r5}
    5ba4:	c223      	stmia	r2!, {r0, r1, r5}
    5ba6:	cb03      	ldmia	r3!, {r0, r1}
    5ba8:	c203      	stmia	r2!, {r0, r1}
    5baa:	9911      	ldr	r1, [sp, #68]	; 0x44
    5bac:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5bae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5bb0:	4660      	mov	r0, ip
    5bb2:	47b0      	blx	r6
        menu_create_item(&tmp_item,  "MIDI CH", TYPE_UINT8, "", (void *)&p_to_channels[i]->midi_ch, 1, 16, NULL);
    5bb4:	9703      	str	r7, [sp, #12]
    5bb6:	2383      	movs	r3, #131	; 0x83
    5bb8:	05db      	lsls	r3, r3, #23
    5bba:	9302      	str	r3, [sp, #8]
    5bbc:	23fe      	movs	r3, #254	; 0xfe
    5bbe:	059b      	lsls	r3, r3, #22
    5bc0:	9301      	str	r3, [sp, #4]
    5bc2:	4643      	mov	r3, r8
    5bc4:	681b      	ldr	r3, [r3, #0]
    5bc6:	3309      	adds	r3, #9
    5bc8:	9300      	str	r3, [sp, #0]
    5bca:	4b3a      	ldr	r3, [pc, #232]	; (5cb4 <main+0x97c>)
    5bcc:	003a      	movs	r2, r7
    5bce:	4950      	ldr	r1, [pc, #320]	; (5d10 <main+0x9d8>)
    5bd0:	a811      	add	r0, sp, #68	; 0x44
    5bd2:	4d3a      	ldr	r5, [pc, #232]	; (5cbc <main+0x984>)
    5bd4:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5bd6:	6823      	ldr	r3, [r4, #0]
    5bd8:	469c      	mov	ip, r3
    5bda:	ab14      	add	r3, sp, #80	; 0x50
    5bdc:	466a      	mov	r2, sp
    5bde:	cb23      	ldmia	r3!, {r0, r1, r5}
    5be0:	c223      	stmia	r2!, {r0, r1, r5}
    5be2:	cb23      	ldmia	r3!, {r0, r1, r5}
    5be4:	c223      	stmia	r2!, {r0, r1, r5}
    5be6:	cb03      	ldmia	r3!, {r0, r1}
    5be8:	c203      	stmia	r2!, {r0, r1}
    5bea:	9911      	ldr	r1, [sp, #68]	; 0x44
    5bec:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5bee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5bf0:	4660      	mov	r0, ip
    5bf2:	47b0      	blx	r6
        menu_create_item(&tmp_item,  "MIDI NOTE", TYPE_UINT8, "", (void *)&p_to_channels[i]->note, 0, 127, NULL);
    5bf4:	9703      	str	r7, [sp, #12]
    5bf6:	4b47      	ldr	r3, [pc, #284]	; (5d14 <main+0x9dc>)
    5bf8:	9302      	str	r3, [sp, #8]
    5bfa:	464b      	mov	r3, r9
    5bfc:	9301      	str	r3, [sp, #4]
    5bfe:	4642      	mov	r2, r8
    5c00:	ca08      	ldmia	r2!, {r3}
    5c02:	4690      	mov	r8, r2
    5c04:	330a      	adds	r3, #10
    5c06:	9300      	str	r3, [sp, #0]
    5c08:	4b2a      	ldr	r3, [pc, #168]	; (5cb4 <main+0x97c>)
    5c0a:	003a      	movs	r2, r7
    5c0c:	4942      	ldr	r1, [pc, #264]	; (5d18 <main+0x9e0>)
    5c0e:	a811      	add	r0, sp, #68	; 0x44
    5c10:	4d2a      	ldr	r5, [pc, #168]	; (5cbc <main+0x984>)
    5c12:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5c14:	6823      	ldr	r3, [r4, #0]
    5c16:	469c      	mov	ip, r3
    5c18:	ab14      	add	r3, sp, #80	; 0x50
    5c1a:	466a      	mov	r2, sp
    5c1c:	cb23      	ldmia	r3!, {r0, r1, r5}
    5c1e:	c223      	stmia	r2!, {r0, r1, r5}
    5c20:	cb23      	ldmia	r3!, {r0, r1, r5}
    5c22:	c223      	stmia	r2!, {r0, r1, r5}
    5c24:	cb03      	ldmia	r3!, {r0, r1}
    5c26:	c203      	stmia	r2!, {r0, r1}
    5c28:	9911      	ldr	r1, [sp, #68]	; 0x44
    5c2a:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5c2c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5c2e:	4660      	mov	r0, ip
    5c30:	47b0      	blx	r6
        menu_create_item(&tmp_item, "BACK", TYPE_MENU, "", (void *)&main_menu, 0, 0, NULL);
    5c32:	9703      	str	r7, [sp, #12]
    5c34:	464b      	mov	r3, r9
    5c36:	9302      	str	r3, [sp, #8]
    5c38:	9301      	str	r3, [sp, #4]
    5c3a:	4b21      	ldr	r3, [pc, #132]	; (5cc0 <main+0x988>)
    5c3c:	9300      	str	r3, [sp, #0]
    5c3e:	4b1d      	ldr	r3, [pc, #116]	; (5cb4 <main+0x97c>)
    5c40:	2204      	movs	r2, #4
    5c42:	4921      	ldr	r1, [pc, #132]	; (5cc8 <main+0x990>)
    5c44:	a811      	add	r0, sp, #68	; 0x44
    5c46:	4d1d      	ldr	r5, [pc, #116]	; (5cbc <main+0x984>)
    5c48:	47a8      	blx	r5
        menu_add_item(p_to_menus[i], tmp_item);
    5c4a:	cc08      	ldmia	r4!, {r3}
    5c4c:	469c      	mov	ip, r3
    5c4e:	ab14      	add	r3, sp, #80	; 0x50
    5c50:	466a      	mov	r2, sp
    5c52:	cb23      	ldmia	r3!, {r0, r1, r5}
    5c54:	c223      	stmia	r2!, {r0, r1, r5}
    5c56:	cb23      	ldmia	r3!, {r0, r1, r5}
    5c58:	c223      	stmia	r2!, {r0, r1, r5}
    5c5a:	cb03      	ldmia	r3!, {r0, r1}
    5c5c:	c203      	stmia	r2!, {r0, r1}
    5c5e:	9911      	ldr	r1, [sp, #68]	; 0x44
    5c60:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5c62:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5c64:	4660      	mov	r0, ip
    5c66:	47b0      	blx	r6
    for (uint8_t i = 0; i < 5; i++) {
    5c68:	4b2c      	ldr	r3, [pc, #176]	; (5d1c <main+0x9e4>)
    5c6a:	429c      	cmp	r4, r3
    5c6c:	d000      	beq.n	5c70 <main+0x938>
    5c6e:	e689      	b.n	5984 <main+0x64c>
        dmx_values[i] = 0;
    5c70:	2300      	movs	r3, #0
    5c72:	465a      	mov	r2, fp
    5c74:	7013      	strb	r3, [r2, #0]
    5c76:	3201      	adds	r2, #1
    for (uint16_t i = 0; i < sizeof(dmx_values); i++) {
    5c78:	990b      	ldr	r1, [sp, #44]	; 0x2c
    5c7a:	428a      	cmp	r2, r1
    5c7c:	d1fa      	bne.n	5c74 <main+0x93c>
    dmx_values[6] = 255;
    5c7e:	22ff      	movs	r2, #255	; 0xff
    5c80:	4b27      	ldr	r3, [pc, #156]	; (5d20 <main+0x9e8>)
    5c82:	719a      	strb	r2, [r3, #6]
    uint8_t prev_compare_vals[5] = {0, 0, 0, 0, 0};
    5c84:	3afa      	subs	r2, #250	; 0xfa
    5c86:	2100      	movs	r1, #0
    5c88:	a80f      	add	r0, sp, #60	; 0x3c
    5c8a:	4b26      	ldr	r3, [pc, #152]	; (5d24 <main+0x9ec>)
    5c8c:	4798      	blx	r3
    uint32_t send_data_timer = 0, read_button_timer = 0;
    5c8e:	2300      	movs	r3, #0
    5c90:	930a      	str	r3, [sp, #40]	; 0x28
    5c92:	9309      	str	r3, [sp, #36]	; 0x24
    uint8_t prev_brightness = 0;
    5c94:	4699      	mov	r9, r3
    uint8_t prev_contrast = 0;
    5c96:	2500      	movs	r5, #0
    5c98:	2701      	movs	r7, #1
            if(p_to_channels[i]->level != prev_compare_vals[i]) {
    5c9a:	4b0c      	ldr	r3, [pc, #48]	; (5ccc <main+0x994>)
    5c9c:	4698      	mov	r8, r3
    5c9e:	e0c8      	b.n	5e32 <main+0xafa>
                        ac_set_scaler(2, p_to_channels[i]->level);
    5ca0:	2002      	movs	r0, #2
    5ca2:	4b21      	ldr	r3, [pc, #132]	; (5d28 <main+0x9f0>)
    5ca4:	4798      	blx	r3
                        break;
    5ca6:	e043      	b.n	5d30 <main+0x9f8>
                        ac_set_scaler(0, p_to_channels[i]->level);
    5ca8:	2000      	movs	r0, #0
    5caa:	4b1f      	ldr	r3, [pc, #124]	; (5d28 <main+0x9f0>)
    5cac:	4798      	blx	r3
                        break;
    5cae:	e03f      	b.n	5d30 <main+0x9f8>
    5cb0:	200017d8 	.word	0x200017d8
    5cb4:	0000927c 	.word	0x0000927c
    5cb8:	000092a8 	.word	0x000092a8
    5cbc:	00004021 	.word	0x00004021
    5cc0:	200011f4 	.word	0x200011f4
    5cc4:	00003c39 	.word	0x00003c39
    5cc8:	0000928c 	.word	0x0000928c
    5ccc:	20002970 	.word	0x20002970
    5cd0:	20000020 	.word	0x20000020
    5cd4:	00004ffd 	.word	0x00004ffd
    5cd8:	000092b4 	.word	0x000092b4
    5cdc:	40a00000 	.word	0x40a00000
    5ce0:	000092bc 	.word	0x000092bc
    5ce4:	000092c4 	.word	0x000092c4
    5ce8:	41f80000 	.word	0x41f80000
    5cec:	000092d0 	.word	0x000092d0
    5cf0:	459c4000 	.word	0x459c4000
    5cf4:	000092d8 	.word	0x000092d8
    5cf8:	000092dc 	.word	0x000092dc
    5cfc:	000092e4 	.word	0x000092e4
    5d00:	000092ec 	.word	0x000092ec
    5d04:	437f0000 	.word	0x437f0000
    5d08:	000092f4 	.word	0x000092f4
    5d0c:	000092fc 	.word	0x000092fc
    5d10:	00009304 	.word	0x00009304
    5d14:	42fe0000 	.word	0x42fe0000
    5d18:	0000930c 	.word	0x0000930c
    5d1c:	20000034 	.word	0x20000034
    5d20:	2000284c 	.word	0x2000284c
    5d24:	00008663 	.word	0x00008663
    5d28:	00003a41 	.word	0x00003a41
        for(uint8_t i = 0; i < 3; i++) {
    5d2c:	2e02      	cmp	r6, #2
    5d2e:	d816      	bhi.n	5d5e <main+0xa26>
    5d30:	3401      	adds	r4, #1
    5d32:	3601      	adds	r6, #1
    5d34:	b2f6      	uxtb	r6, r6
    5d36:	b2e3      	uxtb	r3, r4
            if(p_to_channels[i]->level != prev_compare_vals[i]) {
    5d38:	00a2      	lsls	r2, r4, #2
    5d3a:	4641      	mov	r1, r8
    5d3c:	588a      	ldr	r2, [r1, r2]
    5d3e:	7811      	ldrb	r1, [r2, #0]
    5d40:	aa0f      	add	r2, sp, #60	; 0x3c
    5d42:	5ca2      	ldrb	r2, [r4, r2]
    5d44:	428a      	cmp	r2, r1
    5d46:	d0f1      	beq.n	5d2c <main+0x9f4>
                prev_compare_vals[i] = p_to_channels[i]->level;
    5d48:	aa0f      	add	r2, sp, #60	; 0x3c
    5d4a:	54a1      	strb	r1, [r4, r2]
                switch(i) {
    5d4c:	2b01      	cmp	r3, #1
    5d4e:	d0ab      	beq.n	5ca8 <main+0x970>
    5d50:	2b00      	cmp	r3, #0
    5d52:	d0a5      	beq.n	5ca0 <main+0x968>
    5d54:	2b02      	cmp	r3, #2
    5d56:	d1e9      	bne.n	5d2c <main+0x9f4>
                        ac_set_scaler(1, p_to_channels[i]->level);
    5d58:	0038      	movs	r0, r7
    5d5a:	4b62      	ldr	r3, [pc, #392]	; (5ee4 <main+0xbac>)
    5d5c:	4798      	blx	r3
        if (device_settings.contrast != prev_contrast) {
    5d5e:	4b62      	ldr	r3, [pc, #392]	; (5ee8 <main+0xbb0>)
    5d60:	781e      	ldrb	r6, [r3, #0]
    5d62:	42b5      	cmp	r5, r6
    5d64:	d004      	beq.n	5d70 <main+0xa38>
            dac_chan_write(&dac_instance, DAC_CHANNEL_0, (device_settings.contrast << 5));
    5d66:	0172      	lsls	r2, r6, #5
    5d68:	2100      	movs	r1, #0
    5d6a:	4860      	ldr	r0, [pc, #384]	; (5eec <main+0xbb4>)
    5d6c:	4b60      	ldr	r3, [pc, #384]	; (5ef0 <main+0xbb8>)
    5d6e:	4798      	blx	r3
        if (device_settings.brightness != prev_brightness) {
    5d70:	4b5d      	ldr	r3, [pc, #372]	; (5ee8 <main+0xbb0>)
    5d72:	7858      	ldrb	r0, [r3, #1]
    5d74:	4581      	cmp	r9, r0
    5d76:	d01a      	beq.n	5dae <main+0xa76>
            set_brightness(device_settings.brightness);
    5d78:	4b5e      	ldr	r3, [pc, #376]	; (5ef4 <main+0xbbc>)
    5d7a:	4798      	blx	r3
            prev_brightness = device_settings.brightness;
    5d7c:	4b5a      	ldr	r3, [pc, #360]	; (5ee8 <main+0xbb0>)
    5d7e:	785b      	ldrb	r3, [r3, #1]
    5d80:	4699      	mov	r9, r3
        if (key_pressed) {
    5d82:	4b5d      	ldr	r3, [pc, #372]	; (5ef8 <main+0xbc0>)
    5d84:	781b      	ldrb	r3, [r3, #0]
    5d86:	2b00      	cmp	r3, #0
    5d88:	d113      	bne.n	5db2 <main+0xa7a>
        key_pressed = 1;
    5d8a:	4b5b      	ldr	r3, [pc, #364]	; (5ef8 <main+0xbc0>)
    5d8c:	701f      	strb	r7, [r3, #0]
        switch (get_encoder_status()) {
    5d8e:	4b5b      	ldr	r3, [pc, #364]	; (5efc <main+0xbc4>)
    5d90:	4798      	blx	r3
    5d92:	2801      	cmp	r0, #1
    5d94:	d01f      	beq.n	5dd6 <main+0xa9e>
    5d96:	2802      	cmp	r0, #2
    5d98:	d136      	bne.n	5e08 <main+0xad0>
                for (uint8_t i = get_encoder_speed(); i > 0; i--)
    5d9a:	4b59      	ldr	r3, [pc, #356]	; (5f00 <main+0xbc8>)
    5d9c:	4798      	blx	r3
    5d9e:	1e04      	subs	r4, r0, #0
    5da0:	d035      	beq.n	5e0e <main+0xad6>
                    if (state == SCROLL) {
    5da2:	4d58      	ldr	r5, [pc, #352]	; (5f04 <main+0xbcc>)
                        decrement_menu_position(selected_menu);
    5da4:	4b58      	ldr	r3, [pc, #352]	; (5f08 <main+0xbd0>)
    5da6:	469b      	mov	fp, r3
    5da8:	4b58      	ldr	r3, [pc, #352]	; (5f0c <main+0xbd4>)
    5daa:	469a      	mov	sl, r3
    5dac:	e00c      	b.n	5dc8 <main+0xa90>
    5dae:	4681      	mov	r9, r0
    5db0:	e7e7      	b.n	5d82 <main+0xa4a>
            menu_draw();
    5db2:	4b57      	ldr	r3, [pc, #348]	; (5f10 <main+0xbd8>)
    5db4:	4798      	blx	r3
    5db6:	e7e8      	b.n	5d8a <main+0xa52>
                        menu_decrement_item(selected_menu);
    5db8:	4b53      	ldr	r3, [pc, #332]	; (5f08 <main+0xbd0>)
    5dba:	6818      	ldr	r0, [r3, #0]
    5dbc:	4b55      	ldr	r3, [pc, #340]	; (5f14 <main+0xbdc>)
    5dbe:	4798      	blx	r3
                for (uint8_t i = get_encoder_speed(); i > 0; i--)
    5dc0:	3c01      	subs	r4, #1
    5dc2:	b2e4      	uxtb	r4, r4
    5dc4:	2c00      	cmp	r4, #0
    5dc6:	d022      	beq.n	5e0e <main+0xad6>
                    if (state == SCROLL) {
    5dc8:	782b      	ldrb	r3, [r5, #0]
    5dca:	2b00      	cmp	r3, #0
    5dcc:	d1f4      	bne.n	5db8 <main+0xa80>
                        decrement_menu_position(selected_menu);
    5dce:	465b      	mov	r3, fp
    5dd0:	6818      	ldr	r0, [r3, #0]
    5dd2:	47d0      	blx	sl
    5dd4:	e7f4      	b.n	5dc0 <main+0xa88>
                for (uint8_t i = get_encoder_speed(); i > 0; i--)
    5dd6:	4b4a      	ldr	r3, [pc, #296]	; (5f00 <main+0xbc8>)
    5dd8:	4798      	blx	r3
    5dda:	1e04      	subs	r4, r0, #0
    5ddc:	d017      	beq.n	5e0e <main+0xad6>
                    if (state == SCROLL) {
    5dde:	4d49      	ldr	r5, [pc, #292]	; (5f04 <main+0xbcc>)
                        increment_menu_position(selected_menu);
    5de0:	4b49      	ldr	r3, [pc, #292]	; (5f08 <main+0xbd0>)
    5de2:	469b      	mov	fp, r3
    5de4:	4b4c      	ldr	r3, [pc, #304]	; (5f18 <main+0xbe0>)
    5de6:	469a      	mov	sl, r3
    5de8:	e007      	b.n	5dfa <main+0xac2>
                        menu_increment_item(selected_menu);
    5dea:	4b47      	ldr	r3, [pc, #284]	; (5f08 <main+0xbd0>)
    5dec:	6818      	ldr	r0, [r3, #0]
    5dee:	4b4b      	ldr	r3, [pc, #300]	; (5f1c <main+0xbe4>)
    5df0:	4798      	blx	r3
                for (uint8_t i = get_encoder_speed(); i > 0; i--)
    5df2:	3c01      	subs	r4, #1
    5df4:	b2e4      	uxtb	r4, r4
    5df6:	2c00      	cmp	r4, #0
    5df8:	d009      	beq.n	5e0e <main+0xad6>
                    if (state == SCROLL) {
    5dfa:	782b      	ldrb	r3, [r5, #0]
    5dfc:	2b00      	cmp	r3, #0
    5dfe:	d1f4      	bne.n	5dea <main+0xab2>
                        increment_menu_position(selected_menu);
    5e00:	465b      	mov	r3, fp
    5e02:	6818      	ldr	r0, [r3, #0]
    5e04:	47d0      	blx	sl
    5e06:	e7f4      	b.n	5df2 <main+0xaba>
                key_pressed = 0;
    5e08:	2200      	movs	r2, #0
    5e0a:	4b3b      	ldr	r3, [pc, #236]	; (5ef8 <main+0xbc0>)
    5e0c:	701a      	strb	r2, [r3, #0]
        if (millis() - read_button_timer > 2) {
    5e0e:	4b44      	ldr	r3, [pc, #272]	; (5f20 <main+0xbe8>)
    5e10:	4798      	blx	r3
    5e12:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5e14:	1ac0      	subs	r0, r0, r3
    5e16:	2802      	cmp	r0, #2
    5e18:	d80e      	bhi.n	5e38 <main+0xb00>
	return (port_base->IN.reg & pin_mask);
    5e1a:	2382      	movs	r3, #130	; 0x82
    5e1c:	05db      	lsls	r3, r3, #23
    5e1e:	6a1b      	ldr	r3, [r3, #32]
        if (port_pin_get_input_level(PIN_SW1) == 0)
    5e20:	04db      	lsls	r3, r3, #19
    5e22:	d512      	bpl.n	5e4a <main+0xb12>
        if (millis() - send_data_timer > 20) {
    5e24:	4b3e      	ldr	r3, [pc, #248]	; (5f20 <main+0xbe8>)
    5e26:	4798      	blx	r3
    5e28:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5e2a:	1ac0      	subs	r0, r0, r3
    5e2c:	2814      	cmp	r0, #20
    5e2e:	d810      	bhi.n	5e52 <main+0xb1a>
    menu_add_item(&settings_menu, tmp_item);
    5e30:	0035      	movs	r5, r6
    uint8_t prev_contrast = 0;
    5e32:	003e      	movs	r6, r7
    5e34:	2400      	movs	r4, #0
    5e36:	e77e      	b.n	5d36 <main+0x9fe>
            read_button_timer = millis();
    5e38:	4b39      	ldr	r3, [pc, #228]	; (5f20 <main+0xbe8>)
    5e3a:	4798      	blx	r3
    5e3c:	900a      	str	r0, [sp, #40]	; 0x28
            button_handler(button_read(), &state);
    5e3e:	4b39      	ldr	r3, [pc, #228]	; (5f24 <main+0xbec>)
    5e40:	4798      	blx	r3
    5e42:	4930      	ldr	r1, [pc, #192]	; (5f04 <main+0xbcc>)
    5e44:	4b38      	ldr	r3, [pc, #224]	; (5f28 <main+0xbf0>)
    5e46:	4798      	blx	r3
    5e48:	e7e7      	b.n	5e1a <main+0xae2>
            adsr_trigger(adsr_channels + 0);
    5e4a:	4838      	ldr	r0, [pc, #224]	; (5f2c <main+0xbf4>)
    5e4c:	4b38      	ldr	r3, [pc, #224]	; (5f30 <main+0xbf8>)
    5e4e:	4798      	blx	r3
    5e50:	e7e8      	b.n	5e24 <main+0xaec>
            send_data_timer = millis();
    5e52:	4b33      	ldr	r3, [pc, #204]	; (5f20 <main+0xbe8>)
    5e54:	4798      	blx	r3
    5e56:	9009      	str	r0, [sp, #36]	; 0x24
            device_mode = select_device_mode(device_settings.mode);
    5e58:	4b23      	ldr	r3, [pc, #140]	; (5ee8 <main+0xbb0>)
    5e5a:	78d8      	ldrb	r0, [r3, #3]
    5e5c:	4b35      	ldr	r3, [pc, #212]	; (5f34 <main+0xbfc>)
    5e5e:	4798      	blx	r3
    5e60:	4b35      	ldr	r3, [pc, #212]	; (5f38 <main+0xc00>)
    5e62:	7018      	strb	r0, [r3, #0]
    5e64:	4d31      	ldr	r5, [pc, #196]	; (5f2c <main+0xbf4>)
    5e66:	2400      	movs	r4, #0
                if(p_to_channels[i]->enabled)
    5e68:	4b34      	ldr	r3, [pc, #208]	; (5f3c <main+0xc04>)
    5e6a:	469a      	mov	sl, r3
    5e6c:	e003      	b.n	5e76 <main+0xb3e>
    5e6e:	3530      	adds	r5, #48	; 0x30
    5e70:	3404      	adds	r4, #4
            for(uint8_t i = 0; i < 5; i++)
    5e72:	2c14      	cmp	r4, #20
    5e74:	d00d      	beq.n	5e92 <main+0xb5a>
                if(p_to_channels[i]->enabled)
    5e76:	4653      	mov	r3, sl
    5e78:	591b      	ldr	r3, [r3, r4]
    5e7a:	785a      	ldrb	r2, [r3, #1]
    5e7c:	2a00      	cmp	r2, #0
    5e7e:	d0f6      	beq.n	5e6e <main+0xb36>
                    dmx_values[p_to_channels[i]->dmx_ch] = adsr_get_value(adsr_channels + i);
    5e80:	685b      	ldr	r3, [r3, #4]
    5e82:	469b      	mov	fp, r3
    5e84:	0028      	movs	r0, r5
    5e86:	4b2e      	ldr	r3, [pc, #184]	; (5f40 <main+0xc08>)
    5e88:	4798      	blx	r3
    5e8a:	4b2e      	ldr	r3, [pc, #184]	; (5f44 <main+0xc0c>)
    5e8c:	465a      	mov	r2, fp
    5e8e:	5498      	strb	r0, [r3, r2]
    5e90:	e7ed      	b.n	5e6e <main+0xb36>
            if (device_mode == DMX || device_mode == BOTH) {
    5e92:	4b29      	ldr	r3, [pc, #164]	; (5f38 <main+0xc00>)
    5e94:	781b      	ldrb	r3, [r3, #0]
    5e96:	3b01      	subs	r3, #1
    5e98:	2b01      	cmp	r3, #1
    5e9a:	d907      	bls.n	5eac <main+0xb74>
            if (device_mode == TRIGGER || device_mode == BOTH) {
    5e9c:	4b26      	ldr	r3, [pc, #152]	; (5f38 <main+0xc00>)
    5e9e:	781b      	ldrb	r3, [r3, #0]
    5ea0:	2202      	movs	r2, #2
    5ea2:	4393      	bics	r3, r2
    5ea4:	d1c4      	bne.n	5e30 <main+0xaf8>
    5ea6:	2400      	movs	r4, #0
                    if((get_trigger_flags() >> i) & 0x1)
    5ea8:	4d27      	ldr	r5, [pc, #156]	; (5f48 <main+0xc10>)
    5eaa:	e008      	b.n	5ebe <main+0xb86>
                DMX_SendMessage(dmx_values, sizeof(dmx_values));
    5eac:	2180      	movs	r1, #128	; 0x80
    5eae:	0049      	lsls	r1, r1, #1
    5eb0:	4824      	ldr	r0, [pc, #144]	; (5f44 <main+0xc0c>)
    5eb2:	4b26      	ldr	r3, [pc, #152]	; (5f4c <main+0xc14>)
    5eb4:	4798      	blx	r3
    5eb6:	e7f1      	b.n	5e9c <main+0xb64>
    5eb8:	3401      	adds	r4, #1
                for(uint8_t i = 0; i < 5; i++)
    5eba:	2c05      	cmp	r4, #5
    5ebc:	d00e      	beq.n	5edc <main+0xba4>
                    if((get_trigger_flags() >> i) & 0x1)
    5ebe:	47a8      	blx	r5
    5ec0:	4120      	asrs	r0, r4
    5ec2:	4207      	tst	r7, r0
    5ec4:	d0f8      	beq.n	5eb8 <main+0xb80>
                        MIDI_send_note_on(p_to_channels[i]->midi_ch, p_to_channels[i]->note, dmx_values[p_to_channels[i]->dmx_ch]);
    5ec6:	00a3      	lsls	r3, r4, #2
    5ec8:	4a1c      	ldr	r2, [pc, #112]	; (5f3c <main+0xc04>)
    5eca:	58d3      	ldr	r3, [r2, r3]
    5ecc:	4a1d      	ldr	r2, [pc, #116]	; (5f44 <main+0xc0c>)
    5ece:	6859      	ldr	r1, [r3, #4]
    5ed0:	5c52      	ldrb	r2, [r2, r1]
    5ed2:	7a99      	ldrb	r1, [r3, #10]
    5ed4:	7a58      	ldrb	r0, [r3, #9]
    5ed6:	4b1e      	ldr	r3, [pc, #120]	; (5f50 <main+0xc18>)
    5ed8:	4798      	blx	r3
    5eda:	e7ed      	b.n	5eb8 <main+0xb80>
                clear_trigger_flags();
    5edc:	4b1d      	ldr	r3, [pc, #116]	; (5f54 <main+0xc1c>)
    5ede:	4798      	blx	r3
    5ee0:	e7a6      	b.n	5e30 <main+0xaf8>
    5ee2:	46c0      	nop			; (mov r8, r8)
    5ee4:	00003a41 	.word	0x00003a41
    5ee8:	20000018 	.word	0x20000018
    5eec:	2000294c 	.word	0x2000294c
    5ef0:	000022c9 	.word	0x000022c9
    5ef4:	000046bd 	.word	0x000046bd
    5ef8:	2000001c 	.word	0x2000001c
    5efc:	00004451 	.word	0x00004451
    5f00:	0000460d 	.word	0x0000460d
    5f04:	200017d4 	.word	0x200017d4
    5f08:	20000254 	.word	0x20000254
    5f0c:	00003cbd 	.word	0x00003cbd
    5f10:	000052d5 	.word	0x000052d5
    5f14:	0000411d 	.word	0x0000411d
    5f18:	00003c89 	.word	0x00003c89
    5f1c:	00004051 	.word	0x00004051
    5f20:	00004445 	.word	0x00004445
    5f24:	00000bf1 	.word	0x00000bf1
    5f28:	00005271 	.word	0x00005271
    5f2c:	2000275c 	.word	0x2000275c
    5f30:	000006c5 	.word	0x000006c5
    5f34:	00005115 	.word	0x00005115
    5f38:	200029e8 	.word	0x200029e8
    5f3c:	20002970 	.word	0x20002970
    5f40:	000006c1 	.word	0x000006c1
    5f44:	2000284c 	.word	0x2000284c
    5f48:	0000070d 	.word	0x0000070d
    5f4c:	00001ea1 	.word	0x00001ea1
    5f50:	00004425 	.word	0x00004425
    5f54:	00000719 	.word	0x00000719

00005f58 <__udivsi3>:
    5f58:	2200      	movs	r2, #0
    5f5a:	0843      	lsrs	r3, r0, #1
    5f5c:	428b      	cmp	r3, r1
    5f5e:	d374      	bcc.n	604a <__udivsi3+0xf2>
    5f60:	0903      	lsrs	r3, r0, #4
    5f62:	428b      	cmp	r3, r1
    5f64:	d35f      	bcc.n	6026 <__udivsi3+0xce>
    5f66:	0a03      	lsrs	r3, r0, #8
    5f68:	428b      	cmp	r3, r1
    5f6a:	d344      	bcc.n	5ff6 <__udivsi3+0x9e>
    5f6c:	0b03      	lsrs	r3, r0, #12
    5f6e:	428b      	cmp	r3, r1
    5f70:	d328      	bcc.n	5fc4 <__udivsi3+0x6c>
    5f72:	0c03      	lsrs	r3, r0, #16
    5f74:	428b      	cmp	r3, r1
    5f76:	d30d      	bcc.n	5f94 <__udivsi3+0x3c>
    5f78:	22ff      	movs	r2, #255	; 0xff
    5f7a:	0209      	lsls	r1, r1, #8
    5f7c:	ba12      	rev	r2, r2
    5f7e:	0c03      	lsrs	r3, r0, #16
    5f80:	428b      	cmp	r3, r1
    5f82:	d302      	bcc.n	5f8a <__udivsi3+0x32>
    5f84:	1212      	asrs	r2, r2, #8
    5f86:	0209      	lsls	r1, r1, #8
    5f88:	d065      	beq.n	6056 <__udivsi3+0xfe>
    5f8a:	0b03      	lsrs	r3, r0, #12
    5f8c:	428b      	cmp	r3, r1
    5f8e:	d319      	bcc.n	5fc4 <__udivsi3+0x6c>
    5f90:	e000      	b.n	5f94 <__udivsi3+0x3c>
    5f92:	0a09      	lsrs	r1, r1, #8
    5f94:	0bc3      	lsrs	r3, r0, #15
    5f96:	428b      	cmp	r3, r1
    5f98:	d301      	bcc.n	5f9e <__udivsi3+0x46>
    5f9a:	03cb      	lsls	r3, r1, #15
    5f9c:	1ac0      	subs	r0, r0, r3
    5f9e:	4152      	adcs	r2, r2
    5fa0:	0b83      	lsrs	r3, r0, #14
    5fa2:	428b      	cmp	r3, r1
    5fa4:	d301      	bcc.n	5faa <__udivsi3+0x52>
    5fa6:	038b      	lsls	r3, r1, #14
    5fa8:	1ac0      	subs	r0, r0, r3
    5faa:	4152      	adcs	r2, r2
    5fac:	0b43      	lsrs	r3, r0, #13
    5fae:	428b      	cmp	r3, r1
    5fb0:	d301      	bcc.n	5fb6 <__udivsi3+0x5e>
    5fb2:	034b      	lsls	r3, r1, #13
    5fb4:	1ac0      	subs	r0, r0, r3
    5fb6:	4152      	adcs	r2, r2
    5fb8:	0b03      	lsrs	r3, r0, #12
    5fba:	428b      	cmp	r3, r1
    5fbc:	d301      	bcc.n	5fc2 <__udivsi3+0x6a>
    5fbe:	030b      	lsls	r3, r1, #12
    5fc0:	1ac0      	subs	r0, r0, r3
    5fc2:	4152      	adcs	r2, r2
    5fc4:	0ac3      	lsrs	r3, r0, #11
    5fc6:	428b      	cmp	r3, r1
    5fc8:	d301      	bcc.n	5fce <__udivsi3+0x76>
    5fca:	02cb      	lsls	r3, r1, #11
    5fcc:	1ac0      	subs	r0, r0, r3
    5fce:	4152      	adcs	r2, r2
    5fd0:	0a83      	lsrs	r3, r0, #10
    5fd2:	428b      	cmp	r3, r1
    5fd4:	d301      	bcc.n	5fda <__udivsi3+0x82>
    5fd6:	028b      	lsls	r3, r1, #10
    5fd8:	1ac0      	subs	r0, r0, r3
    5fda:	4152      	adcs	r2, r2
    5fdc:	0a43      	lsrs	r3, r0, #9
    5fde:	428b      	cmp	r3, r1
    5fe0:	d301      	bcc.n	5fe6 <__udivsi3+0x8e>
    5fe2:	024b      	lsls	r3, r1, #9
    5fe4:	1ac0      	subs	r0, r0, r3
    5fe6:	4152      	adcs	r2, r2
    5fe8:	0a03      	lsrs	r3, r0, #8
    5fea:	428b      	cmp	r3, r1
    5fec:	d301      	bcc.n	5ff2 <__udivsi3+0x9a>
    5fee:	020b      	lsls	r3, r1, #8
    5ff0:	1ac0      	subs	r0, r0, r3
    5ff2:	4152      	adcs	r2, r2
    5ff4:	d2cd      	bcs.n	5f92 <__udivsi3+0x3a>
    5ff6:	09c3      	lsrs	r3, r0, #7
    5ff8:	428b      	cmp	r3, r1
    5ffa:	d301      	bcc.n	6000 <__udivsi3+0xa8>
    5ffc:	01cb      	lsls	r3, r1, #7
    5ffe:	1ac0      	subs	r0, r0, r3
    6000:	4152      	adcs	r2, r2
    6002:	0983      	lsrs	r3, r0, #6
    6004:	428b      	cmp	r3, r1
    6006:	d301      	bcc.n	600c <__udivsi3+0xb4>
    6008:	018b      	lsls	r3, r1, #6
    600a:	1ac0      	subs	r0, r0, r3
    600c:	4152      	adcs	r2, r2
    600e:	0943      	lsrs	r3, r0, #5
    6010:	428b      	cmp	r3, r1
    6012:	d301      	bcc.n	6018 <__udivsi3+0xc0>
    6014:	014b      	lsls	r3, r1, #5
    6016:	1ac0      	subs	r0, r0, r3
    6018:	4152      	adcs	r2, r2
    601a:	0903      	lsrs	r3, r0, #4
    601c:	428b      	cmp	r3, r1
    601e:	d301      	bcc.n	6024 <__udivsi3+0xcc>
    6020:	010b      	lsls	r3, r1, #4
    6022:	1ac0      	subs	r0, r0, r3
    6024:	4152      	adcs	r2, r2
    6026:	08c3      	lsrs	r3, r0, #3
    6028:	428b      	cmp	r3, r1
    602a:	d301      	bcc.n	6030 <__udivsi3+0xd8>
    602c:	00cb      	lsls	r3, r1, #3
    602e:	1ac0      	subs	r0, r0, r3
    6030:	4152      	adcs	r2, r2
    6032:	0883      	lsrs	r3, r0, #2
    6034:	428b      	cmp	r3, r1
    6036:	d301      	bcc.n	603c <__udivsi3+0xe4>
    6038:	008b      	lsls	r3, r1, #2
    603a:	1ac0      	subs	r0, r0, r3
    603c:	4152      	adcs	r2, r2
    603e:	0843      	lsrs	r3, r0, #1
    6040:	428b      	cmp	r3, r1
    6042:	d301      	bcc.n	6048 <__udivsi3+0xf0>
    6044:	004b      	lsls	r3, r1, #1
    6046:	1ac0      	subs	r0, r0, r3
    6048:	4152      	adcs	r2, r2
    604a:	1a41      	subs	r1, r0, r1
    604c:	d200      	bcs.n	6050 <__udivsi3+0xf8>
    604e:	4601      	mov	r1, r0
    6050:	4152      	adcs	r2, r2
    6052:	4610      	mov	r0, r2
    6054:	4770      	bx	lr
    6056:	e7ff      	b.n	6058 <__udivsi3+0x100>
    6058:	b501      	push	{r0, lr}
    605a:	2000      	movs	r0, #0
    605c:	f000 f806 	bl	606c <__aeabi_idiv0>
    6060:	bd02      	pop	{r1, pc}
    6062:	46c0      	nop			; (mov r8, r8)

00006064 <__aeabi_uidivmod>:
    6064:	2900      	cmp	r1, #0
    6066:	d0f7      	beq.n	6058 <__udivsi3+0x100>
    6068:	e776      	b.n	5f58 <__udivsi3>
    606a:	4770      	bx	lr

0000606c <__aeabi_idiv0>:
    606c:	4770      	bx	lr
    606e:	46c0      	nop			; (mov r8, r8)

00006070 <__aeabi_cfrcmple>:
    6070:	4684      	mov	ip, r0
    6072:	1c08      	adds	r0, r1, #0
    6074:	4661      	mov	r1, ip
    6076:	e7ff      	b.n	6078 <__aeabi_cfcmpeq>

00006078 <__aeabi_cfcmpeq>:
    6078:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    607a:	f000 f9bb 	bl	63f4 <__lesf2>
    607e:	2800      	cmp	r0, #0
    6080:	d401      	bmi.n	6086 <__aeabi_cfcmpeq+0xe>
    6082:	2100      	movs	r1, #0
    6084:	42c8      	cmn	r0, r1
    6086:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00006088 <__aeabi_fcmpeq>:
    6088:	b510      	push	{r4, lr}
    608a:	f000 f94d 	bl	6328 <__eqsf2>
    608e:	4240      	negs	r0, r0
    6090:	3001      	adds	r0, #1
    6092:	bd10      	pop	{r4, pc}

00006094 <__aeabi_fcmplt>:
    6094:	b510      	push	{r4, lr}
    6096:	f000 f9ad 	bl	63f4 <__lesf2>
    609a:	2800      	cmp	r0, #0
    609c:	db01      	blt.n	60a2 <__aeabi_fcmplt+0xe>
    609e:	2000      	movs	r0, #0
    60a0:	bd10      	pop	{r4, pc}
    60a2:	2001      	movs	r0, #1
    60a4:	bd10      	pop	{r4, pc}
    60a6:	46c0      	nop			; (mov r8, r8)

000060a8 <__aeabi_fcmple>:
    60a8:	b510      	push	{r4, lr}
    60aa:	f000 f9a3 	bl	63f4 <__lesf2>
    60ae:	2800      	cmp	r0, #0
    60b0:	dd01      	ble.n	60b6 <__aeabi_fcmple+0xe>
    60b2:	2000      	movs	r0, #0
    60b4:	bd10      	pop	{r4, pc}
    60b6:	2001      	movs	r0, #1
    60b8:	bd10      	pop	{r4, pc}
    60ba:	46c0      	nop			; (mov r8, r8)

000060bc <__aeabi_fcmpgt>:
    60bc:	b510      	push	{r4, lr}
    60be:	f000 f959 	bl	6374 <__gesf2>
    60c2:	2800      	cmp	r0, #0
    60c4:	dc01      	bgt.n	60ca <__aeabi_fcmpgt+0xe>
    60c6:	2000      	movs	r0, #0
    60c8:	bd10      	pop	{r4, pc}
    60ca:	2001      	movs	r0, #1
    60cc:	bd10      	pop	{r4, pc}
    60ce:	46c0      	nop			; (mov r8, r8)

000060d0 <__aeabi_fcmpge>:
    60d0:	b510      	push	{r4, lr}
    60d2:	f000 f94f 	bl	6374 <__gesf2>
    60d6:	2800      	cmp	r0, #0
    60d8:	da01      	bge.n	60de <__aeabi_fcmpge+0xe>
    60da:	2000      	movs	r0, #0
    60dc:	bd10      	pop	{r4, pc}
    60de:	2001      	movs	r0, #1
    60e0:	bd10      	pop	{r4, pc}
    60e2:	46c0      	nop			; (mov r8, r8)

000060e4 <__aeabi_uldivmod>:
    60e4:	2b00      	cmp	r3, #0
    60e6:	d111      	bne.n	610c <__aeabi_uldivmod+0x28>
    60e8:	2a00      	cmp	r2, #0
    60ea:	d10f      	bne.n	610c <__aeabi_uldivmod+0x28>
    60ec:	2900      	cmp	r1, #0
    60ee:	d100      	bne.n	60f2 <__aeabi_uldivmod+0xe>
    60f0:	2800      	cmp	r0, #0
    60f2:	d002      	beq.n	60fa <__aeabi_uldivmod+0x16>
    60f4:	2100      	movs	r1, #0
    60f6:	43c9      	mvns	r1, r1
    60f8:	1c08      	adds	r0, r1, #0
    60fa:	b407      	push	{r0, r1, r2}
    60fc:	4802      	ldr	r0, [pc, #8]	; (6108 <__aeabi_uldivmod+0x24>)
    60fe:	a102      	add	r1, pc, #8	; (adr r1, 6108 <__aeabi_uldivmod+0x24>)
    6100:	1840      	adds	r0, r0, r1
    6102:	9002      	str	r0, [sp, #8]
    6104:	bd03      	pop	{r0, r1, pc}
    6106:	46c0      	nop			; (mov r8, r8)
    6108:	ffffff65 	.word	0xffffff65
    610c:	b403      	push	{r0, r1}
    610e:	4668      	mov	r0, sp
    6110:	b501      	push	{r0, lr}
    6112:	9802      	ldr	r0, [sp, #8]
    6114:	f000 f848 	bl	61a8 <__udivmoddi4>
    6118:	9b01      	ldr	r3, [sp, #4]
    611a:	469e      	mov	lr, r3
    611c:	b002      	add	sp, #8
    611e:	bc0c      	pop	{r2, r3}
    6120:	4770      	bx	lr
    6122:	46c0      	nop			; (mov r8, r8)

00006124 <__aeabi_lmul>:
    6124:	b5f0      	push	{r4, r5, r6, r7, lr}
    6126:	46ce      	mov	lr, r9
    6128:	4647      	mov	r7, r8
    612a:	0415      	lsls	r5, r2, #16
    612c:	0c2d      	lsrs	r5, r5, #16
    612e:	002e      	movs	r6, r5
    6130:	b580      	push	{r7, lr}
    6132:	0407      	lsls	r7, r0, #16
    6134:	0c14      	lsrs	r4, r2, #16
    6136:	0c3f      	lsrs	r7, r7, #16
    6138:	4699      	mov	r9, r3
    613a:	0c03      	lsrs	r3, r0, #16
    613c:	437e      	muls	r6, r7
    613e:	435d      	muls	r5, r3
    6140:	4367      	muls	r7, r4
    6142:	4363      	muls	r3, r4
    6144:	197f      	adds	r7, r7, r5
    6146:	0c34      	lsrs	r4, r6, #16
    6148:	19e4      	adds	r4, r4, r7
    614a:	469c      	mov	ip, r3
    614c:	42a5      	cmp	r5, r4
    614e:	d903      	bls.n	6158 <__aeabi_lmul+0x34>
    6150:	2380      	movs	r3, #128	; 0x80
    6152:	025b      	lsls	r3, r3, #9
    6154:	4698      	mov	r8, r3
    6156:	44c4      	add	ip, r8
    6158:	464b      	mov	r3, r9
    615a:	4351      	muls	r1, r2
    615c:	4343      	muls	r3, r0
    615e:	0436      	lsls	r6, r6, #16
    6160:	0c36      	lsrs	r6, r6, #16
    6162:	0c25      	lsrs	r5, r4, #16
    6164:	0424      	lsls	r4, r4, #16
    6166:	4465      	add	r5, ip
    6168:	19a4      	adds	r4, r4, r6
    616a:	1859      	adds	r1, r3, r1
    616c:	1949      	adds	r1, r1, r5
    616e:	0020      	movs	r0, r4
    6170:	bc0c      	pop	{r2, r3}
    6172:	4690      	mov	r8, r2
    6174:	4699      	mov	r9, r3
    6176:	bdf0      	pop	{r4, r5, r6, r7, pc}

00006178 <__aeabi_f2uiz>:
    6178:	219e      	movs	r1, #158	; 0x9e
    617a:	b510      	push	{r4, lr}
    617c:	05c9      	lsls	r1, r1, #23
    617e:	1c04      	adds	r4, r0, #0
    6180:	f7ff ffa6 	bl	60d0 <__aeabi_fcmpge>
    6184:	2800      	cmp	r0, #0
    6186:	d103      	bne.n	6190 <__aeabi_f2uiz+0x18>
    6188:	1c20      	adds	r0, r4, #0
    618a:	f000 fc31 	bl	69f0 <__aeabi_f2iz>
    618e:	bd10      	pop	{r4, pc}
    6190:	219e      	movs	r1, #158	; 0x9e
    6192:	1c20      	adds	r0, r4, #0
    6194:	05c9      	lsls	r1, r1, #23
    6196:	f000 fa8f 	bl	66b8 <__aeabi_fsub>
    619a:	f000 fc29 	bl	69f0 <__aeabi_f2iz>
    619e:	2380      	movs	r3, #128	; 0x80
    61a0:	061b      	lsls	r3, r3, #24
    61a2:	469c      	mov	ip, r3
    61a4:	4460      	add	r0, ip
    61a6:	e7f2      	b.n	618e <__aeabi_f2uiz+0x16>

000061a8 <__udivmoddi4>:
    61a8:	b5f0      	push	{r4, r5, r6, r7, lr}
    61aa:	4657      	mov	r7, sl
    61ac:	464e      	mov	r6, r9
    61ae:	4645      	mov	r5, r8
    61b0:	46de      	mov	lr, fp
    61b2:	b5e0      	push	{r5, r6, r7, lr}
    61b4:	0004      	movs	r4, r0
    61b6:	b083      	sub	sp, #12
    61b8:	000d      	movs	r5, r1
    61ba:	4692      	mov	sl, r2
    61bc:	4699      	mov	r9, r3
    61be:	428b      	cmp	r3, r1
    61c0:	d82f      	bhi.n	6222 <__udivmoddi4+0x7a>
    61c2:	d02c      	beq.n	621e <__udivmoddi4+0x76>
    61c4:	4649      	mov	r1, r9
    61c6:	4650      	mov	r0, sl
    61c8:	f002 fa08 	bl	85dc <__clzdi2>
    61cc:	0029      	movs	r1, r5
    61ce:	0006      	movs	r6, r0
    61d0:	0020      	movs	r0, r4
    61d2:	f002 fa03 	bl	85dc <__clzdi2>
    61d6:	1a33      	subs	r3, r6, r0
    61d8:	4698      	mov	r8, r3
    61da:	3b20      	subs	r3, #32
    61dc:	469b      	mov	fp, r3
    61de:	d500      	bpl.n	61e2 <__udivmoddi4+0x3a>
    61e0:	e074      	b.n	62cc <__udivmoddi4+0x124>
    61e2:	4653      	mov	r3, sl
    61e4:	465a      	mov	r2, fp
    61e6:	4093      	lsls	r3, r2
    61e8:	001f      	movs	r7, r3
    61ea:	4653      	mov	r3, sl
    61ec:	4642      	mov	r2, r8
    61ee:	4093      	lsls	r3, r2
    61f0:	001e      	movs	r6, r3
    61f2:	42af      	cmp	r7, r5
    61f4:	d829      	bhi.n	624a <__udivmoddi4+0xa2>
    61f6:	d026      	beq.n	6246 <__udivmoddi4+0x9e>
    61f8:	465b      	mov	r3, fp
    61fa:	1ba4      	subs	r4, r4, r6
    61fc:	41bd      	sbcs	r5, r7
    61fe:	2b00      	cmp	r3, #0
    6200:	da00      	bge.n	6204 <__udivmoddi4+0x5c>
    6202:	e079      	b.n	62f8 <__udivmoddi4+0x150>
    6204:	2200      	movs	r2, #0
    6206:	2300      	movs	r3, #0
    6208:	9200      	str	r2, [sp, #0]
    620a:	9301      	str	r3, [sp, #4]
    620c:	2301      	movs	r3, #1
    620e:	465a      	mov	r2, fp
    6210:	4093      	lsls	r3, r2
    6212:	9301      	str	r3, [sp, #4]
    6214:	2301      	movs	r3, #1
    6216:	4642      	mov	r2, r8
    6218:	4093      	lsls	r3, r2
    621a:	9300      	str	r3, [sp, #0]
    621c:	e019      	b.n	6252 <__udivmoddi4+0xaa>
    621e:	4282      	cmp	r2, r0
    6220:	d9d0      	bls.n	61c4 <__udivmoddi4+0x1c>
    6222:	2200      	movs	r2, #0
    6224:	2300      	movs	r3, #0
    6226:	9200      	str	r2, [sp, #0]
    6228:	9301      	str	r3, [sp, #4]
    622a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    622c:	2b00      	cmp	r3, #0
    622e:	d001      	beq.n	6234 <__udivmoddi4+0x8c>
    6230:	601c      	str	r4, [r3, #0]
    6232:	605d      	str	r5, [r3, #4]
    6234:	9800      	ldr	r0, [sp, #0]
    6236:	9901      	ldr	r1, [sp, #4]
    6238:	b003      	add	sp, #12
    623a:	bc3c      	pop	{r2, r3, r4, r5}
    623c:	4690      	mov	r8, r2
    623e:	4699      	mov	r9, r3
    6240:	46a2      	mov	sl, r4
    6242:	46ab      	mov	fp, r5
    6244:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6246:	42a3      	cmp	r3, r4
    6248:	d9d6      	bls.n	61f8 <__udivmoddi4+0x50>
    624a:	2200      	movs	r2, #0
    624c:	2300      	movs	r3, #0
    624e:	9200      	str	r2, [sp, #0]
    6250:	9301      	str	r3, [sp, #4]
    6252:	4643      	mov	r3, r8
    6254:	2b00      	cmp	r3, #0
    6256:	d0e8      	beq.n	622a <__udivmoddi4+0x82>
    6258:	07fb      	lsls	r3, r7, #31
    625a:	0872      	lsrs	r2, r6, #1
    625c:	431a      	orrs	r2, r3
    625e:	4646      	mov	r6, r8
    6260:	087b      	lsrs	r3, r7, #1
    6262:	e00e      	b.n	6282 <__udivmoddi4+0xda>
    6264:	42ab      	cmp	r3, r5
    6266:	d101      	bne.n	626c <__udivmoddi4+0xc4>
    6268:	42a2      	cmp	r2, r4
    626a:	d80c      	bhi.n	6286 <__udivmoddi4+0xde>
    626c:	1aa4      	subs	r4, r4, r2
    626e:	419d      	sbcs	r5, r3
    6270:	2001      	movs	r0, #1
    6272:	1924      	adds	r4, r4, r4
    6274:	416d      	adcs	r5, r5
    6276:	2100      	movs	r1, #0
    6278:	3e01      	subs	r6, #1
    627a:	1824      	adds	r4, r4, r0
    627c:	414d      	adcs	r5, r1
    627e:	2e00      	cmp	r6, #0
    6280:	d006      	beq.n	6290 <__udivmoddi4+0xe8>
    6282:	42ab      	cmp	r3, r5
    6284:	d9ee      	bls.n	6264 <__udivmoddi4+0xbc>
    6286:	3e01      	subs	r6, #1
    6288:	1924      	adds	r4, r4, r4
    628a:	416d      	adcs	r5, r5
    628c:	2e00      	cmp	r6, #0
    628e:	d1f8      	bne.n	6282 <__udivmoddi4+0xda>
    6290:	465b      	mov	r3, fp
    6292:	9800      	ldr	r0, [sp, #0]
    6294:	9901      	ldr	r1, [sp, #4]
    6296:	1900      	adds	r0, r0, r4
    6298:	4169      	adcs	r1, r5
    629a:	2b00      	cmp	r3, #0
    629c:	db22      	blt.n	62e4 <__udivmoddi4+0x13c>
    629e:	002b      	movs	r3, r5
    62a0:	465a      	mov	r2, fp
    62a2:	40d3      	lsrs	r3, r2
    62a4:	002a      	movs	r2, r5
    62a6:	4644      	mov	r4, r8
    62a8:	40e2      	lsrs	r2, r4
    62aa:	001c      	movs	r4, r3
    62ac:	465b      	mov	r3, fp
    62ae:	0015      	movs	r5, r2
    62b0:	2b00      	cmp	r3, #0
    62b2:	db2c      	blt.n	630e <__udivmoddi4+0x166>
    62b4:	0026      	movs	r6, r4
    62b6:	409e      	lsls	r6, r3
    62b8:	0033      	movs	r3, r6
    62ba:	0026      	movs	r6, r4
    62bc:	4647      	mov	r7, r8
    62be:	40be      	lsls	r6, r7
    62c0:	0032      	movs	r2, r6
    62c2:	1a80      	subs	r0, r0, r2
    62c4:	4199      	sbcs	r1, r3
    62c6:	9000      	str	r0, [sp, #0]
    62c8:	9101      	str	r1, [sp, #4]
    62ca:	e7ae      	b.n	622a <__udivmoddi4+0x82>
    62cc:	4642      	mov	r2, r8
    62ce:	2320      	movs	r3, #32
    62d0:	1a9b      	subs	r3, r3, r2
    62d2:	4652      	mov	r2, sl
    62d4:	40da      	lsrs	r2, r3
    62d6:	4641      	mov	r1, r8
    62d8:	0013      	movs	r3, r2
    62da:	464a      	mov	r2, r9
    62dc:	408a      	lsls	r2, r1
    62de:	0017      	movs	r7, r2
    62e0:	431f      	orrs	r7, r3
    62e2:	e782      	b.n	61ea <__udivmoddi4+0x42>
    62e4:	4642      	mov	r2, r8
    62e6:	2320      	movs	r3, #32
    62e8:	1a9b      	subs	r3, r3, r2
    62ea:	002a      	movs	r2, r5
    62ec:	4646      	mov	r6, r8
    62ee:	409a      	lsls	r2, r3
    62f0:	0023      	movs	r3, r4
    62f2:	40f3      	lsrs	r3, r6
    62f4:	4313      	orrs	r3, r2
    62f6:	e7d5      	b.n	62a4 <__udivmoddi4+0xfc>
    62f8:	4642      	mov	r2, r8
    62fa:	2320      	movs	r3, #32
    62fc:	2100      	movs	r1, #0
    62fe:	1a9b      	subs	r3, r3, r2
    6300:	2200      	movs	r2, #0
    6302:	9100      	str	r1, [sp, #0]
    6304:	9201      	str	r2, [sp, #4]
    6306:	2201      	movs	r2, #1
    6308:	40da      	lsrs	r2, r3
    630a:	9201      	str	r2, [sp, #4]
    630c:	e782      	b.n	6214 <__udivmoddi4+0x6c>
    630e:	4642      	mov	r2, r8
    6310:	2320      	movs	r3, #32
    6312:	0026      	movs	r6, r4
    6314:	1a9b      	subs	r3, r3, r2
    6316:	40de      	lsrs	r6, r3
    6318:	002f      	movs	r7, r5
    631a:	46b4      	mov	ip, r6
    631c:	4097      	lsls	r7, r2
    631e:	4666      	mov	r6, ip
    6320:	003b      	movs	r3, r7
    6322:	4333      	orrs	r3, r6
    6324:	e7c9      	b.n	62ba <__udivmoddi4+0x112>
    6326:	46c0      	nop			; (mov r8, r8)

00006328 <__eqsf2>:
    6328:	b570      	push	{r4, r5, r6, lr}
    632a:	0042      	lsls	r2, r0, #1
    632c:	0245      	lsls	r5, r0, #9
    632e:	024e      	lsls	r6, r1, #9
    6330:	004c      	lsls	r4, r1, #1
    6332:	0fc3      	lsrs	r3, r0, #31
    6334:	0a6d      	lsrs	r5, r5, #9
    6336:	0e12      	lsrs	r2, r2, #24
    6338:	0a76      	lsrs	r6, r6, #9
    633a:	0e24      	lsrs	r4, r4, #24
    633c:	0fc9      	lsrs	r1, r1, #31
    633e:	2001      	movs	r0, #1
    6340:	2aff      	cmp	r2, #255	; 0xff
    6342:	d006      	beq.n	6352 <__eqsf2+0x2a>
    6344:	2cff      	cmp	r4, #255	; 0xff
    6346:	d003      	beq.n	6350 <__eqsf2+0x28>
    6348:	42a2      	cmp	r2, r4
    634a:	d101      	bne.n	6350 <__eqsf2+0x28>
    634c:	42b5      	cmp	r5, r6
    634e:	d006      	beq.n	635e <__eqsf2+0x36>
    6350:	bd70      	pop	{r4, r5, r6, pc}
    6352:	2d00      	cmp	r5, #0
    6354:	d1fc      	bne.n	6350 <__eqsf2+0x28>
    6356:	2cff      	cmp	r4, #255	; 0xff
    6358:	d1fa      	bne.n	6350 <__eqsf2+0x28>
    635a:	2e00      	cmp	r6, #0
    635c:	d1f8      	bne.n	6350 <__eqsf2+0x28>
    635e:	428b      	cmp	r3, r1
    6360:	d006      	beq.n	6370 <__eqsf2+0x48>
    6362:	2001      	movs	r0, #1
    6364:	2a00      	cmp	r2, #0
    6366:	d1f3      	bne.n	6350 <__eqsf2+0x28>
    6368:	0028      	movs	r0, r5
    636a:	1e45      	subs	r5, r0, #1
    636c:	41a8      	sbcs	r0, r5
    636e:	e7ef      	b.n	6350 <__eqsf2+0x28>
    6370:	2000      	movs	r0, #0
    6372:	e7ed      	b.n	6350 <__eqsf2+0x28>

00006374 <__gesf2>:
    6374:	b5f0      	push	{r4, r5, r6, r7, lr}
    6376:	0042      	lsls	r2, r0, #1
    6378:	0245      	lsls	r5, r0, #9
    637a:	024c      	lsls	r4, r1, #9
    637c:	0fc3      	lsrs	r3, r0, #31
    637e:	0048      	lsls	r0, r1, #1
    6380:	0a6d      	lsrs	r5, r5, #9
    6382:	0e12      	lsrs	r2, r2, #24
    6384:	0a64      	lsrs	r4, r4, #9
    6386:	0e00      	lsrs	r0, r0, #24
    6388:	0fc9      	lsrs	r1, r1, #31
    638a:	2aff      	cmp	r2, #255	; 0xff
    638c:	d01e      	beq.n	63cc <__gesf2+0x58>
    638e:	28ff      	cmp	r0, #255	; 0xff
    6390:	d021      	beq.n	63d6 <__gesf2+0x62>
    6392:	2a00      	cmp	r2, #0
    6394:	d10a      	bne.n	63ac <__gesf2+0x38>
    6396:	426e      	negs	r6, r5
    6398:	416e      	adcs	r6, r5
    639a:	b2f6      	uxtb	r6, r6
    639c:	2800      	cmp	r0, #0
    639e:	d10f      	bne.n	63c0 <__gesf2+0x4c>
    63a0:	2c00      	cmp	r4, #0
    63a2:	d10d      	bne.n	63c0 <__gesf2+0x4c>
    63a4:	2000      	movs	r0, #0
    63a6:	2d00      	cmp	r5, #0
    63a8:	d009      	beq.n	63be <__gesf2+0x4a>
    63aa:	e005      	b.n	63b8 <__gesf2+0x44>
    63ac:	2800      	cmp	r0, #0
    63ae:	d101      	bne.n	63b4 <__gesf2+0x40>
    63b0:	2c00      	cmp	r4, #0
    63b2:	d001      	beq.n	63b8 <__gesf2+0x44>
    63b4:	428b      	cmp	r3, r1
    63b6:	d011      	beq.n	63dc <__gesf2+0x68>
    63b8:	2101      	movs	r1, #1
    63ba:	4258      	negs	r0, r3
    63bc:	4308      	orrs	r0, r1
    63be:	bdf0      	pop	{r4, r5, r6, r7, pc}
    63c0:	2e00      	cmp	r6, #0
    63c2:	d0f7      	beq.n	63b4 <__gesf2+0x40>
    63c4:	2001      	movs	r0, #1
    63c6:	3901      	subs	r1, #1
    63c8:	4308      	orrs	r0, r1
    63ca:	e7f8      	b.n	63be <__gesf2+0x4a>
    63cc:	2d00      	cmp	r5, #0
    63ce:	d0de      	beq.n	638e <__gesf2+0x1a>
    63d0:	2002      	movs	r0, #2
    63d2:	4240      	negs	r0, r0
    63d4:	e7f3      	b.n	63be <__gesf2+0x4a>
    63d6:	2c00      	cmp	r4, #0
    63d8:	d0db      	beq.n	6392 <__gesf2+0x1e>
    63da:	e7f9      	b.n	63d0 <__gesf2+0x5c>
    63dc:	4282      	cmp	r2, r0
    63de:	dceb      	bgt.n	63b8 <__gesf2+0x44>
    63e0:	db04      	blt.n	63ec <__gesf2+0x78>
    63e2:	42a5      	cmp	r5, r4
    63e4:	d8e8      	bhi.n	63b8 <__gesf2+0x44>
    63e6:	2000      	movs	r0, #0
    63e8:	42a5      	cmp	r5, r4
    63ea:	d2e8      	bcs.n	63be <__gesf2+0x4a>
    63ec:	2101      	movs	r1, #1
    63ee:	1e58      	subs	r0, r3, #1
    63f0:	4308      	orrs	r0, r1
    63f2:	e7e4      	b.n	63be <__gesf2+0x4a>

000063f4 <__lesf2>:
    63f4:	b5f0      	push	{r4, r5, r6, r7, lr}
    63f6:	0042      	lsls	r2, r0, #1
    63f8:	024d      	lsls	r5, r1, #9
    63fa:	004c      	lsls	r4, r1, #1
    63fc:	0246      	lsls	r6, r0, #9
    63fe:	0a76      	lsrs	r6, r6, #9
    6400:	0e12      	lsrs	r2, r2, #24
    6402:	0fc3      	lsrs	r3, r0, #31
    6404:	0a6d      	lsrs	r5, r5, #9
    6406:	0e24      	lsrs	r4, r4, #24
    6408:	0fc9      	lsrs	r1, r1, #31
    640a:	2aff      	cmp	r2, #255	; 0xff
    640c:	d016      	beq.n	643c <__lesf2+0x48>
    640e:	2cff      	cmp	r4, #255	; 0xff
    6410:	d018      	beq.n	6444 <__lesf2+0x50>
    6412:	2a00      	cmp	r2, #0
    6414:	d10a      	bne.n	642c <__lesf2+0x38>
    6416:	4270      	negs	r0, r6
    6418:	4170      	adcs	r0, r6
    641a:	b2c0      	uxtb	r0, r0
    641c:	2c00      	cmp	r4, #0
    641e:	d015      	beq.n	644c <__lesf2+0x58>
    6420:	2800      	cmp	r0, #0
    6422:	d005      	beq.n	6430 <__lesf2+0x3c>
    6424:	2001      	movs	r0, #1
    6426:	3901      	subs	r1, #1
    6428:	4308      	orrs	r0, r1
    642a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    642c:	2c00      	cmp	r4, #0
    642e:	d013      	beq.n	6458 <__lesf2+0x64>
    6430:	4299      	cmp	r1, r3
    6432:	d014      	beq.n	645e <__lesf2+0x6a>
    6434:	2001      	movs	r0, #1
    6436:	425b      	negs	r3, r3
    6438:	4318      	orrs	r0, r3
    643a:	e7f6      	b.n	642a <__lesf2+0x36>
    643c:	2002      	movs	r0, #2
    643e:	2e00      	cmp	r6, #0
    6440:	d1f3      	bne.n	642a <__lesf2+0x36>
    6442:	e7e4      	b.n	640e <__lesf2+0x1a>
    6444:	2002      	movs	r0, #2
    6446:	2d00      	cmp	r5, #0
    6448:	d1ef      	bne.n	642a <__lesf2+0x36>
    644a:	e7e2      	b.n	6412 <__lesf2+0x1e>
    644c:	2d00      	cmp	r5, #0
    644e:	d1e7      	bne.n	6420 <__lesf2+0x2c>
    6450:	2000      	movs	r0, #0
    6452:	2e00      	cmp	r6, #0
    6454:	d0e9      	beq.n	642a <__lesf2+0x36>
    6456:	e7ed      	b.n	6434 <__lesf2+0x40>
    6458:	2d00      	cmp	r5, #0
    645a:	d1e9      	bne.n	6430 <__lesf2+0x3c>
    645c:	e7ea      	b.n	6434 <__lesf2+0x40>
    645e:	42a2      	cmp	r2, r4
    6460:	dc06      	bgt.n	6470 <__lesf2+0x7c>
    6462:	dbdf      	blt.n	6424 <__lesf2+0x30>
    6464:	42ae      	cmp	r6, r5
    6466:	d803      	bhi.n	6470 <__lesf2+0x7c>
    6468:	2000      	movs	r0, #0
    646a:	42ae      	cmp	r6, r5
    646c:	d3da      	bcc.n	6424 <__lesf2+0x30>
    646e:	e7dc      	b.n	642a <__lesf2+0x36>
    6470:	2001      	movs	r0, #1
    6472:	4249      	negs	r1, r1
    6474:	4308      	orrs	r0, r1
    6476:	e7d8      	b.n	642a <__lesf2+0x36>

00006478 <__aeabi_fmul>:
    6478:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    647a:	4657      	mov	r7, sl
    647c:	464e      	mov	r6, r9
    647e:	4645      	mov	r5, r8
    6480:	46de      	mov	lr, fp
    6482:	b5e0      	push	{r5, r6, r7, lr}
    6484:	0247      	lsls	r7, r0, #9
    6486:	0046      	lsls	r6, r0, #1
    6488:	4688      	mov	r8, r1
    648a:	0a7f      	lsrs	r7, r7, #9
    648c:	0e36      	lsrs	r6, r6, #24
    648e:	0fc4      	lsrs	r4, r0, #31
    6490:	2e00      	cmp	r6, #0
    6492:	d047      	beq.n	6524 <__aeabi_fmul+0xac>
    6494:	2eff      	cmp	r6, #255	; 0xff
    6496:	d024      	beq.n	64e2 <__aeabi_fmul+0x6a>
    6498:	00fb      	lsls	r3, r7, #3
    649a:	2780      	movs	r7, #128	; 0x80
    649c:	04ff      	lsls	r7, r7, #19
    649e:	431f      	orrs	r7, r3
    64a0:	2300      	movs	r3, #0
    64a2:	4699      	mov	r9, r3
    64a4:	469a      	mov	sl, r3
    64a6:	3e7f      	subs	r6, #127	; 0x7f
    64a8:	4643      	mov	r3, r8
    64aa:	025d      	lsls	r5, r3, #9
    64ac:	0058      	lsls	r0, r3, #1
    64ae:	0fdb      	lsrs	r3, r3, #31
    64b0:	0a6d      	lsrs	r5, r5, #9
    64b2:	0e00      	lsrs	r0, r0, #24
    64b4:	4698      	mov	r8, r3
    64b6:	d043      	beq.n	6540 <__aeabi_fmul+0xc8>
    64b8:	28ff      	cmp	r0, #255	; 0xff
    64ba:	d03b      	beq.n	6534 <__aeabi_fmul+0xbc>
    64bc:	00eb      	lsls	r3, r5, #3
    64be:	2580      	movs	r5, #128	; 0x80
    64c0:	2200      	movs	r2, #0
    64c2:	04ed      	lsls	r5, r5, #19
    64c4:	431d      	orrs	r5, r3
    64c6:	387f      	subs	r0, #127	; 0x7f
    64c8:	1836      	adds	r6, r6, r0
    64ca:	1c73      	adds	r3, r6, #1
    64cc:	4641      	mov	r1, r8
    64ce:	469b      	mov	fp, r3
    64d0:	464b      	mov	r3, r9
    64d2:	4061      	eors	r1, r4
    64d4:	4313      	orrs	r3, r2
    64d6:	2b0f      	cmp	r3, #15
    64d8:	d864      	bhi.n	65a4 <__aeabi_fmul+0x12c>
    64da:	4875      	ldr	r0, [pc, #468]	; (66b0 <__aeabi_fmul+0x238>)
    64dc:	009b      	lsls	r3, r3, #2
    64de:	58c3      	ldr	r3, [r0, r3]
    64e0:	469f      	mov	pc, r3
    64e2:	2f00      	cmp	r7, #0
    64e4:	d142      	bne.n	656c <__aeabi_fmul+0xf4>
    64e6:	2308      	movs	r3, #8
    64e8:	4699      	mov	r9, r3
    64ea:	3b06      	subs	r3, #6
    64ec:	26ff      	movs	r6, #255	; 0xff
    64ee:	469a      	mov	sl, r3
    64f0:	e7da      	b.n	64a8 <__aeabi_fmul+0x30>
    64f2:	4641      	mov	r1, r8
    64f4:	2a02      	cmp	r2, #2
    64f6:	d028      	beq.n	654a <__aeabi_fmul+0xd2>
    64f8:	2a03      	cmp	r2, #3
    64fa:	d100      	bne.n	64fe <__aeabi_fmul+0x86>
    64fc:	e0ce      	b.n	669c <__aeabi_fmul+0x224>
    64fe:	2a01      	cmp	r2, #1
    6500:	d000      	beq.n	6504 <__aeabi_fmul+0x8c>
    6502:	e0ac      	b.n	665e <__aeabi_fmul+0x1e6>
    6504:	4011      	ands	r1, r2
    6506:	2000      	movs	r0, #0
    6508:	2200      	movs	r2, #0
    650a:	b2cc      	uxtb	r4, r1
    650c:	0240      	lsls	r0, r0, #9
    650e:	05d2      	lsls	r2, r2, #23
    6510:	0a40      	lsrs	r0, r0, #9
    6512:	07e4      	lsls	r4, r4, #31
    6514:	4310      	orrs	r0, r2
    6516:	4320      	orrs	r0, r4
    6518:	bc3c      	pop	{r2, r3, r4, r5}
    651a:	4690      	mov	r8, r2
    651c:	4699      	mov	r9, r3
    651e:	46a2      	mov	sl, r4
    6520:	46ab      	mov	fp, r5
    6522:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6524:	2f00      	cmp	r7, #0
    6526:	d115      	bne.n	6554 <__aeabi_fmul+0xdc>
    6528:	2304      	movs	r3, #4
    652a:	4699      	mov	r9, r3
    652c:	3b03      	subs	r3, #3
    652e:	2600      	movs	r6, #0
    6530:	469a      	mov	sl, r3
    6532:	e7b9      	b.n	64a8 <__aeabi_fmul+0x30>
    6534:	20ff      	movs	r0, #255	; 0xff
    6536:	2202      	movs	r2, #2
    6538:	2d00      	cmp	r5, #0
    653a:	d0c5      	beq.n	64c8 <__aeabi_fmul+0x50>
    653c:	2203      	movs	r2, #3
    653e:	e7c3      	b.n	64c8 <__aeabi_fmul+0x50>
    6540:	2d00      	cmp	r5, #0
    6542:	d119      	bne.n	6578 <__aeabi_fmul+0x100>
    6544:	2000      	movs	r0, #0
    6546:	2201      	movs	r2, #1
    6548:	e7be      	b.n	64c8 <__aeabi_fmul+0x50>
    654a:	2401      	movs	r4, #1
    654c:	22ff      	movs	r2, #255	; 0xff
    654e:	400c      	ands	r4, r1
    6550:	2000      	movs	r0, #0
    6552:	e7db      	b.n	650c <__aeabi_fmul+0x94>
    6554:	0038      	movs	r0, r7
    6556:	f002 f823 	bl	85a0 <__clzsi2>
    655a:	2676      	movs	r6, #118	; 0x76
    655c:	1f43      	subs	r3, r0, #5
    655e:	409f      	lsls	r7, r3
    6560:	2300      	movs	r3, #0
    6562:	4276      	negs	r6, r6
    6564:	1a36      	subs	r6, r6, r0
    6566:	4699      	mov	r9, r3
    6568:	469a      	mov	sl, r3
    656a:	e79d      	b.n	64a8 <__aeabi_fmul+0x30>
    656c:	230c      	movs	r3, #12
    656e:	4699      	mov	r9, r3
    6570:	3b09      	subs	r3, #9
    6572:	26ff      	movs	r6, #255	; 0xff
    6574:	469a      	mov	sl, r3
    6576:	e797      	b.n	64a8 <__aeabi_fmul+0x30>
    6578:	0028      	movs	r0, r5
    657a:	f002 f811 	bl	85a0 <__clzsi2>
    657e:	1f43      	subs	r3, r0, #5
    6580:	409d      	lsls	r5, r3
    6582:	2376      	movs	r3, #118	; 0x76
    6584:	425b      	negs	r3, r3
    6586:	1a18      	subs	r0, r3, r0
    6588:	2200      	movs	r2, #0
    658a:	e79d      	b.n	64c8 <__aeabi_fmul+0x50>
    658c:	2080      	movs	r0, #128	; 0x80
    658e:	2400      	movs	r4, #0
    6590:	03c0      	lsls	r0, r0, #15
    6592:	22ff      	movs	r2, #255	; 0xff
    6594:	e7ba      	b.n	650c <__aeabi_fmul+0x94>
    6596:	003d      	movs	r5, r7
    6598:	4652      	mov	r2, sl
    659a:	e7ab      	b.n	64f4 <__aeabi_fmul+0x7c>
    659c:	003d      	movs	r5, r7
    659e:	0021      	movs	r1, r4
    65a0:	4652      	mov	r2, sl
    65a2:	e7a7      	b.n	64f4 <__aeabi_fmul+0x7c>
    65a4:	0c3b      	lsrs	r3, r7, #16
    65a6:	469c      	mov	ip, r3
    65a8:	042a      	lsls	r2, r5, #16
    65aa:	0c12      	lsrs	r2, r2, #16
    65ac:	0c2b      	lsrs	r3, r5, #16
    65ae:	0014      	movs	r4, r2
    65b0:	4660      	mov	r0, ip
    65b2:	4665      	mov	r5, ip
    65b4:	043f      	lsls	r7, r7, #16
    65b6:	0c3f      	lsrs	r7, r7, #16
    65b8:	437c      	muls	r4, r7
    65ba:	4342      	muls	r2, r0
    65bc:	435d      	muls	r5, r3
    65be:	437b      	muls	r3, r7
    65c0:	0c27      	lsrs	r7, r4, #16
    65c2:	189b      	adds	r3, r3, r2
    65c4:	18ff      	adds	r7, r7, r3
    65c6:	42ba      	cmp	r2, r7
    65c8:	d903      	bls.n	65d2 <__aeabi_fmul+0x15a>
    65ca:	2380      	movs	r3, #128	; 0x80
    65cc:	025b      	lsls	r3, r3, #9
    65ce:	469c      	mov	ip, r3
    65d0:	4465      	add	r5, ip
    65d2:	0424      	lsls	r4, r4, #16
    65d4:	043a      	lsls	r2, r7, #16
    65d6:	0c24      	lsrs	r4, r4, #16
    65d8:	1912      	adds	r2, r2, r4
    65da:	0193      	lsls	r3, r2, #6
    65dc:	1e5c      	subs	r4, r3, #1
    65de:	41a3      	sbcs	r3, r4
    65e0:	0c3f      	lsrs	r7, r7, #16
    65e2:	0e92      	lsrs	r2, r2, #26
    65e4:	197d      	adds	r5, r7, r5
    65e6:	431a      	orrs	r2, r3
    65e8:	01ad      	lsls	r5, r5, #6
    65ea:	4315      	orrs	r5, r2
    65ec:	012b      	lsls	r3, r5, #4
    65ee:	d504      	bpl.n	65fa <__aeabi_fmul+0x182>
    65f0:	2301      	movs	r3, #1
    65f2:	465e      	mov	r6, fp
    65f4:	086a      	lsrs	r2, r5, #1
    65f6:	401d      	ands	r5, r3
    65f8:	4315      	orrs	r5, r2
    65fa:	0032      	movs	r2, r6
    65fc:	327f      	adds	r2, #127	; 0x7f
    65fe:	2a00      	cmp	r2, #0
    6600:	dd25      	ble.n	664e <__aeabi_fmul+0x1d6>
    6602:	076b      	lsls	r3, r5, #29
    6604:	d004      	beq.n	6610 <__aeabi_fmul+0x198>
    6606:	230f      	movs	r3, #15
    6608:	402b      	ands	r3, r5
    660a:	2b04      	cmp	r3, #4
    660c:	d000      	beq.n	6610 <__aeabi_fmul+0x198>
    660e:	3504      	adds	r5, #4
    6610:	012b      	lsls	r3, r5, #4
    6612:	d503      	bpl.n	661c <__aeabi_fmul+0x1a4>
    6614:	0032      	movs	r2, r6
    6616:	4b27      	ldr	r3, [pc, #156]	; (66b4 <__aeabi_fmul+0x23c>)
    6618:	3280      	adds	r2, #128	; 0x80
    661a:	401d      	ands	r5, r3
    661c:	2afe      	cmp	r2, #254	; 0xfe
    661e:	dc94      	bgt.n	654a <__aeabi_fmul+0xd2>
    6620:	2401      	movs	r4, #1
    6622:	01a8      	lsls	r0, r5, #6
    6624:	0a40      	lsrs	r0, r0, #9
    6626:	b2d2      	uxtb	r2, r2
    6628:	400c      	ands	r4, r1
    662a:	e76f      	b.n	650c <__aeabi_fmul+0x94>
    662c:	2080      	movs	r0, #128	; 0x80
    662e:	03c0      	lsls	r0, r0, #15
    6630:	4207      	tst	r7, r0
    6632:	d007      	beq.n	6644 <__aeabi_fmul+0x1cc>
    6634:	4205      	tst	r5, r0
    6636:	d105      	bne.n	6644 <__aeabi_fmul+0x1cc>
    6638:	4328      	orrs	r0, r5
    663a:	0240      	lsls	r0, r0, #9
    663c:	0a40      	lsrs	r0, r0, #9
    663e:	4644      	mov	r4, r8
    6640:	22ff      	movs	r2, #255	; 0xff
    6642:	e763      	b.n	650c <__aeabi_fmul+0x94>
    6644:	4338      	orrs	r0, r7
    6646:	0240      	lsls	r0, r0, #9
    6648:	0a40      	lsrs	r0, r0, #9
    664a:	22ff      	movs	r2, #255	; 0xff
    664c:	e75e      	b.n	650c <__aeabi_fmul+0x94>
    664e:	2401      	movs	r4, #1
    6650:	1aa3      	subs	r3, r4, r2
    6652:	2b1b      	cmp	r3, #27
    6654:	dd05      	ble.n	6662 <__aeabi_fmul+0x1ea>
    6656:	400c      	ands	r4, r1
    6658:	2200      	movs	r2, #0
    665a:	2000      	movs	r0, #0
    665c:	e756      	b.n	650c <__aeabi_fmul+0x94>
    665e:	465e      	mov	r6, fp
    6660:	e7cb      	b.n	65fa <__aeabi_fmul+0x182>
    6662:	002a      	movs	r2, r5
    6664:	2020      	movs	r0, #32
    6666:	40da      	lsrs	r2, r3
    6668:	1ac3      	subs	r3, r0, r3
    666a:	409d      	lsls	r5, r3
    666c:	002b      	movs	r3, r5
    666e:	1e5d      	subs	r5, r3, #1
    6670:	41ab      	sbcs	r3, r5
    6672:	4313      	orrs	r3, r2
    6674:	075a      	lsls	r2, r3, #29
    6676:	d004      	beq.n	6682 <__aeabi_fmul+0x20a>
    6678:	220f      	movs	r2, #15
    667a:	401a      	ands	r2, r3
    667c:	2a04      	cmp	r2, #4
    667e:	d000      	beq.n	6682 <__aeabi_fmul+0x20a>
    6680:	3304      	adds	r3, #4
    6682:	015a      	lsls	r2, r3, #5
    6684:	d504      	bpl.n	6690 <__aeabi_fmul+0x218>
    6686:	2401      	movs	r4, #1
    6688:	2201      	movs	r2, #1
    668a:	400c      	ands	r4, r1
    668c:	2000      	movs	r0, #0
    668e:	e73d      	b.n	650c <__aeabi_fmul+0x94>
    6690:	2401      	movs	r4, #1
    6692:	019b      	lsls	r3, r3, #6
    6694:	0a58      	lsrs	r0, r3, #9
    6696:	400c      	ands	r4, r1
    6698:	2200      	movs	r2, #0
    669a:	e737      	b.n	650c <__aeabi_fmul+0x94>
    669c:	2080      	movs	r0, #128	; 0x80
    669e:	2401      	movs	r4, #1
    66a0:	03c0      	lsls	r0, r0, #15
    66a2:	4328      	orrs	r0, r5
    66a4:	0240      	lsls	r0, r0, #9
    66a6:	0a40      	lsrs	r0, r0, #9
    66a8:	400c      	ands	r4, r1
    66aa:	22ff      	movs	r2, #255	; 0xff
    66ac:	e72e      	b.n	650c <__aeabi_fmul+0x94>
    66ae:	46c0      	nop			; (mov r8, r8)
    66b0:	00009318 	.word	0x00009318
    66b4:	f7ffffff 	.word	0xf7ffffff

000066b8 <__aeabi_fsub>:
    66b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    66ba:	464f      	mov	r7, r9
    66bc:	46d6      	mov	lr, sl
    66be:	4646      	mov	r6, r8
    66c0:	0044      	lsls	r4, r0, #1
    66c2:	b5c0      	push	{r6, r7, lr}
    66c4:	0fc2      	lsrs	r2, r0, #31
    66c6:	0247      	lsls	r7, r0, #9
    66c8:	0248      	lsls	r0, r1, #9
    66ca:	0a40      	lsrs	r0, r0, #9
    66cc:	4684      	mov	ip, r0
    66ce:	4666      	mov	r6, ip
    66d0:	0a7b      	lsrs	r3, r7, #9
    66d2:	0048      	lsls	r0, r1, #1
    66d4:	0fc9      	lsrs	r1, r1, #31
    66d6:	469a      	mov	sl, r3
    66d8:	0e24      	lsrs	r4, r4, #24
    66da:	0015      	movs	r5, r2
    66dc:	00db      	lsls	r3, r3, #3
    66de:	0e00      	lsrs	r0, r0, #24
    66e0:	4689      	mov	r9, r1
    66e2:	00f6      	lsls	r6, r6, #3
    66e4:	28ff      	cmp	r0, #255	; 0xff
    66e6:	d100      	bne.n	66ea <__aeabi_fsub+0x32>
    66e8:	e08f      	b.n	680a <__aeabi_fsub+0x152>
    66ea:	2101      	movs	r1, #1
    66ec:	464f      	mov	r7, r9
    66ee:	404f      	eors	r7, r1
    66f0:	0039      	movs	r1, r7
    66f2:	4291      	cmp	r1, r2
    66f4:	d066      	beq.n	67c4 <__aeabi_fsub+0x10c>
    66f6:	1a22      	subs	r2, r4, r0
    66f8:	2a00      	cmp	r2, #0
    66fa:	dc00      	bgt.n	66fe <__aeabi_fsub+0x46>
    66fc:	e09d      	b.n	683a <__aeabi_fsub+0x182>
    66fe:	2800      	cmp	r0, #0
    6700:	d13d      	bne.n	677e <__aeabi_fsub+0xc6>
    6702:	2e00      	cmp	r6, #0
    6704:	d100      	bne.n	6708 <__aeabi_fsub+0x50>
    6706:	e08b      	b.n	6820 <__aeabi_fsub+0x168>
    6708:	1e51      	subs	r1, r2, #1
    670a:	2900      	cmp	r1, #0
    670c:	d000      	beq.n	6710 <__aeabi_fsub+0x58>
    670e:	e0b5      	b.n	687c <__aeabi_fsub+0x1c4>
    6710:	2401      	movs	r4, #1
    6712:	1b9b      	subs	r3, r3, r6
    6714:	015a      	lsls	r2, r3, #5
    6716:	d544      	bpl.n	67a2 <__aeabi_fsub+0xea>
    6718:	019b      	lsls	r3, r3, #6
    671a:	099f      	lsrs	r7, r3, #6
    671c:	0038      	movs	r0, r7
    671e:	f001 ff3f 	bl	85a0 <__clzsi2>
    6722:	3805      	subs	r0, #5
    6724:	4087      	lsls	r7, r0
    6726:	4284      	cmp	r4, r0
    6728:	dd00      	ble.n	672c <__aeabi_fsub+0x74>
    672a:	e096      	b.n	685a <__aeabi_fsub+0x1a2>
    672c:	1b04      	subs	r4, r0, r4
    672e:	003a      	movs	r2, r7
    6730:	2020      	movs	r0, #32
    6732:	3401      	adds	r4, #1
    6734:	40e2      	lsrs	r2, r4
    6736:	1b04      	subs	r4, r0, r4
    6738:	40a7      	lsls	r7, r4
    673a:	003b      	movs	r3, r7
    673c:	1e5f      	subs	r7, r3, #1
    673e:	41bb      	sbcs	r3, r7
    6740:	2400      	movs	r4, #0
    6742:	4313      	orrs	r3, r2
    6744:	075a      	lsls	r2, r3, #29
    6746:	d004      	beq.n	6752 <__aeabi_fsub+0x9a>
    6748:	220f      	movs	r2, #15
    674a:	401a      	ands	r2, r3
    674c:	2a04      	cmp	r2, #4
    674e:	d000      	beq.n	6752 <__aeabi_fsub+0x9a>
    6750:	3304      	adds	r3, #4
    6752:	015a      	lsls	r2, r3, #5
    6754:	d527      	bpl.n	67a6 <__aeabi_fsub+0xee>
    6756:	3401      	adds	r4, #1
    6758:	2cff      	cmp	r4, #255	; 0xff
    675a:	d100      	bne.n	675e <__aeabi_fsub+0xa6>
    675c:	e079      	b.n	6852 <__aeabi_fsub+0x19a>
    675e:	2201      	movs	r2, #1
    6760:	019b      	lsls	r3, r3, #6
    6762:	0a5b      	lsrs	r3, r3, #9
    6764:	b2e4      	uxtb	r4, r4
    6766:	402a      	ands	r2, r5
    6768:	025b      	lsls	r3, r3, #9
    676a:	05e4      	lsls	r4, r4, #23
    676c:	0a58      	lsrs	r0, r3, #9
    676e:	07d2      	lsls	r2, r2, #31
    6770:	4320      	orrs	r0, r4
    6772:	4310      	orrs	r0, r2
    6774:	bc1c      	pop	{r2, r3, r4}
    6776:	4690      	mov	r8, r2
    6778:	4699      	mov	r9, r3
    677a:	46a2      	mov	sl, r4
    677c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    677e:	2cff      	cmp	r4, #255	; 0xff
    6780:	d0e0      	beq.n	6744 <__aeabi_fsub+0x8c>
    6782:	2180      	movs	r1, #128	; 0x80
    6784:	04c9      	lsls	r1, r1, #19
    6786:	430e      	orrs	r6, r1
    6788:	2a1b      	cmp	r2, #27
    678a:	dc7b      	bgt.n	6884 <__aeabi_fsub+0x1cc>
    678c:	0031      	movs	r1, r6
    678e:	2020      	movs	r0, #32
    6790:	40d1      	lsrs	r1, r2
    6792:	1a82      	subs	r2, r0, r2
    6794:	4096      	lsls	r6, r2
    6796:	1e72      	subs	r2, r6, #1
    6798:	4196      	sbcs	r6, r2
    679a:	430e      	orrs	r6, r1
    679c:	1b9b      	subs	r3, r3, r6
    679e:	015a      	lsls	r2, r3, #5
    67a0:	d4ba      	bmi.n	6718 <__aeabi_fsub+0x60>
    67a2:	075a      	lsls	r2, r3, #29
    67a4:	d1d0      	bne.n	6748 <__aeabi_fsub+0x90>
    67a6:	2201      	movs	r2, #1
    67a8:	08df      	lsrs	r7, r3, #3
    67aa:	402a      	ands	r2, r5
    67ac:	2cff      	cmp	r4, #255	; 0xff
    67ae:	d133      	bne.n	6818 <__aeabi_fsub+0x160>
    67b0:	2f00      	cmp	r7, #0
    67b2:	d100      	bne.n	67b6 <__aeabi_fsub+0xfe>
    67b4:	e0a8      	b.n	6908 <__aeabi_fsub+0x250>
    67b6:	2380      	movs	r3, #128	; 0x80
    67b8:	03db      	lsls	r3, r3, #15
    67ba:	433b      	orrs	r3, r7
    67bc:	025b      	lsls	r3, r3, #9
    67be:	0a5b      	lsrs	r3, r3, #9
    67c0:	24ff      	movs	r4, #255	; 0xff
    67c2:	e7d1      	b.n	6768 <__aeabi_fsub+0xb0>
    67c4:	1a21      	subs	r1, r4, r0
    67c6:	2900      	cmp	r1, #0
    67c8:	dd4c      	ble.n	6864 <__aeabi_fsub+0x1ac>
    67ca:	2800      	cmp	r0, #0
    67cc:	d02a      	beq.n	6824 <__aeabi_fsub+0x16c>
    67ce:	2cff      	cmp	r4, #255	; 0xff
    67d0:	d0b8      	beq.n	6744 <__aeabi_fsub+0x8c>
    67d2:	2080      	movs	r0, #128	; 0x80
    67d4:	04c0      	lsls	r0, r0, #19
    67d6:	4306      	orrs	r6, r0
    67d8:	291b      	cmp	r1, #27
    67da:	dd00      	ble.n	67de <__aeabi_fsub+0x126>
    67dc:	e0af      	b.n	693e <__aeabi_fsub+0x286>
    67de:	0030      	movs	r0, r6
    67e0:	2720      	movs	r7, #32
    67e2:	40c8      	lsrs	r0, r1
    67e4:	1a79      	subs	r1, r7, r1
    67e6:	408e      	lsls	r6, r1
    67e8:	1e71      	subs	r1, r6, #1
    67ea:	418e      	sbcs	r6, r1
    67ec:	4306      	orrs	r6, r0
    67ee:	199b      	adds	r3, r3, r6
    67f0:	0159      	lsls	r1, r3, #5
    67f2:	d5d6      	bpl.n	67a2 <__aeabi_fsub+0xea>
    67f4:	3401      	adds	r4, #1
    67f6:	2cff      	cmp	r4, #255	; 0xff
    67f8:	d100      	bne.n	67fc <__aeabi_fsub+0x144>
    67fa:	e085      	b.n	6908 <__aeabi_fsub+0x250>
    67fc:	2201      	movs	r2, #1
    67fe:	497a      	ldr	r1, [pc, #488]	; (69e8 <__aeabi_fsub+0x330>)
    6800:	401a      	ands	r2, r3
    6802:	085b      	lsrs	r3, r3, #1
    6804:	400b      	ands	r3, r1
    6806:	4313      	orrs	r3, r2
    6808:	e79c      	b.n	6744 <__aeabi_fsub+0x8c>
    680a:	2e00      	cmp	r6, #0
    680c:	d000      	beq.n	6810 <__aeabi_fsub+0x158>
    680e:	e770      	b.n	66f2 <__aeabi_fsub+0x3a>
    6810:	e76b      	b.n	66ea <__aeabi_fsub+0x32>
    6812:	1e3b      	subs	r3, r7, #0
    6814:	d1c5      	bne.n	67a2 <__aeabi_fsub+0xea>
    6816:	2200      	movs	r2, #0
    6818:	027b      	lsls	r3, r7, #9
    681a:	0a5b      	lsrs	r3, r3, #9
    681c:	b2e4      	uxtb	r4, r4
    681e:	e7a3      	b.n	6768 <__aeabi_fsub+0xb0>
    6820:	0014      	movs	r4, r2
    6822:	e78f      	b.n	6744 <__aeabi_fsub+0x8c>
    6824:	2e00      	cmp	r6, #0
    6826:	d04d      	beq.n	68c4 <__aeabi_fsub+0x20c>
    6828:	1e48      	subs	r0, r1, #1
    682a:	2800      	cmp	r0, #0
    682c:	d157      	bne.n	68de <__aeabi_fsub+0x226>
    682e:	199b      	adds	r3, r3, r6
    6830:	2401      	movs	r4, #1
    6832:	015a      	lsls	r2, r3, #5
    6834:	d5b5      	bpl.n	67a2 <__aeabi_fsub+0xea>
    6836:	2402      	movs	r4, #2
    6838:	e7e0      	b.n	67fc <__aeabi_fsub+0x144>
    683a:	2a00      	cmp	r2, #0
    683c:	d125      	bne.n	688a <__aeabi_fsub+0x1d2>
    683e:	1c62      	adds	r2, r4, #1
    6840:	b2d2      	uxtb	r2, r2
    6842:	2a01      	cmp	r2, #1
    6844:	dd72      	ble.n	692c <__aeabi_fsub+0x274>
    6846:	1b9f      	subs	r7, r3, r6
    6848:	017a      	lsls	r2, r7, #5
    684a:	d535      	bpl.n	68b8 <__aeabi_fsub+0x200>
    684c:	1af7      	subs	r7, r6, r3
    684e:	000d      	movs	r5, r1
    6850:	e764      	b.n	671c <__aeabi_fsub+0x64>
    6852:	2201      	movs	r2, #1
    6854:	2300      	movs	r3, #0
    6856:	402a      	ands	r2, r5
    6858:	e786      	b.n	6768 <__aeabi_fsub+0xb0>
    685a:	003b      	movs	r3, r7
    685c:	4a63      	ldr	r2, [pc, #396]	; (69ec <__aeabi_fsub+0x334>)
    685e:	1a24      	subs	r4, r4, r0
    6860:	4013      	ands	r3, r2
    6862:	e76f      	b.n	6744 <__aeabi_fsub+0x8c>
    6864:	2900      	cmp	r1, #0
    6866:	d16c      	bne.n	6942 <__aeabi_fsub+0x28a>
    6868:	1c61      	adds	r1, r4, #1
    686a:	b2c8      	uxtb	r0, r1
    686c:	2801      	cmp	r0, #1
    686e:	dd4e      	ble.n	690e <__aeabi_fsub+0x256>
    6870:	29ff      	cmp	r1, #255	; 0xff
    6872:	d049      	beq.n	6908 <__aeabi_fsub+0x250>
    6874:	199b      	adds	r3, r3, r6
    6876:	085b      	lsrs	r3, r3, #1
    6878:	000c      	movs	r4, r1
    687a:	e763      	b.n	6744 <__aeabi_fsub+0x8c>
    687c:	2aff      	cmp	r2, #255	; 0xff
    687e:	d041      	beq.n	6904 <__aeabi_fsub+0x24c>
    6880:	000a      	movs	r2, r1
    6882:	e781      	b.n	6788 <__aeabi_fsub+0xd0>
    6884:	2601      	movs	r6, #1
    6886:	1b9b      	subs	r3, r3, r6
    6888:	e789      	b.n	679e <__aeabi_fsub+0xe6>
    688a:	2c00      	cmp	r4, #0
    688c:	d01c      	beq.n	68c8 <__aeabi_fsub+0x210>
    688e:	28ff      	cmp	r0, #255	; 0xff
    6890:	d021      	beq.n	68d6 <__aeabi_fsub+0x21e>
    6892:	2480      	movs	r4, #128	; 0x80
    6894:	04e4      	lsls	r4, r4, #19
    6896:	4252      	negs	r2, r2
    6898:	4323      	orrs	r3, r4
    689a:	2a1b      	cmp	r2, #27
    689c:	dd00      	ble.n	68a0 <__aeabi_fsub+0x1e8>
    689e:	e096      	b.n	69ce <__aeabi_fsub+0x316>
    68a0:	001c      	movs	r4, r3
    68a2:	2520      	movs	r5, #32
    68a4:	40d4      	lsrs	r4, r2
    68a6:	1aaa      	subs	r2, r5, r2
    68a8:	4093      	lsls	r3, r2
    68aa:	1e5a      	subs	r2, r3, #1
    68ac:	4193      	sbcs	r3, r2
    68ae:	4323      	orrs	r3, r4
    68b0:	1af3      	subs	r3, r6, r3
    68b2:	0004      	movs	r4, r0
    68b4:	000d      	movs	r5, r1
    68b6:	e72d      	b.n	6714 <__aeabi_fsub+0x5c>
    68b8:	2f00      	cmp	r7, #0
    68ba:	d000      	beq.n	68be <__aeabi_fsub+0x206>
    68bc:	e72e      	b.n	671c <__aeabi_fsub+0x64>
    68be:	2200      	movs	r2, #0
    68c0:	2400      	movs	r4, #0
    68c2:	e7a9      	b.n	6818 <__aeabi_fsub+0x160>
    68c4:	000c      	movs	r4, r1
    68c6:	e73d      	b.n	6744 <__aeabi_fsub+0x8c>
    68c8:	2b00      	cmp	r3, #0
    68ca:	d058      	beq.n	697e <__aeabi_fsub+0x2c6>
    68cc:	43d2      	mvns	r2, r2
    68ce:	2a00      	cmp	r2, #0
    68d0:	d0ee      	beq.n	68b0 <__aeabi_fsub+0x1f8>
    68d2:	28ff      	cmp	r0, #255	; 0xff
    68d4:	d1e1      	bne.n	689a <__aeabi_fsub+0x1e2>
    68d6:	0033      	movs	r3, r6
    68d8:	24ff      	movs	r4, #255	; 0xff
    68da:	000d      	movs	r5, r1
    68dc:	e732      	b.n	6744 <__aeabi_fsub+0x8c>
    68de:	29ff      	cmp	r1, #255	; 0xff
    68e0:	d010      	beq.n	6904 <__aeabi_fsub+0x24c>
    68e2:	0001      	movs	r1, r0
    68e4:	e778      	b.n	67d8 <__aeabi_fsub+0x120>
    68e6:	2b00      	cmp	r3, #0
    68e8:	d06e      	beq.n	69c8 <__aeabi_fsub+0x310>
    68ea:	24ff      	movs	r4, #255	; 0xff
    68ec:	2e00      	cmp	r6, #0
    68ee:	d100      	bne.n	68f2 <__aeabi_fsub+0x23a>
    68f0:	e728      	b.n	6744 <__aeabi_fsub+0x8c>
    68f2:	2280      	movs	r2, #128	; 0x80
    68f4:	4651      	mov	r1, sl
    68f6:	03d2      	lsls	r2, r2, #15
    68f8:	4211      	tst	r1, r2
    68fa:	d003      	beq.n	6904 <__aeabi_fsub+0x24c>
    68fc:	4661      	mov	r1, ip
    68fe:	4211      	tst	r1, r2
    6900:	d100      	bne.n	6904 <__aeabi_fsub+0x24c>
    6902:	0033      	movs	r3, r6
    6904:	24ff      	movs	r4, #255	; 0xff
    6906:	e71d      	b.n	6744 <__aeabi_fsub+0x8c>
    6908:	24ff      	movs	r4, #255	; 0xff
    690a:	2300      	movs	r3, #0
    690c:	e72c      	b.n	6768 <__aeabi_fsub+0xb0>
    690e:	2c00      	cmp	r4, #0
    6910:	d1e9      	bne.n	68e6 <__aeabi_fsub+0x22e>
    6912:	2b00      	cmp	r3, #0
    6914:	d063      	beq.n	69de <__aeabi_fsub+0x326>
    6916:	2e00      	cmp	r6, #0
    6918:	d100      	bne.n	691c <__aeabi_fsub+0x264>
    691a:	e713      	b.n	6744 <__aeabi_fsub+0x8c>
    691c:	199b      	adds	r3, r3, r6
    691e:	015a      	lsls	r2, r3, #5
    6920:	d400      	bmi.n	6924 <__aeabi_fsub+0x26c>
    6922:	e73e      	b.n	67a2 <__aeabi_fsub+0xea>
    6924:	4a31      	ldr	r2, [pc, #196]	; (69ec <__aeabi_fsub+0x334>)
    6926:	000c      	movs	r4, r1
    6928:	4013      	ands	r3, r2
    692a:	e70b      	b.n	6744 <__aeabi_fsub+0x8c>
    692c:	2c00      	cmp	r4, #0
    692e:	d11e      	bne.n	696e <__aeabi_fsub+0x2b6>
    6930:	2b00      	cmp	r3, #0
    6932:	d12f      	bne.n	6994 <__aeabi_fsub+0x2dc>
    6934:	2e00      	cmp	r6, #0
    6936:	d04f      	beq.n	69d8 <__aeabi_fsub+0x320>
    6938:	0033      	movs	r3, r6
    693a:	000d      	movs	r5, r1
    693c:	e702      	b.n	6744 <__aeabi_fsub+0x8c>
    693e:	2601      	movs	r6, #1
    6940:	e755      	b.n	67ee <__aeabi_fsub+0x136>
    6942:	2c00      	cmp	r4, #0
    6944:	d11f      	bne.n	6986 <__aeabi_fsub+0x2ce>
    6946:	2b00      	cmp	r3, #0
    6948:	d043      	beq.n	69d2 <__aeabi_fsub+0x31a>
    694a:	43c9      	mvns	r1, r1
    694c:	2900      	cmp	r1, #0
    694e:	d00b      	beq.n	6968 <__aeabi_fsub+0x2b0>
    6950:	28ff      	cmp	r0, #255	; 0xff
    6952:	d039      	beq.n	69c8 <__aeabi_fsub+0x310>
    6954:	291b      	cmp	r1, #27
    6956:	dc44      	bgt.n	69e2 <__aeabi_fsub+0x32a>
    6958:	001c      	movs	r4, r3
    695a:	2720      	movs	r7, #32
    695c:	40cc      	lsrs	r4, r1
    695e:	1a79      	subs	r1, r7, r1
    6960:	408b      	lsls	r3, r1
    6962:	1e59      	subs	r1, r3, #1
    6964:	418b      	sbcs	r3, r1
    6966:	4323      	orrs	r3, r4
    6968:	199b      	adds	r3, r3, r6
    696a:	0004      	movs	r4, r0
    696c:	e740      	b.n	67f0 <__aeabi_fsub+0x138>
    696e:	2b00      	cmp	r3, #0
    6970:	d11a      	bne.n	69a8 <__aeabi_fsub+0x2f0>
    6972:	2e00      	cmp	r6, #0
    6974:	d124      	bne.n	69c0 <__aeabi_fsub+0x308>
    6976:	2780      	movs	r7, #128	; 0x80
    6978:	2200      	movs	r2, #0
    697a:	03ff      	lsls	r7, r7, #15
    697c:	e71b      	b.n	67b6 <__aeabi_fsub+0xfe>
    697e:	0033      	movs	r3, r6
    6980:	0004      	movs	r4, r0
    6982:	000d      	movs	r5, r1
    6984:	e6de      	b.n	6744 <__aeabi_fsub+0x8c>
    6986:	28ff      	cmp	r0, #255	; 0xff
    6988:	d01e      	beq.n	69c8 <__aeabi_fsub+0x310>
    698a:	2480      	movs	r4, #128	; 0x80
    698c:	04e4      	lsls	r4, r4, #19
    698e:	4249      	negs	r1, r1
    6990:	4323      	orrs	r3, r4
    6992:	e7df      	b.n	6954 <__aeabi_fsub+0x29c>
    6994:	2e00      	cmp	r6, #0
    6996:	d100      	bne.n	699a <__aeabi_fsub+0x2e2>
    6998:	e6d4      	b.n	6744 <__aeabi_fsub+0x8c>
    699a:	1b9f      	subs	r7, r3, r6
    699c:	017a      	lsls	r2, r7, #5
    699e:	d400      	bmi.n	69a2 <__aeabi_fsub+0x2ea>
    69a0:	e737      	b.n	6812 <__aeabi_fsub+0x15a>
    69a2:	1af3      	subs	r3, r6, r3
    69a4:	000d      	movs	r5, r1
    69a6:	e6cd      	b.n	6744 <__aeabi_fsub+0x8c>
    69a8:	24ff      	movs	r4, #255	; 0xff
    69aa:	2e00      	cmp	r6, #0
    69ac:	d100      	bne.n	69b0 <__aeabi_fsub+0x2f8>
    69ae:	e6c9      	b.n	6744 <__aeabi_fsub+0x8c>
    69b0:	2280      	movs	r2, #128	; 0x80
    69b2:	4650      	mov	r0, sl
    69b4:	03d2      	lsls	r2, r2, #15
    69b6:	4210      	tst	r0, r2
    69b8:	d0a4      	beq.n	6904 <__aeabi_fsub+0x24c>
    69ba:	4660      	mov	r0, ip
    69bc:	4210      	tst	r0, r2
    69be:	d1a1      	bne.n	6904 <__aeabi_fsub+0x24c>
    69c0:	0033      	movs	r3, r6
    69c2:	000d      	movs	r5, r1
    69c4:	24ff      	movs	r4, #255	; 0xff
    69c6:	e6bd      	b.n	6744 <__aeabi_fsub+0x8c>
    69c8:	0033      	movs	r3, r6
    69ca:	24ff      	movs	r4, #255	; 0xff
    69cc:	e6ba      	b.n	6744 <__aeabi_fsub+0x8c>
    69ce:	2301      	movs	r3, #1
    69d0:	e76e      	b.n	68b0 <__aeabi_fsub+0x1f8>
    69d2:	0033      	movs	r3, r6
    69d4:	0004      	movs	r4, r0
    69d6:	e6b5      	b.n	6744 <__aeabi_fsub+0x8c>
    69d8:	2700      	movs	r7, #0
    69da:	2200      	movs	r2, #0
    69dc:	e71c      	b.n	6818 <__aeabi_fsub+0x160>
    69de:	0033      	movs	r3, r6
    69e0:	e6b0      	b.n	6744 <__aeabi_fsub+0x8c>
    69e2:	2301      	movs	r3, #1
    69e4:	e7c0      	b.n	6968 <__aeabi_fsub+0x2b0>
    69e6:	46c0      	nop			; (mov r8, r8)
    69e8:	7dffffff 	.word	0x7dffffff
    69ec:	fbffffff 	.word	0xfbffffff

000069f0 <__aeabi_f2iz>:
    69f0:	0241      	lsls	r1, r0, #9
    69f2:	0043      	lsls	r3, r0, #1
    69f4:	0fc2      	lsrs	r2, r0, #31
    69f6:	0a49      	lsrs	r1, r1, #9
    69f8:	0e1b      	lsrs	r3, r3, #24
    69fa:	2000      	movs	r0, #0
    69fc:	2b7e      	cmp	r3, #126	; 0x7e
    69fe:	dd0d      	ble.n	6a1c <__aeabi_f2iz+0x2c>
    6a00:	2b9d      	cmp	r3, #157	; 0x9d
    6a02:	dc0c      	bgt.n	6a1e <__aeabi_f2iz+0x2e>
    6a04:	2080      	movs	r0, #128	; 0x80
    6a06:	0400      	lsls	r0, r0, #16
    6a08:	4301      	orrs	r1, r0
    6a0a:	2b95      	cmp	r3, #149	; 0x95
    6a0c:	dc0a      	bgt.n	6a24 <__aeabi_f2iz+0x34>
    6a0e:	2096      	movs	r0, #150	; 0x96
    6a10:	1ac3      	subs	r3, r0, r3
    6a12:	40d9      	lsrs	r1, r3
    6a14:	4248      	negs	r0, r1
    6a16:	2a00      	cmp	r2, #0
    6a18:	d100      	bne.n	6a1c <__aeabi_f2iz+0x2c>
    6a1a:	0008      	movs	r0, r1
    6a1c:	4770      	bx	lr
    6a1e:	4b03      	ldr	r3, [pc, #12]	; (6a2c <__aeabi_f2iz+0x3c>)
    6a20:	18d0      	adds	r0, r2, r3
    6a22:	e7fb      	b.n	6a1c <__aeabi_f2iz+0x2c>
    6a24:	3b96      	subs	r3, #150	; 0x96
    6a26:	4099      	lsls	r1, r3
    6a28:	e7f4      	b.n	6a14 <__aeabi_f2iz+0x24>
    6a2a:	46c0      	nop			; (mov r8, r8)
    6a2c:	7fffffff 	.word	0x7fffffff

00006a30 <__aeabi_i2f>:
    6a30:	b570      	push	{r4, r5, r6, lr}
    6a32:	2800      	cmp	r0, #0
    6a34:	d030      	beq.n	6a98 <__aeabi_i2f+0x68>
    6a36:	17c3      	asrs	r3, r0, #31
    6a38:	18c4      	adds	r4, r0, r3
    6a3a:	405c      	eors	r4, r3
    6a3c:	0fc5      	lsrs	r5, r0, #31
    6a3e:	0020      	movs	r0, r4
    6a40:	f001 fdae 	bl	85a0 <__clzsi2>
    6a44:	239e      	movs	r3, #158	; 0x9e
    6a46:	1a1b      	subs	r3, r3, r0
    6a48:	2b96      	cmp	r3, #150	; 0x96
    6a4a:	dc0d      	bgt.n	6a68 <__aeabi_i2f+0x38>
    6a4c:	2296      	movs	r2, #150	; 0x96
    6a4e:	1ad2      	subs	r2, r2, r3
    6a50:	4094      	lsls	r4, r2
    6a52:	002a      	movs	r2, r5
    6a54:	0264      	lsls	r4, r4, #9
    6a56:	0a64      	lsrs	r4, r4, #9
    6a58:	b2db      	uxtb	r3, r3
    6a5a:	0264      	lsls	r4, r4, #9
    6a5c:	05db      	lsls	r3, r3, #23
    6a5e:	0a60      	lsrs	r0, r4, #9
    6a60:	07d2      	lsls	r2, r2, #31
    6a62:	4318      	orrs	r0, r3
    6a64:	4310      	orrs	r0, r2
    6a66:	bd70      	pop	{r4, r5, r6, pc}
    6a68:	2b99      	cmp	r3, #153	; 0x99
    6a6a:	dc19      	bgt.n	6aa0 <__aeabi_i2f+0x70>
    6a6c:	2299      	movs	r2, #153	; 0x99
    6a6e:	1ad2      	subs	r2, r2, r3
    6a70:	2a00      	cmp	r2, #0
    6a72:	dd29      	ble.n	6ac8 <__aeabi_i2f+0x98>
    6a74:	4094      	lsls	r4, r2
    6a76:	0022      	movs	r2, r4
    6a78:	4c14      	ldr	r4, [pc, #80]	; (6acc <__aeabi_i2f+0x9c>)
    6a7a:	4014      	ands	r4, r2
    6a7c:	0751      	lsls	r1, r2, #29
    6a7e:	d004      	beq.n	6a8a <__aeabi_i2f+0x5a>
    6a80:	210f      	movs	r1, #15
    6a82:	400a      	ands	r2, r1
    6a84:	2a04      	cmp	r2, #4
    6a86:	d000      	beq.n	6a8a <__aeabi_i2f+0x5a>
    6a88:	3404      	adds	r4, #4
    6a8a:	0162      	lsls	r2, r4, #5
    6a8c:	d413      	bmi.n	6ab6 <__aeabi_i2f+0x86>
    6a8e:	01a4      	lsls	r4, r4, #6
    6a90:	0a64      	lsrs	r4, r4, #9
    6a92:	b2db      	uxtb	r3, r3
    6a94:	002a      	movs	r2, r5
    6a96:	e7e0      	b.n	6a5a <__aeabi_i2f+0x2a>
    6a98:	2200      	movs	r2, #0
    6a9a:	2300      	movs	r3, #0
    6a9c:	2400      	movs	r4, #0
    6a9e:	e7dc      	b.n	6a5a <__aeabi_i2f+0x2a>
    6aa0:	2205      	movs	r2, #5
    6aa2:	0021      	movs	r1, r4
    6aa4:	1a12      	subs	r2, r2, r0
    6aa6:	40d1      	lsrs	r1, r2
    6aa8:	22b9      	movs	r2, #185	; 0xb9
    6aaa:	1ad2      	subs	r2, r2, r3
    6aac:	4094      	lsls	r4, r2
    6aae:	1e62      	subs	r2, r4, #1
    6ab0:	4194      	sbcs	r4, r2
    6ab2:	430c      	orrs	r4, r1
    6ab4:	e7da      	b.n	6a6c <__aeabi_i2f+0x3c>
    6ab6:	4b05      	ldr	r3, [pc, #20]	; (6acc <__aeabi_i2f+0x9c>)
    6ab8:	002a      	movs	r2, r5
    6aba:	401c      	ands	r4, r3
    6abc:	239f      	movs	r3, #159	; 0x9f
    6abe:	01a4      	lsls	r4, r4, #6
    6ac0:	1a1b      	subs	r3, r3, r0
    6ac2:	0a64      	lsrs	r4, r4, #9
    6ac4:	b2db      	uxtb	r3, r3
    6ac6:	e7c8      	b.n	6a5a <__aeabi_i2f+0x2a>
    6ac8:	0022      	movs	r2, r4
    6aca:	e7d5      	b.n	6a78 <__aeabi_i2f+0x48>
    6acc:	fbffffff 	.word	0xfbffffff

00006ad0 <__aeabi_ui2f>:
    6ad0:	b510      	push	{r4, lr}
    6ad2:	1e04      	subs	r4, r0, #0
    6ad4:	d027      	beq.n	6b26 <__aeabi_ui2f+0x56>
    6ad6:	f001 fd63 	bl	85a0 <__clzsi2>
    6ada:	239e      	movs	r3, #158	; 0x9e
    6adc:	1a1b      	subs	r3, r3, r0
    6ade:	2b96      	cmp	r3, #150	; 0x96
    6ae0:	dc0a      	bgt.n	6af8 <__aeabi_ui2f+0x28>
    6ae2:	2296      	movs	r2, #150	; 0x96
    6ae4:	1ad2      	subs	r2, r2, r3
    6ae6:	4094      	lsls	r4, r2
    6ae8:	0264      	lsls	r4, r4, #9
    6aea:	0a64      	lsrs	r4, r4, #9
    6aec:	b2db      	uxtb	r3, r3
    6aee:	0264      	lsls	r4, r4, #9
    6af0:	05db      	lsls	r3, r3, #23
    6af2:	0a60      	lsrs	r0, r4, #9
    6af4:	4318      	orrs	r0, r3
    6af6:	bd10      	pop	{r4, pc}
    6af8:	2b99      	cmp	r3, #153	; 0x99
    6afa:	dc17      	bgt.n	6b2c <__aeabi_ui2f+0x5c>
    6afc:	2299      	movs	r2, #153	; 0x99
    6afe:	1ad2      	subs	r2, r2, r3
    6b00:	2a00      	cmp	r2, #0
    6b02:	dd27      	ble.n	6b54 <__aeabi_ui2f+0x84>
    6b04:	4094      	lsls	r4, r2
    6b06:	0022      	movs	r2, r4
    6b08:	4c13      	ldr	r4, [pc, #76]	; (6b58 <__aeabi_ui2f+0x88>)
    6b0a:	4014      	ands	r4, r2
    6b0c:	0751      	lsls	r1, r2, #29
    6b0e:	d004      	beq.n	6b1a <__aeabi_ui2f+0x4a>
    6b10:	210f      	movs	r1, #15
    6b12:	400a      	ands	r2, r1
    6b14:	2a04      	cmp	r2, #4
    6b16:	d000      	beq.n	6b1a <__aeabi_ui2f+0x4a>
    6b18:	3404      	adds	r4, #4
    6b1a:	0162      	lsls	r2, r4, #5
    6b1c:	d412      	bmi.n	6b44 <__aeabi_ui2f+0x74>
    6b1e:	01a4      	lsls	r4, r4, #6
    6b20:	0a64      	lsrs	r4, r4, #9
    6b22:	b2db      	uxtb	r3, r3
    6b24:	e7e3      	b.n	6aee <__aeabi_ui2f+0x1e>
    6b26:	2300      	movs	r3, #0
    6b28:	2400      	movs	r4, #0
    6b2a:	e7e0      	b.n	6aee <__aeabi_ui2f+0x1e>
    6b2c:	22b9      	movs	r2, #185	; 0xb9
    6b2e:	0021      	movs	r1, r4
    6b30:	1ad2      	subs	r2, r2, r3
    6b32:	4091      	lsls	r1, r2
    6b34:	000a      	movs	r2, r1
    6b36:	1e51      	subs	r1, r2, #1
    6b38:	418a      	sbcs	r2, r1
    6b3a:	2105      	movs	r1, #5
    6b3c:	1a09      	subs	r1, r1, r0
    6b3e:	40cc      	lsrs	r4, r1
    6b40:	4314      	orrs	r4, r2
    6b42:	e7db      	b.n	6afc <__aeabi_ui2f+0x2c>
    6b44:	4b04      	ldr	r3, [pc, #16]	; (6b58 <__aeabi_ui2f+0x88>)
    6b46:	401c      	ands	r4, r3
    6b48:	239f      	movs	r3, #159	; 0x9f
    6b4a:	01a4      	lsls	r4, r4, #6
    6b4c:	1a1b      	subs	r3, r3, r0
    6b4e:	0a64      	lsrs	r4, r4, #9
    6b50:	b2db      	uxtb	r3, r3
    6b52:	e7cc      	b.n	6aee <__aeabi_ui2f+0x1e>
    6b54:	0022      	movs	r2, r4
    6b56:	e7d7      	b.n	6b08 <__aeabi_ui2f+0x38>
    6b58:	fbffffff 	.word	0xfbffffff

00006b5c <__aeabi_dadd>:
    6b5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6b5e:	4645      	mov	r5, r8
    6b60:	46de      	mov	lr, fp
    6b62:	4657      	mov	r7, sl
    6b64:	464e      	mov	r6, r9
    6b66:	030c      	lsls	r4, r1, #12
    6b68:	b5e0      	push	{r5, r6, r7, lr}
    6b6a:	004e      	lsls	r6, r1, #1
    6b6c:	0fc9      	lsrs	r1, r1, #31
    6b6e:	4688      	mov	r8, r1
    6b70:	000d      	movs	r5, r1
    6b72:	0a61      	lsrs	r1, r4, #9
    6b74:	0f44      	lsrs	r4, r0, #29
    6b76:	430c      	orrs	r4, r1
    6b78:	00c7      	lsls	r7, r0, #3
    6b7a:	0319      	lsls	r1, r3, #12
    6b7c:	0058      	lsls	r0, r3, #1
    6b7e:	0fdb      	lsrs	r3, r3, #31
    6b80:	469b      	mov	fp, r3
    6b82:	0a4b      	lsrs	r3, r1, #9
    6b84:	0f51      	lsrs	r1, r2, #29
    6b86:	430b      	orrs	r3, r1
    6b88:	0d76      	lsrs	r6, r6, #21
    6b8a:	0d40      	lsrs	r0, r0, #21
    6b8c:	0019      	movs	r1, r3
    6b8e:	00d2      	lsls	r2, r2, #3
    6b90:	45d8      	cmp	r8, fp
    6b92:	d100      	bne.n	6b96 <__aeabi_dadd+0x3a>
    6b94:	e0ae      	b.n	6cf4 <__aeabi_dadd+0x198>
    6b96:	1a35      	subs	r5, r6, r0
    6b98:	2d00      	cmp	r5, #0
    6b9a:	dc00      	bgt.n	6b9e <__aeabi_dadd+0x42>
    6b9c:	e0f6      	b.n	6d8c <__aeabi_dadd+0x230>
    6b9e:	2800      	cmp	r0, #0
    6ba0:	d10f      	bne.n	6bc2 <__aeabi_dadd+0x66>
    6ba2:	4313      	orrs	r3, r2
    6ba4:	d100      	bne.n	6ba8 <__aeabi_dadd+0x4c>
    6ba6:	e0db      	b.n	6d60 <__aeabi_dadd+0x204>
    6ba8:	1e6b      	subs	r3, r5, #1
    6baa:	2b00      	cmp	r3, #0
    6bac:	d000      	beq.n	6bb0 <__aeabi_dadd+0x54>
    6bae:	e137      	b.n	6e20 <__aeabi_dadd+0x2c4>
    6bb0:	1aba      	subs	r2, r7, r2
    6bb2:	4297      	cmp	r7, r2
    6bb4:	41bf      	sbcs	r7, r7
    6bb6:	1a64      	subs	r4, r4, r1
    6bb8:	427f      	negs	r7, r7
    6bba:	1be4      	subs	r4, r4, r7
    6bbc:	2601      	movs	r6, #1
    6bbe:	0017      	movs	r7, r2
    6bc0:	e024      	b.n	6c0c <__aeabi_dadd+0xb0>
    6bc2:	4bc6      	ldr	r3, [pc, #792]	; (6edc <__aeabi_dadd+0x380>)
    6bc4:	429e      	cmp	r6, r3
    6bc6:	d04d      	beq.n	6c64 <__aeabi_dadd+0x108>
    6bc8:	2380      	movs	r3, #128	; 0x80
    6bca:	041b      	lsls	r3, r3, #16
    6bcc:	4319      	orrs	r1, r3
    6bce:	2d38      	cmp	r5, #56	; 0x38
    6bd0:	dd00      	ble.n	6bd4 <__aeabi_dadd+0x78>
    6bd2:	e107      	b.n	6de4 <__aeabi_dadd+0x288>
    6bd4:	2d1f      	cmp	r5, #31
    6bd6:	dd00      	ble.n	6bda <__aeabi_dadd+0x7e>
    6bd8:	e138      	b.n	6e4c <__aeabi_dadd+0x2f0>
    6bda:	2020      	movs	r0, #32
    6bdc:	1b43      	subs	r3, r0, r5
    6bde:	469a      	mov	sl, r3
    6be0:	000b      	movs	r3, r1
    6be2:	4650      	mov	r0, sl
    6be4:	4083      	lsls	r3, r0
    6be6:	4699      	mov	r9, r3
    6be8:	0013      	movs	r3, r2
    6bea:	4648      	mov	r0, r9
    6bec:	40eb      	lsrs	r3, r5
    6bee:	4318      	orrs	r0, r3
    6bf0:	0003      	movs	r3, r0
    6bf2:	4650      	mov	r0, sl
    6bf4:	4082      	lsls	r2, r0
    6bf6:	1e50      	subs	r0, r2, #1
    6bf8:	4182      	sbcs	r2, r0
    6bfa:	40e9      	lsrs	r1, r5
    6bfc:	431a      	orrs	r2, r3
    6bfe:	1aba      	subs	r2, r7, r2
    6c00:	1a61      	subs	r1, r4, r1
    6c02:	4297      	cmp	r7, r2
    6c04:	41a4      	sbcs	r4, r4
    6c06:	0017      	movs	r7, r2
    6c08:	4264      	negs	r4, r4
    6c0a:	1b0c      	subs	r4, r1, r4
    6c0c:	0223      	lsls	r3, r4, #8
    6c0e:	d562      	bpl.n	6cd6 <__aeabi_dadd+0x17a>
    6c10:	0264      	lsls	r4, r4, #9
    6c12:	0a65      	lsrs	r5, r4, #9
    6c14:	2d00      	cmp	r5, #0
    6c16:	d100      	bne.n	6c1a <__aeabi_dadd+0xbe>
    6c18:	e0df      	b.n	6dda <__aeabi_dadd+0x27e>
    6c1a:	0028      	movs	r0, r5
    6c1c:	f001 fcc0 	bl	85a0 <__clzsi2>
    6c20:	0003      	movs	r3, r0
    6c22:	3b08      	subs	r3, #8
    6c24:	2b1f      	cmp	r3, #31
    6c26:	dd00      	ble.n	6c2a <__aeabi_dadd+0xce>
    6c28:	e0d2      	b.n	6dd0 <__aeabi_dadd+0x274>
    6c2a:	2220      	movs	r2, #32
    6c2c:	003c      	movs	r4, r7
    6c2e:	1ad2      	subs	r2, r2, r3
    6c30:	409d      	lsls	r5, r3
    6c32:	40d4      	lsrs	r4, r2
    6c34:	409f      	lsls	r7, r3
    6c36:	4325      	orrs	r5, r4
    6c38:	429e      	cmp	r6, r3
    6c3a:	dd00      	ble.n	6c3e <__aeabi_dadd+0xe2>
    6c3c:	e0c4      	b.n	6dc8 <__aeabi_dadd+0x26c>
    6c3e:	1b9e      	subs	r6, r3, r6
    6c40:	1c73      	adds	r3, r6, #1
    6c42:	2b1f      	cmp	r3, #31
    6c44:	dd00      	ble.n	6c48 <__aeabi_dadd+0xec>
    6c46:	e0f1      	b.n	6e2c <__aeabi_dadd+0x2d0>
    6c48:	2220      	movs	r2, #32
    6c4a:	0038      	movs	r0, r7
    6c4c:	0029      	movs	r1, r5
    6c4e:	1ad2      	subs	r2, r2, r3
    6c50:	40d8      	lsrs	r0, r3
    6c52:	4091      	lsls	r1, r2
    6c54:	4097      	lsls	r7, r2
    6c56:	002c      	movs	r4, r5
    6c58:	4301      	orrs	r1, r0
    6c5a:	1e78      	subs	r0, r7, #1
    6c5c:	4187      	sbcs	r7, r0
    6c5e:	40dc      	lsrs	r4, r3
    6c60:	2600      	movs	r6, #0
    6c62:	430f      	orrs	r7, r1
    6c64:	077b      	lsls	r3, r7, #29
    6c66:	d009      	beq.n	6c7c <__aeabi_dadd+0x120>
    6c68:	230f      	movs	r3, #15
    6c6a:	403b      	ands	r3, r7
    6c6c:	2b04      	cmp	r3, #4
    6c6e:	d005      	beq.n	6c7c <__aeabi_dadd+0x120>
    6c70:	1d3b      	adds	r3, r7, #4
    6c72:	42bb      	cmp	r3, r7
    6c74:	41bf      	sbcs	r7, r7
    6c76:	427f      	negs	r7, r7
    6c78:	19e4      	adds	r4, r4, r7
    6c7a:	001f      	movs	r7, r3
    6c7c:	0223      	lsls	r3, r4, #8
    6c7e:	d52c      	bpl.n	6cda <__aeabi_dadd+0x17e>
    6c80:	4b96      	ldr	r3, [pc, #600]	; (6edc <__aeabi_dadd+0x380>)
    6c82:	3601      	adds	r6, #1
    6c84:	429e      	cmp	r6, r3
    6c86:	d100      	bne.n	6c8a <__aeabi_dadd+0x12e>
    6c88:	e09a      	b.n	6dc0 <__aeabi_dadd+0x264>
    6c8a:	4645      	mov	r5, r8
    6c8c:	4b94      	ldr	r3, [pc, #592]	; (6ee0 <__aeabi_dadd+0x384>)
    6c8e:	08ff      	lsrs	r7, r7, #3
    6c90:	401c      	ands	r4, r3
    6c92:	0760      	lsls	r0, r4, #29
    6c94:	0576      	lsls	r6, r6, #21
    6c96:	0264      	lsls	r4, r4, #9
    6c98:	4307      	orrs	r7, r0
    6c9a:	0b24      	lsrs	r4, r4, #12
    6c9c:	0d76      	lsrs	r6, r6, #21
    6c9e:	2100      	movs	r1, #0
    6ca0:	0324      	lsls	r4, r4, #12
    6ca2:	0b23      	lsrs	r3, r4, #12
    6ca4:	0d0c      	lsrs	r4, r1, #20
    6ca6:	4a8f      	ldr	r2, [pc, #572]	; (6ee4 <__aeabi_dadd+0x388>)
    6ca8:	0524      	lsls	r4, r4, #20
    6caa:	431c      	orrs	r4, r3
    6cac:	4014      	ands	r4, r2
    6cae:	0533      	lsls	r3, r6, #20
    6cb0:	4323      	orrs	r3, r4
    6cb2:	005b      	lsls	r3, r3, #1
    6cb4:	07ed      	lsls	r5, r5, #31
    6cb6:	085b      	lsrs	r3, r3, #1
    6cb8:	432b      	orrs	r3, r5
    6cba:	0038      	movs	r0, r7
    6cbc:	0019      	movs	r1, r3
    6cbe:	bc3c      	pop	{r2, r3, r4, r5}
    6cc0:	4690      	mov	r8, r2
    6cc2:	4699      	mov	r9, r3
    6cc4:	46a2      	mov	sl, r4
    6cc6:	46ab      	mov	fp, r5
    6cc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6cca:	4664      	mov	r4, ip
    6ccc:	4304      	orrs	r4, r0
    6cce:	d100      	bne.n	6cd2 <__aeabi_dadd+0x176>
    6cd0:	e211      	b.n	70f6 <__aeabi_dadd+0x59a>
    6cd2:	0004      	movs	r4, r0
    6cd4:	4667      	mov	r7, ip
    6cd6:	077b      	lsls	r3, r7, #29
    6cd8:	d1c6      	bne.n	6c68 <__aeabi_dadd+0x10c>
    6cda:	4645      	mov	r5, r8
    6cdc:	0760      	lsls	r0, r4, #29
    6cde:	08ff      	lsrs	r7, r7, #3
    6ce0:	4307      	orrs	r7, r0
    6ce2:	08e4      	lsrs	r4, r4, #3
    6ce4:	4b7d      	ldr	r3, [pc, #500]	; (6edc <__aeabi_dadd+0x380>)
    6ce6:	429e      	cmp	r6, r3
    6ce8:	d030      	beq.n	6d4c <__aeabi_dadd+0x1f0>
    6cea:	0324      	lsls	r4, r4, #12
    6cec:	0576      	lsls	r6, r6, #21
    6cee:	0b24      	lsrs	r4, r4, #12
    6cf0:	0d76      	lsrs	r6, r6, #21
    6cf2:	e7d4      	b.n	6c9e <__aeabi_dadd+0x142>
    6cf4:	1a33      	subs	r3, r6, r0
    6cf6:	469a      	mov	sl, r3
    6cf8:	2b00      	cmp	r3, #0
    6cfa:	dd78      	ble.n	6dee <__aeabi_dadd+0x292>
    6cfc:	2800      	cmp	r0, #0
    6cfe:	d031      	beq.n	6d64 <__aeabi_dadd+0x208>
    6d00:	4876      	ldr	r0, [pc, #472]	; (6edc <__aeabi_dadd+0x380>)
    6d02:	4286      	cmp	r6, r0
    6d04:	d0ae      	beq.n	6c64 <__aeabi_dadd+0x108>
    6d06:	2080      	movs	r0, #128	; 0x80
    6d08:	0400      	lsls	r0, r0, #16
    6d0a:	4301      	orrs	r1, r0
    6d0c:	4653      	mov	r3, sl
    6d0e:	2b38      	cmp	r3, #56	; 0x38
    6d10:	dc00      	bgt.n	6d14 <__aeabi_dadd+0x1b8>
    6d12:	e0e9      	b.n	6ee8 <__aeabi_dadd+0x38c>
    6d14:	430a      	orrs	r2, r1
    6d16:	1e51      	subs	r1, r2, #1
    6d18:	418a      	sbcs	r2, r1
    6d1a:	2100      	movs	r1, #0
    6d1c:	19d2      	adds	r2, r2, r7
    6d1e:	42ba      	cmp	r2, r7
    6d20:	41bf      	sbcs	r7, r7
    6d22:	1909      	adds	r1, r1, r4
    6d24:	427c      	negs	r4, r7
    6d26:	0017      	movs	r7, r2
    6d28:	190c      	adds	r4, r1, r4
    6d2a:	0223      	lsls	r3, r4, #8
    6d2c:	d5d3      	bpl.n	6cd6 <__aeabi_dadd+0x17a>
    6d2e:	4b6b      	ldr	r3, [pc, #428]	; (6edc <__aeabi_dadd+0x380>)
    6d30:	3601      	adds	r6, #1
    6d32:	429e      	cmp	r6, r3
    6d34:	d100      	bne.n	6d38 <__aeabi_dadd+0x1dc>
    6d36:	e13a      	b.n	6fae <__aeabi_dadd+0x452>
    6d38:	2001      	movs	r0, #1
    6d3a:	4b69      	ldr	r3, [pc, #420]	; (6ee0 <__aeabi_dadd+0x384>)
    6d3c:	401c      	ands	r4, r3
    6d3e:	087b      	lsrs	r3, r7, #1
    6d40:	4007      	ands	r7, r0
    6d42:	431f      	orrs	r7, r3
    6d44:	07e0      	lsls	r0, r4, #31
    6d46:	4307      	orrs	r7, r0
    6d48:	0864      	lsrs	r4, r4, #1
    6d4a:	e78b      	b.n	6c64 <__aeabi_dadd+0x108>
    6d4c:	0023      	movs	r3, r4
    6d4e:	433b      	orrs	r3, r7
    6d50:	d100      	bne.n	6d54 <__aeabi_dadd+0x1f8>
    6d52:	e1cb      	b.n	70ec <__aeabi_dadd+0x590>
    6d54:	2280      	movs	r2, #128	; 0x80
    6d56:	0312      	lsls	r2, r2, #12
    6d58:	4314      	orrs	r4, r2
    6d5a:	0324      	lsls	r4, r4, #12
    6d5c:	0b24      	lsrs	r4, r4, #12
    6d5e:	e79e      	b.n	6c9e <__aeabi_dadd+0x142>
    6d60:	002e      	movs	r6, r5
    6d62:	e77f      	b.n	6c64 <__aeabi_dadd+0x108>
    6d64:	0008      	movs	r0, r1
    6d66:	4310      	orrs	r0, r2
    6d68:	d100      	bne.n	6d6c <__aeabi_dadd+0x210>
    6d6a:	e0b4      	b.n	6ed6 <__aeabi_dadd+0x37a>
    6d6c:	1e58      	subs	r0, r3, #1
    6d6e:	2800      	cmp	r0, #0
    6d70:	d000      	beq.n	6d74 <__aeabi_dadd+0x218>
    6d72:	e0de      	b.n	6f32 <__aeabi_dadd+0x3d6>
    6d74:	18ba      	adds	r2, r7, r2
    6d76:	42ba      	cmp	r2, r7
    6d78:	419b      	sbcs	r3, r3
    6d7a:	1864      	adds	r4, r4, r1
    6d7c:	425b      	negs	r3, r3
    6d7e:	18e4      	adds	r4, r4, r3
    6d80:	0017      	movs	r7, r2
    6d82:	2601      	movs	r6, #1
    6d84:	0223      	lsls	r3, r4, #8
    6d86:	d5a6      	bpl.n	6cd6 <__aeabi_dadd+0x17a>
    6d88:	2602      	movs	r6, #2
    6d8a:	e7d5      	b.n	6d38 <__aeabi_dadd+0x1dc>
    6d8c:	2d00      	cmp	r5, #0
    6d8e:	d16e      	bne.n	6e6e <__aeabi_dadd+0x312>
    6d90:	1c70      	adds	r0, r6, #1
    6d92:	0540      	lsls	r0, r0, #21
    6d94:	0d40      	lsrs	r0, r0, #21
    6d96:	2801      	cmp	r0, #1
    6d98:	dc00      	bgt.n	6d9c <__aeabi_dadd+0x240>
    6d9a:	e0f9      	b.n	6f90 <__aeabi_dadd+0x434>
    6d9c:	1ab8      	subs	r0, r7, r2
    6d9e:	4684      	mov	ip, r0
    6da0:	4287      	cmp	r7, r0
    6da2:	4180      	sbcs	r0, r0
    6da4:	1ae5      	subs	r5, r4, r3
    6da6:	4240      	negs	r0, r0
    6da8:	1a2d      	subs	r5, r5, r0
    6daa:	0228      	lsls	r0, r5, #8
    6dac:	d400      	bmi.n	6db0 <__aeabi_dadd+0x254>
    6dae:	e089      	b.n	6ec4 <__aeabi_dadd+0x368>
    6db0:	1bd7      	subs	r7, r2, r7
    6db2:	42ba      	cmp	r2, r7
    6db4:	4192      	sbcs	r2, r2
    6db6:	1b1c      	subs	r4, r3, r4
    6db8:	4252      	negs	r2, r2
    6dba:	1aa5      	subs	r5, r4, r2
    6dbc:	46d8      	mov	r8, fp
    6dbe:	e729      	b.n	6c14 <__aeabi_dadd+0xb8>
    6dc0:	4645      	mov	r5, r8
    6dc2:	2400      	movs	r4, #0
    6dc4:	2700      	movs	r7, #0
    6dc6:	e76a      	b.n	6c9e <__aeabi_dadd+0x142>
    6dc8:	4c45      	ldr	r4, [pc, #276]	; (6ee0 <__aeabi_dadd+0x384>)
    6dca:	1af6      	subs	r6, r6, r3
    6dcc:	402c      	ands	r4, r5
    6dce:	e749      	b.n	6c64 <__aeabi_dadd+0x108>
    6dd0:	003d      	movs	r5, r7
    6dd2:	3828      	subs	r0, #40	; 0x28
    6dd4:	4085      	lsls	r5, r0
    6dd6:	2700      	movs	r7, #0
    6dd8:	e72e      	b.n	6c38 <__aeabi_dadd+0xdc>
    6dda:	0038      	movs	r0, r7
    6ddc:	f001 fbe0 	bl	85a0 <__clzsi2>
    6de0:	3020      	adds	r0, #32
    6de2:	e71d      	b.n	6c20 <__aeabi_dadd+0xc4>
    6de4:	430a      	orrs	r2, r1
    6de6:	1e51      	subs	r1, r2, #1
    6de8:	418a      	sbcs	r2, r1
    6dea:	2100      	movs	r1, #0
    6dec:	e707      	b.n	6bfe <__aeabi_dadd+0xa2>
    6dee:	2b00      	cmp	r3, #0
    6df0:	d000      	beq.n	6df4 <__aeabi_dadd+0x298>
    6df2:	e0f3      	b.n	6fdc <__aeabi_dadd+0x480>
    6df4:	1c70      	adds	r0, r6, #1
    6df6:	0543      	lsls	r3, r0, #21
    6df8:	0d5b      	lsrs	r3, r3, #21
    6dfa:	2b01      	cmp	r3, #1
    6dfc:	dc00      	bgt.n	6e00 <__aeabi_dadd+0x2a4>
    6dfe:	e0ad      	b.n	6f5c <__aeabi_dadd+0x400>
    6e00:	4b36      	ldr	r3, [pc, #216]	; (6edc <__aeabi_dadd+0x380>)
    6e02:	4298      	cmp	r0, r3
    6e04:	d100      	bne.n	6e08 <__aeabi_dadd+0x2ac>
    6e06:	e0d1      	b.n	6fac <__aeabi_dadd+0x450>
    6e08:	18ba      	adds	r2, r7, r2
    6e0a:	42ba      	cmp	r2, r7
    6e0c:	41bf      	sbcs	r7, r7
    6e0e:	1864      	adds	r4, r4, r1
    6e10:	427f      	negs	r7, r7
    6e12:	19e4      	adds	r4, r4, r7
    6e14:	07e7      	lsls	r7, r4, #31
    6e16:	0852      	lsrs	r2, r2, #1
    6e18:	4317      	orrs	r7, r2
    6e1a:	0864      	lsrs	r4, r4, #1
    6e1c:	0006      	movs	r6, r0
    6e1e:	e721      	b.n	6c64 <__aeabi_dadd+0x108>
    6e20:	482e      	ldr	r0, [pc, #184]	; (6edc <__aeabi_dadd+0x380>)
    6e22:	4285      	cmp	r5, r0
    6e24:	d100      	bne.n	6e28 <__aeabi_dadd+0x2cc>
    6e26:	e093      	b.n	6f50 <__aeabi_dadd+0x3f4>
    6e28:	001d      	movs	r5, r3
    6e2a:	e6d0      	b.n	6bce <__aeabi_dadd+0x72>
    6e2c:	0029      	movs	r1, r5
    6e2e:	3e1f      	subs	r6, #31
    6e30:	40f1      	lsrs	r1, r6
    6e32:	2b20      	cmp	r3, #32
    6e34:	d100      	bne.n	6e38 <__aeabi_dadd+0x2dc>
    6e36:	e08d      	b.n	6f54 <__aeabi_dadd+0x3f8>
    6e38:	2240      	movs	r2, #64	; 0x40
    6e3a:	1ad3      	subs	r3, r2, r3
    6e3c:	409d      	lsls	r5, r3
    6e3e:	432f      	orrs	r7, r5
    6e40:	1e7d      	subs	r5, r7, #1
    6e42:	41af      	sbcs	r7, r5
    6e44:	2400      	movs	r4, #0
    6e46:	430f      	orrs	r7, r1
    6e48:	2600      	movs	r6, #0
    6e4a:	e744      	b.n	6cd6 <__aeabi_dadd+0x17a>
    6e4c:	002b      	movs	r3, r5
    6e4e:	0008      	movs	r0, r1
    6e50:	3b20      	subs	r3, #32
    6e52:	40d8      	lsrs	r0, r3
    6e54:	0003      	movs	r3, r0
    6e56:	2d20      	cmp	r5, #32
    6e58:	d100      	bne.n	6e5c <__aeabi_dadd+0x300>
    6e5a:	e07d      	b.n	6f58 <__aeabi_dadd+0x3fc>
    6e5c:	2040      	movs	r0, #64	; 0x40
    6e5e:	1b45      	subs	r5, r0, r5
    6e60:	40a9      	lsls	r1, r5
    6e62:	430a      	orrs	r2, r1
    6e64:	1e51      	subs	r1, r2, #1
    6e66:	418a      	sbcs	r2, r1
    6e68:	2100      	movs	r1, #0
    6e6a:	431a      	orrs	r2, r3
    6e6c:	e6c7      	b.n	6bfe <__aeabi_dadd+0xa2>
    6e6e:	2e00      	cmp	r6, #0
    6e70:	d050      	beq.n	6f14 <__aeabi_dadd+0x3b8>
    6e72:	4e1a      	ldr	r6, [pc, #104]	; (6edc <__aeabi_dadd+0x380>)
    6e74:	42b0      	cmp	r0, r6
    6e76:	d057      	beq.n	6f28 <__aeabi_dadd+0x3cc>
    6e78:	2680      	movs	r6, #128	; 0x80
    6e7a:	426b      	negs	r3, r5
    6e7c:	4699      	mov	r9, r3
    6e7e:	0436      	lsls	r6, r6, #16
    6e80:	4334      	orrs	r4, r6
    6e82:	464b      	mov	r3, r9
    6e84:	2b38      	cmp	r3, #56	; 0x38
    6e86:	dd00      	ble.n	6e8a <__aeabi_dadd+0x32e>
    6e88:	e0d6      	b.n	7038 <__aeabi_dadd+0x4dc>
    6e8a:	2b1f      	cmp	r3, #31
    6e8c:	dd00      	ble.n	6e90 <__aeabi_dadd+0x334>
    6e8e:	e135      	b.n	70fc <__aeabi_dadd+0x5a0>
    6e90:	2620      	movs	r6, #32
    6e92:	1af5      	subs	r5, r6, r3
    6e94:	0026      	movs	r6, r4
    6e96:	40ae      	lsls	r6, r5
    6e98:	46b2      	mov	sl, r6
    6e9a:	003e      	movs	r6, r7
    6e9c:	40de      	lsrs	r6, r3
    6e9e:	46ac      	mov	ip, r5
    6ea0:	0035      	movs	r5, r6
    6ea2:	4656      	mov	r6, sl
    6ea4:	432e      	orrs	r6, r5
    6ea6:	4665      	mov	r5, ip
    6ea8:	40af      	lsls	r7, r5
    6eaa:	1e7d      	subs	r5, r7, #1
    6eac:	41af      	sbcs	r7, r5
    6eae:	40dc      	lsrs	r4, r3
    6eb0:	4337      	orrs	r7, r6
    6eb2:	1bd7      	subs	r7, r2, r7
    6eb4:	42ba      	cmp	r2, r7
    6eb6:	4192      	sbcs	r2, r2
    6eb8:	1b0c      	subs	r4, r1, r4
    6eba:	4252      	negs	r2, r2
    6ebc:	1aa4      	subs	r4, r4, r2
    6ebe:	0006      	movs	r6, r0
    6ec0:	46d8      	mov	r8, fp
    6ec2:	e6a3      	b.n	6c0c <__aeabi_dadd+0xb0>
    6ec4:	4664      	mov	r4, ip
    6ec6:	4667      	mov	r7, ip
    6ec8:	432c      	orrs	r4, r5
    6eca:	d000      	beq.n	6ece <__aeabi_dadd+0x372>
    6ecc:	e6a2      	b.n	6c14 <__aeabi_dadd+0xb8>
    6ece:	2500      	movs	r5, #0
    6ed0:	2600      	movs	r6, #0
    6ed2:	2700      	movs	r7, #0
    6ed4:	e706      	b.n	6ce4 <__aeabi_dadd+0x188>
    6ed6:	001e      	movs	r6, r3
    6ed8:	e6c4      	b.n	6c64 <__aeabi_dadd+0x108>
    6eda:	46c0      	nop			; (mov r8, r8)
    6edc:	000007ff 	.word	0x000007ff
    6ee0:	ff7fffff 	.word	0xff7fffff
    6ee4:	800fffff 	.word	0x800fffff
    6ee8:	2b1f      	cmp	r3, #31
    6eea:	dc63      	bgt.n	6fb4 <__aeabi_dadd+0x458>
    6eec:	2020      	movs	r0, #32
    6eee:	1ac3      	subs	r3, r0, r3
    6ef0:	0008      	movs	r0, r1
    6ef2:	4098      	lsls	r0, r3
    6ef4:	469c      	mov	ip, r3
    6ef6:	4683      	mov	fp, r0
    6ef8:	4653      	mov	r3, sl
    6efa:	0010      	movs	r0, r2
    6efc:	40d8      	lsrs	r0, r3
    6efe:	0003      	movs	r3, r0
    6f00:	4658      	mov	r0, fp
    6f02:	4318      	orrs	r0, r3
    6f04:	4663      	mov	r3, ip
    6f06:	409a      	lsls	r2, r3
    6f08:	1e53      	subs	r3, r2, #1
    6f0a:	419a      	sbcs	r2, r3
    6f0c:	4653      	mov	r3, sl
    6f0e:	4302      	orrs	r2, r0
    6f10:	40d9      	lsrs	r1, r3
    6f12:	e703      	b.n	6d1c <__aeabi_dadd+0x1c0>
    6f14:	0026      	movs	r6, r4
    6f16:	433e      	orrs	r6, r7
    6f18:	d006      	beq.n	6f28 <__aeabi_dadd+0x3cc>
    6f1a:	43eb      	mvns	r3, r5
    6f1c:	4699      	mov	r9, r3
    6f1e:	2b00      	cmp	r3, #0
    6f20:	d0c7      	beq.n	6eb2 <__aeabi_dadd+0x356>
    6f22:	4e94      	ldr	r6, [pc, #592]	; (7174 <__aeabi_dadd+0x618>)
    6f24:	42b0      	cmp	r0, r6
    6f26:	d1ac      	bne.n	6e82 <__aeabi_dadd+0x326>
    6f28:	000c      	movs	r4, r1
    6f2a:	0017      	movs	r7, r2
    6f2c:	0006      	movs	r6, r0
    6f2e:	46d8      	mov	r8, fp
    6f30:	e698      	b.n	6c64 <__aeabi_dadd+0x108>
    6f32:	4b90      	ldr	r3, [pc, #576]	; (7174 <__aeabi_dadd+0x618>)
    6f34:	459a      	cmp	sl, r3
    6f36:	d00b      	beq.n	6f50 <__aeabi_dadd+0x3f4>
    6f38:	4682      	mov	sl, r0
    6f3a:	e6e7      	b.n	6d0c <__aeabi_dadd+0x1b0>
    6f3c:	2800      	cmp	r0, #0
    6f3e:	d000      	beq.n	6f42 <__aeabi_dadd+0x3e6>
    6f40:	e09e      	b.n	7080 <__aeabi_dadd+0x524>
    6f42:	0018      	movs	r0, r3
    6f44:	4310      	orrs	r0, r2
    6f46:	d100      	bne.n	6f4a <__aeabi_dadd+0x3ee>
    6f48:	e0e9      	b.n	711e <__aeabi_dadd+0x5c2>
    6f4a:	001c      	movs	r4, r3
    6f4c:	0017      	movs	r7, r2
    6f4e:	46d8      	mov	r8, fp
    6f50:	4e88      	ldr	r6, [pc, #544]	; (7174 <__aeabi_dadd+0x618>)
    6f52:	e687      	b.n	6c64 <__aeabi_dadd+0x108>
    6f54:	2500      	movs	r5, #0
    6f56:	e772      	b.n	6e3e <__aeabi_dadd+0x2e2>
    6f58:	2100      	movs	r1, #0
    6f5a:	e782      	b.n	6e62 <__aeabi_dadd+0x306>
    6f5c:	0023      	movs	r3, r4
    6f5e:	433b      	orrs	r3, r7
    6f60:	2e00      	cmp	r6, #0
    6f62:	d000      	beq.n	6f66 <__aeabi_dadd+0x40a>
    6f64:	e0ab      	b.n	70be <__aeabi_dadd+0x562>
    6f66:	2b00      	cmp	r3, #0
    6f68:	d100      	bne.n	6f6c <__aeabi_dadd+0x410>
    6f6a:	e0e7      	b.n	713c <__aeabi_dadd+0x5e0>
    6f6c:	000b      	movs	r3, r1
    6f6e:	4313      	orrs	r3, r2
    6f70:	d100      	bne.n	6f74 <__aeabi_dadd+0x418>
    6f72:	e677      	b.n	6c64 <__aeabi_dadd+0x108>
    6f74:	18ba      	adds	r2, r7, r2
    6f76:	42ba      	cmp	r2, r7
    6f78:	41bf      	sbcs	r7, r7
    6f7a:	1864      	adds	r4, r4, r1
    6f7c:	427f      	negs	r7, r7
    6f7e:	19e4      	adds	r4, r4, r7
    6f80:	0223      	lsls	r3, r4, #8
    6f82:	d400      	bmi.n	6f86 <__aeabi_dadd+0x42a>
    6f84:	e0f2      	b.n	716c <__aeabi_dadd+0x610>
    6f86:	4b7c      	ldr	r3, [pc, #496]	; (7178 <__aeabi_dadd+0x61c>)
    6f88:	0017      	movs	r7, r2
    6f8a:	401c      	ands	r4, r3
    6f8c:	0006      	movs	r6, r0
    6f8e:	e669      	b.n	6c64 <__aeabi_dadd+0x108>
    6f90:	0020      	movs	r0, r4
    6f92:	4338      	orrs	r0, r7
    6f94:	2e00      	cmp	r6, #0
    6f96:	d1d1      	bne.n	6f3c <__aeabi_dadd+0x3e0>
    6f98:	2800      	cmp	r0, #0
    6f9a:	d15b      	bne.n	7054 <__aeabi_dadd+0x4f8>
    6f9c:	001c      	movs	r4, r3
    6f9e:	4314      	orrs	r4, r2
    6fa0:	d100      	bne.n	6fa4 <__aeabi_dadd+0x448>
    6fa2:	e0a8      	b.n	70f6 <__aeabi_dadd+0x59a>
    6fa4:	001c      	movs	r4, r3
    6fa6:	0017      	movs	r7, r2
    6fa8:	46d8      	mov	r8, fp
    6faa:	e65b      	b.n	6c64 <__aeabi_dadd+0x108>
    6fac:	0006      	movs	r6, r0
    6fae:	2400      	movs	r4, #0
    6fb0:	2700      	movs	r7, #0
    6fb2:	e697      	b.n	6ce4 <__aeabi_dadd+0x188>
    6fb4:	4650      	mov	r0, sl
    6fb6:	000b      	movs	r3, r1
    6fb8:	3820      	subs	r0, #32
    6fba:	40c3      	lsrs	r3, r0
    6fbc:	4699      	mov	r9, r3
    6fbe:	4653      	mov	r3, sl
    6fc0:	2b20      	cmp	r3, #32
    6fc2:	d100      	bne.n	6fc6 <__aeabi_dadd+0x46a>
    6fc4:	e095      	b.n	70f2 <__aeabi_dadd+0x596>
    6fc6:	2340      	movs	r3, #64	; 0x40
    6fc8:	4650      	mov	r0, sl
    6fca:	1a1b      	subs	r3, r3, r0
    6fcc:	4099      	lsls	r1, r3
    6fce:	430a      	orrs	r2, r1
    6fd0:	1e51      	subs	r1, r2, #1
    6fd2:	418a      	sbcs	r2, r1
    6fd4:	464b      	mov	r3, r9
    6fd6:	2100      	movs	r1, #0
    6fd8:	431a      	orrs	r2, r3
    6fda:	e69f      	b.n	6d1c <__aeabi_dadd+0x1c0>
    6fdc:	2e00      	cmp	r6, #0
    6fde:	d130      	bne.n	7042 <__aeabi_dadd+0x4e6>
    6fe0:	0026      	movs	r6, r4
    6fe2:	433e      	orrs	r6, r7
    6fe4:	d067      	beq.n	70b6 <__aeabi_dadd+0x55a>
    6fe6:	43db      	mvns	r3, r3
    6fe8:	469a      	mov	sl, r3
    6fea:	2b00      	cmp	r3, #0
    6fec:	d01c      	beq.n	7028 <__aeabi_dadd+0x4cc>
    6fee:	4e61      	ldr	r6, [pc, #388]	; (7174 <__aeabi_dadd+0x618>)
    6ff0:	42b0      	cmp	r0, r6
    6ff2:	d060      	beq.n	70b6 <__aeabi_dadd+0x55a>
    6ff4:	4653      	mov	r3, sl
    6ff6:	2b38      	cmp	r3, #56	; 0x38
    6ff8:	dd00      	ble.n	6ffc <__aeabi_dadd+0x4a0>
    6ffa:	e096      	b.n	712a <__aeabi_dadd+0x5ce>
    6ffc:	2b1f      	cmp	r3, #31
    6ffe:	dd00      	ble.n	7002 <__aeabi_dadd+0x4a6>
    7000:	e09f      	b.n	7142 <__aeabi_dadd+0x5e6>
    7002:	2620      	movs	r6, #32
    7004:	1af3      	subs	r3, r6, r3
    7006:	0026      	movs	r6, r4
    7008:	409e      	lsls	r6, r3
    700a:	469c      	mov	ip, r3
    700c:	46b3      	mov	fp, r6
    700e:	4653      	mov	r3, sl
    7010:	003e      	movs	r6, r7
    7012:	40de      	lsrs	r6, r3
    7014:	0033      	movs	r3, r6
    7016:	465e      	mov	r6, fp
    7018:	431e      	orrs	r6, r3
    701a:	4663      	mov	r3, ip
    701c:	409f      	lsls	r7, r3
    701e:	1e7b      	subs	r3, r7, #1
    7020:	419f      	sbcs	r7, r3
    7022:	4653      	mov	r3, sl
    7024:	40dc      	lsrs	r4, r3
    7026:	4337      	orrs	r7, r6
    7028:	18bf      	adds	r7, r7, r2
    702a:	4297      	cmp	r7, r2
    702c:	4192      	sbcs	r2, r2
    702e:	1864      	adds	r4, r4, r1
    7030:	4252      	negs	r2, r2
    7032:	18a4      	adds	r4, r4, r2
    7034:	0006      	movs	r6, r0
    7036:	e678      	b.n	6d2a <__aeabi_dadd+0x1ce>
    7038:	4327      	orrs	r7, r4
    703a:	1e7c      	subs	r4, r7, #1
    703c:	41a7      	sbcs	r7, r4
    703e:	2400      	movs	r4, #0
    7040:	e737      	b.n	6eb2 <__aeabi_dadd+0x356>
    7042:	4e4c      	ldr	r6, [pc, #304]	; (7174 <__aeabi_dadd+0x618>)
    7044:	42b0      	cmp	r0, r6
    7046:	d036      	beq.n	70b6 <__aeabi_dadd+0x55a>
    7048:	2680      	movs	r6, #128	; 0x80
    704a:	425b      	negs	r3, r3
    704c:	0436      	lsls	r6, r6, #16
    704e:	469a      	mov	sl, r3
    7050:	4334      	orrs	r4, r6
    7052:	e7cf      	b.n	6ff4 <__aeabi_dadd+0x498>
    7054:	0018      	movs	r0, r3
    7056:	4310      	orrs	r0, r2
    7058:	d100      	bne.n	705c <__aeabi_dadd+0x500>
    705a:	e603      	b.n	6c64 <__aeabi_dadd+0x108>
    705c:	1ab8      	subs	r0, r7, r2
    705e:	4684      	mov	ip, r0
    7060:	4567      	cmp	r7, ip
    7062:	41ad      	sbcs	r5, r5
    7064:	1ae0      	subs	r0, r4, r3
    7066:	426d      	negs	r5, r5
    7068:	1b40      	subs	r0, r0, r5
    706a:	0205      	lsls	r5, r0, #8
    706c:	d400      	bmi.n	7070 <__aeabi_dadd+0x514>
    706e:	e62c      	b.n	6cca <__aeabi_dadd+0x16e>
    7070:	1bd7      	subs	r7, r2, r7
    7072:	42ba      	cmp	r2, r7
    7074:	4192      	sbcs	r2, r2
    7076:	1b1c      	subs	r4, r3, r4
    7078:	4252      	negs	r2, r2
    707a:	1aa4      	subs	r4, r4, r2
    707c:	46d8      	mov	r8, fp
    707e:	e5f1      	b.n	6c64 <__aeabi_dadd+0x108>
    7080:	0018      	movs	r0, r3
    7082:	4310      	orrs	r0, r2
    7084:	d100      	bne.n	7088 <__aeabi_dadd+0x52c>
    7086:	e763      	b.n	6f50 <__aeabi_dadd+0x3f4>
    7088:	08f8      	lsrs	r0, r7, #3
    708a:	0767      	lsls	r7, r4, #29
    708c:	4307      	orrs	r7, r0
    708e:	2080      	movs	r0, #128	; 0x80
    7090:	08e4      	lsrs	r4, r4, #3
    7092:	0300      	lsls	r0, r0, #12
    7094:	4204      	tst	r4, r0
    7096:	d008      	beq.n	70aa <__aeabi_dadd+0x54e>
    7098:	08dd      	lsrs	r5, r3, #3
    709a:	4205      	tst	r5, r0
    709c:	d105      	bne.n	70aa <__aeabi_dadd+0x54e>
    709e:	08d2      	lsrs	r2, r2, #3
    70a0:	0759      	lsls	r1, r3, #29
    70a2:	4311      	orrs	r1, r2
    70a4:	000f      	movs	r7, r1
    70a6:	002c      	movs	r4, r5
    70a8:	46d8      	mov	r8, fp
    70aa:	0f7b      	lsrs	r3, r7, #29
    70ac:	00e4      	lsls	r4, r4, #3
    70ae:	431c      	orrs	r4, r3
    70b0:	00ff      	lsls	r7, r7, #3
    70b2:	4e30      	ldr	r6, [pc, #192]	; (7174 <__aeabi_dadd+0x618>)
    70b4:	e5d6      	b.n	6c64 <__aeabi_dadd+0x108>
    70b6:	000c      	movs	r4, r1
    70b8:	0017      	movs	r7, r2
    70ba:	0006      	movs	r6, r0
    70bc:	e5d2      	b.n	6c64 <__aeabi_dadd+0x108>
    70be:	2b00      	cmp	r3, #0
    70c0:	d038      	beq.n	7134 <__aeabi_dadd+0x5d8>
    70c2:	000b      	movs	r3, r1
    70c4:	4313      	orrs	r3, r2
    70c6:	d100      	bne.n	70ca <__aeabi_dadd+0x56e>
    70c8:	e742      	b.n	6f50 <__aeabi_dadd+0x3f4>
    70ca:	08f8      	lsrs	r0, r7, #3
    70cc:	0767      	lsls	r7, r4, #29
    70ce:	4307      	orrs	r7, r0
    70d0:	2080      	movs	r0, #128	; 0x80
    70d2:	08e4      	lsrs	r4, r4, #3
    70d4:	0300      	lsls	r0, r0, #12
    70d6:	4204      	tst	r4, r0
    70d8:	d0e7      	beq.n	70aa <__aeabi_dadd+0x54e>
    70da:	08cb      	lsrs	r3, r1, #3
    70dc:	4203      	tst	r3, r0
    70de:	d1e4      	bne.n	70aa <__aeabi_dadd+0x54e>
    70e0:	08d2      	lsrs	r2, r2, #3
    70e2:	0749      	lsls	r1, r1, #29
    70e4:	4311      	orrs	r1, r2
    70e6:	000f      	movs	r7, r1
    70e8:	001c      	movs	r4, r3
    70ea:	e7de      	b.n	70aa <__aeabi_dadd+0x54e>
    70ec:	2700      	movs	r7, #0
    70ee:	2400      	movs	r4, #0
    70f0:	e5d5      	b.n	6c9e <__aeabi_dadd+0x142>
    70f2:	2100      	movs	r1, #0
    70f4:	e76b      	b.n	6fce <__aeabi_dadd+0x472>
    70f6:	2500      	movs	r5, #0
    70f8:	2700      	movs	r7, #0
    70fa:	e5f3      	b.n	6ce4 <__aeabi_dadd+0x188>
    70fc:	464e      	mov	r6, r9
    70fe:	0025      	movs	r5, r4
    7100:	3e20      	subs	r6, #32
    7102:	40f5      	lsrs	r5, r6
    7104:	464b      	mov	r3, r9
    7106:	002e      	movs	r6, r5
    7108:	2b20      	cmp	r3, #32
    710a:	d02d      	beq.n	7168 <__aeabi_dadd+0x60c>
    710c:	2540      	movs	r5, #64	; 0x40
    710e:	1aed      	subs	r5, r5, r3
    7110:	40ac      	lsls	r4, r5
    7112:	4327      	orrs	r7, r4
    7114:	1e7c      	subs	r4, r7, #1
    7116:	41a7      	sbcs	r7, r4
    7118:	2400      	movs	r4, #0
    711a:	4337      	orrs	r7, r6
    711c:	e6c9      	b.n	6eb2 <__aeabi_dadd+0x356>
    711e:	2480      	movs	r4, #128	; 0x80
    7120:	2500      	movs	r5, #0
    7122:	0324      	lsls	r4, r4, #12
    7124:	4e13      	ldr	r6, [pc, #76]	; (7174 <__aeabi_dadd+0x618>)
    7126:	2700      	movs	r7, #0
    7128:	e5dc      	b.n	6ce4 <__aeabi_dadd+0x188>
    712a:	4327      	orrs	r7, r4
    712c:	1e7c      	subs	r4, r7, #1
    712e:	41a7      	sbcs	r7, r4
    7130:	2400      	movs	r4, #0
    7132:	e779      	b.n	7028 <__aeabi_dadd+0x4cc>
    7134:	000c      	movs	r4, r1
    7136:	0017      	movs	r7, r2
    7138:	4e0e      	ldr	r6, [pc, #56]	; (7174 <__aeabi_dadd+0x618>)
    713a:	e593      	b.n	6c64 <__aeabi_dadd+0x108>
    713c:	000c      	movs	r4, r1
    713e:	0017      	movs	r7, r2
    7140:	e590      	b.n	6c64 <__aeabi_dadd+0x108>
    7142:	4656      	mov	r6, sl
    7144:	0023      	movs	r3, r4
    7146:	3e20      	subs	r6, #32
    7148:	40f3      	lsrs	r3, r6
    714a:	4699      	mov	r9, r3
    714c:	4653      	mov	r3, sl
    714e:	2b20      	cmp	r3, #32
    7150:	d00e      	beq.n	7170 <__aeabi_dadd+0x614>
    7152:	2340      	movs	r3, #64	; 0x40
    7154:	4656      	mov	r6, sl
    7156:	1b9b      	subs	r3, r3, r6
    7158:	409c      	lsls	r4, r3
    715a:	4327      	orrs	r7, r4
    715c:	1e7c      	subs	r4, r7, #1
    715e:	41a7      	sbcs	r7, r4
    7160:	464b      	mov	r3, r9
    7162:	2400      	movs	r4, #0
    7164:	431f      	orrs	r7, r3
    7166:	e75f      	b.n	7028 <__aeabi_dadd+0x4cc>
    7168:	2400      	movs	r4, #0
    716a:	e7d2      	b.n	7112 <__aeabi_dadd+0x5b6>
    716c:	0017      	movs	r7, r2
    716e:	e5b2      	b.n	6cd6 <__aeabi_dadd+0x17a>
    7170:	2400      	movs	r4, #0
    7172:	e7f2      	b.n	715a <__aeabi_dadd+0x5fe>
    7174:	000007ff 	.word	0x000007ff
    7178:	ff7fffff 	.word	0xff7fffff

0000717c <__aeabi_ddiv>:
    717c:	b5f0      	push	{r4, r5, r6, r7, lr}
    717e:	4657      	mov	r7, sl
    7180:	4645      	mov	r5, r8
    7182:	46de      	mov	lr, fp
    7184:	464e      	mov	r6, r9
    7186:	b5e0      	push	{r5, r6, r7, lr}
    7188:	004c      	lsls	r4, r1, #1
    718a:	030e      	lsls	r6, r1, #12
    718c:	b087      	sub	sp, #28
    718e:	4683      	mov	fp, r0
    7190:	4692      	mov	sl, r2
    7192:	001d      	movs	r5, r3
    7194:	4680      	mov	r8, r0
    7196:	0b36      	lsrs	r6, r6, #12
    7198:	0d64      	lsrs	r4, r4, #21
    719a:	0fcf      	lsrs	r7, r1, #31
    719c:	2c00      	cmp	r4, #0
    719e:	d04f      	beq.n	7240 <__aeabi_ddiv+0xc4>
    71a0:	4b6f      	ldr	r3, [pc, #444]	; (7360 <__aeabi_ddiv+0x1e4>)
    71a2:	429c      	cmp	r4, r3
    71a4:	d035      	beq.n	7212 <__aeabi_ddiv+0x96>
    71a6:	2380      	movs	r3, #128	; 0x80
    71a8:	0f42      	lsrs	r2, r0, #29
    71aa:	041b      	lsls	r3, r3, #16
    71ac:	00f6      	lsls	r6, r6, #3
    71ae:	4313      	orrs	r3, r2
    71b0:	4333      	orrs	r3, r6
    71b2:	4699      	mov	r9, r3
    71b4:	00c3      	lsls	r3, r0, #3
    71b6:	4698      	mov	r8, r3
    71b8:	4b6a      	ldr	r3, [pc, #424]	; (7364 <__aeabi_ddiv+0x1e8>)
    71ba:	2600      	movs	r6, #0
    71bc:	469c      	mov	ip, r3
    71be:	2300      	movs	r3, #0
    71c0:	4464      	add	r4, ip
    71c2:	9303      	str	r3, [sp, #12]
    71c4:	032b      	lsls	r3, r5, #12
    71c6:	0b1b      	lsrs	r3, r3, #12
    71c8:	469b      	mov	fp, r3
    71ca:	006b      	lsls	r3, r5, #1
    71cc:	0fed      	lsrs	r5, r5, #31
    71ce:	4650      	mov	r0, sl
    71d0:	0d5b      	lsrs	r3, r3, #21
    71d2:	9501      	str	r5, [sp, #4]
    71d4:	d05e      	beq.n	7294 <__aeabi_ddiv+0x118>
    71d6:	4a62      	ldr	r2, [pc, #392]	; (7360 <__aeabi_ddiv+0x1e4>)
    71d8:	4293      	cmp	r3, r2
    71da:	d053      	beq.n	7284 <__aeabi_ddiv+0x108>
    71dc:	465a      	mov	r2, fp
    71de:	00d1      	lsls	r1, r2, #3
    71e0:	2280      	movs	r2, #128	; 0x80
    71e2:	0f40      	lsrs	r0, r0, #29
    71e4:	0412      	lsls	r2, r2, #16
    71e6:	4302      	orrs	r2, r0
    71e8:	430a      	orrs	r2, r1
    71ea:	4693      	mov	fp, r2
    71ec:	4652      	mov	r2, sl
    71ee:	00d1      	lsls	r1, r2, #3
    71f0:	4a5c      	ldr	r2, [pc, #368]	; (7364 <__aeabi_ddiv+0x1e8>)
    71f2:	4694      	mov	ip, r2
    71f4:	2200      	movs	r2, #0
    71f6:	4463      	add	r3, ip
    71f8:	0038      	movs	r0, r7
    71fa:	4068      	eors	r0, r5
    71fc:	4684      	mov	ip, r0
    71fe:	9002      	str	r0, [sp, #8]
    7200:	1ae4      	subs	r4, r4, r3
    7202:	4316      	orrs	r6, r2
    7204:	2e0f      	cmp	r6, #15
    7206:	d900      	bls.n	720a <__aeabi_ddiv+0x8e>
    7208:	e0b4      	b.n	7374 <__aeabi_ddiv+0x1f8>
    720a:	4b57      	ldr	r3, [pc, #348]	; (7368 <__aeabi_ddiv+0x1ec>)
    720c:	00b6      	lsls	r6, r6, #2
    720e:	599b      	ldr	r3, [r3, r6]
    7210:	469f      	mov	pc, r3
    7212:	0003      	movs	r3, r0
    7214:	4333      	orrs	r3, r6
    7216:	4699      	mov	r9, r3
    7218:	d16c      	bne.n	72f4 <__aeabi_ddiv+0x178>
    721a:	2300      	movs	r3, #0
    721c:	4698      	mov	r8, r3
    721e:	3302      	adds	r3, #2
    7220:	2608      	movs	r6, #8
    7222:	9303      	str	r3, [sp, #12]
    7224:	e7ce      	b.n	71c4 <__aeabi_ddiv+0x48>
    7226:	46cb      	mov	fp, r9
    7228:	4641      	mov	r1, r8
    722a:	9a03      	ldr	r2, [sp, #12]
    722c:	9701      	str	r7, [sp, #4]
    722e:	2a02      	cmp	r2, #2
    7230:	d165      	bne.n	72fe <__aeabi_ddiv+0x182>
    7232:	9b01      	ldr	r3, [sp, #4]
    7234:	4c4a      	ldr	r4, [pc, #296]	; (7360 <__aeabi_ddiv+0x1e4>)
    7236:	469c      	mov	ip, r3
    7238:	2300      	movs	r3, #0
    723a:	2200      	movs	r2, #0
    723c:	4698      	mov	r8, r3
    723e:	e06b      	b.n	7318 <__aeabi_ddiv+0x19c>
    7240:	0003      	movs	r3, r0
    7242:	4333      	orrs	r3, r6
    7244:	4699      	mov	r9, r3
    7246:	d04e      	beq.n	72e6 <__aeabi_ddiv+0x16a>
    7248:	2e00      	cmp	r6, #0
    724a:	d100      	bne.n	724e <__aeabi_ddiv+0xd2>
    724c:	e1bc      	b.n	75c8 <__aeabi_ddiv+0x44c>
    724e:	0030      	movs	r0, r6
    7250:	f001 f9a6 	bl	85a0 <__clzsi2>
    7254:	0003      	movs	r3, r0
    7256:	3b0b      	subs	r3, #11
    7258:	2b1c      	cmp	r3, #28
    725a:	dd00      	ble.n	725e <__aeabi_ddiv+0xe2>
    725c:	e1ac      	b.n	75b8 <__aeabi_ddiv+0x43c>
    725e:	221d      	movs	r2, #29
    7260:	1ad3      	subs	r3, r2, r3
    7262:	465a      	mov	r2, fp
    7264:	0001      	movs	r1, r0
    7266:	40da      	lsrs	r2, r3
    7268:	3908      	subs	r1, #8
    726a:	408e      	lsls	r6, r1
    726c:	0013      	movs	r3, r2
    726e:	4333      	orrs	r3, r6
    7270:	4699      	mov	r9, r3
    7272:	465b      	mov	r3, fp
    7274:	408b      	lsls	r3, r1
    7276:	4698      	mov	r8, r3
    7278:	2300      	movs	r3, #0
    727a:	4c3c      	ldr	r4, [pc, #240]	; (736c <__aeabi_ddiv+0x1f0>)
    727c:	2600      	movs	r6, #0
    727e:	1a24      	subs	r4, r4, r0
    7280:	9303      	str	r3, [sp, #12]
    7282:	e79f      	b.n	71c4 <__aeabi_ddiv+0x48>
    7284:	4651      	mov	r1, sl
    7286:	465a      	mov	r2, fp
    7288:	4311      	orrs	r1, r2
    728a:	d129      	bne.n	72e0 <__aeabi_ddiv+0x164>
    728c:	2200      	movs	r2, #0
    728e:	4693      	mov	fp, r2
    7290:	3202      	adds	r2, #2
    7292:	e7b1      	b.n	71f8 <__aeabi_ddiv+0x7c>
    7294:	4659      	mov	r1, fp
    7296:	4301      	orrs	r1, r0
    7298:	d01e      	beq.n	72d8 <__aeabi_ddiv+0x15c>
    729a:	465b      	mov	r3, fp
    729c:	2b00      	cmp	r3, #0
    729e:	d100      	bne.n	72a2 <__aeabi_ddiv+0x126>
    72a0:	e19e      	b.n	75e0 <__aeabi_ddiv+0x464>
    72a2:	4658      	mov	r0, fp
    72a4:	f001 f97c 	bl	85a0 <__clzsi2>
    72a8:	0003      	movs	r3, r0
    72aa:	3b0b      	subs	r3, #11
    72ac:	2b1c      	cmp	r3, #28
    72ae:	dd00      	ble.n	72b2 <__aeabi_ddiv+0x136>
    72b0:	e18f      	b.n	75d2 <__aeabi_ddiv+0x456>
    72b2:	0002      	movs	r2, r0
    72b4:	4659      	mov	r1, fp
    72b6:	3a08      	subs	r2, #8
    72b8:	4091      	lsls	r1, r2
    72ba:	468b      	mov	fp, r1
    72bc:	211d      	movs	r1, #29
    72be:	1acb      	subs	r3, r1, r3
    72c0:	4651      	mov	r1, sl
    72c2:	40d9      	lsrs	r1, r3
    72c4:	000b      	movs	r3, r1
    72c6:	4659      	mov	r1, fp
    72c8:	430b      	orrs	r3, r1
    72ca:	4651      	mov	r1, sl
    72cc:	469b      	mov	fp, r3
    72ce:	4091      	lsls	r1, r2
    72d0:	4b26      	ldr	r3, [pc, #152]	; (736c <__aeabi_ddiv+0x1f0>)
    72d2:	2200      	movs	r2, #0
    72d4:	1a1b      	subs	r3, r3, r0
    72d6:	e78f      	b.n	71f8 <__aeabi_ddiv+0x7c>
    72d8:	2300      	movs	r3, #0
    72da:	2201      	movs	r2, #1
    72dc:	469b      	mov	fp, r3
    72de:	e78b      	b.n	71f8 <__aeabi_ddiv+0x7c>
    72e0:	4651      	mov	r1, sl
    72e2:	2203      	movs	r2, #3
    72e4:	e788      	b.n	71f8 <__aeabi_ddiv+0x7c>
    72e6:	2300      	movs	r3, #0
    72e8:	4698      	mov	r8, r3
    72ea:	3301      	adds	r3, #1
    72ec:	2604      	movs	r6, #4
    72ee:	2400      	movs	r4, #0
    72f0:	9303      	str	r3, [sp, #12]
    72f2:	e767      	b.n	71c4 <__aeabi_ddiv+0x48>
    72f4:	2303      	movs	r3, #3
    72f6:	46b1      	mov	r9, r6
    72f8:	9303      	str	r3, [sp, #12]
    72fa:	260c      	movs	r6, #12
    72fc:	e762      	b.n	71c4 <__aeabi_ddiv+0x48>
    72fe:	2a03      	cmp	r2, #3
    7300:	d100      	bne.n	7304 <__aeabi_ddiv+0x188>
    7302:	e25c      	b.n	77be <__aeabi_ddiv+0x642>
    7304:	9b01      	ldr	r3, [sp, #4]
    7306:	2a01      	cmp	r2, #1
    7308:	d000      	beq.n	730c <__aeabi_ddiv+0x190>
    730a:	e1e4      	b.n	76d6 <__aeabi_ddiv+0x55a>
    730c:	4013      	ands	r3, r2
    730e:	469c      	mov	ip, r3
    7310:	2300      	movs	r3, #0
    7312:	2400      	movs	r4, #0
    7314:	2200      	movs	r2, #0
    7316:	4698      	mov	r8, r3
    7318:	2100      	movs	r1, #0
    731a:	0312      	lsls	r2, r2, #12
    731c:	0b13      	lsrs	r3, r2, #12
    731e:	0d0a      	lsrs	r2, r1, #20
    7320:	0512      	lsls	r2, r2, #20
    7322:	431a      	orrs	r2, r3
    7324:	0523      	lsls	r3, r4, #20
    7326:	4c12      	ldr	r4, [pc, #72]	; (7370 <__aeabi_ddiv+0x1f4>)
    7328:	4640      	mov	r0, r8
    732a:	4022      	ands	r2, r4
    732c:	4313      	orrs	r3, r2
    732e:	4662      	mov	r2, ip
    7330:	005b      	lsls	r3, r3, #1
    7332:	07d2      	lsls	r2, r2, #31
    7334:	085b      	lsrs	r3, r3, #1
    7336:	4313      	orrs	r3, r2
    7338:	0019      	movs	r1, r3
    733a:	b007      	add	sp, #28
    733c:	bc3c      	pop	{r2, r3, r4, r5}
    733e:	4690      	mov	r8, r2
    7340:	4699      	mov	r9, r3
    7342:	46a2      	mov	sl, r4
    7344:	46ab      	mov	fp, r5
    7346:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7348:	2300      	movs	r3, #0
    734a:	2280      	movs	r2, #128	; 0x80
    734c:	469c      	mov	ip, r3
    734e:	0312      	lsls	r2, r2, #12
    7350:	4698      	mov	r8, r3
    7352:	4c03      	ldr	r4, [pc, #12]	; (7360 <__aeabi_ddiv+0x1e4>)
    7354:	e7e0      	b.n	7318 <__aeabi_ddiv+0x19c>
    7356:	2300      	movs	r3, #0
    7358:	4c01      	ldr	r4, [pc, #4]	; (7360 <__aeabi_ddiv+0x1e4>)
    735a:	2200      	movs	r2, #0
    735c:	4698      	mov	r8, r3
    735e:	e7db      	b.n	7318 <__aeabi_ddiv+0x19c>
    7360:	000007ff 	.word	0x000007ff
    7364:	fffffc01 	.word	0xfffffc01
    7368:	00009358 	.word	0x00009358
    736c:	fffffc0d 	.word	0xfffffc0d
    7370:	800fffff 	.word	0x800fffff
    7374:	45d9      	cmp	r9, fp
    7376:	d900      	bls.n	737a <__aeabi_ddiv+0x1fe>
    7378:	e139      	b.n	75ee <__aeabi_ddiv+0x472>
    737a:	d100      	bne.n	737e <__aeabi_ddiv+0x202>
    737c:	e134      	b.n	75e8 <__aeabi_ddiv+0x46c>
    737e:	2300      	movs	r3, #0
    7380:	4646      	mov	r6, r8
    7382:	464d      	mov	r5, r9
    7384:	469a      	mov	sl, r3
    7386:	3c01      	subs	r4, #1
    7388:	465b      	mov	r3, fp
    738a:	0e0a      	lsrs	r2, r1, #24
    738c:	021b      	lsls	r3, r3, #8
    738e:	431a      	orrs	r2, r3
    7390:	020b      	lsls	r3, r1, #8
    7392:	0c17      	lsrs	r7, r2, #16
    7394:	9303      	str	r3, [sp, #12]
    7396:	0413      	lsls	r3, r2, #16
    7398:	0c1b      	lsrs	r3, r3, #16
    739a:	0039      	movs	r1, r7
    739c:	0028      	movs	r0, r5
    739e:	4690      	mov	r8, r2
    73a0:	9301      	str	r3, [sp, #4]
    73a2:	f7fe fdd9 	bl	5f58 <__udivsi3>
    73a6:	0002      	movs	r2, r0
    73a8:	9b01      	ldr	r3, [sp, #4]
    73aa:	4683      	mov	fp, r0
    73ac:	435a      	muls	r2, r3
    73ae:	0028      	movs	r0, r5
    73b0:	0039      	movs	r1, r7
    73b2:	4691      	mov	r9, r2
    73b4:	f7fe fe56 	bl	6064 <__aeabi_uidivmod>
    73b8:	0c35      	lsrs	r5, r6, #16
    73ba:	0409      	lsls	r1, r1, #16
    73bc:	430d      	orrs	r5, r1
    73be:	45a9      	cmp	r9, r5
    73c0:	d90d      	bls.n	73de <__aeabi_ddiv+0x262>
    73c2:	465b      	mov	r3, fp
    73c4:	4445      	add	r5, r8
    73c6:	3b01      	subs	r3, #1
    73c8:	45a8      	cmp	r8, r5
    73ca:	d900      	bls.n	73ce <__aeabi_ddiv+0x252>
    73cc:	e13a      	b.n	7644 <__aeabi_ddiv+0x4c8>
    73ce:	45a9      	cmp	r9, r5
    73d0:	d800      	bhi.n	73d4 <__aeabi_ddiv+0x258>
    73d2:	e137      	b.n	7644 <__aeabi_ddiv+0x4c8>
    73d4:	2302      	movs	r3, #2
    73d6:	425b      	negs	r3, r3
    73d8:	469c      	mov	ip, r3
    73da:	4445      	add	r5, r8
    73dc:	44e3      	add	fp, ip
    73de:	464b      	mov	r3, r9
    73e0:	1aeb      	subs	r3, r5, r3
    73e2:	0039      	movs	r1, r7
    73e4:	0018      	movs	r0, r3
    73e6:	9304      	str	r3, [sp, #16]
    73e8:	f7fe fdb6 	bl	5f58 <__udivsi3>
    73ec:	9b01      	ldr	r3, [sp, #4]
    73ee:	0005      	movs	r5, r0
    73f0:	4343      	muls	r3, r0
    73f2:	0039      	movs	r1, r7
    73f4:	9804      	ldr	r0, [sp, #16]
    73f6:	4699      	mov	r9, r3
    73f8:	f7fe fe34 	bl	6064 <__aeabi_uidivmod>
    73fc:	0433      	lsls	r3, r6, #16
    73fe:	0409      	lsls	r1, r1, #16
    7400:	0c1b      	lsrs	r3, r3, #16
    7402:	430b      	orrs	r3, r1
    7404:	4599      	cmp	r9, r3
    7406:	d909      	bls.n	741c <__aeabi_ddiv+0x2a0>
    7408:	4443      	add	r3, r8
    740a:	1e6a      	subs	r2, r5, #1
    740c:	4598      	cmp	r8, r3
    740e:	d900      	bls.n	7412 <__aeabi_ddiv+0x296>
    7410:	e11a      	b.n	7648 <__aeabi_ddiv+0x4cc>
    7412:	4599      	cmp	r9, r3
    7414:	d800      	bhi.n	7418 <__aeabi_ddiv+0x29c>
    7416:	e117      	b.n	7648 <__aeabi_ddiv+0x4cc>
    7418:	3d02      	subs	r5, #2
    741a:	4443      	add	r3, r8
    741c:	464a      	mov	r2, r9
    741e:	1a9b      	subs	r3, r3, r2
    7420:	465a      	mov	r2, fp
    7422:	0412      	lsls	r2, r2, #16
    7424:	432a      	orrs	r2, r5
    7426:	9903      	ldr	r1, [sp, #12]
    7428:	4693      	mov	fp, r2
    742a:	0c10      	lsrs	r0, r2, #16
    742c:	0c0a      	lsrs	r2, r1, #16
    742e:	4691      	mov	r9, r2
    7430:	0409      	lsls	r1, r1, #16
    7432:	465a      	mov	r2, fp
    7434:	0c09      	lsrs	r1, r1, #16
    7436:	464e      	mov	r6, r9
    7438:	000d      	movs	r5, r1
    743a:	0412      	lsls	r2, r2, #16
    743c:	0c12      	lsrs	r2, r2, #16
    743e:	4345      	muls	r5, r0
    7440:	9105      	str	r1, [sp, #20]
    7442:	4351      	muls	r1, r2
    7444:	4372      	muls	r2, r6
    7446:	4370      	muls	r0, r6
    7448:	1952      	adds	r2, r2, r5
    744a:	0c0e      	lsrs	r6, r1, #16
    744c:	18b2      	adds	r2, r6, r2
    744e:	4295      	cmp	r5, r2
    7450:	d903      	bls.n	745a <__aeabi_ddiv+0x2de>
    7452:	2580      	movs	r5, #128	; 0x80
    7454:	026d      	lsls	r5, r5, #9
    7456:	46ac      	mov	ip, r5
    7458:	4460      	add	r0, ip
    745a:	0c15      	lsrs	r5, r2, #16
    745c:	0409      	lsls	r1, r1, #16
    745e:	0412      	lsls	r2, r2, #16
    7460:	0c09      	lsrs	r1, r1, #16
    7462:	1828      	adds	r0, r5, r0
    7464:	1852      	adds	r2, r2, r1
    7466:	4283      	cmp	r3, r0
    7468:	d200      	bcs.n	746c <__aeabi_ddiv+0x2f0>
    746a:	e0ce      	b.n	760a <__aeabi_ddiv+0x48e>
    746c:	d100      	bne.n	7470 <__aeabi_ddiv+0x2f4>
    746e:	e0c8      	b.n	7602 <__aeabi_ddiv+0x486>
    7470:	1a1d      	subs	r5, r3, r0
    7472:	4653      	mov	r3, sl
    7474:	1a9e      	subs	r6, r3, r2
    7476:	45b2      	cmp	sl, r6
    7478:	4192      	sbcs	r2, r2
    747a:	4252      	negs	r2, r2
    747c:	1aab      	subs	r3, r5, r2
    747e:	469a      	mov	sl, r3
    7480:	4598      	cmp	r8, r3
    7482:	d100      	bne.n	7486 <__aeabi_ddiv+0x30a>
    7484:	e117      	b.n	76b6 <__aeabi_ddiv+0x53a>
    7486:	0039      	movs	r1, r7
    7488:	0018      	movs	r0, r3
    748a:	f7fe fd65 	bl	5f58 <__udivsi3>
    748e:	9b01      	ldr	r3, [sp, #4]
    7490:	0005      	movs	r5, r0
    7492:	4343      	muls	r3, r0
    7494:	0039      	movs	r1, r7
    7496:	4650      	mov	r0, sl
    7498:	9304      	str	r3, [sp, #16]
    749a:	f7fe fde3 	bl	6064 <__aeabi_uidivmod>
    749e:	9804      	ldr	r0, [sp, #16]
    74a0:	040b      	lsls	r3, r1, #16
    74a2:	0c31      	lsrs	r1, r6, #16
    74a4:	4319      	orrs	r1, r3
    74a6:	4288      	cmp	r0, r1
    74a8:	d909      	bls.n	74be <__aeabi_ddiv+0x342>
    74aa:	4441      	add	r1, r8
    74ac:	1e6b      	subs	r3, r5, #1
    74ae:	4588      	cmp	r8, r1
    74b0:	d900      	bls.n	74b4 <__aeabi_ddiv+0x338>
    74b2:	e107      	b.n	76c4 <__aeabi_ddiv+0x548>
    74b4:	4288      	cmp	r0, r1
    74b6:	d800      	bhi.n	74ba <__aeabi_ddiv+0x33e>
    74b8:	e104      	b.n	76c4 <__aeabi_ddiv+0x548>
    74ba:	3d02      	subs	r5, #2
    74bc:	4441      	add	r1, r8
    74be:	9b04      	ldr	r3, [sp, #16]
    74c0:	1acb      	subs	r3, r1, r3
    74c2:	0018      	movs	r0, r3
    74c4:	0039      	movs	r1, r7
    74c6:	9304      	str	r3, [sp, #16]
    74c8:	f7fe fd46 	bl	5f58 <__udivsi3>
    74cc:	9b01      	ldr	r3, [sp, #4]
    74ce:	4682      	mov	sl, r0
    74d0:	4343      	muls	r3, r0
    74d2:	0039      	movs	r1, r7
    74d4:	9804      	ldr	r0, [sp, #16]
    74d6:	9301      	str	r3, [sp, #4]
    74d8:	f7fe fdc4 	bl	6064 <__aeabi_uidivmod>
    74dc:	9801      	ldr	r0, [sp, #4]
    74de:	040b      	lsls	r3, r1, #16
    74e0:	0431      	lsls	r1, r6, #16
    74e2:	0c09      	lsrs	r1, r1, #16
    74e4:	4319      	orrs	r1, r3
    74e6:	4288      	cmp	r0, r1
    74e8:	d90d      	bls.n	7506 <__aeabi_ddiv+0x38a>
    74ea:	4653      	mov	r3, sl
    74ec:	4441      	add	r1, r8
    74ee:	3b01      	subs	r3, #1
    74f0:	4588      	cmp	r8, r1
    74f2:	d900      	bls.n	74f6 <__aeabi_ddiv+0x37a>
    74f4:	e0e8      	b.n	76c8 <__aeabi_ddiv+0x54c>
    74f6:	4288      	cmp	r0, r1
    74f8:	d800      	bhi.n	74fc <__aeabi_ddiv+0x380>
    74fa:	e0e5      	b.n	76c8 <__aeabi_ddiv+0x54c>
    74fc:	2302      	movs	r3, #2
    74fe:	425b      	negs	r3, r3
    7500:	469c      	mov	ip, r3
    7502:	4441      	add	r1, r8
    7504:	44e2      	add	sl, ip
    7506:	9b01      	ldr	r3, [sp, #4]
    7508:	042d      	lsls	r5, r5, #16
    750a:	1ace      	subs	r6, r1, r3
    750c:	4651      	mov	r1, sl
    750e:	4329      	orrs	r1, r5
    7510:	9d05      	ldr	r5, [sp, #20]
    7512:	464f      	mov	r7, r9
    7514:	002a      	movs	r2, r5
    7516:	040b      	lsls	r3, r1, #16
    7518:	0c08      	lsrs	r0, r1, #16
    751a:	0c1b      	lsrs	r3, r3, #16
    751c:	435a      	muls	r2, r3
    751e:	4345      	muls	r5, r0
    7520:	437b      	muls	r3, r7
    7522:	4378      	muls	r0, r7
    7524:	195b      	adds	r3, r3, r5
    7526:	0c17      	lsrs	r7, r2, #16
    7528:	18fb      	adds	r3, r7, r3
    752a:	429d      	cmp	r5, r3
    752c:	d903      	bls.n	7536 <__aeabi_ddiv+0x3ba>
    752e:	2580      	movs	r5, #128	; 0x80
    7530:	026d      	lsls	r5, r5, #9
    7532:	46ac      	mov	ip, r5
    7534:	4460      	add	r0, ip
    7536:	0c1d      	lsrs	r5, r3, #16
    7538:	0412      	lsls	r2, r2, #16
    753a:	041b      	lsls	r3, r3, #16
    753c:	0c12      	lsrs	r2, r2, #16
    753e:	1828      	adds	r0, r5, r0
    7540:	189b      	adds	r3, r3, r2
    7542:	4286      	cmp	r6, r0
    7544:	d200      	bcs.n	7548 <__aeabi_ddiv+0x3cc>
    7546:	e093      	b.n	7670 <__aeabi_ddiv+0x4f4>
    7548:	d100      	bne.n	754c <__aeabi_ddiv+0x3d0>
    754a:	e08e      	b.n	766a <__aeabi_ddiv+0x4ee>
    754c:	2301      	movs	r3, #1
    754e:	4319      	orrs	r1, r3
    7550:	4ba0      	ldr	r3, [pc, #640]	; (77d4 <__aeabi_ddiv+0x658>)
    7552:	18e3      	adds	r3, r4, r3
    7554:	2b00      	cmp	r3, #0
    7556:	dc00      	bgt.n	755a <__aeabi_ddiv+0x3de>
    7558:	e099      	b.n	768e <__aeabi_ddiv+0x512>
    755a:	074a      	lsls	r2, r1, #29
    755c:	d000      	beq.n	7560 <__aeabi_ddiv+0x3e4>
    755e:	e09e      	b.n	769e <__aeabi_ddiv+0x522>
    7560:	465a      	mov	r2, fp
    7562:	01d2      	lsls	r2, r2, #7
    7564:	d506      	bpl.n	7574 <__aeabi_ddiv+0x3f8>
    7566:	465a      	mov	r2, fp
    7568:	4b9b      	ldr	r3, [pc, #620]	; (77d8 <__aeabi_ddiv+0x65c>)
    756a:	401a      	ands	r2, r3
    756c:	2380      	movs	r3, #128	; 0x80
    756e:	4693      	mov	fp, r2
    7570:	00db      	lsls	r3, r3, #3
    7572:	18e3      	adds	r3, r4, r3
    7574:	4a99      	ldr	r2, [pc, #612]	; (77dc <__aeabi_ddiv+0x660>)
    7576:	4293      	cmp	r3, r2
    7578:	dd68      	ble.n	764c <__aeabi_ddiv+0x4d0>
    757a:	2301      	movs	r3, #1
    757c:	9a02      	ldr	r2, [sp, #8]
    757e:	4c98      	ldr	r4, [pc, #608]	; (77e0 <__aeabi_ddiv+0x664>)
    7580:	401a      	ands	r2, r3
    7582:	2300      	movs	r3, #0
    7584:	4694      	mov	ip, r2
    7586:	4698      	mov	r8, r3
    7588:	2200      	movs	r2, #0
    758a:	e6c5      	b.n	7318 <__aeabi_ddiv+0x19c>
    758c:	2280      	movs	r2, #128	; 0x80
    758e:	464b      	mov	r3, r9
    7590:	0312      	lsls	r2, r2, #12
    7592:	4213      	tst	r3, r2
    7594:	d00a      	beq.n	75ac <__aeabi_ddiv+0x430>
    7596:	465b      	mov	r3, fp
    7598:	4213      	tst	r3, r2
    759a:	d106      	bne.n	75aa <__aeabi_ddiv+0x42e>
    759c:	431a      	orrs	r2, r3
    759e:	0312      	lsls	r2, r2, #12
    75a0:	0b12      	lsrs	r2, r2, #12
    75a2:	46ac      	mov	ip, r5
    75a4:	4688      	mov	r8, r1
    75a6:	4c8e      	ldr	r4, [pc, #568]	; (77e0 <__aeabi_ddiv+0x664>)
    75a8:	e6b6      	b.n	7318 <__aeabi_ddiv+0x19c>
    75aa:	464b      	mov	r3, r9
    75ac:	431a      	orrs	r2, r3
    75ae:	0312      	lsls	r2, r2, #12
    75b0:	0b12      	lsrs	r2, r2, #12
    75b2:	46bc      	mov	ip, r7
    75b4:	4c8a      	ldr	r4, [pc, #552]	; (77e0 <__aeabi_ddiv+0x664>)
    75b6:	e6af      	b.n	7318 <__aeabi_ddiv+0x19c>
    75b8:	0003      	movs	r3, r0
    75ba:	465a      	mov	r2, fp
    75bc:	3b28      	subs	r3, #40	; 0x28
    75be:	409a      	lsls	r2, r3
    75c0:	2300      	movs	r3, #0
    75c2:	4691      	mov	r9, r2
    75c4:	4698      	mov	r8, r3
    75c6:	e657      	b.n	7278 <__aeabi_ddiv+0xfc>
    75c8:	4658      	mov	r0, fp
    75ca:	f000 ffe9 	bl	85a0 <__clzsi2>
    75ce:	3020      	adds	r0, #32
    75d0:	e640      	b.n	7254 <__aeabi_ddiv+0xd8>
    75d2:	0003      	movs	r3, r0
    75d4:	4652      	mov	r2, sl
    75d6:	3b28      	subs	r3, #40	; 0x28
    75d8:	409a      	lsls	r2, r3
    75da:	2100      	movs	r1, #0
    75dc:	4693      	mov	fp, r2
    75de:	e677      	b.n	72d0 <__aeabi_ddiv+0x154>
    75e0:	f000 ffde 	bl	85a0 <__clzsi2>
    75e4:	3020      	adds	r0, #32
    75e6:	e65f      	b.n	72a8 <__aeabi_ddiv+0x12c>
    75e8:	4588      	cmp	r8, r1
    75ea:	d200      	bcs.n	75ee <__aeabi_ddiv+0x472>
    75ec:	e6c7      	b.n	737e <__aeabi_ddiv+0x202>
    75ee:	464b      	mov	r3, r9
    75f0:	07de      	lsls	r6, r3, #31
    75f2:	085d      	lsrs	r5, r3, #1
    75f4:	4643      	mov	r3, r8
    75f6:	085b      	lsrs	r3, r3, #1
    75f8:	431e      	orrs	r6, r3
    75fa:	4643      	mov	r3, r8
    75fc:	07db      	lsls	r3, r3, #31
    75fe:	469a      	mov	sl, r3
    7600:	e6c2      	b.n	7388 <__aeabi_ddiv+0x20c>
    7602:	2500      	movs	r5, #0
    7604:	4592      	cmp	sl, r2
    7606:	d300      	bcc.n	760a <__aeabi_ddiv+0x48e>
    7608:	e733      	b.n	7472 <__aeabi_ddiv+0x2f6>
    760a:	9e03      	ldr	r6, [sp, #12]
    760c:	4659      	mov	r1, fp
    760e:	46b4      	mov	ip, r6
    7610:	44e2      	add	sl, ip
    7612:	45b2      	cmp	sl, r6
    7614:	41ad      	sbcs	r5, r5
    7616:	426d      	negs	r5, r5
    7618:	4445      	add	r5, r8
    761a:	18eb      	adds	r3, r5, r3
    761c:	3901      	subs	r1, #1
    761e:	4598      	cmp	r8, r3
    7620:	d207      	bcs.n	7632 <__aeabi_ddiv+0x4b6>
    7622:	4298      	cmp	r0, r3
    7624:	d900      	bls.n	7628 <__aeabi_ddiv+0x4ac>
    7626:	e07f      	b.n	7728 <__aeabi_ddiv+0x5ac>
    7628:	d100      	bne.n	762c <__aeabi_ddiv+0x4b0>
    762a:	e0bc      	b.n	77a6 <__aeabi_ddiv+0x62a>
    762c:	1a1d      	subs	r5, r3, r0
    762e:	468b      	mov	fp, r1
    7630:	e71f      	b.n	7472 <__aeabi_ddiv+0x2f6>
    7632:	4598      	cmp	r8, r3
    7634:	d1fa      	bne.n	762c <__aeabi_ddiv+0x4b0>
    7636:	9d03      	ldr	r5, [sp, #12]
    7638:	4555      	cmp	r5, sl
    763a:	d9f2      	bls.n	7622 <__aeabi_ddiv+0x4a6>
    763c:	4643      	mov	r3, r8
    763e:	468b      	mov	fp, r1
    7640:	1a1d      	subs	r5, r3, r0
    7642:	e716      	b.n	7472 <__aeabi_ddiv+0x2f6>
    7644:	469b      	mov	fp, r3
    7646:	e6ca      	b.n	73de <__aeabi_ddiv+0x262>
    7648:	0015      	movs	r5, r2
    764a:	e6e7      	b.n	741c <__aeabi_ddiv+0x2a0>
    764c:	465a      	mov	r2, fp
    764e:	08c9      	lsrs	r1, r1, #3
    7650:	0752      	lsls	r2, r2, #29
    7652:	430a      	orrs	r2, r1
    7654:	055b      	lsls	r3, r3, #21
    7656:	4690      	mov	r8, r2
    7658:	0d5c      	lsrs	r4, r3, #21
    765a:	465a      	mov	r2, fp
    765c:	2301      	movs	r3, #1
    765e:	9902      	ldr	r1, [sp, #8]
    7660:	0252      	lsls	r2, r2, #9
    7662:	4019      	ands	r1, r3
    7664:	0b12      	lsrs	r2, r2, #12
    7666:	468c      	mov	ip, r1
    7668:	e656      	b.n	7318 <__aeabi_ddiv+0x19c>
    766a:	2b00      	cmp	r3, #0
    766c:	d100      	bne.n	7670 <__aeabi_ddiv+0x4f4>
    766e:	e76f      	b.n	7550 <__aeabi_ddiv+0x3d4>
    7670:	4446      	add	r6, r8
    7672:	1e4a      	subs	r2, r1, #1
    7674:	45b0      	cmp	r8, r6
    7676:	d929      	bls.n	76cc <__aeabi_ddiv+0x550>
    7678:	0011      	movs	r1, r2
    767a:	4286      	cmp	r6, r0
    767c:	d000      	beq.n	7680 <__aeabi_ddiv+0x504>
    767e:	e765      	b.n	754c <__aeabi_ddiv+0x3d0>
    7680:	9a03      	ldr	r2, [sp, #12]
    7682:	4293      	cmp	r3, r2
    7684:	d000      	beq.n	7688 <__aeabi_ddiv+0x50c>
    7686:	e761      	b.n	754c <__aeabi_ddiv+0x3d0>
    7688:	e762      	b.n	7550 <__aeabi_ddiv+0x3d4>
    768a:	2101      	movs	r1, #1
    768c:	4249      	negs	r1, r1
    768e:	2001      	movs	r0, #1
    7690:	1ac2      	subs	r2, r0, r3
    7692:	2a38      	cmp	r2, #56	; 0x38
    7694:	dd21      	ble.n	76da <__aeabi_ddiv+0x55e>
    7696:	9b02      	ldr	r3, [sp, #8]
    7698:	4003      	ands	r3, r0
    769a:	469c      	mov	ip, r3
    769c:	e638      	b.n	7310 <__aeabi_ddiv+0x194>
    769e:	220f      	movs	r2, #15
    76a0:	400a      	ands	r2, r1
    76a2:	2a04      	cmp	r2, #4
    76a4:	d100      	bne.n	76a8 <__aeabi_ddiv+0x52c>
    76a6:	e75b      	b.n	7560 <__aeabi_ddiv+0x3e4>
    76a8:	000a      	movs	r2, r1
    76aa:	1d11      	adds	r1, r2, #4
    76ac:	4291      	cmp	r1, r2
    76ae:	4192      	sbcs	r2, r2
    76b0:	4252      	negs	r2, r2
    76b2:	4493      	add	fp, r2
    76b4:	e754      	b.n	7560 <__aeabi_ddiv+0x3e4>
    76b6:	4b47      	ldr	r3, [pc, #284]	; (77d4 <__aeabi_ddiv+0x658>)
    76b8:	18e3      	adds	r3, r4, r3
    76ba:	2b00      	cmp	r3, #0
    76bc:	dde5      	ble.n	768a <__aeabi_ddiv+0x50e>
    76be:	2201      	movs	r2, #1
    76c0:	4252      	negs	r2, r2
    76c2:	e7f2      	b.n	76aa <__aeabi_ddiv+0x52e>
    76c4:	001d      	movs	r5, r3
    76c6:	e6fa      	b.n	74be <__aeabi_ddiv+0x342>
    76c8:	469a      	mov	sl, r3
    76ca:	e71c      	b.n	7506 <__aeabi_ddiv+0x38a>
    76cc:	42b0      	cmp	r0, r6
    76ce:	d839      	bhi.n	7744 <__aeabi_ddiv+0x5c8>
    76d0:	d06e      	beq.n	77b0 <__aeabi_ddiv+0x634>
    76d2:	0011      	movs	r1, r2
    76d4:	e73a      	b.n	754c <__aeabi_ddiv+0x3d0>
    76d6:	9302      	str	r3, [sp, #8]
    76d8:	e73a      	b.n	7550 <__aeabi_ddiv+0x3d4>
    76da:	2a1f      	cmp	r2, #31
    76dc:	dc3c      	bgt.n	7758 <__aeabi_ddiv+0x5dc>
    76de:	2320      	movs	r3, #32
    76e0:	1a9b      	subs	r3, r3, r2
    76e2:	000c      	movs	r4, r1
    76e4:	4658      	mov	r0, fp
    76e6:	4099      	lsls	r1, r3
    76e8:	4098      	lsls	r0, r3
    76ea:	1e4b      	subs	r3, r1, #1
    76ec:	4199      	sbcs	r1, r3
    76ee:	465b      	mov	r3, fp
    76f0:	40d4      	lsrs	r4, r2
    76f2:	40d3      	lsrs	r3, r2
    76f4:	4320      	orrs	r0, r4
    76f6:	4308      	orrs	r0, r1
    76f8:	001a      	movs	r2, r3
    76fa:	0743      	lsls	r3, r0, #29
    76fc:	d009      	beq.n	7712 <__aeabi_ddiv+0x596>
    76fe:	230f      	movs	r3, #15
    7700:	4003      	ands	r3, r0
    7702:	2b04      	cmp	r3, #4
    7704:	d005      	beq.n	7712 <__aeabi_ddiv+0x596>
    7706:	0001      	movs	r1, r0
    7708:	1d08      	adds	r0, r1, #4
    770a:	4288      	cmp	r0, r1
    770c:	419b      	sbcs	r3, r3
    770e:	425b      	negs	r3, r3
    7710:	18d2      	adds	r2, r2, r3
    7712:	0213      	lsls	r3, r2, #8
    7714:	d53a      	bpl.n	778c <__aeabi_ddiv+0x610>
    7716:	2301      	movs	r3, #1
    7718:	9a02      	ldr	r2, [sp, #8]
    771a:	2401      	movs	r4, #1
    771c:	401a      	ands	r2, r3
    771e:	2300      	movs	r3, #0
    7720:	4694      	mov	ip, r2
    7722:	4698      	mov	r8, r3
    7724:	2200      	movs	r2, #0
    7726:	e5f7      	b.n	7318 <__aeabi_ddiv+0x19c>
    7728:	2102      	movs	r1, #2
    772a:	4249      	negs	r1, r1
    772c:	468c      	mov	ip, r1
    772e:	9d03      	ldr	r5, [sp, #12]
    7730:	44e3      	add	fp, ip
    7732:	46ac      	mov	ip, r5
    7734:	44e2      	add	sl, ip
    7736:	45aa      	cmp	sl, r5
    7738:	41ad      	sbcs	r5, r5
    773a:	426d      	negs	r5, r5
    773c:	4445      	add	r5, r8
    773e:	18ed      	adds	r5, r5, r3
    7740:	1a2d      	subs	r5, r5, r0
    7742:	e696      	b.n	7472 <__aeabi_ddiv+0x2f6>
    7744:	1e8a      	subs	r2, r1, #2
    7746:	9903      	ldr	r1, [sp, #12]
    7748:	004d      	lsls	r5, r1, #1
    774a:	428d      	cmp	r5, r1
    774c:	4189      	sbcs	r1, r1
    774e:	4249      	negs	r1, r1
    7750:	4441      	add	r1, r8
    7752:	1876      	adds	r6, r6, r1
    7754:	9503      	str	r5, [sp, #12]
    7756:	e78f      	b.n	7678 <__aeabi_ddiv+0x4fc>
    7758:	201f      	movs	r0, #31
    775a:	4240      	negs	r0, r0
    775c:	1ac3      	subs	r3, r0, r3
    775e:	4658      	mov	r0, fp
    7760:	40d8      	lsrs	r0, r3
    7762:	0003      	movs	r3, r0
    7764:	2a20      	cmp	r2, #32
    7766:	d028      	beq.n	77ba <__aeabi_ddiv+0x63e>
    7768:	2040      	movs	r0, #64	; 0x40
    776a:	465d      	mov	r5, fp
    776c:	1a82      	subs	r2, r0, r2
    776e:	4095      	lsls	r5, r2
    7770:	4329      	orrs	r1, r5
    7772:	1e4a      	subs	r2, r1, #1
    7774:	4191      	sbcs	r1, r2
    7776:	4319      	orrs	r1, r3
    7778:	2307      	movs	r3, #7
    777a:	2200      	movs	r2, #0
    777c:	400b      	ands	r3, r1
    777e:	d009      	beq.n	7794 <__aeabi_ddiv+0x618>
    7780:	230f      	movs	r3, #15
    7782:	2200      	movs	r2, #0
    7784:	400b      	ands	r3, r1
    7786:	0008      	movs	r0, r1
    7788:	2b04      	cmp	r3, #4
    778a:	d1bd      	bne.n	7708 <__aeabi_ddiv+0x58c>
    778c:	0001      	movs	r1, r0
    778e:	0753      	lsls	r3, r2, #29
    7790:	0252      	lsls	r2, r2, #9
    7792:	0b12      	lsrs	r2, r2, #12
    7794:	08c9      	lsrs	r1, r1, #3
    7796:	4319      	orrs	r1, r3
    7798:	2301      	movs	r3, #1
    779a:	4688      	mov	r8, r1
    779c:	9902      	ldr	r1, [sp, #8]
    779e:	2400      	movs	r4, #0
    77a0:	4019      	ands	r1, r3
    77a2:	468c      	mov	ip, r1
    77a4:	e5b8      	b.n	7318 <__aeabi_ddiv+0x19c>
    77a6:	4552      	cmp	r2, sl
    77a8:	d8be      	bhi.n	7728 <__aeabi_ddiv+0x5ac>
    77aa:	468b      	mov	fp, r1
    77ac:	2500      	movs	r5, #0
    77ae:	e660      	b.n	7472 <__aeabi_ddiv+0x2f6>
    77b0:	9d03      	ldr	r5, [sp, #12]
    77b2:	429d      	cmp	r5, r3
    77b4:	d3c6      	bcc.n	7744 <__aeabi_ddiv+0x5c8>
    77b6:	0011      	movs	r1, r2
    77b8:	e762      	b.n	7680 <__aeabi_ddiv+0x504>
    77ba:	2500      	movs	r5, #0
    77bc:	e7d8      	b.n	7770 <__aeabi_ddiv+0x5f4>
    77be:	2280      	movs	r2, #128	; 0x80
    77c0:	465b      	mov	r3, fp
    77c2:	0312      	lsls	r2, r2, #12
    77c4:	431a      	orrs	r2, r3
    77c6:	9b01      	ldr	r3, [sp, #4]
    77c8:	0312      	lsls	r2, r2, #12
    77ca:	0b12      	lsrs	r2, r2, #12
    77cc:	469c      	mov	ip, r3
    77ce:	4688      	mov	r8, r1
    77d0:	4c03      	ldr	r4, [pc, #12]	; (77e0 <__aeabi_ddiv+0x664>)
    77d2:	e5a1      	b.n	7318 <__aeabi_ddiv+0x19c>
    77d4:	000003ff 	.word	0x000003ff
    77d8:	feffffff 	.word	0xfeffffff
    77dc:	000007fe 	.word	0x000007fe
    77e0:	000007ff 	.word	0x000007ff

000077e4 <__aeabi_dmul>:
    77e4:	b5f0      	push	{r4, r5, r6, r7, lr}
    77e6:	4657      	mov	r7, sl
    77e8:	4645      	mov	r5, r8
    77ea:	46de      	mov	lr, fp
    77ec:	464e      	mov	r6, r9
    77ee:	b5e0      	push	{r5, r6, r7, lr}
    77f0:	030c      	lsls	r4, r1, #12
    77f2:	4698      	mov	r8, r3
    77f4:	004e      	lsls	r6, r1, #1
    77f6:	0b23      	lsrs	r3, r4, #12
    77f8:	b087      	sub	sp, #28
    77fa:	0007      	movs	r7, r0
    77fc:	4692      	mov	sl, r2
    77fe:	469b      	mov	fp, r3
    7800:	0d76      	lsrs	r6, r6, #21
    7802:	0fcd      	lsrs	r5, r1, #31
    7804:	2e00      	cmp	r6, #0
    7806:	d06b      	beq.n	78e0 <__aeabi_dmul+0xfc>
    7808:	4b6d      	ldr	r3, [pc, #436]	; (79c0 <__aeabi_dmul+0x1dc>)
    780a:	429e      	cmp	r6, r3
    780c:	d035      	beq.n	787a <__aeabi_dmul+0x96>
    780e:	2480      	movs	r4, #128	; 0x80
    7810:	465b      	mov	r3, fp
    7812:	0f42      	lsrs	r2, r0, #29
    7814:	0424      	lsls	r4, r4, #16
    7816:	00db      	lsls	r3, r3, #3
    7818:	4314      	orrs	r4, r2
    781a:	431c      	orrs	r4, r3
    781c:	00c3      	lsls	r3, r0, #3
    781e:	4699      	mov	r9, r3
    7820:	4b68      	ldr	r3, [pc, #416]	; (79c4 <__aeabi_dmul+0x1e0>)
    7822:	46a3      	mov	fp, r4
    7824:	469c      	mov	ip, r3
    7826:	2300      	movs	r3, #0
    7828:	2700      	movs	r7, #0
    782a:	4466      	add	r6, ip
    782c:	9302      	str	r3, [sp, #8]
    782e:	4643      	mov	r3, r8
    7830:	031c      	lsls	r4, r3, #12
    7832:	005a      	lsls	r2, r3, #1
    7834:	0fdb      	lsrs	r3, r3, #31
    7836:	4650      	mov	r0, sl
    7838:	0b24      	lsrs	r4, r4, #12
    783a:	0d52      	lsrs	r2, r2, #21
    783c:	4698      	mov	r8, r3
    783e:	d100      	bne.n	7842 <__aeabi_dmul+0x5e>
    7840:	e076      	b.n	7930 <__aeabi_dmul+0x14c>
    7842:	4b5f      	ldr	r3, [pc, #380]	; (79c0 <__aeabi_dmul+0x1dc>)
    7844:	429a      	cmp	r2, r3
    7846:	d06d      	beq.n	7924 <__aeabi_dmul+0x140>
    7848:	2380      	movs	r3, #128	; 0x80
    784a:	0f41      	lsrs	r1, r0, #29
    784c:	041b      	lsls	r3, r3, #16
    784e:	430b      	orrs	r3, r1
    7850:	495c      	ldr	r1, [pc, #368]	; (79c4 <__aeabi_dmul+0x1e0>)
    7852:	00e4      	lsls	r4, r4, #3
    7854:	468c      	mov	ip, r1
    7856:	431c      	orrs	r4, r3
    7858:	00c3      	lsls	r3, r0, #3
    785a:	2000      	movs	r0, #0
    785c:	4462      	add	r2, ip
    785e:	4641      	mov	r1, r8
    7860:	18b6      	adds	r6, r6, r2
    7862:	4069      	eors	r1, r5
    7864:	1c72      	adds	r2, r6, #1
    7866:	9101      	str	r1, [sp, #4]
    7868:	4694      	mov	ip, r2
    786a:	4307      	orrs	r7, r0
    786c:	2f0f      	cmp	r7, #15
    786e:	d900      	bls.n	7872 <__aeabi_dmul+0x8e>
    7870:	e0b0      	b.n	79d4 <__aeabi_dmul+0x1f0>
    7872:	4a55      	ldr	r2, [pc, #340]	; (79c8 <__aeabi_dmul+0x1e4>)
    7874:	00bf      	lsls	r7, r7, #2
    7876:	59d2      	ldr	r2, [r2, r7]
    7878:	4697      	mov	pc, r2
    787a:	465b      	mov	r3, fp
    787c:	4303      	orrs	r3, r0
    787e:	4699      	mov	r9, r3
    7880:	d000      	beq.n	7884 <__aeabi_dmul+0xa0>
    7882:	e087      	b.n	7994 <__aeabi_dmul+0x1b0>
    7884:	2300      	movs	r3, #0
    7886:	469b      	mov	fp, r3
    7888:	3302      	adds	r3, #2
    788a:	2708      	movs	r7, #8
    788c:	9302      	str	r3, [sp, #8]
    788e:	e7ce      	b.n	782e <__aeabi_dmul+0x4a>
    7890:	4642      	mov	r2, r8
    7892:	9201      	str	r2, [sp, #4]
    7894:	2802      	cmp	r0, #2
    7896:	d067      	beq.n	7968 <__aeabi_dmul+0x184>
    7898:	2803      	cmp	r0, #3
    789a:	d100      	bne.n	789e <__aeabi_dmul+0xba>
    789c:	e20e      	b.n	7cbc <__aeabi_dmul+0x4d8>
    789e:	2801      	cmp	r0, #1
    78a0:	d000      	beq.n	78a4 <__aeabi_dmul+0xc0>
    78a2:	e162      	b.n	7b6a <__aeabi_dmul+0x386>
    78a4:	2300      	movs	r3, #0
    78a6:	2400      	movs	r4, #0
    78a8:	2200      	movs	r2, #0
    78aa:	4699      	mov	r9, r3
    78ac:	9901      	ldr	r1, [sp, #4]
    78ae:	4001      	ands	r1, r0
    78b0:	b2cd      	uxtb	r5, r1
    78b2:	2100      	movs	r1, #0
    78b4:	0312      	lsls	r2, r2, #12
    78b6:	0d0b      	lsrs	r3, r1, #20
    78b8:	0b12      	lsrs	r2, r2, #12
    78ba:	051b      	lsls	r3, r3, #20
    78bc:	4313      	orrs	r3, r2
    78be:	4a43      	ldr	r2, [pc, #268]	; (79cc <__aeabi_dmul+0x1e8>)
    78c0:	0524      	lsls	r4, r4, #20
    78c2:	4013      	ands	r3, r2
    78c4:	431c      	orrs	r4, r3
    78c6:	0064      	lsls	r4, r4, #1
    78c8:	07ed      	lsls	r5, r5, #31
    78ca:	0864      	lsrs	r4, r4, #1
    78cc:	432c      	orrs	r4, r5
    78ce:	4648      	mov	r0, r9
    78d0:	0021      	movs	r1, r4
    78d2:	b007      	add	sp, #28
    78d4:	bc3c      	pop	{r2, r3, r4, r5}
    78d6:	4690      	mov	r8, r2
    78d8:	4699      	mov	r9, r3
    78da:	46a2      	mov	sl, r4
    78dc:	46ab      	mov	fp, r5
    78de:	bdf0      	pop	{r4, r5, r6, r7, pc}
    78e0:	4303      	orrs	r3, r0
    78e2:	4699      	mov	r9, r3
    78e4:	d04f      	beq.n	7986 <__aeabi_dmul+0x1a2>
    78e6:	465b      	mov	r3, fp
    78e8:	2b00      	cmp	r3, #0
    78ea:	d100      	bne.n	78ee <__aeabi_dmul+0x10a>
    78ec:	e189      	b.n	7c02 <__aeabi_dmul+0x41e>
    78ee:	4658      	mov	r0, fp
    78f0:	f000 fe56 	bl	85a0 <__clzsi2>
    78f4:	0003      	movs	r3, r0
    78f6:	3b0b      	subs	r3, #11
    78f8:	2b1c      	cmp	r3, #28
    78fa:	dd00      	ble.n	78fe <__aeabi_dmul+0x11a>
    78fc:	e17a      	b.n	7bf4 <__aeabi_dmul+0x410>
    78fe:	221d      	movs	r2, #29
    7900:	1ad3      	subs	r3, r2, r3
    7902:	003a      	movs	r2, r7
    7904:	0001      	movs	r1, r0
    7906:	465c      	mov	r4, fp
    7908:	40da      	lsrs	r2, r3
    790a:	3908      	subs	r1, #8
    790c:	408c      	lsls	r4, r1
    790e:	0013      	movs	r3, r2
    7910:	408f      	lsls	r7, r1
    7912:	4323      	orrs	r3, r4
    7914:	469b      	mov	fp, r3
    7916:	46b9      	mov	r9, r7
    7918:	2300      	movs	r3, #0
    791a:	4e2d      	ldr	r6, [pc, #180]	; (79d0 <__aeabi_dmul+0x1ec>)
    791c:	2700      	movs	r7, #0
    791e:	1a36      	subs	r6, r6, r0
    7920:	9302      	str	r3, [sp, #8]
    7922:	e784      	b.n	782e <__aeabi_dmul+0x4a>
    7924:	4653      	mov	r3, sl
    7926:	4323      	orrs	r3, r4
    7928:	d12a      	bne.n	7980 <__aeabi_dmul+0x19c>
    792a:	2400      	movs	r4, #0
    792c:	2002      	movs	r0, #2
    792e:	e796      	b.n	785e <__aeabi_dmul+0x7a>
    7930:	4653      	mov	r3, sl
    7932:	4323      	orrs	r3, r4
    7934:	d020      	beq.n	7978 <__aeabi_dmul+0x194>
    7936:	2c00      	cmp	r4, #0
    7938:	d100      	bne.n	793c <__aeabi_dmul+0x158>
    793a:	e157      	b.n	7bec <__aeabi_dmul+0x408>
    793c:	0020      	movs	r0, r4
    793e:	f000 fe2f 	bl	85a0 <__clzsi2>
    7942:	0003      	movs	r3, r0
    7944:	3b0b      	subs	r3, #11
    7946:	2b1c      	cmp	r3, #28
    7948:	dd00      	ble.n	794c <__aeabi_dmul+0x168>
    794a:	e149      	b.n	7be0 <__aeabi_dmul+0x3fc>
    794c:	211d      	movs	r1, #29
    794e:	1acb      	subs	r3, r1, r3
    7950:	4651      	mov	r1, sl
    7952:	0002      	movs	r2, r0
    7954:	40d9      	lsrs	r1, r3
    7956:	4653      	mov	r3, sl
    7958:	3a08      	subs	r2, #8
    795a:	4094      	lsls	r4, r2
    795c:	4093      	lsls	r3, r2
    795e:	430c      	orrs	r4, r1
    7960:	4a1b      	ldr	r2, [pc, #108]	; (79d0 <__aeabi_dmul+0x1ec>)
    7962:	1a12      	subs	r2, r2, r0
    7964:	2000      	movs	r0, #0
    7966:	e77a      	b.n	785e <__aeabi_dmul+0x7a>
    7968:	2501      	movs	r5, #1
    796a:	9b01      	ldr	r3, [sp, #4]
    796c:	4c14      	ldr	r4, [pc, #80]	; (79c0 <__aeabi_dmul+0x1dc>)
    796e:	401d      	ands	r5, r3
    7970:	2300      	movs	r3, #0
    7972:	2200      	movs	r2, #0
    7974:	4699      	mov	r9, r3
    7976:	e79c      	b.n	78b2 <__aeabi_dmul+0xce>
    7978:	2400      	movs	r4, #0
    797a:	2200      	movs	r2, #0
    797c:	2001      	movs	r0, #1
    797e:	e76e      	b.n	785e <__aeabi_dmul+0x7a>
    7980:	4653      	mov	r3, sl
    7982:	2003      	movs	r0, #3
    7984:	e76b      	b.n	785e <__aeabi_dmul+0x7a>
    7986:	2300      	movs	r3, #0
    7988:	469b      	mov	fp, r3
    798a:	3301      	adds	r3, #1
    798c:	2704      	movs	r7, #4
    798e:	2600      	movs	r6, #0
    7990:	9302      	str	r3, [sp, #8]
    7992:	e74c      	b.n	782e <__aeabi_dmul+0x4a>
    7994:	2303      	movs	r3, #3
    7996:	4681      	mov	r9, r0
    7998:	270c      	movs	r7, #12
    799a:	9302      	str	r3, [sp, #8]
    799c:	e747      	b.n	782e <__aeabi_dmul+0x4a>
    799e:	2280      	movs	r2, #128	; 0x80
    79a0:	2300      	movs	r3, #0
    79a2:	2500      	movs	r5, #0
    79a4:	0312      	lsls	r2, r2, #12
    79a6:	4699      	mov	r9, r3
    79a8:	4c05      	ldr	r4, [pc, #20]	; (79c0 <__aeabi_dmul+0x1dc>)
    79aa:	e782      	b.n	78b2 <__aeabi_dmul+0xce>
    79ac:	465c      	mov	r4, fp
    79ae:	464b      	mov	r3, r9
    79b0:	9802      	ldr	r0, [sp, #8]
    79b2:	e76f      	b.n	7894 <__aeabi_dmul+0xb0>
    79b4:	465c      	mov	r4, fp
    79b6:	464b      	mov	r3, r9
    79b8:	9501      	str	r5, [sp, #4]
    79ba:	9802      	ldr	r0, [sp, #8]
    79bc:	e76a      	b.n	7894 <__aeabi_dmul+0xb0>
    79be:	46c0      	nop			; (mov r8, r8)
    79c0:	000007ff 	.word	0x000007ff
    79c4:	fffffc01 	.word	0xfffffc01
    79c8:	00009398 	.word	0x00009398
    79cc:	800fffff 	.word	0x800fffff
    79d0:	fffffc0d 	.word	0xfffffc0d
    79d4:	464a      	mov	r2, r9
    79d6:	4649      	mov	r1, r9
    79d8:	0c17      	lsrs	r7, r2, #16
    79da:	0c1a      	lsrs	r2, r3, #16
    79dc:	041b      	lsls	r3, r3, #16
    79de:	0c1b      	lsrs	r3, r3, #16
    79e0:	0408      	lsls	r0, r1, #16
    79e2:	0019      	movs	r1, r3
    79e4:	0c00      	lsrs	r0, r0, #16
    79e6:	4341      	muls	r1, r0
    79e8:	0015      	movs	r5, r2
    79ea:	4688      	mov	r8, r1
    79ec:	0019      	movs	r1, r3
    79ee:	437d      	muls	r5, r7
    79f0:	4379      	muls	r1, r7
    79f2:	9503      	str	r5, [sp, #12]
    79f4:	4689      	mov	r9, r1
    79f6:	0029      	movs	r1, r5
    79f8:	0015      	movs	r5, r2
    79fa:	4345      	muls	r5, r0
    79fc:	444d      	add	r5, r9
    79fe:	9502      	str	r5, [sp, #8]
    7a00:	4645      	mov	r5, r8
    7a02:	0c2d      	lsrs	r5, r5, #16
    7a04:	46aa      	mov	sl, r5
    7a06:	9d02      	ldr	r5, [sp, #8]
    7a08:	4455      	add	r5, sl
    7a0a:	45a9      	cmp	r9, r5
    7a0c:	d906      	bls.n	7a1c <__aeabi_dmul+0x238>
    7a0e:	468a      	mov	sl, r1
    7a10:	2180      	movs	r1, #128	; 0x80
    7a12:	0249      	lsls	r1, r1, #9
    7a14:	4689      	mov	r9, r1
    7a16:	44ca      	add	sl, r9
    7a18:	4651      	mov	r1, sl
    7a1a:	9103      	str	r1, [sp, #12]
    7a1c:	0c29      	lsrs	r1, r5, #16
    7a1e:	9104      	str	r1, [sp, #16]
    7a20:	4641      	mov	r1, r8
    7a22:	0409      	lsls	r1, r1, #16
    7a24:	042d      	lsls	r5, r5, #16
    7a26:	0c09      	lsrs	r1, r1, #16
    7a28:	4688      	mov	r8, r1
    7a2a:	0029      	movs	r1, r5
    7a2c:	0c25      	lsrs	r5, r4, #16
    7a2e:	0424      	lsls	r4, r4, #16
    7a30:	4441      	add	r1, r8
    7a32:	0c24      	lsrs	r4, r4, #16
    7a34:	9105      	str	r1, [sp, #20]
    7a36:	0021      	movs	r1, r4
    7a38:	4341      	muls	r1, r0
    7a3a:	4688      	mov	r8, r1
    7a3c:	0021      	movs	r1, r4
    7a3e:	4379      	muls	r1, r7
    7a40:	468a      	mov	sl, r1
    7a42:	4368      	muls	r0, r5
    7a44:	4641      	mov	r1, r8
    7a46:	4450      	add	r0, sl
    7a48:	4681      	mov	r9, r0
    7a4a:	0c08      	lsrs	r0, r1, #16
    7a4c:	4448      	add	r0, r9
    7a4e:	436f      	muls	r7, r5
    7a50:	4582      	cmp	sl, r0
    7a52:	d903      	bls.n	7a5c <__aeabi_dmul+0x278>
    7a54:	2180      	movs	r1, #128	; 0x80
    7a56:	0249      	lsls	r1, r1, #9
    7a58:	4689      	mov	r9, r1
    7a5a:	444f      	add	r7, r9
    7a5c:	0c01      	lsrs	r1, r0, #16
    7a5e:	4689      	mov	r9, r1
    7a60:	0039      	movs	r1, r7
    7a62:	4449      	add	r1, r9
    7a64:	9102      	str	r1, [sp, #8]
    7a66:	4641      	mov	r1, r8
    7a68:	040f      	lsls	r7, r1, #16
    7a6a:	9904      	ldr	r1, [sp, #16]
    7a6c:	0c3f      	lsrs	r7, r7, #16
    7a6e:	4688      	mov	r8, r1
    7a70:	0400      	lsls	r0, r0, #16
    7a72:	19c0      	adds	r0, r0, r7
    7a74:	4480      	add	r8, r0
    7a76:	4641      	mov	r1, r8
    7a78:	9104      	str	r1, [sp, #16]
    7a7a:	4659      	mov	r1, fp
    7a7c:	0c0f      	lsrs	r7, r1, #16
    7a7e:	0409      	lsls	r1, r1, #16
    7a80:	0c09      	lsrs	r1, r1, #16
    7a82:	4688      	mov	r8, r1
    7a84:	4359      	muls	r1, r3
    7a86:	468a      	mov	sl, r1
    7a88:	0039      	movs	r1, r7
    7a8a:	4351      	muls	r1, r2
    7a8c:	4689      	mov	r9, r1
    7a8e:	4641      	mov	r1, r8
    7a90:	434a      	muls	r2, r1
    7a92:	4651      	mov	r1, sl
    7a94:	0c09      	lsrs	r1, r1, #16
    7a96:	468b      	mov	fp, r1
    7a98:	437b      	muls	r3, r7
    7a9a:	18d2      	adds	r2, r2, r3
    7a9c:	445a      	add	r2, fp
    7a9e:	4293      	cmp	r3, r2
    7aa0:	d903      	bls.n	7aaa <__aeabi_dmul+0x2c6>
    7aa2:	2380      	movs	r3, #128	; 0x80
    7aa4:	025b      	lsls	r3, r3, #9
    7aa6:	469b      	mov	fp, r3
    7aa8:	44d9      	add	r9, fp
    7aaa:	4651      	mov	r1, sl
    7aac:	0409      	lsls	r1, r1, #16
    7aae:	0c09      	lsrs	r1, r1, #16
    7ab0:	468a      	mov	sl, r1
    7ab2:	4641      	mov	r1, r8
    7ab4:	4361      	muls	r1, r4
    7ab6:	437c      	muls	r4, r7
    7ab8:	0c13      	lsrs	r3, r2, #16
    7aba:	0412      	lsls	r2, r2, #16
    7abc:	444b      	add	r3, r9
    7abe:	4452      	add	r2, sl
    7ac0:	46a1      	mov	r9, r4
    7ac2:	468a      	mov	sl, r1
    7ac4:	003c      	movs	r4, r7
    7ac6:	4641      	mov	r1, r8
    7ac8:	436c      	muls	r4, r5
    7aca:	434d      	muls	r5, r1
    7acc:	4651      	mov	r1, sl
    7ace:	444d      	add	r5, r9
    7ad0:	0c0f      	lsrs	r7, r1, #16
    7ad2:	197d      	adds	r5, r7, r5
    7ad4:	45a9      	cmp	r9, r5
    7ad6:	d903      	bls.n	7ae0 <__aeabi_dmul+0x2fc>
    7ad8:	2180      	movs	r1, #128	; 0x80
    7ada:	0249      	lsls	r1, r1, #9
    7adc:	4688      	mov	r8, r1
    7ade:	4444      	add	r4, r8
    7ae0:	9f04      	ldr	r7, [sp, #16]
    7ae2:	9903      	ldr	r1, [sp, #12]
    7ae4:	46b8      	mov	r8, r7
    7ae6:	4441      	add	r1, r8
    7ae8:	468b      	mov	fp, r1
    7aea:	4583      	cmp	fp, r0
    7aec:	4180      	sbcs	r0, r0
    7aee:	4241      	negs	r1, r0
    7af0:	4688      	mov	r8, r1
    7af2:	4651      	mov	r1, sl
    7af4:	0408      	lsls	r0, r1, #16
    7af6:	042f      	lsls	r7, r5, #16
    7af8:	0c00      	lsrs	r0, r0, #16
    7afa:	183f      	adds	r7, r7, r0
    7afc:	4658      	mov	r0, fp
    7afe:	9902      	ldr	r1, [sp, #8]
    7b00:	1810      	adds	r0, r2, r0
    7b02:	4689      	mov	r9, r1
    7b04:	4290      	cmp	r0, r2
    7b06:	4192      	sbcs	r2, r2
    7b08:	444f      	add	r7, r9
    7b0a:	46ba      	mov	sl, r7
    7b0c:	4252      	negs	r2, r2
    7b0e:	4699      	mov	r9, r3
    7b10:	4693      	mov	fp, r2
    7b12:	44c2      	add	sl, r8
    7b14:	44d1      	add	r9, sl
    7b16:	44cb      	add	fp, r9
    7b18:	428f      	cmp	r7, r1
    7b1a:	41bf      	sbcs	r7, r7
    7b1c:	45c2      	cmp	sl, r8
    7b1e:	4189      	sbcs	r1, r1
    7b20:	4599      	cmp	r9, r3
    7b22:	419b      	sbcs	r3, r3
    7b24:	4593      	cmp	fp, r2
    7b26:	4192      	sbcs	r2, r2
    7b28:	427f      	negs	r7, r7
    7b2a:	4249      	negs	r1, r1
    7b2c:	0c2d      	lsrs	r5, r5, #16
    7b2e:	4252      	negs	r2, r2
    7b30:	430f      	orrs	r7, r1
    7b32:	425b      	negs	r3, r3
    7b34:	4313      	orrs	r3, r2
    7b36:	197f      	adds	r7, r7, r5
    7b38:	18ff      	adds	r7, r7, r3
    7b3a:	465b      	mov	r3, fp
    7b3c:	193c      	adds	r4, r7, r4
    7b3e:	0ddb      	lsrs	r3, r3, #23
    7b40:	9a05      	ldr	r2, [sp, #20]
    7b42:	0264      	lsls	r4, r4, #9
    7b44:	431c      	orrs	r4, r3
    7b46:	0243      	lsls	r3, r0, #9
    7b48:	4313      	orrs	r3, r2
    7b4a:	1e5d      	subs	r5, r3, #1
    7b4c:	41ab      	sbcs	r3, r5
    7b4e:	465a      	mov	r2, fp
    7b50:	0dc0      	lsrs	r0, r0, #23
    7b52:	4303      	orrs	r3, r0
    7b54:	0252      	lsls	r2, r2, #9
    7b56:	4313      	orrs	r3, r2
    7b58:	01e2      	lsls	r2, r4, #7
    7b5a:	d556      	bpl.n	7c0a <__aeabi_dmul+0x426>
    7b5c:	2001      	movs	r0, #1
    7b5e:	085a      	lsrs	r2, r3, #1
    7b60:	4003      	ands	r3, r0
    7b62:	4313      	orrs	r3, r2
    7b64:	07e2      	lsls	r2, r4, #31
    7b66:	4313      	orrs	r3, r2
    7b68:	0864      	lsrs	r4, r4, #1
    7b6a:	485a      	ldr	r0, [pc, #360]	; (7cd4 <__aeabi_dmul+0x4f0>)
    7b6c:	4460      	add	r0, ip
    7b6e:	2800      	cmp	r0, #0
    7b70:	dd4d      	ble.n	7c0e <__aeabi_dmul+0x42a>
    7b72:	075a      	lsls	r2, r3, #29
    7b74:	d009      	beq.n	7b8a <__aeabi_dmul+0x3a6>
    7b76:	220f      	movs	r2, #15
    7b78:	401a      	ands	r2, r3
    7b7a:	2a04      	cmp	r2, #4
    7b7c:	d005      	beq.n	7b8a <__aeabi_dmul+0x3a6>
    7b7e:	1d1a      	adds	r2, r3, #4
    7b80:	429a      	cmp	r2, r3
    7b82:	419b      	sbcs	r3, r3
    7b84:	425b      	negs	r3, r3
    7b86:	18e4      	adds	r4, r4, r3
    7b88:	0013      	movs	r3, r2
    7b8a:	01e2      	lsls	r2, r4, #7
    7b8c:	d504      	bpl.n	7b98 <__aeabi_dmul+0x3b4>
    7b8e:	2080      	movs	r0, #128	; 0x80
    7b90:	4a51      	ldr	r2, [pc, #324]	; (7cd8 <__aeabi_dmul+0x4f4>)
    7b92:	00c0      	lsls	r0, r0, #3
    7b94:	4014      	ands	r4, r2
    7b96:	4460      	add	r0, ip
    7b98:	4a50      	ldr	r2, [pc, #320]	; (7cdc <__aeabi_dmul+0x4f8>)
    7b9a:	4290      	cmp	r0, r2
    7b9c:	dd00      	ble.n	7ba0 <__aeabi_dmul+0x3bc>
    7b9e:	e6e3      	b.n	7968 <__aeabi_dmul+0x184>
    7ba0:	2501      	movs	r5, #1
    7ba2:	08db      	lsrs	r3, r3, #3
    7ba4:	0762      	lsls	r2, r4, #29
    7ba6:	431a      	orrs	r2, r3
    7ba8:	0264      	lsls	r4, r4, #9
    7baa:	9b01      	ldr	r3, [sp, #4]
    7bac:	4691      	mov	r9, r2
    7bae:	0b22      	lsrs	r2, r4, #12
    7bb0:	0544      	lsls	r4, r0, #21
    7bb2:	0d64      	lsrs	r4, r4, #21
    7bb4:	401d      	ands	r5, r3
    7bb6:	e67c      	b.n	78b2 <__aeabi_dmul+0xce>
    7bb8:	2280      	movs	r2, #128	; 0x80
    7bba:	4659      	mov	r1, fp
    7bbc:	0312      	lsls	r2, r2, #12
    7bbe:	4211      	tst	r1, r2
    7bc0:	d008      	beq.n	7bd4 <__aeabi_dmul+0x3f0>
    7bc2:	4214      	tst	r4, r2
    7bc4:	d106      	bne.n	7bd4 <__aeabi_dmul+0x3f0>
    7bc6:	4322      	orrs	r2, r4
    7bc8:	0312      	lsls	r2, r2, #12
    7bca:	0b12      	lsrs	r2, r2, #12
    7bcc:	4645      	mov	r5, r8
    7bce:	4699      	mov	r9, r3
    7bd0:	4c43      	ldr	r4, [pc, #268]	; (7ce0 <__aeabi_dmul+0x4fc>)
    7bd2:	e66e      	b.n	78b2 <__aeabi_dmul+0xce>
    7bd4:	465b      	mov	r3, fp
    7bd6:	431a      	orrs	r2, r3
    7bd8:	0312      	lsls	r2, r2, #12
    7bda:	0b12      	lsrs	r2, r2, #12
    7bdc:	4c40      	ldr	r4, [pc, #256]	; (7ce0 <__aeabi_dmul+0x4fc>)
    7bde:	e668      	b.n	78b2 <__aeabi_dmul+0xce>
    7be0:	0003      	movs	r3, r0
    7be2:	4654      	mov	r4, sl
    7be4:	3b28      	subs	r3, #40	; 0x28
    7be6:	409c      	lsls	r4, r3
    7be8:	2300      	movs	r3, #0
    7bea:	e6b9      	b.n	7960 <__aeabi_dmul+0x17c>
    7bec:	f000 fcd8 	bl	85a0 <__clzsi2>
    7bf0:	3020      	adds	r0, #32
    7bf2:	e6a6      	b.n	7942 <__aeabi_dmul+0x15e>
    7bf4:	0003      	movs	r3, r0
    7bf6:	3b28      	subs	r3, #40	; 0x28
    7bf8:	409f      	lsls	r7, r3
    7bfa:	2300      	movs	r3, #0
    7bfc:	46bb      	mov	fp, r7
    7bfe:	4699      	mov	r9, r3
    7c00:	e68a      	b.n	7918 <__aeabi_dmul+0x134>
    7c02:	f000 fccd 	bl	85a0 <__clzsi2>
    7c06:	3020      	adds	r0, #32
    7c08:	e674      	b.n	78f4 <__aeabi_dmul+0x110>
    7c0a:	46b4      	mov	ip, r6
    7c0c:	e7ad      	b.n	7b6a <__aeabi_dmul+0x386>
    7c0e:	2501      	movs	r5, #1
    7c10:	1a2a      	subs	r2, r5, r0
    7c12:	2a38      	cmp	r2, #56	; 0x38
    7c14:	dd06      	ble.n	7c24 <__aeabi_dmul+0x440>
    7c16:	9b01      	ldr	r3, [sp, #4]
    7c18:	2400      	movs	r4, #0
    7c1a:	401d      	ands	r5, r3
    7c1c:	2300      	movs	r3, #0
    7c1e:	2200      	movs	r2, #0
    7c20:	4699      	mov	r9, r3
    7c22:	e646      	b.n	78b2 <__aeabi_dmul+0xce>
    7c24:	2a1f      	cmp	r2, #31
    7c26:	dc21      	bgt.n	7c6c <__aeabi_dmul+0x488>
    7c28:	2520      	movs	r5, #32
    7c2a:	0020      	movs	r0, r4
    7c2c:	1aad      	subs	r5, r5, r2
    7c2e:	001e      	movs	r6, r3
    7c30:	40ab      	lsls	r3, r5
    7c32:	40a8      	lsls	r0, r5
    7c34:	40d6      	lsrs	r6, r2
    7c36:	1e5d      	subs	r5, r3, #1
    7c38:	41ab      	sbcs	r3, r5
    7c3a:	4330      	orrs	r0, r6
    7c3c:	4318      	orrs	r0, r3
    7c3e:	40d4      	lsrs	r4, r2
    7c40:	0743      	lsls	r3, r0, #29
    7c42:	d009      	beq.n	7c58 <__aeabi_dmul+0x474>
    7c44:	230f      	movs	r3, #15
    7c46:	4003      	ands	r3, r0
    7c48:	2b04      	cmp	r3, #4
    7c4a:	d005      	beq.n	7c58 <__aeabi_dmul+0x474>
    7c4c:	0003      	movs	r3, r0
    7c4e:	1d18      	adds	r0, r3, #4
    7c50:	4298      	cmp	r0, r3
    7c52:	419b      	sbcs	r3, r3
    7c54:	425b      	negs	r3, r3
    7c56:	18e4      	adds	r4, r4, r3
    7c58:	0223      	lsls	r3, r4, #8
    7c5a:	d521      	bpl.n	7ca0 <__aeabi_dmul+0x4bc>
    7c5c:	2501      	movs	r5, #1
    7c5e:	9b01      	ldr	r3, [sp, #4]
    7c60:	2401      	movs	r4, #1
    7c62:	401d      	ands	r5, r3
    7c64:	2300      	movs	r3, #0
    7c66:	2200      	movs	r2, #0
    7c68:	4699      	mov	r9, r3
    7c6a:	e622      	b.n	78b2 <__aeabi_dmul+0xce>
    7c6c:	251f      	movs	r5, #31
    7c6e:	0021      	movs	r1, r4
    7c70:	426d      	negs	r5, r5
    7c72:	1a28      	subs	r0, r5, r0
    7c74:	40c1      	lsrs	r1, r0
    7c76:	0008      	movs	r0, r1
    7c78:	2a20      	cmp	r2, #32
    7c7a:	d01d      	beq.n	7cb8 <__aeabi_dmul+0x4d4>
    7c7c:	355f      	adds	r5, #95	; 0x5f
    7c7e:	1aaa      	subs	r2, r5, r2
    7c80:	4094      	lsls	r4, r2
    7c82:	4323      	orrs	r3, r4
    7c84:	1e5c      	subs	r4, r3, #1
    7c86:	41a3      	sbcs	r3, r4
    7c88:	2507      	movs	r5, #7
    7c8a:	4303      	orrs	r3, r0
    7c8c:	401d      	ands	r5, r3
    7c8e:	2200      	movs	r2, #0
    7c90:	2d00      	cmp	r5, #0
    7c92:	d009      	beq.n	7ca8 <__aeabi_dmul+0x4c4>
    7c94:	220f      	movs	r2, #15
    7c96:	2400      	movs	r4, #0
    7c98:	401a      	ands	r2, r3
    7c9a:	0018      	movs	r0, r3
    7c9c:	2a04      	cmp	r2, #4
    7c9e:	d1d6      	bne.n	7c4e <__aeabi_dmul+0x46a>
    7ca0:	0003      	movs	r3, r0
    7ca2:	0765      	lsls	r5, r4, #29
    7ca4:	0264      	lsls	r4, r4, #9
    7ca6:	0b22      	lsrs	r2, r4, #12
    7ca8:	08db      	lsrs	r3, r3, #3
    7caa:	432b      	orrs	r3, r5
    7cac:	2501      	movs	r5, #1
    7cae:	4699      	mov	r9, r3
    7cb0:	9b01      	ldr	r3, [sp, #4]
    7cb2:	2400      	movs	r4, #0
    7cb4:	401d      	ands	r5, r3
    7cb6:	e5fc      	b.n	78b2 <__aeabi_dmul+0xce>
    7cb8:	2400      	movs	r4, #0
    7cba:	e7e2      	b.n	7c82 <__aeabi_dmul+0x49e>
    7cbc:	2280      	movs	r2, #128	; 0x80
    7cbe:	2501      	movs	r5, #1
    7cc0:	0312      	lsls	r2, r2, #12
    7cc2:	4322      	orrs	r2, r4
    7cc4:	9901      	ldr	r1, [sp, #4]
    7cc6:	0312      	lsls	r2, r2, #12
    7cc8:	0b12      	lsrs	r2, r2, #12
    7cca:	400d      	ands	r5, r1
    7ccc:	4699      	mov	r9, r3
    7cce:	4c04      	ldr	r4, [pc, #16]	; (7ce0 <__aeabi_dmul+0x4fc>)
    7cd0:	e5ef      	b.n	78b2 <__aeabi_dmul+0xce>
    7cd2:	46c0      	nop			; (mov r8, r8)
    7cd4:	000003ff 	.word	0x000003ff
    7cd8:	feffffff 	.word	0xfeffffff
    7cdc:	000007fe 	.word	0x000007fe
    7ce0:	000007ff 	.word	0x000007ff

00007ce4 <__aeabi_dsub>:
    7ce4:	b5f0      	push	{r4, r5, r6, r7, lr}
    7ce6:	4646      	mov	r6, r8
    7ce8:	46d6      	mov	lr, sl
    7cea:	464f      	mov	r7, r9
    7cec:	030c      	lsls	r4, r1, #12
    7cee:	b5c0      	push	{r6, r7, lr}
    7cf0:	0fcd      	lsrs	r5, r1, #31
    7cf2:	004e      	lsls	r6, r1, #1
    7cf4:	0a61      	lsrs	r1, r4, #9
    7cf6:	0f44      	lsrs	r4, r0, #29
    7cf8:	430c      	orrs	r4, r1
    7cfa:	00c1      	lsls	r1, r0, #3
    7cfc:	0058      	lsls	r0, r3, #1
    7cfe:	0d40      	lsrs	r0, r0, #21
    7d00:	4684      	mov	ip, r0
    7d02:	468a      	mov	sl, r1
    7d04:	000f      	movs	r7, r1
    7d06:	0319      	lsls	r1, r3, #12
    7d08:	0f50      	lsrs	r0, r2, #29
    7d0a:	0a49      	lsrs	r1, r1, #9
    7d0c:	4301      	orrs	r1, r0
    7d0e:	48c6      	ldr	r0, [pc, #792]	; (8028 <__aeabi_dsub+0x344>)
    7d10:	0d76      	lsrs	r6, r6, #21
    7d12:	46a8      	mov	r8, r5
    7d14:	0fdb      	lsrs	r3, r3, #31
    7d16:	00d2      	lsls	r2, r2, #3
    7d18:	4584      	cmp	ip, r0
    7d1a:	d100      	bne.n	7d1e <__aeabi_dsub+0x3a>
    7d1c:	e0d8      	b.n	7ed0 <__aeabi_dsub+0x1ec>
    7d1e:	2001      	movs	r0, #1
    7d20:	4043      	eors	r3, r0
    7d22:	42ab      	cmp	r3, r5
    7d24:	d100      	bne.n	7d28 <__aeabi_dsub+0x44>
    7d26:	e0a6      	b.n	7e76 <__aeabi_dsub+0x192>
    7d28:	4660      	mov	r0, ip
    7d2a:	1a35      	subs	r5, r6, r0
    7d2c:	2d00      	cmp	r5, #0
    7d2e:	dc00      	bgt.n	7d32 <__aeabi_dsub+0x4e>
    7d30:	e105      	b.n	7f3e <__aeabi_dsub+0x25a>
    7d32:	2800      	cmp	r0, #0
    7d34:	d110      	bne.n	7d58 <__aeabi_dsub+0x74>
    7d36:	000b      	movs	r3, r1
    7d38:	4313      	orrs	r3, r2
    7d3a:	d100      	bne.n	7d3e <__aeabi_dsub+0x5a>
    7d3c:	e0d7      	b.n	7eee <__aeabi_dsub+0x20a>
    7d3e:	1e6b      	subs	r3, r5, #1
    7d40:	2b00      	cmp	r3, #0
    7d42:	d000      	beq.n	7d46 <__aeabi_dsub+0x62>
    7d44:	e14b      	b.n	7fde <__aeabi_dsub+0x2fa>
    7d46:	4653      	mov	r3, sl
    7d48:	1a9f      	subs	r7, r3, r2
    7d4a:	45ba      	cmp	sl, r7
    7d4c:	4180      	sbcs	r0, r0
    7d4e:	1a64      	subs	r4, r4, r1
    7d50:	4240      	negs	r0, r0
    7d52:	1a24      	subs	r4, r4, r0
    7d54:	2601      	movs	r6, #1
    7d56:	e01e      	b.n	7d96 <__aeabi_dsub+0xb2>
    7d58:	4bb3      	ldr	r3, [pc, #716]	; (8028 <__aeabi_dsub+0x344>)
    7d5a:	429e      	cmp	r6, r3
    7d5c:	d048      	beq.n	7df0 <__aeabi_dsub+0x10c>
    7d5e:	2380      	movs	r3, #128	; 0x80
    7d60:	041b      	lsls	r3, r3, #16
    7d62:	4319      	orrs	r1, r3
    7d64:	2d38      	cmp	r5, #56	; 0x38
    7d66:	dd00      	ble.n	7d6a <__aeabi_dsub+0x86>
    7d68:	e119      	b.n	7f9e <__aeabi_dsub+0x2ba>
    7d6a:	2d1f      	cmp	r5, #31
    7d6c:	dd00      	ble.n	7d70 <__aeabi_dsub+0x8c>
    7d6e:	e14c      	b.n	800a <__aeabi_dsub+0x326>
    7d70:	2320      	movs	r3, #32
    7d72:	000f      	movs	r7, r1
    7d74:	1b5b      	subs	r3, r3, r5
    7d76:	0010      	movs	r0, r2
    7d78:	409a      	lsls	r2, r3
    7d7a:	409f      	lsls	r7, r3
    7d7c:	40e8      	lsrs	r0, r5
    7d7e:	1e53      	subs	r3, r2, #1
    7d80:	419a      	sbcs	r2, r3
    7d82:	40e9      	lsrs	r1, r5
    7d84:	4307      	orrs	r7, r0
    7d86:	4317      	orrs	r7, r2
    7d88:	4653      	mov	r3, sl
    7d8a:	1bdf      	subs	r7, r3, r7
    7d8c:	1a61      	subs	r1, r4, r1
    7d8e:	45ba      	cmp	sl, r7
    7d90:	41a4      	sbcs	r4, r4
    7d92:	4264      	negs	r4, r4
    7d94:	1b0c      	subs	r4, r1, r4
    7d96:	0223      	lsls	r3, r4, #8
    7d98:	d400      	bmi.n	7d9c <__aeabi_dsub+0xb8>
    7d9a:	e0c5      	b.n	7f28 <__aeabi_dsub+0x244>
    7d9c:	0264      	lsls	r4, r4, #9
    7d9e:	0a65      	lsrs	r5, r4, #9
    7da0:	2d00      	cmp	r5, #0
    7da2:	d100      	bne.n	7da6 <__aeabi_dsub+0xc2>
    7da4:	e0f6      	b.n	7f94 <__aeabi_dsub+0x2b0>
    7da6:	0028      	movs	r0, r5
    7da8:	f000 fbfa 	bl	85a0 <__clzsi2>
    7dac:	0003      	movs	r3, r0
    7dae:	3b08      	subs	r3, #8
    7db0:	2b1f      	cmp	r3, #31
    7db2:	dd00      	ble.n	7db6 <__aeabi_dsub+0xd2>
    7db4:	e0e9      	b.n	7f8a <__aeabi_dsub+0x2a6>
    7db6:	2220      	movs	r2, #32
    7db8:	003c      	movs	r4, r7
    7dba:	1ad2      	subs	r2, r2, r3
    7dbc:	409d      	lsls	r5, r3
    7dbe:	40d4      	lsrs	r4, r2
    7dc0:	409f      	lsls	r7, r3
    7dc2:	4325      	orrs	r5, r4
    7dc4:	429e      	cmp	r6, r3
    7dc6:	dd00      	ble.n	7dca <__aeabi_dsub+0xe6>
    7dc8:	e0db      	b.n	7f82 <__aeabi_dsub+0x29e>
    7dca:	1b9e      	subs	r6, r3, r6
    7dcc:	1c73      	adds	r3, r6, #1
    7dce:	2b1f      	cmp	r3, #31
    7dd0:	dd00      	ble.n	7dd4 <__aeabi_dsub+0xf0>
    7dd2:	e10a      	b.n	7fea <__aeabi_dsub+0x306>
    7dd4:	2220      	movs	r2, #32
    7dd6:	0038      	movs	r0, r7
    7dd8:	1ad2      	subs	r2, r2, r3
    7dda:	0029      	movs	r1, r5
    7ddc:	4097      	lsls	r7, r2
    7dde:	002c      	movs	r4, r5
    7de0:	4091      	lsls	r1, r2
    7de2:	40d8      	lsrs	r0, r3
    7de4:	1e7a      	subs	r2, r7, #1
    7de6:	4197      	sbcs	r7, r2
    7de8:	40dc      	lsrs	r4, r3
    7dea:	2600      	movs	r6, #0
    7dec:	4301      	orrs	r1, r0
    7dee:	430f      	orrs	r7, r1
    7df0:	077b      	lsls	r3, r7, #29
    7df2:	d009      	beq.n	7e08 <__aeabi_dsub+0x124>
    7df4:	230f      	movs	r3, #15
    7df6:	403b      	ands	r3, r7
    7df8:	2b04      	cmp	r3, #4
    7dfa:	d005      	beq.n	7e08 <__aeabi_dsub+0x124>
    7dfc:	1d3b      	adds	r3, r7, #4
    7dfe:	42bb      	cmp	r3, r7
    7e00:	41bf      	sbcs	r7, r7
    7e02:	427f      	negs	r7, r7
    7e04:	19e4      	adds	r4, r4, r7
    7e06:	001f      	movs	r7, r3
    7e08:	0223      	lsls	r3, r4, #8
    7e0a:	d525      	bpl.n	7e58 <__aeabi_dsub+0x174>
    7e0c:	4b86      	ldr	r3, [pc, #536]	; (8028 <__aeabi_dsub+0x344>)
    7e0e:	3601      	adds	r6, #1
    7e10:	429e      	cmp	r6, r3
    7e12:	d100      	bne.n	7e16 <__aeabi_dsub+0x132>
    7e14:	e0af      	b.n	7f76 <__aeabi_dsub+0x292>
    7e16:	4b85      	ldr	r3, [pc, #532]	; (802c <__aeabi_dsub+0x348>)
    7e18:	2501      	movs	r5, #1
    7e1a:	401c      	ands	r4, r3
    7e1c:	4643      	mov	r3, r8
    7e1e:	0762      	lsls	r2, r4, #29
    7e20:	08ff      	lsrs	r7, r7, #3
    7e22:	0264      	lsls	r4, r4, #9
    7e24:	0576      	lsls	r6, r6, #21
    7e26:	4317      	orrs	r7, r2
    7e28:	0b24      	lsrs	r4, r4, #12
    7e2a:	0d76      	lsrs	r6, r6, #21
    7e2c:	401d      	ands	r5, r3
    7e2e:	2100      	movs	r1, #0
    7e30:	0324      	lsls	r4, r4, #12
    7e32:	0b23      	lsrs	r3, r4, #12
    7e34:	0d0c      	lsrs	r4, r1, #20
    7e36:	4a7e      	ldr	r2, [pc, #504]	; (8030 <__aeabi_dsub+0x34c>)
    7e38:	0524      	lsls	r4, r4, #20
    7e3a:	431c      	orrs	r4, r3
    7e3c:	4014      	ands	r4, r2
    7e3e:	0533      	lsls	r3, r6, #20
    7e40:	4323      	orrs	r3, r4
    7e42:	005b      	lsls	r3, r3, #1
    7e44:	07ed      	lsls	r5, r5, #31
    7e46:	085b      	lsrs	r3, r3, #1
    7e48:	432b      	orrs	r3, r5
    7e4a:	0038      	movs	r0, r7
    7e4c:	0019      	movs	r1, r3
    7e4e:	bc1c      	pop	{r2, r3, r4}
    7e50:	4690      	mov	r8, r2
    7e52:	4699      	mov	r9, r3
    7e54:	46a2      	mov	sl, r4
    7e56:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7e58:	2501      	movs	r5, #1
    7e5a:	4643      	mov	r3, r8
    7e5c:	0762      	lsls	r2, r4, #29
    7e5e:	08ff      	lsrs	r7, r7, #3
    7e60:	4317      	orrs	r7, r2
    7e62:	08e4      	lsrs	r4, r4, #3
    7e64:	401d      	ands	r5, r3
    7e66:	4b70      	ldr	r3, [pc, #448]	; (8028 <__aeabi_dsub+0x344>)
    7e68:	429e      	cmp	r6, r3
    7e6a:	d036      	beq.n	7eda <__aeabi_dsub+0x1f6>
    7e6c:	0324      	lsls	r4, r4, #12
    7e6e:	0576      	lsls	r6, r6, #21
    7e70:	0b24      	lsrs	r4, r4, #12
    7e72:	0d76      	lsrs	r6, r6, #21
    7e74:	e7db      	b.n	7e2e <__aeabi_dsub+0x14a>
    7e76:	4663      	mov	r3, ip
    7e78:	1af3      	subs	r3, r6, r3
    7e7a:	2b00      	cmp	r3, #0
    7e7c:	dc00      	bgt.n	7e80 <__aeabi_dsub+0x19c>
    7e7e:	e094      	b.n	7faa <__aeabi_dsub+0x2c6>
    7e80:	4660      	mov	r0, ip
    7e82:	2800      	cmp	r0, #0
    7e84:	d035      	beq.n	7ef2 <__aeabi_dsub+0x20e>
    7e86:	4868      	ldr	r0, [pc, #416]	; (8028 <__aeabi_dsub+0x344>)
    7e88:	4286      	cmp	r6, r0
    7e8a:	d0b1      	beq.n	7df0 <__aeabi_dsub+0x10c>
    7e8c:	2780      	movs	r7, #128	; 0x80
    7e8e:	043f      	lsls	r7, r7, #16
    7e90:	4339      	orrs	r1, r7
    7e92:	2b38      	cmp	r3, #56	; 0x38
    7e94:	dc00      	bgt.n	7e98 <__aeabi_dsub+0x1b4>
    7e96:	e0fd      	b.n	8094 <__aeabi_dsub+0x3b0>
    7e98:	430a      	orrs	r2, r1
    7e9a:	0017      	movs	r7, r2
    7e9c:	2100      	movs	r1, #0
    7e9e:	1e7a      	subs	r2, r7, #1
    7ea0:	4197      	sbcs	r7, r2
    7ea2:	4457      	add	r7, sl
    7ea4:	4557      	cmp	r7, sl
    7ea6:	4180      	sbcs	r0, r0
    7ea8:	1909      	adds	r1, r1, r4
    7eaa:	4244      	negs	r4, r0
    7eac:	190c      	adds	r4, r1, r4
    7eae:	0223      	lsls	r3, r4, #8
    7eb0:	d53a      	bpl.n	7f28 <__aeabi_dsub+0x244>
    7eb2:	4b5d      	ldr	r3, [pc, #372]	; (8028 <__aeabi_dsub+0x344>)
    7eb4:	3601      	adds	r6, #1
    7eb6:	429e      	cmp	r6, r3
    7eb8:	d100      	bne.n	7ebc <__aeabi_dsub+0x1d8>
    7eba:	e14b      	b.n	8154 <__aeabi_dsub+0x470>
    7ebc:	2201      	movs	r2, #1
    7ebe:	4b5b      	ldr	r3, [pc, #364]	; (802c <__aeabi_dsub+0x348>)
    7ec0:	401c      	ands	r4, r3
    7ec2:	087b      	lsrs	r3, r7, #1
    7ec4:	4017      	ands	r7, r2
    7ec6:	431f      	orrs	r7, r3
    7ec8:	07e2      	lsls	r2, r4, #31
    7eca:	4317      	orrs	r7, r2
    7ecc:	0864      	lsrs	r4, r4, #1
    7ece:	e78f      	b.n	7df0 <__aeabi_dsub+0x10c>
    7ed0:	0008      	movs	r0, r1
    7ed2:	4310      	orrs	r0, r2
    7ed4:	d000      	beq.n	7ed8 <__aeabi_dsub+0x1f4>
    7ed6:	e724      	b.n	7d22 <__aeabi_dsub+0x3e>
    7ed8:	e721      	b.n	7d1e <__aeabi_dsub+0x3a>
    7eda:	0023      	movs	r3, r4
    7edc:	433b      	orrs	r3, r7
    7ede:	d100      	bne.n	7ee2 <__aeabi_dsub+0x1fe>
    7ee0:	e1b9      	b.n	8256 <__aeabi_dsub+0x572>
    7ee2:	2280      	movs	r2, #128	; 0x80
    7ee4:	0312      	lsls	r2, r2, #12
    7ee6:	4314      	orrs	r4, r2
    7ee8:	0324      	lsls	r4, r4, #12
    7eea:	0b24      	lsrs	r4, r4, #12
    7eec:	e79f      	b.n	7e2e <__aeabi_dsub+0x14a>
    7eee:	002e      	movs	r6, r5
    7ef0:	e77e      	b.n	7df0 <__aeabi_dsub+0x10c>
    7ef2:	0008      	movs	r0, r1
    7ef4:	4310      	orrs	r0, r2
    7ef6:	d100      	bne.n	7efa <__aeabi_dsub+0x216>
    7ef8:	e0ca      	b.n	8090 <__aeabi_dsub+0x3ac>
    7efa:	1e58      	subs	r0, r3, #1
    7efc:	4684      	mov	ip, r0
    7efe:	2800      	cmp	r0, #0
    7f00:	d000      	beq.n	7f04 <__aeabi_dsub+0x220>
    7f02:	e0e7      	b.n	80d4 <__aeabi_dsub+0x3f0>
    7f04:	4452      	add	r2, sl
    7f06:	4552      	cmp	r2, sl
    7f08:	4180      	sbcs	r0, r0
    7f0a:	1864      	adds	r4, r4, r1
    7f0c:	4240      	negs	r0, r0
    7f0e:	1824      	adds	r4, r4, r0
    7f10:	0017      	movs	r7, r2
    7f12:	2601      	movs	r6, #1
    7f14:	0223      	lsls	r3, r4, #8
    7f16:	d507      	bpl.n	7f28 <__aeabi_dsub+0x244>
    7f18:	2602      	movs	r6, #2
    7f1a:	e7cf      	b.n	7ebc <__aeabi_dsub+0x1d8>
    7f1c:	4664      	mov	r4, ip
    7f1e:	432c      	orrs	r4, r5
    7f20:	d100      	bne.n	7f24 <__aeabi_dsub+0x240>
    7f22:	e1b3      	b.n	828c <__aeabi_dsub+0x5a8>
    7f24:	002c      	movs	r4, r5
    7f26:	4667      	mov	r7, ip
    7f28:	077b      	lsls	r3, r7, #29
    7f2a:	d000      	beq.n	7f2e <__aeabi_dsub+0x24a>
    7f2c:	e762      	b.n	7df4 <__aeabi_dsub+0x110>
    7f2e:	0763      	lsls	r3, r4, #29
    7f30:	08ff      	lsrs	r7, r7, #3
    7f32:	431f      	orrs	r7, r3
    7f34:	2501      	movs	r5, #1
    7f36:	4643      	mov	r3, r8
    7f38:	08e4      	lsrs	r4, r4, #3
    7f3a:	401d      	ands	r5, r3
    7f3c:	e793      	b.n	7e66 <__aeabi_dsub+0x182>
    7f3e:	2d00      	cmp	r5, #0
    7f40:	d178      	bne.n	8034 <__aeabi_dsub+0x350>
    7f42:	1c75      	adds	r5, r6, #1
    7f44:	056d      	lsls	r5, r5, #21
    7f46:	0d6d      	lsrs	r5, r5, #21
    7f48:	2d01      	cmp	r5, #1
    7f4a:	dc00      	bgt.n	7f4e <__aeabi_dsub+0x26a>
    7f4c:	e0f2      	b.n	8134 <__aeabi_dsub+0x450>
    7f4e:	4650      	mov	r0, sl
    7f50:	1a80      	subs	r0, r0, r2
    7f52:	4582      	cmp	sl, r0
    7f54:	41bf      	sbcs	r7, r7
    7f56:	1a65      	subs	r5, r4, r1
    7f58:	427f      	negs	r7, r7
    7f5a:	1bed      	subs	r5, r5, r7
    7f5c:	4684      	mov	ip, r0
    7f5e:	0228      	lsls	r0, r5, #8
    7f60:	d400      	bmi.n	7f64 <__aeabi_dsub+0x280>
    7f62:	e08c      	b.n	807e <__aeabi_dsub+0x39a>
    7f64:	4650      	mov	r0, sl
    7f66:	1a17      	subs	r7, r2, r0
    7f68:	42ba      	cmp	r2, r7
    7f6a:	4192      	sbcs	r2, r2
    7f6c:	1b0c      	subs	r4, r1, r4
    7f6e:	4255      	negs	r5, r2
    7f70:	1b65      	subs	r5, r4, r5
    7f72:	4698      	mov	r8, r3
    7f74:	e714      	b.n	7da0 <__aeabi_dsub+0xbc>
    7f76:	2501      	movs	r5, #1
    7f78:	4643      	mov	r3, r8
    7f7a:	2400      	movs	r4, #0
    7f7c:	401d      	ands	r5, r3
    7f7e:	2700      	movs	r7, #0
    7f80:	e755      	b.n	7e2e <__aeabi_dsub+0x14a>
    7f82:	4c2a      	ldr	r4, [pc, #168]	; (802c <__aeabi_dsub+0x348>)
    7f84:	1af6      	subs	r6, r6, r3
    7f86:	402c      	ands	r4, r5
    7f88:	e732      	b.n	7df0 <__aeabi_dsub+0x10c>
    7f8a:	003d      	movs	r5, r7
    7f8c:	3828      	subs	r0, #40	; 0x28
    7f8e:	4085      	lsls	r5, r0
    7f90:	2700      	movs	r7, #0
    7f92:	e717      	b.n	7dc4 <__aeabi_dsub+0xe0>
    7f94:	0038      	movs	r0, r7
    7f96:	f000 fb03 	bl	85a0 <__clzsi2>
    7f9a:	3020      	adds	r0, #32
    7f9c:	e706      	b.n	7dac <__aeabi_dsub+0xc8>
    7f9e:	430a      	orrs	r2, r1
    7fa0:	0017      	movs	r7, r2
    7fa2:	2100      	movs	r1, #0
    7fa4:	1e7a      	subs	r2, r7, #1
    7fa6:	4197      	sbcs	r7, r2
    7fa8:	e6ee      	b.n	7d88 <__aeabi_dsub+0xa4>
    7faa:	2b00      	cmp	r3, #0
    7fac:	d000      	beq.n	7fb0 <__aeabi_dsub+0x2cc>
    7fae:	e0e5      	b.n	817c <__aeabi_dsub+0x498>
    7fb0:	1c73      	adds	r3, r6, #1
    7fb2:	469c      	mov	ip, r3
    7fb4:	055b      	lsls	r3, r3, #21
    7fb6:	0d5b      	lsrs	r3, r3, #21
    7fb8:	2b01      	cmp	r3, #1
    7fba:	dc00      	bgt.n	7fbe <__aeabi_dsub+0x2da>
    7fbc:	e09f      	b.n	80fe <__aeabi_dsub+0x41a>
    7fbe:	4b1a      	ldr	r3, [pc, #104]	; (8028 <__aeabi_dsub+0x344>)
    7fc0:	459c      	cmp	ip, r3
    7fc2:	d100      	bne.n	7fc6 <__aeabi_dsub+0x2e2>
    7fc4:	e0c5      	b.n	8152 <__aeabi_dsub+0x46e>
    7fc6:	4452      	add	r2, sl
    7fc8:	4552      	cmp	r2, sl
    7fca:	4180      	sbcs	r0, r0
    7fcc:	1864      	adds	r4, r4, r1
    7fce:	4240      	negs	r0, r0
    7fd0:	1824      	adds	r4, r4, r0
    7fd2:	07e7      	lsls	r7, r4, #31
    7fd4:	0852      	lsrs	r2, r2, #1
    7fd6:	4317      	orrs	r7, r2
    7fd8:	0864      	lsrs	r4, r4, #1
    7fda:	4666      	mov	r6, ip
    7fdc:	e708      	b.n	7df0 <__aeabi_dsub+0x10c>
    7fde:	4812      	ldr	r0, [pc, #72]	; (8028 <__aeabi_dsub+0x344>)
    7fe0:	4285      	cmp	r5, r0
    7fe2:	d100      	bne.n	7fe6 <__aeabi_dsub+0x302>
    7fe4:	e085      	b.n	80f2 <__aeabi_dsub+0x40e>
    7fe6:	001d      	movs	r5, r3
    7fe8:	e6bc      	b.n	7d64 <__aeabi_dsub+0x80>
    7fea:	0029      	movs	r1, r5
    7fec:	3e1f      	subs	r6, #31
    7fee:	40f1      	lsrs	r1, r6
    7ff0:	2b20      	cmp	r3, #32
    7ff2:	d100      	bne.n	7ff6 <__aeabi_dsub+0x312>
    7ff4:	e07f      	b.n	80f6 <__aeabi_dsub+0x412>
    7ff6:	2240      	movs	r2, #64	; 0x40
    7ff8:	1ad3      	subs	r3, r2, r3
    7ffa:	409d      	lsls	r5, r3
    7ffc:	432f      	orrs	r7, r5
    7ffe:	1e7d      	subs	r5, r7, #1
    8000:	41af      	sbcs	r7, r5
    8002:	2400      	movs	r4, #0
    8004:	430f      	orrs	r7, r1
    8006:	2600      	movs	r6, #0
    8008:	e78e      	b.n	7f28 <__aeabi_dsub+0x244>
    800a:	002b      	movs	r3, r5
    800c:	000f      	movs	r7, r1
    800e:	3b20      	subs	r3, #32
    8010:	40df      	lsrs	r7, r3
    8012:	2d20      	cmp	r5, #32
    8014:	d071      	beq.n	80fa <__aeabi_dsub+0x416>
    8016:	2340      	movs	r3, #64	; 0x40
    8018:	1b5d      	subs	r5, r3, r5
    801a:	40a9      	lsls	r1, r5
    801c:	430a      	orrs	r2, r1
    801e:	1e51      	subs	r1, r2, #1
    8020:	418a      	sbcs	r2, r1
    8022:	2100      	movs	r1, #0
    8024:	4317      	orrs	r7, r2
    8026:	e6af      	b.n	7d88 <__aeabi_dsub+0xa4>
    8028:	000007ff 	.word	0x000007ff
    802c:	ff7fffff 	.word	0xff7fffff
    8030:	800fffff 	.word	0x800fffff
    8034:	2e00      	cmp	r6, #0
    8036:	d03e      	beq.n	80b6 <__aeabi_dsub+0x3d2>
    8038:	4eb3      	ldr	r6, [pc, #716]	; (8308 <__aeabi_dsub+0x624>)
    803a:	45b4      	cmp	ip, r6
    803c:	d045      	beq.n	80ca <__aeabi_dsub+0x3e6>
    803e:	2680      	movs	r6, #128	; 0x80
    8040:	0436      	lsls	r6, r6, #16
    8042:	426d      	negs	r5, r5
    8044:	4334      	orrs	r4, r6
    8046:	2d38      	cmp	r5, #56	; 0x38
    8048:	dd00      	ble.n	804c <__aeabi_dsub+0x368>
    804a:	e0a8      	b.n	819e <__aeabi_dsub+0x4ba>
    804c:	2d1f      	cmp	r5, #31
    804e:	dd00      	ble.n	8052 <__aeabi_dsub+0x36e>
    8050:	e11f      	b.n	8292 <__aeabi_dsub+0x5ae>
    8052:	2620      	movs	r6, #32
    8054:	0027      	movs	r7, r4
    8056:	4650      	mov	r0, sl
    8058:	1b76      	subs	r6, r6, r5
    805a:	40b7      	lsls	r7, r6
    805c:	40e8      	lsrs	r0, r5
    805e:	4307      	orrs	r7, r0
    8060:	4650      	mov	r0, sl
    8062:	40b0      	lsls	r0, r6
    8064:	1e46      	subs	r6, r0, #1
    8066:	41b0      	sbcs	r0, r6
    8068:	40ec      	lsrs	r4, r5
    806a:	4338      	orrs	r0, r7
    806c:	1a17      	subs	r7, r2, r0
    806e:	42ba      	cmp	r2, r7
    8070:	4192      	sbcs	r2, r2
    8072:	1b0c      	subs	r4, r1, r4
    8074:	4252      	negs	r2, r2
    8076:	1aa4      	subs	r4, r4, r2
    8078:	4666      	mov	r6, ip
    807a:	4698      	mov	r8, r3
    807c:	e68b      	b.n	7d96 <__aeabi_dsub+0xb2>
    807e:	4664      	mov	r4, ip
    8080:	4667      	mov	r7, ip
    8082:	432c      	orrs	r4, r5
    8084:	d000      	beq.n	8088 <__aeabi_dsub+0x3a4>
    8086:	e68b      	b.n	7da0 <__aeabi_dsub+0xbc>
    8088:	2500      	movs	r5, #0
    808a:	2600      	movs	r6, #0
    808c:	2700      	movs	r7, #0
    808e:	e6ea      	b.n	7e66 <__aeabi_dsub+0x182>
    8090:	001e      	movs	r6, r3
    8092:	e6ad      	b.n	7df0 <__aeabi_dsub+0x10c>
    8094:	2b1f      	cmp	r3, #31
    8096:	dc60      	bgt.n	815a <__aeabi_dsub+0x476>
    8098:	2720      	movs	r7, #32
    809a:	1af8      	subs	r0, r7, r3
    809c:	000f      	movs	r7, r1
    809e:	4684      	mov	ip, r0
    80a0:	4087      	lsls	r7, r0
    80a2:	0010      	movs	r0, r2
    80a4:	40d8      	lsrs	r0, r3
    80a6:	4307      	orrs	r7, r0
    80a8:	4660      	mov	r0, ip
    80aa:	4082      	lsls	r2, r0
    80ac:	1e50      	subs	r0, r2, #1
    80ae:	4182      	sbcs	r2, r0
    80b0:	40d9      	lsrs	r1, r3
    80b2:	4317      	orrs	r7, r2
    80b4:	e6f5      	b.n	7ea2 <__aeabi_dsub+0x1be>
    80b6:	0026      	movs	r6, r4
    80b8:	4650      	mov	r0, sl
    80ba:	4306      	orrs	r6, r0
    80bc:	d005      	beq.n	80ca <__aeabi_dsub+0x3e6>
    80be:	43ed      	mvns	r5, r5
    80c0:	2d00      	cmp	r5, #0
    80c2:	d0d3      	beq.n	806c <__aeabi_dsub+0x388>
    80c4:	4e90      	ldr	r6, [pc, #576]	; (8308 <__aeabi_dsub+0x624>)
    80c6:	45b4      	cmp	ip, r6
    80c8:	d1bd      	bne.n	8046 <__aeabi_dsub+0x362>
    80ca:	000c      	movs	r4, r1
    80cc:	0017      	movs	r7, r2
    80ce:	4666      	mov	r6, ip
    80d0:	4698      	mov	r8, r3
    80d2:	e68d      	b.n	7df0 <__aeabi_dsub+0x10c>
    80d4:	488c      	ldr	r0, [pc, #560]	; (8308 <__aeabi_dsub+0x624>)
    80d6:	4283      	cmp	r3, r0
    80d8:	d00b      	beq.n	80f2 <__aeabi_dsub+0x40e>
    80da:	4663      	mov	r3, ip
    80dc:	e6d9      	b.n	7e92 <__aeabi_dsub+0x1ae>
    80de:	2d00      	cmp	r5, #0
    80e0:	d000      	beq.n	80e4 <__aeabi_dsub+0x400>
    80e2:	e096      	b.n	8212 <__aeabi_dsub+0x52e>
    80e4:	0008      	movs	r0, r1
    80e6:	4310      	orrs	r0, r2
    80e8:	d100      	bne.n	80ec <__aeabi_dsub+0x408>
    80ea:	e0e2      	b.n	82b2 <__aeabi_dsub+0x5ce>
    80ec:	000c      	movs	r4, r1
    80ee:	0017      	movs	r7, r2
    80f0:	4698      	mov	r8, r3
    80f2:	4e85      	ldr	r6, [pc, #532]	; (8308 <__aeabi_dsub+0x624>)
    80f4:	e67c      	b.n	7df0 <__aeabi_dsub+0x10c>
    80f6:	2500      	movs	r5, #0
    80f8:	e780      	b.n	7ffc <__aeabi_dsub+0x318>
    80fa:	2100      	movs	r1, #0
    80fc:	e78e      	b.n	801c <__aeabi_dsub+0x338>
    80fe:	0023      	movs	r3, r4
    8100:	4650      	mov	r0, sl
    8102:	4303      	orrs	r3, r0
    8104:	2e00      	cmp	r6, #0
    8106:	d000      	beq.n	810a <__aeabi_dsub+0x426>
    8108:	e0a8      	b.n	825c <__aeabi_dsub+0x578>
    810a:	2b00      	cmp	r3, #0
    810c:	d100      	bne.n	8110 <__aeabi_dsub+0x42c>
    810e:	e0de      	b.n	82ce <__aeabi_dsub+0x5ea>
    8110:	000b      	movs	r3, r1
    8112:	4313      	orrs	r3, r2
    8114:	d100      	bne.n	8118 <__aeabi_dsub+0x434>
    8116:	e66b      	b.n	7df0 <__aeabi_dsub+0x10c>
    8118:	4452      	add	r2, sl
    811a:	4552      	cmp	r2, sl
    811c:	4180      	sbcs	r0, r0
    811e:	1864      	adds	r4, r4, r1
    8120:	4240      	negs	r0, r0
    8122:	1824      	adds	r4, r4, r0
    8124:	0017      	movs	r7, r2
    8126:	0223      	lsls	r3, r4, #8
    8128:	d400      	bmi.n	812c <__aeabi_dsub+0x448>
    812a:	e6fd      	b.n	7f28 <__aeabi_dsub+0x244>
    812c:	4b77      	ldr	r3, [pc, #476]	; (830c <__aeabi_dsub+0x628>)
    812e:	4666      	mov	r6, ip
    8130:	401c      	ands	r4, r3
    8132:	e65d      	b.n	7df0 <__aeabi_dsub+0x10c>
    8134:	0025      	movs	r5, r4
    8136:	4650      	mov	r0, sl
    8138:	4305      	orrs	r5, r0
    813a:	2e00      	cmp	r6, #0
    813c:	d1cf      	bne.n	80de <__aeabi_dsub+0x3fa>
    813e:	2d00      	cmp	r5, #0
    8140:	d14f      	bne.n	81e2 <__aeabi_dsub+0x4fe>
    8142:	000c      	movs	r4, r1
    8144:	4314      	orrs	r4, r2
    8146:	d100      	bne.n	814a <__aeabi_dsub+0x466>
    8148:	e0a0      	b.n	828c <__aeabi_dsub+0x5a8>
    814a:	000c      	movs	r4, r1
    814c:	0017      	movs	r7, r2
    814e:	4698      	mov	r8, r3
    8150:	e64e      	b.n	7df0 <__aeabi_dsub+0x10c>
    8152:	4666      	mov	r6, ip
    8154:	2400      	movs	r4, #0
    8156:	2700      	movs	r7, #0
    8158:	e685      	b.n	7e66 <__aeabi_dsub+0x182>
    815a:	001f      	movs	r7, r3
    815c:	0008      	movs	r0, r1
    815e:	3f20      	subs	r7, #32
    8160:	40f8      	lsrs	r0, r7
    8162:	0007      	movs	r7, r0
    8164:	2b20      	cmp	r3, #32
    8166:	d100      	bne.n	816a <__aeabi_dsub+0x486>
    8168:	e08e      	b.n	8288 <__aeabi_dsub+0x5a4>
    816a:	2040      	movs	r0, #64	; 0x40
    816c:	1ac3      	subs	r3, r0, r3
    816e:	4099      	lsls	r1, r3
    8170:	430a      	orrs	r2, r1
    8172:	1e51      	subs	r1, r2, #1
    8174:	418a      	sbcs	r2, r1
    8176:	2100      	movs	r1, #0
    8178:	4317      	orrs	r7, r2
    817a:	e692      	b.n	7ea2 <__aeabi_dsub+0x1be>
    817c:	2e00      	cmp	r6, #0
    817e:	d114      	bne.n	81aa <__aeabi_dsub+0x4c6>
    8180:	0026      	movs	r6, r4
    8182:	4650      	mov	r0, sl
    8184:	4306      	orrs	r6, r0
    8186:	d062      	beq.n	824e <__aeabi_dsub+0x56a>
    8188:	43db      	mvns	r3, r3
    818a:	2b00      	cmp	r3, #0
    818c:	d15c      	bne.n	8248 <__aeabi_dsub+0x564>
    818e:	1887      	adds	r7, r0, r2
    8190:	4297      	cmp	r7, r2
    8192:	4192      	sbcs	r2, r2
    8194:	1864      	adds	r4, r4, r1
    8196:	4252      	negs	r2, r2
    8198:	18a4      	adds	r4, r4, r2
    819a:	4666      	mov	r6, ip
    819c:	e687      	b.n	7eae <__aeabi_dsub+0x1ca>
    819e:	4650      	mov	r0, sl
    81a0:	4320      	orrs	r0, r4
    81a2:	1e44      	subs	r4, r0, #1
    81a4:	41a0      	sbcs	r0, r4
    81a6:	2400      	movs	r4, #0
    81a8:	e760      	b.n	806c <__aeabi_dsub+0x388>
    81aa:	4e57      	ldr	r6, [pc, #348]	; (8308 <__aeabi_dsub+0x624>)
    81ac:	45b4      	cmp	ip, r6
    81ae:	d04e      	beq.n	824e <__aeabi_dsub+0x56a>
    81b0:	2680      	movs	r6, #128	; 0x80
    81b2:	0436      	lsls	r6, r6, #16
    81b4:	425b      	negs	r3, r3
    81b6:	4334      	orrs	r4, r6
    81b8:	2b38      	cmp	r3, #56	; 0x38
    81ba:	dd00      	ble.n	81be <__aeabi_dsub+0x4da>
    81bc:	e07f      	b.n	82be <__aeabi_dsub+0x5da>
    81be:	2b1f      	cmp	r3, #31
    81c0:	dd00      	ble.n	81c4 <__aeabi_dsub+0x4e0>
    81c2:	e08b      	b.n	82dc <__aeabi_dsub+0x5f8>
    81c4:	2620      	movs	r6, #32
    81c6:	0027      	movs	r7, r4
    81c8:	4650      	mov	r0, sl
    81ca:	1af6      	subs	r6, r6, r3
    81cc:	40b7      	lsls	r7, r6
    81ce:	40d8      	lsrs	r0, r3
    81d0:	4307      	orrs	r7, r0
    81d2:	4650      	mov	r0, sl
    81d4:	40b0      	lsls	r0, r6
    81d6:	1e46      	subs	r6, r0, #1
    81d8:	41b0      	sbcs	r0, r6
    81da:	4307      	orrs	r7, r0
    81dc:	40dc      	lsrs	r4, r3
    81de:	18bf      	adds	r7, r7, r2
    81e0:	e7d6      	b.n	8190 <__aeabi_dsub+0x4ac>
    81e2:	000d      	movs	r5, r1
    81e4:	4315      	orrs	r5, r2
    81e6:	d100      	bne.n	81ea <__aeabi_dsub+0x506>
    81e8:	e602      	b.n	7df0 <__aeabi_dsub+0x10c>
    81ea:	4650      	mov	r0, sl
    81ec:	1a80      	subs	r0, r0, r2
    81ee:	4582      	cmp	sl, r0
    81f0:	41bf      	sbcs	r7, r7
    81f2:	1a65      	subs	r5, r4, r1
    81f4:	427f      	negs	r7, r7
    81f6:	1bed      	subs	r5, r5, r7
    81f8:	4684      	mov	ip, r0
    81fa:	0228      	lsls	r0, r5, #8
    81fc:	d400      	bmi.n	8200 <__aeabi_dsub+0x51c>
    81fe:	e68d      	b.n	7f1c <__aeabi_dsub+0x238>
    8200:	4650      	mov	r0, sl
    8202:	1a17      	subs	r7, r2, r0
    8204:	42ba      	cmp	r2, r7
    8206:	4192      	sbcs	r2, r2
    8208:	1b0c      	subs	r4, r1, r4
    820a:	4252      	negs	r2, r2
    820c:	1aa4      	subs	r4, r4, r2
    820e:	4698      	mov	r8, r3
    8210:	e5ee      	b.n	7df0 <__aeabi_dsub+0x10c>
    8212:	000d      	movs	r5, r1
    8214:	4315      	orrs	r5, r2
    8216:	d100      	bne.n	821a <__aeabi_dsub+0x536>
    8218:	e76b      	b.n	80f2 <__aeabi_dsub+0x40e>
    821a:	4650      	mov	r0, sl
    821c:	0767      	lsls	r7, r4, #29
    821e:	08c0      	lsrs	r0, r0, #3
    8220:	4307      	orrs	r7, r0
    8222:	2080      	movs	r0, #128	; 0x80
    8224:	08e4      	lsrs	r4, r4, #3
    8226:	0300      	lsls	r0, r0, #12
    8228:	4204      	tst	r4, r0
    822a:	d007      	beq.n	823c <__aeabi_dsub+0x558>
    822c:	08cd      	lsrs	r5, r1, #3
    822e:	4205      	tst	r5, r0
    8230:	d104      	bne.n	823c <__aeabi_dsub+0x558>
    8232:	002c      	movs	r4, r5
    8234:	4698      	mov	r8, r3
    8236:	08d7      	lsrs	r7, r2, #3
    8238:	0749      	lsls	r1, r1, #29
    823a:	430f      	orrs	r7, r1
    823c:	0f7b      	lsrs	r3, r7, #29
    823e:	00e4      	lsls	r4, r4, #3
    8240:	431c      	orrs	r4, r3
    8242:	00ff      	lsls	r7, r7, #3
    8244:	4e30      	ldr	r6, [pc, #192]	; (8308 <__aeabi_dsub+0x624>)
    8246:	e5d3      	b.n	7df0 <__aeabi_dsub+0x10c>
    8248:	4e2f      	ldr	r6, [pc, #188]	; (8308 <__aeabi_dsub+0x624>)
    824a:	45b4      	cmp	ip, r6
    824c:	d1b4      	bne.n	81b8 <__aeabi_dsub+0x4d4>
    824e:	000c      	movs	r4, r1
    8250:	0017      	movs	r7, r2
    8252:	4666      	mov	r6, ip
    8254:	e5cc      	b.n	7df0 <__aeabi_dsub+0x10c>
    8256:	2700      	movs	r7, #0
    8258:	2400      	movs	r4, #0
    825a:	e5e8      	b.n	7e2e <__aeabi_dsub+0x14a>
    825c:	2b00      	cmp	r3, #0
    825e:	d039      	beq.n	82d4 <__aeabi_dsub+0x5f0>
    8260:	000b      	movs	r3, r1
    8262:	4313      	orrs	r3, r2
    8264:	d100      	bne.n	8268 <__aeabi_dsub+0x584>
    8266:	e744      	b.n	80f2 <__aeabi_dsub+0x40e>
    8268:	08c0      	lsrs	r0, r0, #3
    826a:	0767      	lsls	r7, r4, #29
    826c:	4307      	orrs	r7, r0
    826e:	2080      	movs	r0, #128	; 0x80
    8270:	08e4      	lsrs	r4, r4, #3
    8272:	0300      	lsls	r0, r0, #12
    8274:	4204      	tst	r4, r0
    8276:	d0e1      	beq.n	823c <__aeabi_dsub+0x558>
    8278:	08cb      	lsrs	r3, r1, #3
    827a:	4203      	tst	r3, r0
    827c:	d1de      	bne.n	823c <__aeabi_dsub+0x558>
    827e:	08d7      	lsrs	r7, r2, #3
    8280:	0749      	lsls	r1, r1, #29
    8282:	430f      	orrs	r7, r1
    8284:	001c      	movs	r4, r3
    8286:	e7d9      	b.n	823c <__aeabi_dsub+0x558>
    8288:	2100      	movs	r1, #0
    828a:	e771      	b.n	8170 <__aeabi_dsub+0x48c>
    828c:	2500      	movs	r5, #0
    828e:	2700      	movs	r7, #0
    8290:	e5e9      	b.n	7e66 <__aeabi_dsub+0x182>
    8292:	002e      	movs	r6, r5
    8294:	0027      	movs	r7, r4
    8296:	3e20      	subs	r6, #32
    8298:	40f7      	lsrs	r7, r6
    829a:	2d20      	cmp	r5, #32
    829c:	d02f      	beq.n	82fe <__aeabi_dsub+0x61a>
    829e:	2640      	movs	r6, #64	; 0x40
    82a0:	1b75      	subs	r5, r6, r5
    82a2:	40ac      	lsls	r4, r5
    82a4:	4650      	mov	r0, sl
    82a6:	4320      	orrs	r0, r4
    82a8:	1e44      	subs	r4, r0, #1
    82aa:	41a0      	sbcs	r0, r4
    82ac:	2400      	movs	r4, #0
    82ae:	4338      	orrs	r0, r7
    82b0:	e6dc      	b.n	806c <__aeabi_dsub+0x388>
    82b2:	2480      	movs	r4, #128	; 0x80
    82b4:	2500      	movs	r5, #0
    82b6:	0324      	lsls	r4, r4, #12
    82b8:	4e13      	ldr	r6, [pc, #76]	; (8308 <__aeabi_dsub+0x624>)
    82ba:	2700      	movs	r7, #0
    82bc:	e5d3      	b.n	7e66 <__aeabi_dsub+0x182>
    82be:	4650      	mov	r0, sl
    82c0:	4320      	orrs	r0, r4
    82c2:	0007      	movs	r7, r0
    82c4:	1e78      	subs	r0, r7, #1
    82c6:	4187      	sbcs	r7, r0
    82c8:	2400      	movs	r4, #0
    82ca:	18bf      	adds	r7, r7, r2
    82cc:	e760      	b.n	8190 <__aeabi_dsub+0x4ac>
    82ce:	000c      	movs	r4, r1
    82d0:	0017      	movs	r7, r2
    82d2:	e58d      	b.n	7df0 <__aeabi_dsub+0x10c>
    82d4:	000c      	movs	r4, r1
    82d6:	0017      	movs	r7, r2
    82d8:	4e0b      	ldr	r6, [pc, #44]	; (8308 <__aeabi_dsub+0x624>)
    82da:	e589      	b.n	7df0 <__aeabi_dsub+0x10c>
    82dc:	001e      	movs	r6, r3
    82de:	0027      	movs	r7, r4
    82e0:	3e20      	subs	r6, #32
    82e2:	40f7      	lsrs	r7, r6
    82e4:	2b20      	cmp	r3, #32
    82e6:	d00c      	beq.n	8302 <__aeabi_dsub+0x61e>
    82e8:	2640      	movs	r6, #64	; 0x40
    82ea:	1af3      	subs	r3, r6, r3
    82ec:	409c      	lsls	r4, r3
    82ee:	4650      	mov	r0, sl
    82f0:	4320      	orrs	r0, r4
    82f2:	1e44      	subs	r4, r0, #1
    82f4:	41a0      	sbcs	r0, r4
    82f6:	4307      	orrs	r7, r0
    82f8:	2400      	movs	r4, #0
    82fa:	18bf      	adds	r7, r7, r2
    82fc:	e748      	b.n	8190 <__aeabi_dsub+0x4ac>
    82fe:	2400      	movs	r4, #0
    8300:	e7d0      	b.n	82a4 <__aeabi_dsub+0x5c0>
    8302:	2400      	movs	r4, #0
    8304:	e7f3      	b.n	82ee <__aeabi_dsub+0x60a>
    8306:	46c0      	nop			; (mov r8, r8)
    8308:	000007ff 	.word	0x000007ff
    830c:	ff7fffff 	.word	0xff7fffff

00008310 <__aeabi_d2iz>:
    8310:	b530      	push	{r4, r5, lr}
    8312:	4d13      	ldr	r5, [pc, #76]	; (8360 <__aeabi_d2iz+0x50>)
    8314:	030a      	lsls	r2, r1, #12
    8316:	004b      	lsls	r3, r1, #1
    8318:	0b12      	lsrs	r2, r2, #12
    831a:	0d5b      	lsrs	r3, r3, #21
    831c:	0fc9      	lsrs	r1, r1, #31
    831e:	2400      	movs	r4, #0
    8320:	42ab      	cmp	r3, r5
    8322:	dd10      	ble.n	8346 <__aeabi_d2iz+0x36>
    8324:	4c0f      	ldr	r4, [pc, #60]	; (8364 <__aeabi_d2iz+0x54>)
    8326:	42a3      	cmp	r3, r4
    8328:	dc0f      	bgt.n	834a <__aeabi_d2iz+0x3a>
    832a:	2480      	movs	r4, #128	; 0x80
    832c:	4d0e      	ldr	r5, [pc, #56]	; (8368 <__aeabi_d2iz+0x58>)
    832e:	0364      	lsls	r4, r4, #13
    8330:	4322      	orrs	r2, r4
    8332:	1aed      	subs	r5, r5, r3
    8334:	2d1f      	cmp	r5, #31
    8336:	dd0b      	ble.n	8350 <__aeabi_d2iz+0x40>
    8338:	480c      	ldr	r0, [pc, #48]	; (836c <__aeabi_d2iz+0x5c>)
    833a:	1ac3      	subs	r3, r0, r3
    833c:	40da      	lsrs	r2, r3
    833e:	4254      	negs	r4, r2
    8340:	2900      	cmp	r1, #0
    8342:	d100      	bne.n	8346 <__aeabi_d2iz+0x36>
    8344:	0014      	movs	r4, r2
    8346:	0020      	movs	r0, r4
    8348:	bd30      	pop	{r4, r5, pc}
    834a:	4b09      	ldr	r3, [pc, #36]	; (8370 <__aeabi_d2iz+0x60>)
    834c:	18cc      	adds	r4, r1, r3
    834e:	e7fa      	b.n	8346 <__aeabi_d2iz+0x36>
    8350:	4c08      	ldr	r4, [pc, #32]	; (8374 <__aeabi_d2iz+0x64>)
    8352:	40e8      	lsrs	r0, r5
    8354:	46a4      	mov	ip, r4
    8356:	4463      	add	r3, ip
    8358:	409a      	lsls	r2, r3
    835a:	4302      	orrs	r2, r0
    835c:	e7ef      	b.n	833e <__aeabi_d2iz+0x2e>
    835e:	46c0      	nop			; (mov r8, r8)
    8360:	000003fe 	.word	0x000003fe
    8364:	0000041d 	.word	0x0000041d
    8368:	00000433 	.word	0x00000433
    836c:	00000413 	.word	0x00000413
    8370:	7fffffff 	.word	0x7fffffff
    8374:	fffffbed 	.word	0xfffffbed

00008378 <__aeabi_ui2d>:
    8378:	b510      	push	{r4, lr}
    837a:	1e04      	subs	r4, r0, #0
    837c:	d028      	beq.n	83d0 <__aeabi_ui2d+0x58>
    837e:	f000 f90f 	bl	85a0 <__clzsi2>
    8382:	4b15      	ldr	r3, [pc, #84]	; (83d8 <__aeabi_ui2d+0x60>)
    8384:	4a15      	ldr	r2, [pc, #84]	; (83dc <__aeabi_ui2d+0x64>)
    8386:	1a1b      	subs	r3, r3, r0
    8388:	1ad2      	subs	r2, r2, r3
    838a:	2a1f      	cmp	r2, #31
    838c:	dd15      	ble.n	83ba <__aeabi_ui2d+0x42>
    838e:	4a14      	ldr	r2, [pc, #80]	; (83e0 <__aeabi_ui2d+0x68>)
    8390:	1ad2      	subs	r2, r2, r3
    8392:	4094      	lsls	r4, r2
    8394:	2200      	movs	r2, #0
    8396:	0324      	lsls	r4, r4, #12
    8398:	055b      	lsls	r3, r3, #21
    839a:	0b24      	lsrs	r4, r4, #12
    839c:	0d5b      	lsrs	r3, r3, #21
    839e:	2100      	movs	r1, #0
    83a0:	0010      	movs	r0, r2
    83a2:	0324      	lsls	r4, r4, #12
    83a4:	0d0a      	lsrs	r2, r1, #20
    83a6:	0b24      	lsrs	r4, r4, #12
    83a8:	0512      	lsls	r2, r2, #20
    83aa:	4322      	orrs	r2, r4
    83ac:	4c0d      	ldr	r4, [pc, #52]	; (83e4 <__aeabi_ui2d+0x6c>)
    83ae:	051b      	lsls	r3, r3, #20
    83b0:	4022      	ands	r2, r4
    83b2:	4313      	orrs	r3, r2
    83b4:	005b      	lsls	r3, r3, #1
    83b6:	0859      	lsrs	r1, r3, #1
    83b8:	bd10      	pop	{r4, pc}
    83ba:	0021      	movs	r1, r4
    83bc:	4091      	lsls	r1, r2
    83be:	000a      	movs	r2, r1
    83c0:	210b      	movs	r1, #11
    83c2:	1a08      	subs	r0, r1, r0
    83c4:	40c4      	lsrs	r4, r0
    83c6:	055b      	lsls	r3, r3, #21
    83c8:	0324      	lsls	r4, r4, #12
    83ca:	0b24      	lsrs	r4, r4, #12
    83cc:	0d5b      	lsrs	r3, r3, #21
    83ce:	e7e6      	b.n	839e <__aeabi_ui2d+0x26>
    83d0:	2300      	movs	r3, #0
    83d2:	2400      	movs	r4, #0
    83d4:	2200      	movs	r2, #0
    83d6:	e7e2      	b.n	839e <__aeabi_ui2d+0x26>
    83d8:	0000041e 	.word	0x0000041e
    83dc:	00000433 	.word	0x00000433
    83e0:	00000413 	.word	0x00000413
    83e4:	800fffff 	.word	0x800fffff

000083e8 <__aeabi_f2d>:
    83e8:	0041      	lsls	r1, r0, #1
    83ea:	0e09      	lsrs	r1, r1, #24
    83ec:	1c4b      	adds	r3, r1, #1
    83ee:	b570      	push	{r4, r5, r6, lr}
    83f0:	b2db      	uxtb	r3, r3
    83f2:	0246      	lsls	r6, r0, #9
    83f4:	0a75      	lsrs	r5, r6, #9
    83f6:	0fc4      	lsrs	r4, r0, #31
    83f8:	2b01      	cmp	r3, #1
    83fa:	dd14      	ble.n	8426 <__aeabi_f2d+0x3e>
    83fc:	23e0      	movs	r3, #224	; 0xe0
    83fe:	009b      	lsls	r3, r3, #2
    8400:	076d      	lsls	r5, r5, #29
    8402:	0b36      	lsrs	r6, r6, #12
    8404:	18cb      	adds	r3, r1, r3
    8406:	2100      	movs	r1, #0
    8408:	0d0a      	lsrs	r2, r1, #20
    840a:	0028      	movs	r0, r5
    840c:	0512      	lsls	r2, r2, #20
    840e:	4d1c      	ldr	r5, [pc, #112]	; (8480 <__aeabi_f2d+0x98>)
    8410:	4332      	orrs	r2, r6
    8412:	055b      	lsls	r3, r3, #21
    8414:	402a      	ands	r2, r5
    8416:	085b      	lsrs	r3, r3, #1
    8418:	4313      	orrs	r3, r2
    841a:	005b      	lsls	r3, r3, #1
    841c:	07e4      	lsls	r4, r4, #31
    841e:	085b      	lsrs	r3, r3, #1
    8420:	4323      	orrs	r3, r4
    8422:	0019      	movs	r1, r3
    8424:	bd70      	pop	{r4, r5, r6, pc}
    8426:	2900      	cmp	r1, #0
    8428:	d114      	bne.n	8454 <__aeabi_f2d+0x6c>
    842a:	2d00      	cmp	r5, #0
    842c:	d01e      	beq.n	846c <__aeabi_f2d+0x84>
    842e:	0028      	movs	r0, r5
    8430:	f000 f8b6 	bl	85a0 <__clzsi2>
    8434:	280a      	cmp	r0, #10
    8436:	dc1c      	bgt.n	8472 <__aeabi_f2d+0x8a>
    8438:	230b      	movs	r3, #11
    843a:	002a      	movs	r2, r5
    843c:	1a1b      	subs	r3, r3, r0
    843e:	40da      	lsrs	r2, r3
    8440:	0003      	movs	r3, r0
    8442:	3315      	adds	r3, #21
    8444:	409d      	lsls	r5, r3
    8446:	4b0f      	ldr	r3, [pc, #60]	; (8484 <__aeabi_f2d+0x9c>)
    8448:	0312      	lsls	r2, r2, #12
    844a:	1a1b      	subs	r3, r3, r0
    844c:	055b      	lsls	r3, r3, #21
    844e:	0b16      	lsrs	r6, r2, #12
    8450:	0d5b      	lsrs	r3, r3, #21
    8452:	e7d8      	b.n	8406 <__aeabi_f2d+0x1e>
    8454:	2d00      	cmp	r5, #0
    8456:	d006      	beq.n	8466 <__aeabi_f2d+0x7e>
    8458:	0b32      	lsrs	r2, r6, #12
    845a:	2680      	movs	r6, #128	; 0x80
    845c:	0336      	lsls	r6, r6, #12
    845e:	076d      	lsls	r5, r5, #29
    8460:	4316      	orrs	r6, r2
    8462:	4b09      	ldr	r3, [pc, #36]	; (8488 <__aeabi_f2d+0xa0>)
    8464:	e7cf      	b.n	8406 <__aeabi_f2d+0x1e>
    8466:	4b08      	ldr	r3, [pc, #32]	; (8488 <__aeabi_f2d+0xa0>)
    8468:	2600      	movs	r6, #0
    846a:	e7cc      	b.n	8406 <__aeabi_f2d+0x1e>
    846c:	2300      	movs	r3, #0
    846e:	2600      	movs	r6, #0
    8470:	e7c9      	b.n	8406 <__aeabi_f2d+0x1e>
    8472:	0003      	movs	r3, r0
    8474:	002a      	movs	r2, r5
    8476:	3b0b      	subs	r3, #11
    8478:	409a      	lsls	r2, r3
    847a:	2500      	movs	r5, #0
    847c:	e7e3      	b.n	8446 <__aeabi_f2d+0x5e>
    847e:	46c0      	nop			; (mov r8, r8)
    8480:	800fffff 	.word	0x800fffff
    8484:	00000389 	.word	0x00000389
    8488:	000007ff 	.word	0x000007ff

0000848c <__aeabi_d2f>:
    848c:	b5f0      	push	{r4, r5, r6, r7, lr}
    848e:	004c      	lsls	r4, r1, #1
    8490:	0d64      	lsrs	r4, r4, #21
    8492:	030b      	lsls	r3, r1, #12
    8494:	1c62      	adds	r2, r4, #1
    8496:	0f45      	lsrs	r5, r0, #29
    8498:	0a5b      	lsrs	r3, r3, #9
    849a:	0552      	lsls	r2, r2, #21
    849c:	432b      	orrs	r3, r5
    849e:	0fc9      	lsrs	r1, r1, #31
    84a0:	00c5      	lsls	r5, r0, #3
    84a2:	0d52      	lsrs	r2, r2, #21
    84a4:	2a01      	cmp	r2, #1
    84a6:	dd28      	ble.n	84fa <__aeabi_d2f+0x6e>
    84a8:	4a3a      	ldr	r2, [pc, #232]	; (8594 <__aeabi_d2f+0x108>)
    84aa:	18a6      	adds	r6, r4, r2
    84ac:	2efe      	cmp	r6, #254	; 0xfe
    84ae:	dc1b      	bgt.n	84e8 <__aeabi_d2f+0x5c>
    84b0:	2e00      	cmp	r6, #0
    84b2:	dd3e      	ble.n	8532 <__aeabi_d2f+0xa6>
    84b4:	0180      	lsls	r0, r0, #6
    84b6:	0002      	movs	r2, r0
    84b8:	1e50      	subs	r0, r2, #1
    84ba:	4182      	sbcs	r2, r0
    84bc:	0f6d      	lsrs	r5, r5, #29
    84be:	432a      	orrs	r2, r5
    84c0:	00db      	lsls	r3, r3, #3
    84c2:	4313      	orrs	r3, r2
    84c4:	075a      	lsls	r2, r3, #29
    84c6:	d004      	beq.n	84d2 <__aeabi_d2f+0x46>
    84c8:	220f      	movs	r2, #15
    84ca:	401a      	ands	r2, r3
    84cc:	2a04      	cmp	r2, #4
    84ce:	d000      	beq.n	84d2 <__aeabi_d2f+0x46>
    84d0:	3304      	adds	r3, #4
    84d2:	2280      	movs	r2, #128	; 0x80
    84d4:	04d2      	lsls	r2, r2, #19
    84d6:	401a      	ands	r2, r3
    84d8:	d05a      	beq.n	8590 <__aeabi_d2f+0x104>
    84da:	3601      	adds	r6, #1
    84dc:	2eff      	cmp	r6, #255	; 0xff
    84de:	d003      	beq.n	84e8 <__aeabi_d2f+0x5c>
    84e0:	019b      	lsls	r3, r3, #6
    84e2:	0a5b      	lsrs	r3, r3, #9
    84e4:	b2f4      	uxtb	r4, r6
    84e6:	e001      	b.n	84ec <__aeabi_d2f+0x60>
    84e8:	24ff      	movs	r4, #255	; 0xff
    84ea:	2300      	movs	r3, #0
    84ec:	0258      	lsls	r0, r3, #9
    84ee:	05e4      	lsls	r4, r4, #23
    84f0:	0a40      	lsrs	r0, r0, #9
    84f2:	07c9      	lsls	r1, r1, #31
    84f4:	4320      	orrs	r0, r4
    84f6:	4308      	orrs	r0, r1
    84f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    84fa:	2c00      	cmp	r4, #0
    84fc:	d007      	beq.n	850e <__aeabi_d2f+0x82>
    84fe:	431d      	orrs	r5, r3
    8500:	d0f2      	beq.n	84e8 <__aeabi_d2f+0x5c>
    8502:	2080      	movs	r0, #128	; 0x80
    8504:	00db      	lsls	r3, r3, #3
    8506:	0480      	lsls	r0, r0, #18
    8508:	4303      	orrs	r3, r0
    850a:	26ff      	movs	r6, #255	; 0xff
    850c:	e7da      	b.n	84c4 <__aeabi_d2f+0x38>
    850e:	432b      	orrs	r3, r5
    8510:	d003      	beq.n	851a <__aeabi_d2f+0x8e>
    8512:	2305      	movs	r3, #5
    8514:	08db      	lsrs	r3, r3, #3
    8516:	2cff      	cmp	r4, #255	; 0xff
    8518:	d003      	beq.n	8522 <__aeabi_d2f+0x96>
    851a:	025b      	lsls	r3, r3, #9
    851c:	0a5b      	lsrs	r3, r3, #9
    851e:	b2e4      	uxtb	r4, r4
    8520:	e7e4      	b.n	84ec <__aeabi_d2f+0x60>
    8522:	2b00      	cmp	r3, #0
    8524:	d032      	beq.n	858c <__aeabi_d2f+0x100>
    8526:	2080      	movs	r0, #128	; 0x80
    8528:	03c0      	lsls	r0, r0, #15
    852a:	4303      	orrs	r3, r0
    852c:	025b      	lsls	r3, r3, #9
    852e:	0a5b      	lsrs	r3, r3, #9
    8530:	e7dc      	b.n	84ec <__aeabi_d2f+0x60>
    8532:	0032      	movs	r2, r6
    8534:	3217      	adds	r2, #23
    8536:	db14      	blt.n	8562 <__aeabi_d2f+0xd6>
    8538:	2280      	movs	r2, #128	; 0x80
    853a:	271e      	movs	r7, #30
    853c:	0412      	lsls	r2, r2, #16
    853e:	4313      	orrs	r3, r2
    8540:	1bbf      	subs	r7, r7, r6
    8542:	2f1f      	cmp	r7, #31
    8544:	dc0f      	bgt.n	8566 <__aeabi_d2f+0xda>
    8546:	4a14      	ldr	r2, [pc, #80]	; (8598 <__aeabi_d2f+0x10c>)
    8548:	4694      	mov	ip, r2
    854a:	4464      	add	r4, ip
    854c:	002a      	movs	r2, r5
    854e:	40a5      	lsls	r5, r4
    8550:	002e      	movs	r6, r5
    8552:	40a3      	lsls	r3, r4
    8554:	1e75      	subs	r5, r6, #1
    8556:	41ae      	sbcs	r6, r5
    8558:	40fa      	lsrs	r2, r7
    855a:	4333      	orrs	r3, r6
    855c:	4313      	orrs	r3, r2
    855e:	2600      	movs	r6, #0
    8560:	e7b0      	b.n	84c4 <__aeabi_d2f+0x38>
    8562:	2400      	movs	r4, #0
    8564:	e7d5      	b.n	8512 <__aeabi_d2f+0x86>
    8566:	2202      	movs	r2, #2
    8568:	4252      	negs	r2, r2
    856a:	1b96      	subs	r6, r2, r6
    856c:	001a      	movs	r2, r3
    856e:	40f2      	lsrs	r2, r6
    8570:	2f20      	cmp	r7, #32
    8572:	d009      	beq.n	8588 <__aeabi_d2f+0xfc>
    8574:	4809      	ldr	r0, [pc, #36]	; (859c <__aeabi_d2f+0x110>)
    8576:	4684      	mov	ip, r0
    8578:	4464      	add	r4, ip
    857a:	40a3      	lsls	r3, r4
    857c:	432b      	orrs	r3, r5
    857e:	1e5d      	subs	r5, r3, #1
    8580:	41ab      	sbcs	r3, r5
    8582:	2600      	movs	r6, #0
    8584:	4313      	orrs	r3, r2
    8586:	e79d      	b.n	84c4 <__aeabi_d2f+0x38>
    8588:	2300      	movs	r3, #0
    858a:	e7f7      	b.n	857c <__aeabi_d2f+0xf0>
    858c:	2300      	movs	r3, #0
    858e:	e7ad      	b.n	84ec <__aeabi_d2f+0x60>
    8590:	0034      	movs	r4, r6
    8592:	e7bf      	b.n	8514 <__aeabi_d2f+0x88>
    8594:	fffffc80 	.word	0xfffffc80
    8598:	fffffc82 	.word	0xfffffc82
    859c:	fffffca2 	.word	0xfffffca2

000085a0 <__clzsi2>:
    85a0:	211c      	movs	r1, #28
    85a2:	2301      	movs	r3, #1
    85a4:	041b      	lsls	r3, r3, #16
    85a6:	4298      	cmp	r0, r3
    85a8:	d301      	bcc.n	85ae <__clzsi2+0xe>
    85aa:	0c00      	lsrs	r0, r0, #16
    85ac:	3910      	subs	r1, #16
    85ae:	0a1b      	lsrs	r3, r3, #8
    85b0:	4298      	cmp	r0, r3
    85b2:	d301      	bcc.n	85b8 <__clzsi2+0x18>
    85b4:	0a00      	lsrs	r0, r0, #8
    85b6:	3908      	subs	r1, #8
    85b8:	091b      	lsrs	r3, r3, #4
    85ba:	4298      	cmp	r0, r3
    85bc:	d301      	bcc.n	85c2 <__clzsi2+0x22>
    85be:	0900      	lsrs	r0, r0, #4
    85c0:	3904      	subs	r1, #4
    85c2:	a202      	add	r2, pc, #8	; (adr r2, 85cc <__clzsi2+0x2c>)
    85c4:	5c10      	ldrb	r0, [r2, r0]
    85c6:	1840      	adds	r0, r0, r1
    85c8:	4770      	bx	lr
    85ca:	46c0      	nop			; (mov r8, r8)
    85cc:	02020304 	.word	0x02020304
    85d0:	01010101 	.word	0x01010101
	...

000085dc <__clzdi2>:
    85dc:	b510      	push	{r4, lr}
    85de:	2900      	cmp	r1, #0
    85e0:	d103      	bne.n	85ea <__clzdi2+0xe>
    85e2:	f7ff ffdd 	bl	85a0 <__clzsi2>
    85e6:	3020      	adds	r0, #32
    85e8:	e002      	b.n	85f0 <__clzdi2+0x14>
    85ea:	1c08      	adds	r0, r1, #0
    85ec:	f7ff ffd8 	bl	85a0 <__clzsi2>
    85f0:	bd10      	pop	{r4, pc}
    85f2:	46c0      	nop			; (mov r8, r8)

000085f4 <__libc_init_array>:
    85f4:	b570      	push	{r4, r5, r6, lr}
    85f6:	2600      	movs	r6, #0
    85f8:	4d0c      	ldr	r5, [pc, #48]	; (862c <__libc_init_array+0x38>)
    85fa:	4c0d      	ldr	r4, [pc, #52]	; (8630 <__libc_init_array+0x3c>)
    85fc:	1b64      	subs	r4, r4, r5
    85fe:	10a4      	asrs	r4, r4, #2
    8600:	42a6      	cmp	r6, r4
    8602:	d109      	bne.n	8618 <__libc_init_array+0x24>
    8604:	2600      	movs	r6, #0
    8606:	f000 ff01 	bl	940c <_init>
    860a:	4d0a      	ldr	r5, [pc, #40]	; (8634 <__libc_init_array+0x40>)
    860c:	4c0a      	ldr	r4, [pc, #40]	; (8638 <__libc_init_array+0x44>)
    860e:	1b64      	subs	r4, r4, r5
    8610:	10a4      	asrs	r4, r4, #2
    8612:	42a6      	cmp	r6, r4
    8614:	d105      	bne.n	8622 <__libc_init_array+0x2e>
    8616:	bd70      	pop	{r4, r5, r6, pc}
    8618:	00b3      	lsls	r3, r6, #2
    861a:	58eb      	ldr	r3, [r5, r3]
    861c:	4798      	blx	r3
    861e:	3601      	adds	r6, #1
    8620:	e7ee      	b.n	8600 <__libc_init_array+0xc>
    8622:	00b3      	lsls	r3, r6, #2
    8624:	58eb      	ldr	r3, [r5, r3]
    8626:	4798      	blx	r3
    8628:	3601      	adds	r6, #1
    862a:	e7f2      	b.n	8612 <__libc_init_array+0x1e>
    862c:	00009418 	.word	0x00009418
    8630:	00009418 	.word	0x00009418
    8634:	00009418 	.word	0x00009418
    8638:	0000941c 	.word	0x0000941c

0000863c <malloc>:
    863c:	b510      	push	{r4, lr}
    863e:	4b03      	ldr	r3, [pc, #12]	; (864c <malloc+0x10>)
    8640:	0001      	movs	r1, r0
    8642:	6818      	ldr	r0, [r3, #0]
    8644:	f000 f860 	bl	8708 <_malloc_r>
    8648:	bd10      	pop	{r4, pc}
    864a:	46c0      	nop			; (mov r8, r8)
    864c:	20000258 	.word	0x20000258

00008650 <memcpy>:
    8650:	2300      	movs	r3, #0
    8652:	b510      	push	{r4, lr}
    8654:	429a      	cmp	r2, r3
    8656:	d100      	bne.n	865a <memcpy+0xa>
    8658:	bd10      	pop	{r4, pc}
    865a:	5ccc      	ldrb	r4, [r1, r3]
    865c:	54c4      	strb	r4, [r0, r3]
    865e:	3301      	adds	r3, #1
    8660:	e7f8      	b.n	8654 <memcpy+0x4>

00008662 <memset>:
    8662:	0003      	movs	r3, r0
    8664:	1882      	adds	r2, r0, r2
    8666:	4293      	cmp	r3, r2
    8668:	d100      	bne.n	866c <memset+0xa>
    866a:	4770      	bx	lr
    866c:	7019      	strb	r1, [r3, #0]
    866e:	3301      	adds	r3, #1
    8670:	e7f9      	b.n	8666 <memset+0x4>
	...

00008674 <_free_r>:
    8674:	b570      	push	{r4, r5, r6, lr}
    8676:	0005      	movs	r5, r0
    8678:	2900      	cmp	r1, #0
    867a:	d010      	beq.n	869e <_free_r+0x2a>
    867c:	1f0c      	subs	r4, r1, #4
    867e:	6823      	ldr	r3, [r4, #0]
    8680:	2b00      	cmp	r3, #0
    8682:	da00      	bge.n	8686 <_free_r+0x12>
    8684:	18e4      	adds	r4, r4, r3
    8686:	0028      	movs	r0, r5
    8688:	f000 f8df 	bl	884a <__malloc_lock>
    868c:	4a1d      	ldr	r2, [pc, #116]	; (8704 <_free_r+0x90>)
    868e:	6813      	ldr	r3, [r2, #0]
    8690:	2b00      	cmp	r3, #0
    8692:	d105      	bne.n	86a0 <_free_r+0x2c>
    8694:	6063      	str	r3, [r4, #4]
    8696:	6014      	str	r4, [r2, #0]
    8698:	0028      	movs	r0, r5
    869a:	f000 f8d7 	bl	884c <__malloc_unlock>
    869e:	bd70      	pop	{r4, r5, r6, pc}
    86a0:	42a3      	cmp	r3, r4
    86a2:	d909      	bls.n	86b8 <_free_r+0x44>
    86a4:	6821      	ldr	r1, [r4, #0]
    86a6:	1860      	adds	r0, r4, r1
    86a8:	4283      	cmp	r3, r0
    86aa:	d1f3      	bne.n	8694 <_free_r+0x20>
    86ac:	6818      	ldr	r0, [r3, #0]
    86ae:	685b      	ldr	r3, [r3, #4]
    86b0:	1841      	adds	r1, r0, r1
    86b2:	6021      	str	r1, [r4, #0]
    86b4:	e7ee      	b.n	8694 <_free_r+0x20>
    86b6:	0013      	movs	r3, r2
    86b8:	685a      	ldr	r2, [r3, #4]
    86ba:	2a00      	cmp	r2, #0
    86bc:	d001      	beq.n	86c2 <_free_r+0x4e>
    86be:	42a2      	cmp	r2, r4
    86c0:	d9f9      	bls.n	86b6 <_free_r+0x42>
    86c2:	6819      	ldr	r1, [r3, #0]
    86c4:	1858      	adds	r0, r3, r1
    86c6:	42a0      	cmp	r0, r4
    86c8:	d10b      	bne.n	86e2 <_free_r+0x6e>
    86ca:	6820      	ldr	r0, [r4, #0]
    86cc:	1809      	adds	r1, r1, r0
    86ce:	1858      	adds	r0, r3, r1
    86d0:	6019      	str	r1, [r3, #0]
    86d2:	4282      	cmp	r2, r0
    86d4:	d1e0      	bne.n	8698 <_free_r+0x24>
    86d6:	6810      	ldr	r0, [r2, #0]
    86d8:	6852      	ldr	r2, [r2, #4]
    86da:	1841      	adds	r1, r0, r1
    86dc:	6019      	str	r1, [r3, #0]
    86de:	605a      	str	r2, [r3, #4]
    86e0:	e7da      	b.n	8698 <_free_r+0x24>
    86e2:	42a0      	cmp	r0, r4
    86e4:	d902      	bls.n	86ec <_free_r+0x78>
    86e6:	230c      	movs	r3, #12
    86e8:	602b      	str	r3, [r5, #0]
    86ea:	e7d5      	b.n	8698 <_free_r+0x24>
    86ec:	6821      	ldr	r1, [r4, #0]
    86ee:	1860      	adds	r0, r4, r1
    86f0:	4282      	cmp	r2, r0
    86f2:	d103      	bne.n	86fc <_free_r+0x88>
    86f4:	6810      	ldr	r0, [r2, #0]
    86f6:	6852      	ldr	r2, [r2, #4]
    86f8:	1841      	adds	r1, r0, r1
    86fa:	6021      	str	r1, [r4, #0]
    86fc:	6062      	str	r2, [r4, #4]
    86fe:	605c      	str	r4, [r3, #4]
    8700:	e7ca      	b.n	8698 <_free_r+0x24>
    8702:	46c0      	nop			; (mov r8, r8)
    8704:	20001ac8 	.word	0x20001ac8

00008708 <_malloc_r>:
    8708:	2303      	movs	r3, #3
    870a:	b570      	push	{r4, r5, r6, lr}
    870c:	1ccd      	adds	r5, r1, #3
    870e:	439d      	bics	r5, r3
    8710:	3508      	adds	r5, #8
    8712:	0006      	movs	r6, r0
    8714:	2d0c      	cmp	r5, #12
    8716:	d21e      	bcs.n	8756 <_malloc_r+0x4e>
    8718:	250c      	movs	r5, #12
    871a:	42a9      	cmp	r1, r5
    871c:	d81d      	bhi.n	875a <_malloc_r+0x52>
    871e:	0030      	movs	r0, r6
    8720:	f000 f893 	bl	884a <__malloc_lock>
    8724:	4a25      	ldr	r2, [pc, #148]	; (87bc <_malloc_r+0xb4>)
    8726:	6814      	ldr	r4, [r2, #0]
    8728:	0021      	movs	r1, r4
    872a:	2900      	cmp	r1, #0
    872c:	d119      	bne.n	8762 <_malloc_r+0x5a>
    872e:	4c24      	ldr	r4, [pc, #144]	; (87c0 <_malloc_r+0xb8>)
    8730:	6823      	ldr	r3, [r4, #0]
    8732:	2b00      	cmp	r3, #0
    8734:	d103      	bne.n	873e <_malloc_r+0x36>
    8736:	0030      	movs	r0, r6
    8738:	f000 f844 	bl	87c4 <_sbrk_r>
    873c:	6020      	str	r0, [r4, #0]
    873e:	0029      	movs	r1, r5
    8740:	0030      	movs	r0, r6
    8742:	f000 f83f 	bl	87c4 <_sbrk_r>
    8746:	1c43      	adds	r3, r0, #1
    8748:	d12c      	bne.n	87a4 <_malloc_r+0x9c>
    874a:	230c      	movs	r3, #12
    874c:	0030      	movs	r0, r6
    874e:	6033      	str	r3, [r6, #0]
    8750:	f000 f87c 	bl	884c <__malloc_unlock>
    8754:	e003      	b.n	875e <_malloc_r+0x56>
    8756:	2d00      	cmp	r5, #0
    8758:	dadf      	bge.n	871a <_malloc_r+0x12>
    875a:	230c      	movs	r3, #12
    875c:	6033      	str	r3, [r6, #0]
    875e:	2000      	movs	r0, #0
    8760:	bd70      	pop	{r4, r5, r6, pc}
    8762:	680b      	ldr	r3, [r1, #0]
    8764:	1b5b      	subs	r3, r3, r5
    8766:	d41a      	bmi.n	879e <_malloc_r+0x96>
    8768:	2b0b      	cmp	r3, #11
    876a:	d903      	bls.n	8774 <_malloc_r+0x6c>
    876c:	600b      	str	r3, [r1, #0]
    876e:	18cc      	adds	r4, r1, r3
    8770:	6025      	str	r5, [r4, #0]
    8772:	e003      	b.n	877c <_malloc_r+0x74>
    8774:	428c      	cmp	r4, r1
    8776:	d10e      	bne.n	8796 <_malloc_r+0x8e>
    8778:	6863      	ldr	r3, [r4, #4]
    877a:	6013      	str	r3, [r2, #0]
    877c:	0030      	movs	r0, r6
    877e:	f000 f865 	bl	884c <__malloc_unlock>
    8782:	0020      	movs	r0, r4
    8784:	2207      	movs	r2, #7
    8786:	300b      	adds	r0, #11
    8788:	1d23      	adds	r3, r4, #4
    878a:	4390      	bics	r0, r2
    878c:	1ac3      	subs	r3, r0, r3
    878e:	d0e7      	beq.n	8760 <_malloc_r+0x58>
    8790:	425a      	negs	r2, r3
    8792:	50e2      	str	r2, [r4, r3]
    8794:	e7e4      	b.n	8760 <_malloc_r+0x58>
    8796:	684b      	ldr	r3, [r1, #4]
    8798:	6063      	str	r3, [r4, #4]
    879a:	000c      	movs	r4, r1
    879c:	e7ee      	b.n	877c <_malloc_r+0x74>
    879e:	000c      	movs	r4, r1
    87a0:	6849      	ldr	r1, [r1, #4]
    87a2:	e7c2      	b.n	872a <_malloc_r+0x22>
    87a4:	2303      	movs	r3, #3
    87a6:	1cc4      	adds	r4, r0, #3
    87a8:	439c      	bics	r4, r3
    87aa:	42a0      	cmp	r0, r4
    87ac:	d0e0      	beq.n	8770 <_malloc_r+0x68>
    87ae:	1a21      	subs	r1, r4, r0
    87b0:	0030      	movs	r0, r6
    87b2:	f000 f807 	bl	87c4 <_sbrk_r>
    87b6:	1c43      	adds	r3, r0, #1
    87b8:	d1da      	bne.n	8770 <_malloc_r+0x68>
    87ba:	e7c6      	b.n	874a <_malloc_r+0x42>
    87bc:	20001ac8 	.word	0x20001ac8
    87c0:	20001acc 	.word	0x20001acc

000087c4 <_sbrk_r>:
    87c4:	2300      	movs	r3, #0
    87c6:	b570      	push	{r4, r5, r6, lr}
    87c8:	4c06      	ldr	r4, [pc, #24]	; (87e4 <_sbrk_r+0x20>)
    87ca:	0005      	movs	r5, r0
    87cc:	0008      	movs	r0, r1
    87ce:	6023      	str	r3, [r4, #0]
    87d0:	f7fc fbdc 	bl	4f8c <_sbrk>
    87d4:	1c43      	adds	r3, r0, #1
    87d6:	d103      	bne.n	87e0 <_sbrk_r+0x1c>
    87d8:	6823      	ldr	r3, [r4, #0]
    87da:	2b00      	cmp	r3, #0
    87dc:	d000      	beq.n	87e0 <_sbrk_r+0x1c>
    87de:	602b      	str	r3, [r5, #0]
    87e0:	bd70      	pop	{r4, r5, r6, pc}
    87e2:	46c0      	nop			; (mov r8, r8)
    87e4:	200029ec 	.word	0x200029ec

000087e8 <siprintf>:
    87e8:	b40e      	push	{r1, r2, r3}
    87ea:	b510      	push	{r4, lr}
    87ec:	b09d      	sub	sp, #116	; 0x74
    87ee:	a902      	add	r1, sp, #8
    87f0:	9002      	str	r0, [sp, #8]
    87f2:	6108      	str	r0, [r1, #16]
    87f4:	480b      	ldr	r0, [pc, #44]	; (8824 <siprintf+0x3c>)
    87f6:	2482      	movs	r4, #130	; 0x82
    87f8:	6088      	str	r0, [r1, #8]
    87fa:	6148      	str	r0, [r1, #20]
    87fc:	2001      	movs	r0, #1
    87fe:	4240      	negs	r0, r0
    8800:	ab1f      	add	r3, sp, #124	; 0x7c
    8802:	81c8      	strh	r0, [r1, #14]
    8804:	4808      	ldr	r0, [pc, #32]	; (8828 <siprintf+0x40>)
    8806:	cb04      	ldmia	r3!, {r2}
    8808:	00a4      	lsls	r4, r4, #2
    880a:	6800      	ldr	r0, [r0, #0]
    880c:	9301      	str	r3, [sp, #4]
    880e:	818c      	strh	r4, [r1, #12]
    8810:	f000 f880 	bl	8914 <_svfiprintf_r>
    8814:	2300      	movs	r3, #0
    8816:	9a02      	ldr	r2, [sp, #8]
    8818:	7013      	strb	r3, [r2, #0]
    881a:	b01d      	add	sp, #116	; 0x74
    881c:	bc10      	pop	{r4}
    881e:	bc08      	pop	{r3}
    8820:	b003      	add	sp, #12
    8822:	4718      	bx	r3
    8824:	7fffffff 	.word	0x7fffffff
    8828:	20000258 	.word	0x20000258

0000882c <strcpy>:
    882c:	1c03      	adds	r3, r0, #0
    882e:	780a      	ldrb	r2, [r1, #0]
    8830:	3101      	adds	r1, #1
    8832:	701a      	strb	r2, [r3, #0]
    8834:	3301      	adds	r3, #1
    8836:	2a00      	cmp	r2, #0
    8838:	d1f9      	bne.n	882e <strcpy+0x2>
    883a:	4770      	bx	lr

0000883c <strlen>:
    883c:	2300      	movs	r3, #0
    883e:	5cc2      	ldrb	r2, [r0, r3]
    8840:	3301      	adds	r3, #1
    8842:	2a00      	cmp	r2, #0
    8844:	d1fb      	bne.n	883e <strlen+0x2>
    8846:	1e58      	subs	r0, r3, #1
    8848:	4770      	bx	lr

0000884a <__malloc_lock>:
    884a:	4770      	bx	lr

0000884c <__malloc_unlock>:
    884c:	4770      	bx	lr
	...

00008850 <__ssputs_r>:
    8850:	b5f0      	push	{r4, r5, r6, r7, lr}
    8852:	688e      	ldr	r6, [r1, #8]
    8854:	b085      	sub	sp, #20
    8856:	0007      	movs	r7, r0
    8858:	000c      	movs	r4, r1
    885a:	9203      	str	r2, [sp, #12]
    885c:	9301      	str	r3, [sp, #4]
    885e:	429e      	cmp	r6, r3
    8860:	d839      	bhi.n	88d6 <__ssputs_r+0x86>
    8862:	2390      	movs	r3, #144	; 0x90
    8864:	898a      	ldrh	r2, [r1, #12]
    8866:	00db      	lsls	r3, r3, #3
    8868:	421a      	tst	r2, r3
    886a:	d034      	beq.n	88d6 <__ssputs_r+0x86>
    886c:	2503      	movs	r5, #3
    886e:	6909      	ldr	r1, [r1, #16]
    8870:	6823      	ldr	r3, [r4, #0]
    8872:	1a5b      	subs	r3, r3, r1
    8874:	9302      	str	r3, [sp, #8]
    8876:	6963      	ldr	r3, [r4, #20]
    8878:	9802      	ldr	r0, [sp, #8]
    887a:	435d      	muls	r5, r3
    887c:	0feb      	lsrs	r3, r5, #31
    887e:	195d      	adds	r5, r3, r5
    8880:	9b01      	ldr	r3, [sp, #4]
    8882:	106d      	asrs	r5, r5, #1
    8884:	3301      	adds	r3, #1
    8886:	181b      	adds	r3, r3, r0
    8888:	42ab      	cmp	r3, r5
    888a:	d900      	bls.n	888e <__ssputs_r+0x3e>
    888c:	001d      	movs	r5, r3
    888e:	0553      	lsls	r3, r2, #21
    8890:	d532      	bpl.n	88f8 <__ssputs_r+0xa8>
    8892:	0029      	movs	r1, r5
    8894:	0038      	movs	r0, r7
    8896:	f7ff ff37 	bl	8708 <_malloc_r>
    889a:	1e06      	subs	r6, r0, #0
    889c:	d109      	bne.n	88b2 <__ssputs_r+0x62>
    889e:	230c      	movs	r3, #12
    88a0:	603b      	str	r3, [r7, #0]
    88a2:	2340      	movs	r3, #64	; 0x40
    88a4:	2001      	movs	r0, #1
    88a6:	89a2      	ldrh	r2, [r4, #12]
    88a8:	4240      	negs	r0, r0
    88aa:	4313      	orrs	r3, r2
    88ac:	81a3      	strh	r3, [r4, #12]
    88ae:	b005      	add	sp, #20
    88b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    88b2:	9a02      	ldr	r2, [sp, #8]
    88b4:	6921      	ldr	r1, [r4, #16]
    88b6:	f7ff fecb 	bl	8650 <memcpy>
    88ba:	89a3      	ldrh	r3, [r4, #12]
    88bc:	4a14      	ldr	r2, [pc, #80]	; (8910 <__ssputs_r+0xc0>)
    88be:	401a      	ands	r2, r3
    88c0:	2380      	movs	r3, #128	; 0x80
    88c2:	4313      	orrs	r3, r2
    88c4:	81a3      	strh	r3, [r4, #12]
    88c6:	9b02      	ldr	r3, [sp, #8]
    88c8:	6126      	str	r6, [r4, #16]
    88ca:	18f6      	adds	r6, r6, r3
    88cc:	6026      	str	r6, [r4, #0]
    88ce:	6165      	str	r5, [r4, #20]
    88d0:	9e01      	ldr	r6, [sp, #4]
    88d2:	1aed      	subs	r5, r5, r3
    88d4:	60a5      	str	r5, [r4, #8]
    88d6:	9b01      	ldr	r3, [sp, #4]
    88d8:	42b3      	cmp	r3, r6
    88da:	d200      	bcs.n	88de <__ssputs_r+0x8e>
    88dc:	001e      	movs	r6, r3
    88de:	0032      	movs	r2, r6
    88e0:	9903      	ldr	r1, [sp, #12]
    88e2:	6820      	ldr	r0, [r4, #0]
    88e4:	f000 faad 	bl	8e42 <memmove>
    88e8:	68a3      	ldr	r3, [r4, #8]
    88ea:	2000      	movs	r0, #0
    88ec:	1b9b      	subs	r3, r3, r6
    88ee:	60a3      	str	r3, [r4, #8]
    88f0:	6823      	ldr	r3, [r4, #0]
    88f2:	199e      	adds	r6, r3, r6
    88f4:	6026      	str	r6, [r4, #0]
    88f6:	e7da      	b.n	88ae <__ssputs_r+0x5e>
    88f8:	002a      	movs	r2, r5
    88fa:	0038      	movs	r0, r7
    88fc:	f000 fab3 	bl	8e66 <_realloc_r>
    8900:	1e06      	subs	r6, r0, #0
    8902:	d1e0      	bne.n	88c6 <__ssputs_r+0x76>
    8904:	6921      	ldr	r1, [r4, #16]
    8906:	0038      	movs	r0, r7
    8908:	f7ff feb4 	bl	8674 <_free_r>
    890c:	e7c7      	b.n	889e <__ssputs_r+0x4e>
    890e:	46c0      	nop			; (mov r8, r8)
    8910:	fffffb7f 	.word	0xfffffb7f

00008914 <_svfiprintf_r>:
    8914:	b5f0      	push	{r4, r5, r6, r7, lr}
    8916:	b09f      	sub	sp, #124	; 0x7c
    8918:	9002      	str	r0, [sp, #8]
    891a:	9305      	str	r3, [sp, #20]
    891c:	898b      	ldrh	r3, [r1, #12]
    891e:	000f      	movs	r7, r1
    8920:	0016      	movs	r6, r2
    8922:	061b      	lsls	r3, r3, #24
    8924:	d511      	bpl.n	894a <_svfiprintf_r+0x36>
    8926:	690b      	ldr	r3, [r1, #16]
    8928:	2b00      	cmp	r3, #0
    892a:	d10e      	bne.n	894a <_svfiprintf_r+0x36>
    892c:	2140      	movs	r1, #64	; 0x40
    892e:	f7ff feeb 	bl	8708 <_malloc_r>
    8932:	6038      	str	r0, [r7, #0]
    8934:	6138      	str	r0, [r7, #16]
    8936:	2800      	cmp	r0, #0
    8938:	d105      	bne.n	8946 <_svfiprintf_r+0x32>
    893a:	230c      	movs	r3, #12
    893c:	9a02      	ldr	r2, [sp, #8]
    893e:	3801      	subs	r0, #1
    8940:	6013      	str	r3, [r2, #0]
    8942:	b01f      	add	sp, #124	; 0x7c
    8944:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8946:	2340      	movs	r3, #64	; 0x40
    8948:	617b      	str	r3, [r7, #20]
    894a:	2300      	movs	r3, #0
    894c:	ad06      	add	r5, sp, #24
    894e:	616b      	str	r3, [r5, #20]
    8950:	3320      	adds	r3, #32
    8952:	766b      	strb	r3, [r5, #25]
    8954:	3310      	adds	r3, #16
    8956:	76ab      	strb	r3, [r5, #26]
    8958:	0034      	movs	r4, r6
    895a:	7823      	ldrb	r3, [r4, #0]
    895c:	2b00      	cmp	r3, #0
    895e:	d147      	bne.n	89f0 <_svfiprintf_r+0xdc>
    8960:	1ba3      	subs	r3, r4, r6
    8962:	9304      	str	r3, [sp, #16]
    8964:	d00d      	beq.n	8982 <_svfiprintf_r+0x6e>
    8966:	1ba3      	subs	r3, r4, r6
    8968:	0032      	movs	r2, r6
    896a:	0039      	movs	r1, r7
    896c:	9802      	ldr	r0, [sp, #8]
    896e:	f7ff ff6f 	bl	8850 <__ssputs_r>
    8972:	1c43      	adds	r3, r0, #1
    8974:	d100      	bne.n	8978 <_svfiprintf_r+0x64>
    8976:	e0b5      	b.n	8ae4 <_svfiprintf_r+0x1d0>
    8978:	696a      	ldr	r2, [r5, #20]
    897a:	9b04      	ldr	r3, [sp, #16]
    897c:	4694      	mov	ip, r2
    897e:	4463      	add	r3, ip
    8980:	616b      	str	r3, [r5, #20]
    8982:	7823      	ldrb	r3, [r4, #0]
    8984:	2b00      	cmp	r3, #0
    8986:	d100      	bne.n	898a <_svfiprintf_r+0x76>
    8988:	e0ac      	b.n	8ae4 <_svfiprintf_r+0x1d0>
    898a:	2201      	movs	r2, #1
    898c:	2300      	movs	r3, #0
    898e:	4252      	negs	r2, r2
    8990:	606a      	str	r2, [r5, #4]
    8992:	a902      	add	r1, sp, #8
    8994:	3254      	adds	r2, #84	; 0x54
    8996:	1852      	adds	r2, r2, r1
    8998:	3401      	adds	r4, #1
    899a:	602b      	str	r3, [r5, #0]
    899c:	60eb      	str	r3, [r5, #12]
    899e:	60ab      	str	r3, [r5, #8]
    89a0:	7013      	strb	r3, [r2, #0]
    89a2:	65ab      	str	r3, [r5, #88]	; 0x58
    89a4:	4e58      	ldr	r6, [pc, #352]	; (8b08 <_svfiprintf_r+0x1f4>)
    89a6:	2205      	movs	r2, #5
    89a8:	7821      	ldrb	r1, [r4, #0]
    89aa:	0030      	movs	r0, r6
    89ac:	f000 fa3e 	bl	8e2c <memchr>
    89b0:	1c62      	adds	r2, r4, #1
    89b2:	2800      	cmp	r0, #0
    89b4:	d120      	bne.n	89f8 <_svfiprintf_r+0xe4>
    89b6:	6829      	ldr	r1, [r5, #0]
    89b8:	06cb      	lsls	r3, r1, #27
    89ba:	d504      	bpl.n	89c6 <_svfiprintf_r+0xb2>
    89bc:	2353      	movs	r3, #83	; 0x53
    89be:	ae02      	add	r6, sp, #8
    89c0:	3020      	adds	r0, #32
    89c2:	199b      	adds	r3, r3, r6
    89c4:	7018      	strb	r0, [r3, #0]
    89c6:	070b      	lsls	r3, r1, #28
    89c8:	d504      	bpl.n	89d4 <_svfiprintf_r+0xc0>
    89ca:	2353      	movs	r3, #83	; 0x53
    89cc:	202b      	movs	r0, #43	; 0x2b
    89ce:	ae02      	add	r6, sp, #8
    89d0:	199b      	adds	r3, r3, r6
    89d2:	7018      	strb	r0, [r3, #0]
    89d4:	7823      	ldrb	r3, [r4, #0]
    89d6:	2b2a      	cmp	r3, #42	; 0x2a
    89d8:	d016      	beq.n	8a08 <_svfiprintf_r+0xf4>
    89da:	2000      	movs	r0, #0
    89dc:	210a      	movs	r1, #10
    89de:	9b09      	ldr	r3, [sp, #36]	; 0x24
    89e0:	7822      	ldrb	r2, [r4, #0]
    89e2:	3a30      	subs	r2, #48	; 0x30
    89e4:	2a09      	cmp	r2, #9
    89e6:	d955      	bls.n	8a94 <_svfiprintf_r+0x180>
    89e8:	2800      	cmp	r0, #0
    89ea:	d015      	beq.n	8a18 <_svfiprintf_r+0x104>
    89ec:	9309      	str	r3, [sp, #36]	; 0x24
    89ee:	e013      	b.n	8a18 <_svfiprintf_r+0x104>
    89f0:	2b25      	cmp	r3, #37	; 0x25
    89f2:	d0b5      	beq.n	8960 <_svfiprintf_r+0x4c>
    89f4:	3401      	adds	r4, #1
    89f6:	e7b0      	b.n	895a <_svfiprintf_r+0x46>
    89f8:	2301      	movs	r3, #1
    89fa:	1b80      	subs	r0, r0, r6
    89fc:	4083      	lsls	r3, r0
    89fe:	6829      	ldr	r1, [r5, #0]
    8a00:	0014      	movs	r4, r2
    8a02:	430b      	orrs	r3, r1
    8a04:	602b      	str	r3, [r5, #0]
    8a06:	e7cd      	b.n	89a4 <_svfiprintf_r+0x90>
    8a08:	9b05      	ldr	r3, [sp, #20]
    8a0a:	1d18      	adds	r0, r3, #4
    8a0c:	681b      	ldr	r3, [r3, #0]
    8a0e:	9005      	str	r0, [sp, #20]
    8a10:	2b00      	cmp	r3, #0
    8a12:	db39      	blt.n	8a88 <_svfiprintf_r+0x174>
    8a14:	9309      	str	r3, [sp, #36]	; 0x24
    8a16:	0014      	movs	r4, r2
    8a18:	7823      	ldrb	r3, [r4, #0]
    8a1a:	2b2e      	cmp	r3, #46	; 0x2e
    8a1c:	d10b      	bne.n	8a36 <_svfiprintf_r+0x122>
    8a1e:	7863      	ldrb	r3, [r4, #1]
    8a20:	1c62      	adds	r2, r4, #1
    8a22:	2b2a      	cmp	r3, #42	; 0x2a
    8a24:	d13e      	bne.n	8aa4 <_svfiprintf_r+0x190>
    8a26:	9b05      	ldr	r3, [sp, #20]
    8a28:	3402      	adds	r4, #2
    8a2a:	1d1a      	adds	r2, r3, #4
    8a2c:	681b      	ldr	r3, [r3, #0]
    8a2e:	9205      	str	r2, [sp, #20]
    8a30:	2b00      	cmp	r3, #0
    8a32:	db34      	blt.n	8a9e <_svfiprintf_r+0x18a>
    8a34:	9307      	str	r3, [sp, #28]
    8a36:	4e35      	ldr	r6, [pc, #212]	; (8b0c <_svfiprintf_r+0x1f8>)
    8a38:	7821      	ldrb	r1, [r4, #0]
    8a3a:	2203      	movs	r2, #3
    8a3c:	0030      	movs	r0, r6
    8a3e:	f000 f9f5 	bl	8e2c <memchr>
    8a42:	2800      	cmp	r0, #0
    8a44:	d006      	beq.n	8a54 <_svfiprintf_r+0x140>
    8a46:	2340      	movs	r3, #64	; 0x40
    8a48:	1b80      	subs	r0, r0, r6
    8a4a:	4083      	lsls	r3, r0
    8a4c:	682a      	ldr	r2, [r5, #0]
    8a4e:	3401      	adds	r4, #1
    8a50:	4313      	orrs	r3, r2
    8a52:	602b      	str	r3, [r5, #0]
    8a54:	7821      	ldrb	r1, [r4, #0]
    8a56:	2206      	movs	r2, #6
    8a58:	482d      	ldr	r0, [pc, #180]	; (8b10 <_svfiprintf_r+0x1fc>)
    8a5a:	1c66      	adds	r6, r4, #1
    8a5c:	7629      	strb	r1, [r5, #24]
    8a5e:	f000 f9e5 	bl	8e2c <memchr>
    8a62:	2800      	cmp	r0, #0
    8a64:	d046      	beq.n	8af4 <_svfiprintf_r+0x1e0>
    8a66:	4b2b      	ldr	r3, [pc, #172]	; (8b14 <_svfiprintf_r+0x200>)
    8a68:	2b00      	cmp	r3, #0
    8a6a:	d12f      	bne.n	8acc <_svfiprintf_r+0x1b8>
    8a6c:	6829      	ldr	r1, [r5, #0]
    8a6e:	9b05      	ldr	r3, [sp, #20]
    8a70:	2207      	movs	r2, #7
    8a72:	05c9      	lsls	r1, r1, #23
    8a74:	d528      	bpl.n	8ac8 <_svfiprintf_r+0x1b4>
    8a76:	189b      	adds	r3, r3, r2
    8a78:	4393      	bics	r3, r2
    8a7a:	3308      	adds	r3, #8
    8a7c:	9305      	str	r3, [sp, #20]
    8a7e:	696b      	ldr	r3, [r5, #20]
    8a80:	9a03      	ldr	r2, [sp, #12]
    8a82:	189b      	adds	r3, r3, r2
    8a84:	616b      	str	r3, [r5, #20]
    8a86:	e767      	b.n	8958 <_svfiprintf_r+0x44>
    8a88:	425b      	negs	r3, r3
    8a8a:	60eb      	str	r3, [r5, #12]
    8a8c:	2302      	movs	r3, #2
    8a8e:	430b      	orrs	r3, r1
    8a90:	602b      	str	r3, [r5, #0]
    8a92:	e7c0      	b.n	8a16 <_svfiprintf_r+0x102>
    8a94:	434b      	muls	r3, r1
    8a96:	3401      	adds	r4, #1
    8a98:	189b      	adds	r3, r3, r2
    8a9a:	2001      	movs	r0, #1
    8a9c:	e7a0      	b.n	89e0 <_svfiprintf_r+0xcc>
    8a9e:	2301      	movs	r3, #1
    8aa0:	425b      	negs	r3, r3
    8aa2:	e7c7      	b.n	8a34 <_svfiprintf_r+0x120>
    8aa4:	2300      	movs	r3, #0
    8aa6:	0014      	movs	r4, r2
    8aa8:	200a      	movs	r0, #10
    8aaa:	001a      	movs	r2, r3
    8aac:	606b      	str	r3, [r5, #4]
    8aae:	7821      	ldrb	r1, [r4, #0]
    8ab0:	3930      	subs	r1, #48	; 0x30
    8ab2:	2909      	cmp	r1, #9
    8ab4:	d903      	bls.n	8abe <_svfiprintf_r+0x1aa>
    8ab6:	2b00      	cmp	r3, #0
    8ab8:	d0bd      	beq.n	8a36 <_svfiprintf_r+0x122>
    8aba:	9207      	str	r2, [sp, #28]
    8abc:	e7bb      	b.n	8a36 <_svfiprintf_r+0x122>
    8abe:	4342      	muls	r2, r0
    8ac0:	3401      	adds	r4, #1
    8ac2:	1852      	adds	r2, r2, r1
    8ac4:	2301      	movs	r3, #1
    8ac6:	e7f2      	b.n	8aae <_svfiprintf_r+0x19a>
    8ac8:	3307      	adds	r3, #7
    8aca:	e7d5      	b.n	8a78 <_svfiprintf_r+0x164>
    8acc:	ab05      	add	r3, sp, #20
    8ace:	9300      	str	r3, [sp, #0]
    8ad0:	003a      	movs	r2, r7
    8ad2:	4b11      	ldr	r3, [pc, #68]	; (8b18 <_svfiprintf_r+0x204>)
    8ad4:	0029      	movs	r1, r5
    8ad6:	9802      	ldr	r0, [sp, #8]
    8ad8:	e000      	b.n	8adc <_svfiprintf_r+0x1c8>
    8ada:	bf00      	nop
    8adc:	9003      	str	r0, [sp, #12]
    8ade:	9b03      	ldr	r3, [sp, #12]
    8ae0:	3301      	adds	r3, #1
    8ae2:	d1cc      	bne.n	8a7e <_svfiprintf_r+0x16a>
    8ae4:	89bb      	ldrh	r3, [r7, #12]
    8ae6:	980b      	ldr	r0, [sp, #44]	; 0x2c
    8ae8:	065b      	lsls	r3, r3, #25
    8aea:	d400      	bmi.n	8aee <_svfiprintf_r+0x1da>
    8aec:	e729      	b.n	8942 <_svfiprintf_r+0x2e>
    8aee:	2001      	movs	r0, #1
    8af0:	4240      	negs	r0, r0
    8af2:	e726      	b.n	8942 <_svfiprintf_r+0x2e>
    8af4:	ab05      	add	r3, sp, #20
    8af6:	9300      	str	r3, [sp, #0]
    8af8:	003a      	movs	r2, r7
    8afa:	4b07      	ldr	r3, [pc, #28]	; (8b18 <_svfiprintf_r+0x204>)
    8afc:	0029      	movs	r1, r5
    8afe:	9802      	ldr	r0, [sp, #8]
    8b00:	f000 f87a 	bl	8bf8 <_printf_i>
    8b04:	e7ea      	b.n	8adc <_svfiprintf_r+0x1c8>
    8b06:	46c0      	nop			; (mov r8, r8)
    8b08:	000093d8 	.word	0x000093d8
    8b0c:	000093de 	.word	0x000093de
    8b10:	000093e2 	.word	0x000093e2
    8b14:	00000000 	.word	0x00000000
    8b18:	00008851 	.word	0x00008851

00008b1c <_printf_common>:
    8b1c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    8b1e:	0015      	movs	r5, r2
    8b20:	9301      	str	r3, [sp, #4]
    8b22:	688a      	ldr	r2, [r1, #8]
    8b24:	690b      	ldr	r3, [r1, #16]
    8b26:	9000      	str	r0, [sp, #0]
    8b28:	000c      	movs	r4, r1
    8b2a:	4293      	cmp	r3, r2
    8b2c:	da00      	bge.n	8b30 <_printf_common+0x14>
    8b2e:	0013      	movs	r3, r2
    8b30:	0022      	movs	r2, r4
    8b32:	602b      	str	r3, [r5, #0]
    8b34:	3243      	adds	r2, #67	; 0x43
    8b36:	7812      	ldrb	r2, [r2, #0]
    8b38:	2a00      	cmp	r2, #0
    8b3a:	d001      	beq.n	8b40 <_printf_common+0x24>
    8b3c:	3301      	adds	r3, #1
    8b3e:	602b      	str	r3, [r5, #0]
    8b40:	6823      	ldr	r3, [r4, #0]
    8b42:	069b      	lsls	r3, r3, #26
    8b44:	d502      	bpl.n	8b4c <_printf_common+0x30>
    8b46:	682b      	ldr	r3, [r5, #0]
    8b48:	3302      	adds	r3, #2
    8b4a:	602b      	str	r3, [r5, #0]
    8b4c:	2706      	movs	r7, #6
    8b4e:	6823      	ldr	r3, [r4, #0]
    8b50:	401f      	ands	r7, r3
    8b52:	d027      	beq.n	8ba4 <_printf_common+0x88>
    8b54:	0023      	movs	r3, r4
    8b56:	3343      	adds	r3, #67	; 0x43
    8b58:	781b      	ldrb	r3, [r3, #0]
    8b5a:	1e5a      	subs	r2, r3, #1
    8b5c:	4193      	sbcs	r3, r2
    8b5e:	6822      	ldr	r2, [r4, #0]
    8b60:	0692      	lsls	r2, r2, #26
    8b62:	d430      	bmi.n	8bc6 <_printf_common+0xaa>
    8b64:	0022      	movs	r2, r4
    8b66:	9901      	ldr	r1, [sp, #4]
    8b68:	3243      	adds	r2, #67	; 0x43
    8b6a:	9800      	ldr	r0, [sp, #0]
    8b6c:	9e08      	ldr	r6, [sp, #32]
    8b6e:	47b0      	blx	r6
    8b70:	1c43      	adds	r3, r0, #1
    8b72:	d025      	beq.n	8bc0 <_printf_common+0xa4>
    8b74:	2306      	movs	r3, #6
    8b76:	6820      	ldr	r0, [r4, #0]
    8b78:	682a      	ldr	r2, [r5, #0]
    8b7a:	68e1      	ldr	r1, [r4, #12]
    8b7c:	4003      	ands	r3, r0
    8b7e:	2500      	movs	r5, #0
    8b80:	2b04      	cmp	r3, #4
    8b82:	d103      	bne.n	8b8c <_printf_common+0x70>
    8b84:	1a8d      	subs	r5, r1, r2
    8b86:	43eb      	mvns	r3, r5
    8b88:	17db      	asrs	r3, r3, #31
    8b8a:	401d      	ands	r5, r3
    8b8c:	68a3      	ldr	r3, [r4, #8]
    8b8e:	6922      	ldr	r2, [r4, #16]
    8b90:	4293      	cmp	r3, r2
    8b92:	dd01      	ble.n	8b98 <_printf_common+0x7c>
    8b94:	1a9b      	subs	r3, r3, r2
    8b96:	18ed      	adds	r5, r5, r3
    8b98:	2700      	movs	r7, #0
    8b9a:	42bd      	cmp	r5, r7
    8b9c:	d120      	bne.n	8be0 <_printf_common+0xc4>
    8b9e:	2000      	movs	r0, #0
    8ba0:	e010      	b.n	8bc4 <_printf_common+0xa8>
    8ba2:	3701      	adds	r7, #1
    8ba4:	68e3      	ldr	r3, [r4, #12]
    8ba6:	682a      	ldr	r2, [r5, #0]
    8ba8:	1a9b      	subs	r3, r3, r2
    8baa:	429f      	cmp	r7, r3
    8bac:	dad2      	bge.n	8b54 <_printf_common+0x38>
    8bae:	0022      	movs	r2, r4
    8bb0:	2301      	movs	r3, #1
    8bb2:	3219      	adds	r2, #25
    8bb4:	9901      	ldr	r1, [sp, #4]
    8bb6:	9800      	ldr	r0, [sp, #0]
    8bb8:	9e08      	ldr	r6, [sp, #32]
    8bba:	47b0      	blx	r6
    8bbc:	1c43      	adds	r3, r0, #1
    8bbe:	d1f0      	bne.n	8ba2 <_printf_common+0x86>
    8bc0:	2001      	movs	r0, #1
    8bc2:	4240      	negs	r0, r0
    8bc4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    8bc6:	2030      	movs	r0, #48	; 0x30
    8bc8:	18e1      	adds	r1, r4, r3
    8bca:	3143      	adds	r1, #67	; 0x43
    8bcc:	7008      	strb	r0, [r1, #0]
    8bce:	0021      	movs	r1, r4
    8bd0:	1c5a      	adds	r2, r3, #1
    8bd2:	3145      	adds	r1, #69	; 0x45
    8bd4:	7809      	ldrb	r1, [r1, #0]
    8bd6:	18a2      	adds	r2, r4, r2
    8bd8:	3243      	adds	r2, #67	; 0x43
    8bda:	3302      	adds	r3, #2
    8bdc:	7011      	strb	r1, [r2, #0]
    8bde:	e7c1      	b.n	8b64 <_printf_common+0x48>
    8be0:	0022      	movs	r2, r4
    8be2:	2301      	movs	r3, #1
    8be4:	321a      	adds	r2, #26
    8be6:	9901      	ldr	r1, [sp, #4]
    8be8:	9800      	ldr	r0, [sp, #0]
    8bea:	9e08      	ldr	r6, [sp, #32]
    8bec:	47b0      	blx	r6
    8bee:	1c43      	adds	r3, r0, #1
    8bf0:	d0e6      	beq.n	8bc0 <_printf_common+0xa4>
    8bf2:	3701      	adds	r7, #1
    8bf4:	e7d1      	b.n	8b9a <_printf_common+0x7e>
	...

00008bf8 <_printf_i>:
    8bf8:	b5f0      	push	{r4, r5, r6, r7, lr}
    8bfa:	b08b      	sub	sp, #44	; 0x2c
    8bfc:	9206      	str	r2, [sp, #24]
    8bfe:	000a      	movs	r2, r1
    8c00:	3243      	adds	r2, #67	; 0x43
    8c02:	9307      	str	r3, [sp, #28]
    8c04:	9005      	str	r0, [sp, #20]
    8c06:	9204      	str	r2, [sp, #16]
    8c08:	7e0a      	ldrb	r2, [r1, #24]
    8c0a:	000c      	movs	r4, r1
    8c0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
    8c0e:	2a6e      	cmp	r2, #110	; 0x6e
    8c10:	d100      	bne.n	8c14 <_printf_i+0x1c>
    8c12:	e08f      	b.n	8d34 <_printf_i+0x13c>
    8c14:	d817      	bhi.n	8c46 <_printf_i+0x4e>
    8c16:	2a63      	cmp	r2, #99	; 0x63
    8c18:	d02c      	beq.n	8c74 <_printf_i+0x7c>
    8c1a:	d808      	bhi.n	8c2e <_printf_i+0x36>
    8c1c:	2a00      	cmp	r2, #0
    8c1e:	d100      	bne.n	8c22 <_printf_i+0x2a>
    8c20:	e099      	b.n	8d56 <_printf_i+0x15e>
    8c22:	2a58      	cmp	r2, #88	; 0x58
    8c24:	d054      	beq.n	8cd0 <_printf_i+0xd8>
    8c26:	0026      	movs	r6, r4
    8c28:	3642      	adds	r6, #66	; 0x42
    8c2a:	7032      	strb	r2, [r6, #0]
    8c2c:	e029      	b.n	8c82 <_printf_i+0x8a>
    8c2e:	2a64      	cmp	r2, #100	; 0x64
    8c30:	d001      	beq.n	8c36 <_printf_i+0x3e>
    8c32:	2a69      	cmp	r2, #105	; 0x69
    8c34:	d1f7      	bne.n	8c26 <_printf_i+0x2e>
    8c36:	6821      	ldr	r1, [r4, #0]
    8c38:	681a      	ldr	r2, [r3, #0]
    8c3a:	0608      	lsls	r0, r1, #24
    8c3c:	d523      	bpl.n	8c86 <_printf_i+0x8e>
    8c3e:	1d11      	adds	r1, r2, #4
    8c40:	6019      	str	r1, [r3, #0]
    8c42:	6815      	ldr	r5, [r2, #0]
    8c44:	e025      	b.n	8c92 <_printf_i+0x9a>
    8c46:	2a73      	cmp	r2, #115	; 0x73
    8c48:	d100      	bne.n	8c4c <_printf_i+0x54>
    8c4a:	e088      	b.n	8d5e <_printf_i+0x166>
    8c4c:	d808      	bhi.n	8c60 <_printf_i+0x68>
    8c4e:	2a6f      	cmp	r2, #111	; 0x6f
    8c50:	d029      	beq.n	8ca6 <_printf_i+0xae>
    8c52:	2a70      	cmp	r2, #112	; 0x70
    8c54:	d1e7      	bne.n	8c26 <_printf_i+0x2e>
    8c56:	2220      	movs	r2, #32
    8c58:	6809      	ldr	r1, [r1, #0]
    8c5a:	430a      	orrs	r2, r1
    8c5c:	6022      	str	r2, [r4, #0]
    8c5e:	e003      	b.n	8c68 <_printf_i+0x70>
    8c60:	2a75      	cmp	r2, #117	; 0x75
    8c62:	d020      	beq.n	8ca6 <_printf_i+0xae>
    8c64:	2a78      	cmp	r2, #120	; 0x78
    8c66:	d1de      	bne.n	8c26 <_printf_i+0x2e>
    8c68:	0022      	movs	r2, r4
    8c6a:	2178      	movs	r1, #120	; 0x78
    8c6c:	3245      	adds	r2, #69	; 0x45
    8c6e:	7011      	strb	r1, [r2, #0]
    8c70:	4a6c      	ldr	r2, [pc, #432]	; (8e24 <_printf_i+0x22c>)
    8c72:	e030      	b.n	8cd6 <_printf_i+0xde>
    8c74:	000e      	movs	r6, r1
    8c76:	681a      	ldr	r2, [r3, #0]
    8c78:	3642      	adds	r6, #66	; 0x42
    8c7a:	1d11      	adds	r1, r2, #4
    8c7c:	6019      	str	r1, [r3, #0]
    8c7e:	6813      	ldr	r3, [r2, #0]
    8c80:	7033      	strb	r3, [r6, #0]
    8c82:	2301      	movs	r3, #1
    8c84:	e079      	b.n	8d7a <_printf_i+0x182>
    8c86:	0649      	lsls	r1, r1, #25
    8c88:	d5d9      	bpl.n	8c3e <_printf_i+0x46>
    8c8a:	1d11      	adds	r1, r2, #4
    8c8c:	6019      	str	r1, [r3, #0]
    8c8e:	2300      	movs	r3, #0
    8c90:	5ed5      	ldrsh	r5, [r2, r3]
    8c92:	2d00      	cmp	r5, #0
    8c94:	da03      	bge.n	8c9e <_printf_i+0xa6>
    8c96:	232d      	movs	r3, #45	; 0x2d
    8c98:	9a04      	ldr	r2, [sp, #16]
    8c9a:	426d      	negs	r5, r5
    8c9c:	7013      	strb	r3, [r2, #0]
    8c9e:	4b62      	ldr	r3, [pc, #392]	; (8e28 <_printf_i+0x230>)
    8ca0:	270a      	movs	r7, #10
    8ca2:	9303      	str	r3, [sp, #12]
    8ca4:	e02f      	b.n	8d06 <_printf_i+0x10e>
    8ca6:	6820      	ldr	r0, [r4, #0]
    8ca8:	6819      	ldr	r1, [r3, #0]
    8caa:	0605      	lsls	r5, r0, #24
    8cac:	d503      	bpl.n	8cb6 <_printf_i+0xbe>
    8cae:	1d08      	adds	r0, r1, #4
    8cb0:	6018      	str	r0, [r3, #0]
    8cb2:	680d      	ldr	r5, [r1, #0]
    8cb4:	e005      	b.n	8cc2 <_printf_i+0xca>
    8cb6:	0640      	lsls	r0, r0, #25
    8cb8:	d5f9      	bpl.n	8cae <_printf_i+0xb6>
    8cba:	680d      	ldr	r5, [r1, #0]
    8cbc:	1d08      	adds	r0, r1, #4
    8cbe:	6018      	str	r0, [r3, #0]
    8cc0:	b2ad      	uxth	r5, r5
    8cc2:	4b59      	ldr	r3, [pc, #356]	; (8e28 <_printf_i+0x230>)
    8cc4:	2708      	movs	r7, #8
    8cc6:	9303      	str	r3, [sp, #12]
    8cc8:	2a6f      	cmp	r2, #111	; 0x6f
    8cca:	d018      	beq.n	8cfe <_printf_i+0x106>
    8ccc:	270a      	movs	r7, #10
    8cce:	e016      	b.n	8cfe <_printf_i+0x106>
    8cd0:	3145      	adds	r1, #69	; 0x45
    8cd2:	700a      	strb	r2, [r1, #0]
    8cd4:	4a54      	ldr	r2, [pc, #336]	; (8e28 <_printf_i+0x230>)
    8cd6:	9203      	str	r2, [sp, #12]
    8cd8:	681a      	ldr	r2, [r3, #0]
    8cda:	6821      	ldr	r1, [r4, #0]
    8cdc:	1d10      	adds	r0, r2, #4
    8cde:	6018      	str	r0, [r3, #0]
    8ce0:	6815      	ldr	r5, [r2, #0]
    8ce2:	0608      	lsls	r0, r1, #24
    8ce4:	d522      	bpl.n	8d2c <_printf_i+0x134>
    8ce6:	07cb      	lsls	r3, r1, #31
    8ce8:	d502      	bpl.n	8cf0 <_printf_i+0xf8>
    8cea:	2320      	movs	r3, #32
    8cec:	4319      	orrs	r1, r3
    8cee:	6021      	str	r1, [r4, #0]
    8cf0:	2710      	movs	r7, #16
    8cf2:	2d00      	cmp	r5, #0
    8cf4:	d103      	bne.n	8cfe <_printf_i+0x106>
    8cf6:	2320      	movs	r3, #32
    8cf8:	6822      	ldr	r2, [r4, #0]
    8cfa:	439a      	bics	r2, r3
    8cfc:	6022      	str	r2, [r4, #0]
    8cfe:	0023      	movs	r3, r4
    8d00:	2200      	movs	r2, #0
    8d02:	3343      	adds	r3, #67	; 0x43
    8d04:	701a      	strb	r2, [r3, #0]
    8d06:	6863      	ldr	r3, [r4, #4]
    8d08:	60a3      	str	r3, [r4, #8]
    8d0a:	2b00      	cmp	r3, #0
    8d0c:	db5c      	blt.n	8dc8 <_printf_i+0x1d0>
    8d0e:	2204      	movs	r2, #4
    8d10:	6821      	ldr	r1, [r4, #0]
    8d12:	4391      	bics	r1, r2
    8d14:	6021      	str	r1, [r4, #0]
    8d16:	2d00      	cmp	r5, #0
    8d18:	d158      	bne.n	8dcc <_printf_i+0x1d4>
    8d1a:	9e04      	ldr	r6, [sp, #16]
    8d1c:	2b00      	cmp	r3, #0
    8d1e:	d064      	beq.n	8dea <_printf_i+0x1f2>
    8d20:	0026      	movs	r6, r4
    8d22:	9b03      	ldr	r3, [sp, #12]
    8d24:	3642      	adds	r6, #66	; 0x42
    8d26:	781b      	ldrb	r3, [r3, #0]
    8d28:	7033      	strb	r3, [r6, #0]
    8d2a:	e05e      	b.n	8dea <_printf_i+0x1f2>
    8d2c:	0648      	lsls	r0, r1, #25
    8d2e:	d5da      	bpl.n	8ce6 <_printf_i+0xee>
    8d30:	b2ad      	uxth	r5, r5
    8d32:	e7d8      	b.n	8ce6 <_printf_i+0xee>
    8d34:	6809      	ldr	r1, [r1, #0]
    8d36:	681a      	ldr	r2, [r3, #0]
    8d38:	0608      	lsls	r0, r1, #24
    8d3a:	d505      	bpl.n	8d48 <_printf_i+0x150>
    8d3c:	1d11      	adds	r1, r2, #4
    8d3e:	6019      	str	r1, [r3, #0]
    8d40:	6813      	ldr	r3, [r2, #0]
    8d42:	6962      	ldr	r2, [r4, #20]
    8d44:	601a      	str	r2, [r3, #0]
    8d46:	e006      	b.n	8d56 <_printf_i+0x15e>
    8d48:	0649      	lsls	r1, r1, #25
    8d4a:	d5f7      	bpl.n	8d3c <_printf_i+0x144>
    8d4c:	1d11      	adds	r1, r2, #4
    8d4e:	6019      	str	r1, [r3, #0]
    8d50:	6813      	ldr	r3, [r2, #0]
    8d52:	8aa2      	ldrh	r2, [r4, #20]
    8d54:	801a      	strh	r2, [r3, #0]
    8d56:	2300      	movs	r3, #0
    8d58:	9e04      	ldr	r6, [sp, #16]
    8d5a:	6123      	str	r3, [r4, #16]
    8d5c:	e054      	b.n	8e08 <_printf_i+0x210>
    8d5e:	681a      	ldr	r2, [r3, #0]
    8d60:	1d11      	adds	r1, r2, #4
    8d62:	6019      	str	r1, [r3, #0]
    8d64:	6816      	ldr	r6, [r2, #0]
    8d66:	2100      	movs	r1, #0
    8d68:	6862      	ldr	r2, [r4, #4]
    8d6a:	0030      	movs	r0, r6
    8d6c:	f000 f85e 	bl	8e2c <memchr>
    8d70:	2800      	cmp	r0, #0
    8d72:	d001      	beq.n	8d78 <_printf_i+0x180>
    8d74:	1b80      	subs	r0, r0, r6
    8d76:	6060      	str	r0, [r4, #4]
    8d78:	6863      	ldr	r3, [r4, #4]
    8d7a:	6123      	str	r3, [r4, #16]
    8d7c:	2300      	movs	r3, #0
    8d7e:	9a04      	ldr	r2, [sp, #16]
    8d80:	7013      	strb	r3, [r2, #0]
    8d82:	e041      	b.n	8e08 <_printf_i+0x210>
    8d84:	6923      	ldr	r3, [r4, #16]
    8d86:	0032      	movs	r2, r6
    8d88:	9906      	ldr	r1, [sp, #24]
    8d8a:	9805      	ldr	r0, [sp, #20]
    8d8c:	9d07      	ldr	r5, [sp, #28]
    8d8e:	47a8      	blx	r5
    8d90:	1c43      	adds	r3, r0, #1
    8d92:	d043      	beq.n	8e1c <_printf_i+0x224>
    8d94:	6823      	ldr	r3, [r4, #0]
    8d96:	2500      	movs	r5, #0
    8d98:	079b      	lsls	r3, r3, #30
    8d9a:	d40f      	bmi.n	8dbc <_printf_i+0x1c4>
    8d9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8d9e:	68e0      	ldr	r0, [r4, #12]
    8da0:	4298      	cmp	r0, r3
    8da2:	da3d      	bge.n	8e20 <_printf_i+0x228>
    8da4:	0018      	movs	r0, r3
    8da6:	e03b      	b.n	8e20 <_printf_i+0x228>
    8da8:	0022      	movs	r2, r4
    8daa:	2301      	movs	r3, #1
    8dac:	3219      	adds	r2, #25
    8dae:	9906      	ldr	r1, [sp, #24]
    8db0:	9805      	ldr	r0, [sp, #20]
    8db2:	9e07      	ldr	r6, [sp, #28]
    8db4:	47b0      	blx	r6
    8db6:	1c43      	adds	r3, r0, #1
    8db8:	d030      	beq.n	8e1c <_printf_i+0x224>
    8dba:	3501      	adds	r5, #1
    8dbc:	68e3      	ldr	r3, [r4, #12]
    8dbe:	9a09      	ldr	r2, [sp, #36]	; 0x24
    8dc0:	1a9b      	subs	r3, r3, r2
    8dc2:	429d      	cmp	r5, r3
    8dc4:	dbf0      	blt.n	8da8 <_printf_i+0x1b0>
    8dc6:	e7e9      	b.n	8d9c <_printf_i+0x1a4>
    8dc8:	2d00      	cmp	r5, #0
    8dca:	d0a9      	beq.n	8d20 <_printf_i+0x128>
    8dcc:	9e04      	ldr	r6, [sp, #16]
    8dce:	0028      	movs	r0, r5
    8dd0:	0039      	movs	r1, r7
    8dd2:	f7fd f947 	bl	6064 <__aeabi_uidivmod>
    8dd6:	9b03      	ldr	r3, [sp, #12]
    8dd8:	3e01      	subs	r6, #1
    8dda:	5c5b      	ldrb	r3, [r3, r1]
    8ddc:	0028      	movs	r0, r5
    8dde:	7033      	strb	r3, [r6, #0]
    8de0:	0039      	movs	r1, r7
    8de2:	f7fd f8b9 	bl	5f58 <__udivsi3>
    8de6:	1e05      	subs	r5, r0, #0
    8de8:	d1f1      	bne.n	8dce <_printf_i+0x1d6>
    8dea:	2f08      	cmp	r7, #8
    8dec:	d109      	bne.n	8e02 <_printf_i+0x20a>
    8dee:	6823      	ldr	r3, [r4, #0]
    8df0:	07db      	lsls	r3, r3, #31
    8df2:	d506      	bpl.n	8e02 <_printf_i+0x20a>
    8df4:	6863      	ldr	r3, [r4, #4]
    8df6:	6922      	ldr	r2, [r4, #16]
    8df8:	4293      	cmp	r3, r2
    8dfa:	dc02      	bgt.n	8e02 <_printf_i+0x20a>
    8dfc:	2330      	movs	r3, #48	; 0x30
    8dfe:	3e01      	subs	r6, #1
    8e00:	7033      	strb	r3, [r6, #0]
    8e02:	9b04      	ldr	r3, [sp, #16]
    8e04:	1b9b      	subs	r3, r3, r6
    8e06:	6123      	str	r3, [r4, #16]
    8e08:	9b07      	ldr	r3, [sp, #28]
    8e0a:	aa09      	add	r2, sp, #36	; 0x24
    8e0c:	9300      	str	r3, [sp, #0]
    8e0e:	0021      	movs	r1, r4
    8e10:	9b06      	ldr	r3, [sp, #24]
    8e12:	9805      	ldr	r0, [sp, #20]
    8e14:	f7ff fe82 	bl	8b1c <_printf_common>
    8e18:	1c43      	adds	r3, r0, #1
    8e1a:	d1b3      	bne.n	8d84 <_printf_i+0x18c>
    8e1c:	2001      	movs	r0, #1
    8e1e:	4240      	negs	r0, r0
    8e20:	b00b      	add	sp, #44	; 0x2c
    8e22:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8e24:	000093fa 	.word	0x000093fa
    8e28:	000093e9 	.word	0x000093e9

00008e2c <memchr>:
    8e2c:	b2c9      	uxtb	r1, r1
    8e2e:	1882      	adds	r2, r0, r2
    8e30:	4290      	cmp	r0, r2
    8e32:	d101      	bne.n	8e38 <memchr+0xc>
    8e34:	2000      	movs	r0, #0
    8e36:	4770      	bx	lr
    8e38:	7803      	ldrb	r3, [r0, #0]
    8e3a:	428b      	cmp	r3, r1
    8e3c:	d0fb      	beq.n	8e36 <memchr+0xa>
    8e3e:	3001      	adds	r0, #1
    8e40:	e7f6      	b.n	8e30 <memchr+0x4>

00008e42 <memmove>:
    8e42:	b510      	push	{r4, lr}
    8e44:	4288      	cmp	r0, r1
    8e46:	d902      	bls.n	8e4e <memmove+0xc>
    8e48:	188b      	adds	r3, r1, r2
    8e4a:	4298      	cmp	r0, r3
    8e4c:	d308      	bcc.n	8e60 <memmove+0x1e>
    8e4e:	2300      	movs	r3, #0
    8e50:	429a      	cmp	r2, r3
    8e52:	d007      	beq.n	8e64 <memmove+0x22>
    8e54:	5ccc      	ldrb	r4, [r1, r3]
    8e56:	54c4      	strb	r4, [r0, r3]
    8e58:	3301      	adds	r3, #1
    8e5a:	e7f9      	b.n	8e50 <memmove+0xe>
    8e5c:	5c8b      	ldrb	r3, [r1, r2]
    8e5e:	5483      	strb	r3, [r0, r2]
    8e60:	3a01      	subs	r2, #1
    8e62:	d2fb      	bcs.n	8e5c <memmove+0x1a>
    8e64:	bd10      	pop	{r4, pc}

00008e66 <_realloc_r>:
    8e66:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8e68:	0007      	movs	r7, r0
    8e6a:	000d      	movs	r5, r1
    8e6c:	0016      	movs	r6, r2
    8e6e:	2900      	cmp	r1, #0
    8e70:	d105      	bne.n	8e7e <_realloc_r+0x18>
    8e72:	0011      	movs	r1, r2
    8e74:	f7ff fc48 	bl	8708 <_malloc_r>
    8e78:	0004      	movs	r4, r0
    8e7a:	0020      	movs	r0, r4
    8e7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8e7e:	2a00      	cmp	r2, #0
    8e80:	d103      	bne.n	8e8a <_realloc_r+0x24>
    8e82:	f7ff fbf7 	bl	8674 <_free_r>
    8e86:	0034      	movs	r4, r6
    8e88:	e7f7      	b.n	8e7a <_realloc_r+0x14>
    8e8a:	f000 f812 	bl	8eb2 <_malloc_usable_size_r>
    8e8e:	002c      	movs	r4, r5
    8e90:	4286      	cmp	r6, r0
    8e92:	d9f2      	bls.n	8e7a <_realloc_r+0x14>
    8e94:	0031      	movs	r1, r6
    8e96:	0038      	movs	r0, r7
    8e98:	f7ff fc36 	bl	8708 <_malloc_r>
    8e9c:	1e04      	subs	r4, r0, #0
    8e9e:	d0ec      	beq.n	8e7a <_realloc_r+0x14>
    8ea0:	0029      	movs	r1, r5
    8ea2:	0032      	movs	r2, r6
    8ea4:	f7ff fbd4 	bl	8650 <memcpy>
    8ea8:	0029      	movs	r1, r5
    8eaa:	0038      	movs	r0, r7
    8eac:	f7ff fbe2 	bl	8674 <_free_r>
    8eb0:	e7e3      	b.n	8e7a <_realloc_r+0x14>

00008eb2 <_malloc_usable_size_r>:
    8eb2:	1f0b      	subs	r3, r1, #4
    8eb4:	681b      	ldr	r3, [r3, #0]
    8eb6:	1f18      	subs	r0, r3, #4
    8eb8:	2b00      	cmp	r3, #0
    8eba:	da01      	bge.n	8ec0 <_malloc_usable_size_r+0xe>
    8ebc:	580b      	ldr	r3, [r1, r0]
    8ebe:	18c0      	adds	r0, r0, r3
    8ec0:	4770      	bx	lr
    8ec2:	0000      	movs	r0, r0
    8ec4:	00000000 	.word	0x00000000
    8ec8:	00000040 	.word	0x00000040
    8ecc:	00000014 	.word	0x00000014
    8ed0:	00000054 	.word	0x00000054
    8ed4:	000005b4 	.word	0x000005b4
    8ed8:	000005cc 	.word	0x000005cc
    8edc:	0000060a 	.word	0x0000060a
    8ee0:	0000064a 	.word	0x0000064a
    8ee4:	00000676 	.word	0x00000676
    8ee8:	000006b2 	.word	0x000006b2
    8eec:	42003000 	.word	0x42003000
    8ef0:	42003400 	.word	0x42003400
    8ef4:	42003800 	.word	0x42003800
    8ef8:	42003c00 	.word	0x42003c00
    8efc:	42004000 	.word	0x42004000
    8f00:	00000002 	.word	0x00000002
    8f04:	00001000 	.word	0x00001000
    8f08:	00000002 	.word	0x00000002
    8f0c:	00002000 	.word	0x00002000
    8f10:	00000002 	.word	0x00000002
    8f14:	00004000 	.word	0x00004000
    8f18:	00000002 	.word	0x00000002
    8f1c:	00008000 	.word	0x00008000
    8f20:	00000002 	.word	0x00000002
    8f24:	00010000 	.word	0x00010000
    8f28:	0000101c 	.word	0x0000101c
    8f2c:	00001284 	.word	0x00001284
    8f30:	00001284 	.word	0x00001284
    8f34:	00001284 	.word	0x00001284
    8f38:	00001284 	.word	0x00001284
    8f3c:	00001284 	.word	0x00001284
    8f40:	00001284 	.word	0x00001284
    8f44:	00001284 	.word	0x00001284
    8f48:	00001284 	.word	0x00001284
    8f4c:	00001284 	.word	0x00001284
    8f50:	00001284 	.word	0x00001284
    8f54:	00001284 	.word	0x00001284
    8f58:	00001284 	.word	0x00001284
    8f5c:	00001284 	.word	0x00001284
    8f60:	00001284 	.word	0x00001284
    8f64:	00001284 	.word	0x00001284
    8f68:	00001004 	.word	0x00001004
    8f6c:	00001284 	.word	0x00001284
    8f70:	00001284 	.word	0x00001284
    8f74:	00001284 	.word	0x00001284
    8f78:	00001284 	.word	0x00001284
    8f7c:	00001284 	.word	0x00001284
    8f80:	00001284 	.word	0x00001284
    8f84:	00001284 	.word	0x00001284
    8f88:	00001284 	.word	0x00001284
    8f8c:	00001284 	.word	0x00001284
    8f90:	00001284 	.word	0x00001284
    8f94:	00001284 	.word	0x00001284
    8f98:	00001284 	.word	0x00001284
    8f9c:	00001284 	.word	0x00001284
    8fa0:	00001284 	.word	0x00001284
    8fa4:	00001284 	.word	0x00001284
    8fa8:	00001014 	.word	0x00001014
    8fac:	00001284 	.word	0x00001284
    8fb0:	00001284 	.word	0x00001284
    8fb4:	00001284 	.word	0x00001284
    8fb8:	00001284 	.word	0x00001284
    8fbc:	00001284 	.word	0x00001284
    8fc0:	00001284 	.word	0x00001284
    8fc4:	00001284 	.word	0x00001284
    8fc8:	00001284 	.word	0x00001284
    8fcc:	00001284 	.word	0x00001284
    8fd0:	00001284 	.word	0x00001284
    8fd4:	00001284 	.word	0x00001284
    8fd8:	00001284 	.word	0x00001284
    8fdc:	00001284 	.word	0x00001284
    8fe0:	00001284 	.word	0x00001284
    8fe4:	00001284 	.word	0x00001284
    8fe8:	0000100c 	.word	0x0000100c
    8fec:	00001054 	.word	0x00001054
    8ff0:	00000fec 	.word	0x00000fec
    8ff4:	00000ffc 	.word	0x00000ffc
    8ff8:	00000ff4 	.word	0x00000ff4
    8ffc:	00000002 	.word	0x00000002
    9000:	00000003 	.word	0x00000003
    9004:	00000028 	.word	0x00000028
    9008:	00000029 	.word	0x00000029
    900c:	00000004 	.word	0x00000004
    9010:	00000005 	.word	0x00000005
    9014:	00000006 	.word	0x00000006
    9018:	00000007 	.word	0x00000007
    901c:	00000008 	.word	0x00000008
    9020:	00000009 	.word	0x00000009
    9024:	0000000a 	.word	0x0000000a
    9028:	0000000b 	.word	0x0000000b
    902c:	00000020 	.word	0x00000020
    9030:	00000021 	.word	0x00000021
    9034:	00000022 	.word	0x00000022
    9038:	00000023 	.word	0x00000023
    903c:	00000028 	.word	0x00000028
    9040:	00000029 	.word	0x00000029
    9044:	00000024 	.word	0x00000024
    9048:	00000025 	.word	0x00000025
    904c:	00000026 	.word	0x00000026
    9050:	00000027 	.word	0x00000027
    9054:	00000008 	.word	0x00000008
    9058:	00000009 	.word	0x00000009

0000905c <_adc_apbcmasks>:
    905c:	00020000 00040000                       ........

00009064 <_adc_biascomp_addr>:
    9064:	00806020 00806020                        `.. `..

0000906c <_adc_biascomp_pos>:
    906c:	00000903                                ....

00009070 <_adc_biasrefbuf_addr>:
    9070:	00806020 00806020                        `.. `..

00009078 <_adc_biasrefbuf_pos>:
    9078:	00000600                                ....

0000907c <_adc_extchannel_msb>:
    907c:	0000000b 0000000b                       ........

00009084 <_adc_gclk_ids>:
    9084:	00002221 42000400 42000800 42000c00     !".....B...B...B
    9094:	42001000 42001400 42001800              ...B...B...B

000090a0 <_tcc_apbcmasks>:
    90a0:	00000200 00000400 00000800              ............

000090ac <_tcc_cc_nums>:
    90ac:	00020204                                ....

000090b0 <_tcc_gclk_ids>:
    90b0:	001d1c1c                                ....

000090b4 <_tcc_maxs>:
    90b4:	00ffffff 00ffffff 0000ffff              ............

000090c0 <_tcc_ow_nums>:
    90c0:	00020408                                ....

000090c4 <_tcc_intflag>:
    90c4:	00000001 00000002 00000004 00000008     ................
    90d4:	00001000 00002000 00004000 00008000     ..... ...@......
    90e4:	00010000 00020000 00040000 00080000     ................

000090f4 <tcc_interrupt_vectors.14047>:
    90f4:	00131211                                ....

000090f8 <adc_interrupt_vectors.14143>:
    90f8:	00001a19 00003d74 00003db4 00003dc4     ....t=...=...=..
    9108:	00003dda 00003dd4 00003e00 00003de8     .=...=...>...=..
    9118:	00003e00 00003dee 00004068 00004088     .>...=..h@...@..
    9128:	000040a8 000040c8 000040f2 00004068     .@...@...@..h@..
    9138:	000040f2 00004068 00004068 00004136     .@..h@..h@..6A..
    9148:	00004156 00004176 00004196 000041d8     VA..vA...A...A..
    9158:	00004136 000041d8 00004136 00004136     6A...A..6A..6A..
    9168:	2e756c25 6c333025 00000075 00006425     %lu.%03lu...%d..
    9178:	00756c25 4f525245 00393952 2d256325     %lu.ERROR99.%c%-
    9188:	25733031 00007339 30312d25 30312573     10s%9s..%-10s%10
    9198:	00000073 2d256325 25733031 32257337     s...%c%-10s%7s%2
    91a8:	00000073 30312d25 73382573 00733225     s...%-10s%8s%2s.
    91b8:	0000475a 00004756 00004756 00004788     ZG..VG..VG...G..
    91c8:	00004788 00004772 00004760 00004778     .G..rG..`G..xG..
    91d8:	000049ac 0000498c 0000498c 000049e2     .I...I...I...I..
    91e8:	0000499e 000049ba 00004990 000049c8     .I...I...I...I..
    91f8:	0046464f 00004e4f 00584d44 4944494d     OFF.ON..DMX.MIDI
    9208:	00000000 48544f42 00000000 00525245     ....BOTH....ERR.
    9218:	54544553 53474e49 00000000 4e414843     SETTINGS....CHAN
    9228:	204c454e 00000031 4e414843 204c454e     NEL 1...CHANNEL 
    9238:	00000032 4e414843 204c454e 00000033     2...CHANNEL 3...
    9248:	4e414843 204c454e 00000034 4e414843     CHANNEL 4...CHAN
    9258:	204c454e 00000035 544e4f43 54534152     NEL 5...CONTRAST
    9268:	00000000 47495242 454e5448 00005353     ....BRIGHTNESS..
    9278:	45444f4d 00000000 5f584946 455a4953     MODE....FIX_SIZE
    9288:	00000000 4b434142 00000000 25584d44     ....BACK....DMX%
    9298:	00000064 25584d44 64252d64 00000000     d...DMX%d-%d....
    92a8:	54415453 435f4349 00000048 42414e45     STATIC_CH...ENAB
    92b8:	0000454c 55504e49 00000054 20584d44     LE..INPUT...DMX 
    92c8:	4e414843 00000000 4556454c 0000004c     CHAN....LEVEL...
    92d8:	0000736d 41545441 00004b43 41434544     ms..ATTACK..DECA
    92e8:	00000059 54535553 004e4941 454c5f53     Y...SUSTAIN.S_LE
    92f8:	004c4556 454c4552 00455341 4944494d     VEL.RELEASE.MIDI
    9308:	00484320 4944494d 544f4e20 00000045      CH.MIDI NOTE...
    9318:	000065a4 000064f4 000064f4 000064f2     .e...d...d...d..
    9328:	00006596 00006596 0000658c 000064f2     .e...e...e...d..
    9338:	00006596 0000658c 00006596 000064f2     .e...e...e...d..
    9348:	0000659c 0000659c 0000659c 0000662c     .e...e...e..,f..
    9358:	00007374 00007356 00007310 0000722e     ts..Vs...s...r..
    9368:	00007310 00007348 00007310 0000722e     .s..Hs...s...r..
    9378:	00007356 00007356 00007348 0000722e     Vs..Vs..Hs...r..
    9388:	00007226 00007226 00007226 0000758c     &r..&r..&r...u..
    9398:	000079d4 00007894 00007894 00007890     .y...x...x...x..
    93a8:	000079ac 000079ac 0000799e 00007890     .y...y...y...x..
    93b8:	000079ac 0000799e 000079ac 00007890     .y...y...y...x..
    93c8:	000079b4 000079b4 000079b4 00007bb8     .y...y...y...{..
    93d8:	2b302d23 6c680020 6665004c 47464567     #-0+ .hlL.efgEFG
    93e8:	32313000 36353433 41393837 45444342     .0123456789ABCDE
    93f8:	31300046 35343332 39383736 64636261     F.0123456789abcd
    9408:	00006665                                ef..

0000940c <_init>:
    940c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    940e:	46c0      	nop			; (mov r8, r8)
    9410:	bcf8      	pop	{r3, r4, r5, r6, r7}
    9412:	bc08      	pop	{r3}
    9414:	469e      	mov	lr, r3
    9416:	4770      	bx	lr

00009418 <__init_array_start>:
    9418:	000000e5 	.word	0x000000e5

0000941c <_fini>:
    941c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    941e:	46c0      	nop			; (mov r8, r8)
    9420:	bcf8      	pop	{r3, r4, r5, r6, r7}
    9422:	bc08      	pop	{r3}
    9424:	469e      	mov	lr, r3
    9426:	4770      	bx	lr

00009428 <__fini_array_start>:
    9428:	000000bd 	.word	0x000000bd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	2800      	cmp	r0, #0
20000008:	d1fa      	bne.n	20000000 <portable_delay_cycles>
2000000a:	4770      	bx	lr

2000000c <cycles_per_ms>:
2000000c:	1f40 0000                                   @...

20000010 <cycles_per_us>:
20000010:	0008 0000                                   ....

20000014 <TWI_counter>:
20000014:	0101                                             .

20000015 <g_interrupt_enabled>:
20000015:	0001 0800                                        ...

20000018 <device_settings>:
20000018:	1008 0000                                   ....

2000001c <key_pressed>:
2000001c:	0001 0000                                   ....

20000020 <p_to_menus>:
20000020:	0344 2000 0634 2000 0924 2000 0c14 2000     D.. 4.. $.. ... 
20000030:	0f04 2000                                   ... 

20000034 <preset1>:
20000034:	6574 7473 6574 7473 0000 0000 0000 0000     testtest........
	...
20000240:	0001 0000 0000 0000 0000 0000 0000 0000     ................
20000250:	0000 0000                                   ....

20000254 <selected_menu>:
20000254:	11f4 2000                                   ... 

20000258 <_impure_ptr>:
20000258:	025c 2000                                   \.. 

2000025c <impure_data>:
	...
